{"ast":null,"code":"import { isToday, freshDate, parseDate, formatDate } from '@/core/util/helper/datefns';\nimport { navigate } from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport { OxdBarChart, OxdIcon, CHART_COLORS } from '@ohrm/oxd';\nexport default {\n  name: 'EmployeeAttendanceWidget',\n  components: {\n    'oxd-icon': OxdIcon,\n    'base-widget': BaseWidget,\n    'oxd-bar-chart': OxdBarChart\n  },\n  setup() {\n    const {\n      locale\n    } = useLocale();\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/dashboard/employees/time-at-work');\n    return {\n      http,\n      locale\n    };\n  },\n  data() {\n    return {\n      dataset: [],\n      state: null,\n      endDate: null,\n      userDate: null,\n      userTime: null,\n      startDate: null,\n      isLoading: false,\n      empNumber: null,\n      timezoneOffset: null,\n      dayTotal: {\n        hours: 0,\n        minutes: 0\n      },\n      weekTotal: {\n        hours: 0,\n        minutes: 0\n      }\n    };\n  },\n  computed: {\n    lastState() {\n      switch (this.state) {\n        case 'PUNCHED IN':\n          return this.$t('attendance.punched_in');\n        case 'PUNCHED OUT':\n          return this.$t('attendance.punched_out');\n        default:\n          return this.$t('attendance.not_punched_in');\n      }\n    },\n    lastRecord() {\n      if (!this.userDate || !this.userTime) return null;\n      const parsedDate = parseDate(`${this.userDate} ${this.userTime}`, 'yyyy-MM-dd HH:mm');\n      const formattedTime = formatDate(parsedDate, 'hh:mm a', {\n        locale: this.locale\n      });\n      if (!isToday(parsedDate)) {\n        const formattedDate = formatDate(parsedDate, 'MMM do', {\n          locale: this.locale\n        });\n        return this.$t('dashboard.state_date_at_time_timezone_offset', {\n          lastState: this.lastState,\n          date: formattedDate,\n          time: formattedTime,\n          timezoneOffset: this.timezoneOffset\n        });\n      }\n      return this.$t('dashboard.state_today_at_time_timezone_offset', {\n        lastState: this.lastState,\n        time: formattedTime,\n        timezoneOffset: this.timezoneOffset\n      });\n    },\n    currentWeek() {\n      if (!this.startDate || !this.endDate) return null;\n      const startDate = formatDate(parseDate(this.startDate), 'MMM dd', {\n        locale: this.locale\n      });\n      const endDate = formatDate(parseDate(this.endDate), 'MMM dd', {\n        locale: this.locale\n      });\n      return `${startDate} - ${endDate}`;\n    }\n  },\n  beforeMount() {\n    this.fetchWidgetData();\n  },\n  methods: {\n    onClickPunchIn() {\n      navigate('/attendance/punchIn');\n    },\n    fetchWidgetData() {\n      this.isLoading = true;\n      const currentDate = freshDate();\n      const timezoneOffset = currentDate.getTimezoneOffset() / 60 * -1;\n      this.http.getAll({\n        timezoneOffset,\n        currentDate: formatDate(currentDate, 'yyyy-MM-dd'),\n        currentTime: formatDate(new Date(), 'HH:mm')\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        this.dataset = data.map(item => ({\n          value: item.totalTime.hours + item.totalTime.minutes / 60,\n          label: this.$t(`general.${new String(item.workDay.day).toLowerCase()}`),\n          color: CHART_COLORS.COLOR_HEAT_WAVE\n        }));\n        const {\n          lastAction,\n          currentDay,\n          currentWeek,\n          currentUser\n        } = meta;\n        if (lastAction) {\n          this.state = lastAction.state;\n          this.userDate = lastAction.userDate;\n          this.userTime = lastAction.userTime;\n          this.timezoneOffset = lastAction.timezoneOffset;\n        }\n        if (currentWeek) {\n          this.weekTotal = currentWeek.totalTime;\n          this.endDate = currentWeek.endDate?.date;\n          this.startDate = currentWeek.startDate?.date;\n        }\n        if (currentDay) {\n          this.dayTotal = currentDay.totalTime;\n        }\n        if (currentUser) {\n          this.empNumber = currentUser.empNumber;\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["isToday","freshDate","parseDate","formatDate","navigate","useLocale","APIService","BaseWidget","OxdBarChart","OxdIcon","CHART_COLORS","name","components","setup","locale","http","window","appGlobal","baseUrl","data","dataset","state","endDate","userDate","userTime","startDate","isLoading","empNumber","timezoneOffset","dayTotal","hours","minutes","weekTotal","computed","lastState","$t","lastRecord","parsedDate","formattedTime","formattedDate","date","time","currentWeek","beforeMount","fetchWidgetData","methods","onClickPunchIn","currentDate","getTimezoneOffset","getAll","currentTime","Date","then","response","meta","map","item","value","totalTime","label","String","workDay","day","toLowerCase","color","COLOR_HEAT_WAVE","lastAction","currentDay","currentUser","finally"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmDashboardPlugin\\components\\EmployeeAttendanceWidget.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <base-widget\n    icon=\"clock-fill\"\n    :loading=\"isLoading\"\n    :title=\"$t('dashboard.time_at_work')\"\n  >\n    <div class=\"orangehrm-attendance-card\">\n      <div class=\"orangehrm-attendance-card-profile\">\n        <div class=\"orangehrm-attendance-card-profile-image\">\n          <img\n            alt=\"profile picture\"\n            class=\"employee-image\"\n            :src=\"`../pim/viewPhoto/empNumber/${empNumber}`\"\n          />\n        </div>\n        <div class=\"orangehrm-attendance-card-profile-record\">\n          <oxd-text tag=\"p\" class=\"orangehrm-attendance-card-state\">\n            {{ lastState }}\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-attendance-card-details\">\n            {{ lastRecord }}\n          </oxd-text>\n        </div>\n      </div>\n      <div class=\"orangehrm-attendance-card-bar\">\n        <oxd-text tag=\"span\" class=\"orangehrm-attendance-card-fulltime\">\n          <b>{{ dayTotal.hours }}h</b> <b>{{ dayTotal.minutes }}m</b>\n          {{ $t('general.today') }}\n        </oxd-text>\n        <oxd-icon-button\n          name=\"stopwatch\"\n          display-type=\"solid-main\"\n          class=\"orangehrm-attendance-card-action\"\n          @click=\"onClickPunchIn\"\n        />\n      </div>\n      <oxd-divider />\n      <div class=\"orangehrm-attendance-card-summary\">\n        <div class=\"orangehrm-attendance-card-summary-week\">\n          <oxd-text tag=\"p\">\n            {{ $t('dashboard.this_week') }}\n          </oxd-text>\n          <oxd-text tag=\"p\">\n            {{ currentWeek }}\n          </oxd-text>\n        </div>\n        <div class=\"orangehrm-attendance-card-summary-total\">\n          <oxd-icon name=\"stopwatch\" class=\"orangehrm-attendance-card-icon\" />\n          <oxd-text tag=\"p\" class=\"orangehrm-attendance-card-fulltime\">\n            {{ weekTotal.hours }}h {{ weekTotal.minutes }}m\n          </oxd-text>\n        </div>\n      </div>\n    </div>\n    <oxd-bar-chart\n      :grid=\"false\"\n      :data=\"dataset\"\n      :y-axsis=\"false\"\n      :aspect-ratio=\"false\"\n      wrapper-classes=\"emp-attendance-chart\"\n    ></oxd-bar-chart>\n  </base-widget>\n</template>\n\n<script>\nimport {\n  isToday,\n  freshDate,\n  parseDate,\n  formatDate,\n} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport {OxdBarChart, OxdIcon, CHART_COLORS} from '@ohrm/oxd';\n\nexport default {\n  name: 'EmployeeAttendanceWidget',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'base-widget': BaseWidget,\n    'oxd-bar-chart': OxdBarChart,\n  },\n\n  setup() {\n    const {locale} = useLocale();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/dashboard/employees/time-at-work',\n    );\n\n    return {\n      http,\n      locale,\n    };\n  },\n\n  data() {\n    return {\n      dataset: [],\n      state: null,\n      endDate: null,\n      userDate: null,\n      userTime: null,\n      startDate: null,\n      isLoading: false,\n      empNumber: null,\n      timezoneOffset: null,\n      dayTotal: {\n        hours: 0,\n        minutes: 0,\n      },\n      weekTotal: {\n        hours: 0,\n        minutes: 0,\n      },\n    };\n  },\n\n  computed: {\n    lastState() {\n      switch (this.state) {\n        case 'PUNCHED IN':\n          return this.$t('attendance.punched_in');\n        case 'PUNCHED OUT':\n          return this.$t('attendance.punched_out');\n        default:\n          return this.$t('attendance.not_punched_in');\n      }\n    },\n    lastRecord() {\n      if (!this.userDate || !this.userTime) return null;\n      const parsedDate = parseDate(\n        `${this.userDate} ${this.userTime}`,\n        'yyyy-MM-dd HH:mm',\n      );\n      const formattedTime = formatDate(parsedDate, 'hh:mm a', {\n        locale: this.locale,\n      });\n\n      if (!isToday(parsedDate)) {\n        const formattedDate = formatDate(parsedDate, 'MMM do', {\n          locale: this.locale,\n        });\n        return this.$t('dashboard.state_date_at_time_timezone_offset', {\n          lastState: this.lastState,\n          date: formattedDate,\n          time: formattedTime,\n          timezoneOffset: this.timezoneOffset,\n        });\n      }\n\n      return this.$t('dashboard.state_today_at_time_timezone_offset', {\n        lastState: this.lastState,\n        time: formattedTime,\n        timezoneOffset: this.timezoneOffset,\n      });\n    },\n    currentWeek() {\n      if (!this.startDate || !this.endDate) return null;\n      const startDate = formatDate(parseDate(this.startDate), 'MMM dd', {\n        locale: this.locale,\n      });\n      const endDate = formatDate(parseDate(this.endDate), 'MMM dd', {\n        locale: this.locale,\n      });\n      return `${startDate} - ${endDate}`;\n    },\n  },\n\n  beforeMount() {\n    this.fetchWidgetData();\n  },\n\n  methods: {\n    onClickPunchIn() {\n      navigate('/attendance/punchIn');\n    },\n    fetchWidgetData() {\n      this.isLoading = true;\n      const currentDate = freshDate();\n      const timezoneOffset = (currentDate.getTimezoneOffset() / 60) * -1;\n      this.http\n        .getAll({\n          timezoneOffset,\n          currentDate: formatDate(currentDate, 'yyyy-MM-dd'),\n          currentTime: formatDate(new Date(), 'HH:mm'),\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          this.dataset = data.map((item) => ({\n            value: item.totalTime.hours + item.totalTime.minutes / 60,\n            label: this.$t(\n              `general.${new String(item.workDay.day).toLowerCase()}`,\n            ),\n            color: CHART_COLORS.COLOR_HEAT_WAVE,\n          }));\n\n          const {lastAction, currentDay, currentWeek, currentUser} = meta;\n          if (lastAction) {\n            this.state = lastAction.state;\n            this.userDate = lastAction.userDate;\n            this.userTime = lastAction.userTime;\n            this.timezoneOffset = lastAction.timezoneOffset;\n          }\n          if (currentWeek) {\n            this.weekTotal = currentWeek.totalTime;\n            this.endDate = currentWeek.endDate?.date;\n            this.startDate = currentWeek.startDate?.date;\n          }\n          if (currentDay) {\n            this.dayTotal = currentDay.totalTime;\n          }\n          if (currentUser) {\n            this.empNumber = currentUser.empNumber;\n          }\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee-attendance-widget.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}