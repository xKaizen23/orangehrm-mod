{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_interviewer_autocomplete = _resolveComponent(\"interviewer-autocomplete\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_time_input = _resolveComponent(\"time-input\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_candidate_action_layout = _resolveComponent(\"candidate-action-layout\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_candidate_action_layout, {\n    loading: $data.isLoading,\n    \"candidate-id\": $props.candidateId,\n    title: _ctx.$t('recruitment.view_action_history'),\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            label: _ctx.$t('recruitment.performed_action'),\n            value: $options.performedAction,\n            readonly: \"\"\n          }, null, 8, [\"label\", \"value\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            label: _ctx.$t('general.performed_by'),\n            value: $options.performedBy,\n            readonly: \"\"\n          }, null, 8, [\"label\", \"value\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            label: _ctx.$t('recruitment.performed_date'),\n            value: $options.performedDate,\n            readonly: \"\"\n          }, null, 8, [\"label\", \"value\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $options.isScheduleInterview ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.interview.interviewName,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.interview.interviewName = $event),\n            rules: $data.rules.interviewName,\n            label: _ctx.$t('recruitment.interview_title'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.interviewers, (interviewer, index) => {\n            return _openBlock(), _createBlock(_component_interviewer_autocomplete, {\n              key: index,\n              modelValue: $data.interviewers[index],\n              \"onUpdate:modelValue\": $event => $data.interviewers[index] = $event,\n              \"show-delete\": index > 0,\n              rules: $data.rules.interviewerName.filter((_, i) => index === 0 || i > 0),\n              \"include-employees\": \"onlyCurrent\",\n              required: \"\",\n              disabled: !$props.editable,\n              onRemove: $event => $options.onRemoveInterviewer(index)\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"show-delete\", \"rules\", \"disabled\", \"onRemove\"]);\n          }), 128)), $data.interviewers.length < 5 && $props.editable ? (_openBlock(), _createBlock(_component_oxd_button, {\n            key: 0,\n            \"icon-name\": \"plus\",\n            \"display-type\": \"text\",\n            class: \"orangehrm-input-field-bottom-space\",\n            label: _ctx.$t('general.add_another'),\n            onClick: $options.onAddAnother\n          }, null, 8, [\"label\", \"onClick\"])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.interview.interviewDate,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.interview.interviewDate = $event),\n            rules: $data.rules.interviewDate,\n            label: _ctx.$t('general.date'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_time_input, {\n            modelValue: $data.interview.interviewTime,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.interview.interviewTime = $event),\n            rules: $data.rules.interviewTime,\n            label: _ctx.$t('general.time')\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.history.note,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.history.note = $event),\n            rules: $data.rules.note,\n            label: _ctx.$t('general.notes'),\n            placeholder: _ctx.$t('general.type_here'),\n            type: \"textarea\",\n            disabled: $data.disabled\n          }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\", \"disabled\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.back'),\n        onClick: $options.onClickBack\n      }, null, 8, [\"label\", \"onClick\"]), !$data.disabled ? (_openBlock(), _createBlock(_component_submit_button, {\n        key: 0,\n        label: _ctx.$t('general.save')\n      }, null, 8, [\"label\"])) : _createCommentVNode(\"\", true)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"candidate-id\", \"title\", \"onSubmitValid\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_candidate_action_layout","loading","$data","$props","title","_ctx","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","label","value","readonly","_createBlock","key","interviewName","rules","required","_Fragment","interviewer","index","_component_interviewer_autocomplete","interviewerName","filter","_","i","disabled","onRemove","length","_component_oxd_button","onClick","_component_date_input","interviewDate","_component_time_input","interviewTime","note","placeholder","type","_component_oxd_divider","_component_oxd_form_actions","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewActionHistory.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <candidate-action-layout\n      :loading=\"isLoading\"\n      :candidate-id=\"candidateId\"\n      :title=\"$t('recruitment.view_action_history')\"\n      @submit-valid=\"onSave\"\n    >\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              :label=\"$t('recruitment.performed_action')\"\n              :value=\"performedAction\"\n              readonly\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              :label=\"$t('general.performed_by')\"\n              :value=\"performedBy\"\n              readonly\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              :label=\"$t('recruitment.performed_date')\"\n              :value=\"performedDate\"\n              readonly\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row v-if=\"isScheduleInterview\">\n        <oxd-grid :cols=\"3\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"interview.interviewName\"\n              :rules=\"rules.interviewName\"\n              :label=\"$t('recruitment.interview_title')\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <interviewer-autocomplete\n              v-for=\"(interviewer, index) in interviewers\"\n              :key=\"index\"\n              v-model=\"interviewers[index]\"\n              :show-delete=\"index > 0\"\n              :rules=\"\n                rules.interviewerName.filter((_, i) => index === 0 || i > 0)\n              \"\n              include-employees=\"onlyCurrent\"\n              required\n              :disabled=\"!editable\"\n              @remove=\"onRemoveInterviewer(index)\"\n            />\n            <oxd-button\n              v-if=\"interviewers.length < 5 && editable\"\n              icon-name=\"plus\"\n              display-type=\"text\"\n              class=\"orangehrm-input-field-bottom-space\"\n              :label=\"$t('general.add_another')\"\n              @click=\"onAddAnother\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"interview.interviewDate\"\n              :rules=\"rules.interviewDate\"\n              :label=\"$t('general.date')\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <time-input\n              v-model=\"interview.interviewTime\"\n              :rules=\"rules.interviewTime\"\n              :label=\"$t('general.time')\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"history.note\"\n              :rules=\"rules.note\"\n              :label=\"$t('general.notes')\"\n              :placeholder=\"$t('general.type_here')\"\n              type=\"textarea\"\n              :disabled=\"disabled\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n      <oxd-form-actions>\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.back')\"\n          @click=\"onClickBack\"\n        />\n        <submit-button v-if=\"!disabled\" :label=\"$t('general.save')\" />\n      </oxd-form-actions>\n    </candidate-action-layout>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  validTimeFormat,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {navigate} from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport CandidateActionLayout from '@/orangehrmRecruitmentPlugin/components/CandidateActionLayout.vue';\nimport InterviewerAutocomplete from '@/orangehrmRecruitmentPlugin/components/InterviewerAutocomplete.vue';\n\nconst actionHistoryModel = {\n  id: null,\n  action: {\n    id: null,\n    label: null,\n  },\n  performedBy: {\n    empNumber: null,\n    lastName: null,\n    firstName: null,\n    middleName: null,\n    terminationId: null,\n  },\n  interview: {\n    id: null,\n  },\n  performedDate: null,\n  note: null,\n};\n\nconst interviewModel = {\n  interviewName: null,\n  interviewDate: null,\n  interviewTime: null,\n};\n\nexport default {\n  components: {\n    'candidate-action-layout': CandidateActionLayout,\n    'interviewer-autocomplete': InterviewerAutocomplete,\n  },\n\n  props: {\n    candidateId: {\n      type: Number,\n      required: true,\n    },\n    historyId: {\n      type: Number,\n      required: true,\n    },\n    editable: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/recruitment/candidates/${props.candidateId}/history`,\n    );\n\n    return {\n      http,\n      locale,\n      jsDateFormat,\n      userDateFormat,\n      translateEmpName: $tEmpName,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      history: {...actionHistoryModel},\n      interview: {...interviewModel},\n      interviewers: [],\n      rules: {\n        interviewName: [required, shouldNotExceedCharLength(100)],\n        interviewDate: [required, validDateFormat(this.userDateFormat)],\n        interviewTime: [validTimeFormat],\n        interviewerName: [\n          required,\n          validSelection,\n          (value) => {\n            return this.interviewers.filter(\n              (interviewer) => interviewer && interviewer.id === value?.id,\n            ).length < 2\n              ? true\n              : this.$t('general.already_exists');\n          },\n        ],\n        note: [shouldNotExceedCharLength(2000)],\n      },\n      statuses: [\n        {id: 1, label: this.$t('recruitment.application_initiated')},\n        {id: 2, label: this.$t('recruitment.shortlist')},\n        {id: 3, label: this.$t('general.reject')},\n        {id: 4, label: this.$t('recruitment.schedule_interview')},\n        {id: 5, label: this.$t('recruitment.mark_interview_passed')},\n        {id: 6, label: this.$t('recruitment.mark_interview_failed')},\n        {id: 7, label: this.$t('recruitment.offer_job')},\n        {id: 8, label: this.$t('recruitment.decline_offer')},\n        {id: 9, label: this.$t('recruitment.hire')},\n      ],\n      disabled: false,\n    };\n  },\n\n  computed: {\n    performedBy() {\n      return this.translateEmpName(this.history.performedBy, {\n        includeMiddle: true,\n        excludePastEmpTag: false,\n      });\n    },\n    performedDate() {\n      return formatDate(\n        parseDate(this.history.performedDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n    },\n    performedAction() {\n      return (\n        this.statuses.find((item) => item.id === this.history.action.id)\n          ?.label || null\n      );\n    },\n    isScheduleInterview() {\n      return this.history.interview?.id && this.history.action?.id === 4;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.historyId)\n      .then((response) => {\n        const {data, meta} = response.data;\n        this.history = {...data};\n        this.disabled = meta.disabled;\n        return this.isScheduleInterview\n          ? this.http.request({\n              method: 'GET',\n              url: `/api/v2/recruitment/candidates/${this.candidateId}/interviews/${this.history.interview.id}`,\n            })\n          : null;\n      })\n      .then((response) => {\n        if (response) {\n          const {data} = response.data;\n          this.interview.interviewName = data.name;\n          this.interview.interviewDate = data.interviewDate;\n          this.interview.interviewTime = data.interviewTime;\n          this.history.note = data.note;\n          if (Array.isArray(data.interviewers)) {\n            this.interviewers = data.interviewers.map((interviewer) => ({\n              id: interviewer.empNumber,\n              label: this.translateEmpName(interviewer, {\n                includeMiddle: true,\n                excludePastEmpTag: true,\n              }),\n              isPastEmployee: interviewer.terminationId ? true : false,\n            }));\n          }\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onAddAnother() {\n      if (this.interviewers.length < 5) {\n        this.interviewers.push(null);\n      }\n    },\n    onRemoveInterviewer(index) {\n      this.interviewers.splice(index, 1);\n    },\n    onSave() {\n      this.loading = true;\n      this.http\n        .update(this.historyId, {\n          note: this.history.note,\n        })\n        .then(() => {\n          return this.isScheduleInterview\n            ? this.http.request({\n                method: 'PUT',\n                url: `/api/v2/recruitment/candidates/${this.candidateId}/interviews/${this.history.interview.id}`,\n                data: {\n                  ...this.interview,\n                  note: this.history.note,\n                  interviewerEmpNumbers: this.interviewers\n                    .map((interviewer) => interviewer?.id)\n                    .filter(Number),\n                },\n              })\n            : null;\n        })\n        .then(() => {\n          this.loading = false;\n          this.$toast.saveSuccess();\n        });\n    },\n    onClickBack() {\n      navigate('/recruitment/addCandidate/{id}', {id: this.candidateId});\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}