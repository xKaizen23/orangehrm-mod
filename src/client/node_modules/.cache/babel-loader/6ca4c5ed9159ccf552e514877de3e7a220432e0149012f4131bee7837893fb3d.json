{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a027a9ee\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-buzz-comment\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-buzz-comment-add\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_profile_image = _resolveComponent(\"profile-image\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_post_comment = _resolveComponent(\"post-comment\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  const _directive_autofocus = _resolveDirective(\"autofocus\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_profile_image, {\n    employee: $props.employee\n  }, null, 8, [\"employee\"]), _createVNode(_component_oxd_form, {\n    onSubmitValid: $setup.onSubmit\n  }, {\n    default: _withCtx(() => [_withDirectives(_createVNode(_component_oxd_input_field, {\n      modelValue: _ctx.text,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event),\n      placeholder: _ctx.$t('buzz.write_your_comment')\n    }, null, 8, [\"modelValue\", \"placeholder\"]), [[_directive_autofocus]])]),\n    _: 1\n  }, 8, [\"onSubmitValid\"])]), _ctx.total > 0 ? (_openBlock(), _createElementBlock(\"br\", _hoisted_3)) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments, comment => {\n    return _openBlock(), _createBlock(_component_post_comment, {\n      key: comment,\n      data: comment,\n      \"post-id\": $props.postId,\n      onEdit: $setup.onEditComment,\n      onLike: $setup.onLikeComment,\n      onDelete: $setup.onDeleteComment\n    }, null, 8, [\"data\", \"post-id\", \"onEdit\", \"onLike\", \"onDelete\"]);\n  }), 128)), _ctx.total > 4 ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    tag: \"p\",\n    class: \"orangehrm-buzz-comment-readmore\",\n    onClick: $setup.onClickShowMore\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.showAllComments ? _ctx.$t('general.show_less') : _ctx.$t('general.show_more')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\",\n    message: _ctx.$t('buzz.post_delete_confirmation_message')\n  }, null, 8, [\"message\"])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAwB;;EAC5BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;uBADzCC,oBAiCM,OAjCNC,UAiCM,GAhCJC,oBASM,OATNC,UASM,GARJC,aAAoDC;IAApCC,QAAQ,EAAEC;EAAQ,2BAClCH,aAMWI;IANAC,aAAY,EAAEC;EAAQ;sBAC/B,MAIE,iBAJFN,aAIEO;kBAHSC,SAAI;iEAAJA,SAAI;MAEZC,WAAW,EAAED,OAAE;;;8BAIZA,UAAK,sBAAfZ,oBAAuB,uEACvBA,oBAQgBc,6BAPIF,aAAQ,EAAnBG,OAAO;yBADhBC,aAQgBC;MANbC,GAAG,EAAEH,OAAO;MACZI,IAAI,EAAEJ,OAAO;MACb,SAAO,EAAER,aAAM;MACfa,MAAI,EAAEV,oBAAa;MACnBW,MAAI,EAAEX,oBAAa;MACnBY,QAAM,EAAEZ;;aAGHE,UAAK,sBADbI,aAOWO;;IALTC,GAAG,EAAC,GAAG;IACPzB,KAAK,EAAC,iCAAiC;IACtC0B,OAAK,EAAEf;;sBAER,MAAyE,mCAAtEE,oBAAe,GAAGA,OAAE,wBAAwBA,OAAE;;uDAEnDR,aAGuBsB;IAFrBC,GAAG,EAAC,cAAc;IACjBC,OAAO,EAAEhB,OAAE","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_profile_image","employee","$props","_component_oxd_form","onSubmitValid","$setup","_component_oxd_input_field","_ctx","placeholder","_Fragment","comment","_createBlock","_component_post_comment","key","data","onEdit","onLike","onDelete","_component_oxd_text","tag","onClick","_component_delete_confirmation","ref","message"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostCommentContainer.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-comment\">\n    <div class=\"orangehrm-buzz-comment-add\">\n      <profile-image :employee=\"employee\"></profile-image>\n      <oxd-form @submit-valid=\"onSubmit\">\n        <oxd-input-field\n          v-model=\"text\"\n          v-autofocus\n          :placeholder=\"$t('buzz.write_your_comment')\"\n        />\n      </oxd-form>\n    </div>\n    <br v-if=\"total > 0\" />\n    <post-comment\n      v-for=\"comment in comments\"\n      :key=\"comment\"\n      :data=\"comment\"\n      :post-id=\"postId\"\n      @edit=\"onEditComment\"\n      @like=\"onLikeComment\"\n      @delete=\"onDeleteComment\"\n    ></post-comment>\n    <oxd-text\n      v-if=\"total > 4\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-comment-readmore\"\n      @click=\"onClickShowMore\"\n    >\n      {{ showAllComments ? $t('general.show_less') : $t('general.show_more') }}\n    </oxd-text>\n    <delete-confirmation\n      ref=\"deleteDialog\"\n      :message=\"$t('buzz.post_delete_confirmation_message')\"\n    ></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport useToast from '@/core/util/composable/useToast';\nimport {onBeforeMount, reactive, ref, toRefs} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport PostComment from '@/orangehrmBuzzPlugin/components/PostComment';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nexport default {\n  name: 'PostCommentContainer',\n\n  components: {\n    'post-comment': PostComment,\n    'profile-image': ProfileImage,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  directives: {...useAutoFocus()},\n\n  props: {\n    postId: {\n      type: Number,\n      required: true,\n    },\n    employee: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['create', 'delete'],\n\n  setup(props, context) {\n    const deleteDialog = ref();\n    const state = reactive({\n      text: null,\n      total: 0,\n      comments: [],\n      showAllComments: false,\n    });\n    const {saveSuccess, updateSuccess, deleteSuccess} = useToast();\n    const {fetchPostComments, savePostComment, deletePostComment} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const loadComments = () => {\n      fetchPostComments(props.postId, state.showAllComments ? 0 : 4, true).then(\n        (response) => {\n          const {data, meta} = response.data;\n          state.total = meta.total;\n          state.comments = [...data];\n        },\n      );\n    };\n\n    const onSubmit = () => {\n      if (!state.text) return;\n      savePostComment(props.postId, state.text).then(() => {\n        state.text = null;\n        loadComments();\n        saveSuccess();\n        context.emit('create');\n      });\n    };\n\n    const onClickShowMore = () => {\n      state.showAllComments = !state.showAllComments;\n      loadComments();\n    };\n\n    const onEditComment = () => {\n      loadComments();\n      updateSuccess();\n    };\n\n    const onDeleteComment = (commentId) => {\n      deleteDialog.value.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          deletePostComment(props.postId, commentId).then(() => {\n            loadComments();\n            deleteSuccess();\n            context.emit('delete');\n          });\n        }\n      });\n    };\n\n    const onLikeComment = () => {\n      loadComments();\n    };\n\n    onBeforeMount(() => loadComments());\n\n    return {\n      onSubmit,\n      deleteDialog,\n      onLikeComment,\n      onEditComment,\n      onClickShowMore,\n      onDeleteComment,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-comment {\n  &-add {\n    gap: 10px;\n    display: flex;\n    form {\n      width: 100%;\n    }\n  }\n  &-readmore {\n    margin: 0 auto;\n    cursor: pointer;\n    font-size: 0.9rem;\n    text-align: center;\n    color: $oxd-primary-one-color;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n  ::v-deep(.oxd-input-group__label-wrapper) {\n    display: none;\n  }\n  ::v-deep(.oxd-input-field-bottom-space) {\n    margin-bottom: unset;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}