{"ast":null,"code":"import usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport SaveDependent from '@/orangehrmPimPlugin/components/SaveDependent';\nimport EditDependent from '@/orangehrmPimPlugin/components/EditDependent';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  components: {\n    'profile-action-header': ProfileActionHeader,\n    'edit-employee-layout': EditEmployeeLayout,\n    'save-dependent': SaveDependent,\n    'edit-dependent': EditDependent,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    countries: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/dependents`);\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const dependentNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          dateOfBirth: formatDate(parseDate(item.dateOfBirth), jsDateFormat, {\n            locale\n          }),\n          relationship: item.relationshipType == 'other' ? item.relationship : 'Child'\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: dependentNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'relationship',\n        title: this.$t('pim.relationship'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'dateOfBirth',\n        title: this.$t('pim.date_of_birth'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: '0.5'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    }\n  },\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["usePaginate","APIService","ProfileActionHeader","EditEmployeeLayout","SaveDependent","EditDependent","DeleteConfirmationDialog","useDateFormat","formatDate","parseDate","useLocale","components","props","empNumber","type","String","required","countries","Array","default","setup","http","window","appGlobal","baseUrl","jsDateFormat","locale","dependentNormalizer","data","map","item","id","name","dateOfBirth","relationship","relationshipType","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","slot","title","$t","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","showSaveModal","showEditModal","editModalState","computed","isDisabled","methods","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","onClickAdd","onSaveModalClose","onEditModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeDependents.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\" screen=\"dependents\">\n    <save-dependent\n      v-if=\"showSaveModal\"\n      :http=\"http\"\n      @close=\"onSaveModalClose\"\n    ></save-dependent>\n    <edit-dependent\n      v-if=\"showEditModal\"\n      :http=\"http\"\n      :data=\"editModalState\"\n      @close=\"onEditModalClose\"\n    ></edit-dependent>\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <profile-action-header @click=\"onClickAdd\">\n        {{ $t('pim.assigned_dependents') }}\n      </profile-action-header>\n    </div>\n    <table-header\n      :selected=\"checkedItems.length\"\n      :total=\"total\"\n      :loading=\"isLoading\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"true\"\n        :disabled=\"isDisabled\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport SaveDependent from '@/orangehrmPimPlugin/components/SaveDependent';\nimport EditDependent from '@/orangehrmPimPlugin/components/EditDependent';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  components: {\n    'profile-action-header': ProfileActionHeader,\n    'edit-employee-layout': EditEmployeeLayout,\n    'save-dependent': SaveDependent,\n    'edit-dependent': EditDependent,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    countries: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/dependents`,\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const dependentNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          name: item.name,\n          dateOfBirth: formatDate(parseDate(item.dateOfBirth), jsDateFormat, {\n            locale,\n          }),\n          relationship:\n            item.relationshipType == 'other' ? item.relationship : 'Child',\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: dependentNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'relationship',\n          title: this.$t('pim.relationship'),\n          style: {flex: 1},\n        },\n        {\n          name: 'dateOfBirth',\n          title: this.$t('pim.date_of_birth'),\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: '0.5'},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    },\n  },\n\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}