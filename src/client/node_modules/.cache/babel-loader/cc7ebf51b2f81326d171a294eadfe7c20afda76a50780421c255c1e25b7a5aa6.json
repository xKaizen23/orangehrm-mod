{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_leave_conflict = _resolveComponent(\"leave-conflict\");\n  const _component_leave_assign_confirm_modal = _resolveComponent(\"leave-assign-confirm-modal\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_leave_type_dropdown = _resolveComponent(\"leave-type-dropdown\");\n  const _component_leave_balance = _resolveComponent(\"leave-balance\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_leave_duration_input = _resolveComponent(\"leave-duration-input\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showLeaveConflict ? (_openBlock(), _createBlock(_component_leave_conflict, {\n    key: 0,\n    \"workshift-exceeded\": $data.isWorkShiftExceeded,\n    data: $data.leaveConflictData\n  }, null, 8, [\"workshift-exceeded\", \"data\"])) : _createCommentVNode(\"\", true), _createVNode(_component_leave_assign_confirm_modal, {\n    ref: \"confirmDialog\"\n  }, null, 512), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.assign_leave')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    ref: \"formRef\",\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $data.leave.employee,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leave.employee = $event),\n            rules: $data.rules.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_type_dropdown, {\n            modelValue: $data.leave.type,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leave.type = $event),\n            rules: $data.rules.type,\n            \"eligible-only\": false,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_balance, {\n            \"leave-data\": $data.leave\n          }, null, 8, [\"leave-data\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.leave.fromDate,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.leave.fromDate = $event),\n            label: _ctx.$t('general.from_date'),\n            rules: $data.rules.fromDate,\n            years: $data.yearsArray,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.leave.toDate,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.leave.toDate = $event),\n            label: _ctx.$t('general.to_date'),\n            rules: $data.rules.toDate,\n            years: $data.yearsArray,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $options.appliedLeaveDuration == 1 ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_leave_duration_input, {\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[4] || (_cache[4] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[5] || (_cache[5] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[6] || (_cache[6] = $event => $data.leave.duration.toTime = $event),\n          label: _ctx.$t('general.duration'),\n          \"work-shift\": $data.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $options.appliedLeaveDuration > 1 ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leave.partialOptions,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.leave.partialOptions = $event),\n            type: \"select\",\n            label: _ctx.$t('leave.partial_days'),\n            options: $data.partialOptions\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), $options.showDuration ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 0,\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[8] || (_cache[8] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[9] || (_cache[9] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[10] || (_cache[10] = $event => $data.leave.duration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('general.duration'),\n          \"work-shift\": $data.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true), $options.showStartDay ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 1,\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[11] || (_cache[11] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[12] || (_cache[12] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[13] || (_cache[13] = $event => $data.leave.duration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('leave.start_day'),\n          \"work-shift\": $data.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true), $options.showEndDay ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 2,\n          duration: $data.leave.endDuration.type,\n          \"onUpdate:duration\": _cache[14] || (_cache[14] = $event => $data.leave.endDuration.type = $event),\n          fromTime: $data.leave.endDuration.fromTime,\n          \"onUpdate:fromTime\": _cache[15] || (_cache[15] = $event => $data.leave.endDuration.fromTime = $event),\n          toTime: $data.leave.endDuration.toTime,\n          \"onUpdate:toTime\": _cache[16] || (_cache[16] = $event => $data.leave.endDuration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('leave.end_day'),\n          \"work-shift\": $data.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leave.comment,\n            \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.leave.comment = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comments'),\n            rules: $data.rules.comment\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_submit_button, {\n        label: _ctx.$t('leave.assign')\n      }, null, 8, [\"label\"])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","$data","_createBlock","_component_leave_conflict","data","_createVNode","_component_leave_assign_confirm_modal","ref","_createElementVNode","_hoisted_2","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","employee","rules","required","_component_leave_type_dropdown","type","_component_leave_balance","_component_date_input","fromDate","label","years","toDate","key","_component_leave_duration_input","duration","fromTime","toTime","_component_oxd_input_field","partialOptions","options","partial","endDuration","comment","_component_oxd_form_actions","_component_required_text","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\LeaveAssign.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <leave-conflict\n      v-if=\"showLeaveConflict\"\n      :workshift-exceeded=\"isWorkShiftExceeded\"\n      :data=\"leaveConflictData\"\n    ></leave-conflict>\n    <leave-assign-confirm-modal ref=\"confirmDialog\">\n    </leave-assign-confirm-modal>\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('leave.assign_leave') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"leave.employee\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <leave-type-dropdown\n                v-model=\"leave.type\"\n                :rules=\"rules.type\"\n                :eligible-only=\"false\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <leave-balance :leave-data=\"leave\"></leave-balance>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"leave.fromDate\"\n                :label=\"$t('general.from_date')\"\n                :rules=\"rules.fromDate\"\n                :years=\"yearsArray\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"leave.toDate\"\n                :label=\"$t('general.to_date')\"\n                :rules=\"rules.toDate\"\n                :years=\"yearsArray\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <!-- Single Day|Duration -->\n        <oxd-form-row v-if=\"appliedLeaveDuration == 1\">\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <leave-duration-input\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :label=\"$t('general.duration')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n          </oxd-grid>\n        </oxd-form-row>\n        <!-- Single Day|Duration -->\n\n        <!-- Partial Day|Duration -->\n        <oxd-form-row v-if=\"appliedLeaveDuration > 1\">\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leave.partialOptions\"\n                type=\"select\"\n                :label=\"$t('leave.partial_days')\"\n                :options=\"partialOptions\"\n              />\n            </oxd-grid-item>\n            <leave-duration-input\n              v-if=\"showDuration\"\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('general.duration')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n            <leave-duration-input\n              v-if=\"showStartDay\"\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('leave.start_day')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n            <leave-duration-input\n              v-if=\"showEndDay\"\n              v-model:duration=\"leave.endDuration.type\"\n              v-model:fromTime=\"leave.endDuration.fromTime\"\n              v-model:toTime=\"leave.endDuration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('leave.end_day')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n          </oxd-grid>\n        </oxd-form-row>\n        <!-- Partial Day|Duration -->\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leave.comment\"\n                type=\"textarea\"\n                :label=\"$t('general.comments')\"\n                :rules=\"rules.comment\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <submit-button :label=\"$t('leave.assign')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  shouldNotExceedCharLength,\n  endDateShouldBeAfterStartDate,\n} from '@/core/util/validation/rules';\nimport {yearRange} from '@ohrm/core/util/helper/year-range';\nimport {diffInDays} from '@ohrm/core/util/helper/datefns';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeaveDurationInput from '@/orangehrmLeavePlugin/components/LeaveDurationInput';\nimport LeaveBalance from '@/orangehrmLeavePlugin/components/LeaveBalance';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveConflict from '@/orangehrmLeavePlugin/components/LeaveConflict';\nimport LeaveAssignConfirmModal from '@/orangehrmLeavePlugin/components/LeaveAssignConfirmModal';\nimport useLeaveValidators from '@/orangehrmLeavePlugin/util/composable/useLeaveValidators';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst leaveModel = {\n  employee: null,\n  type: null,\n  fromDate: null,\n  toDate: null,\n  comment: '',\n  partialOptions: null,\n  duration: {\n    type: null,\n    fromTime: null,\n    toTime: null,\n  },\n  endDuration: {\n    type: null,\n    fromTime: null,\n    toTime: null,\n  },\n};\n\nconst defaultWorkshift = {\n  startTime: '9:00',\n  endTime: '17:00',\n};\n\nexport default {\n  name: 'LeaveAssign',\n\n  components: {\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-duration-input': LeaveDurationInput,\n    'leave-balance': LeaveBalance,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'leave-conflict': LeaveConflict,\n    'leave-assign-confirm-modal': LeaveAssignConfirmModal,\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/employees/leave-requests',\n    );\n    const {serializeBody, validateLeaveBalance, validateOverlapLeaves} =\n      useLeaveValidators(http);\n    const {formRef, reset} = useForm();\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      reset,\n      formRef,\n      serializeBody,\n      userDateFormat,\n      validateLeaveBalance,\n      validateOverlapLeaves,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leave: {...leaveModel},\n      rules: {\n        type: [required],\n        fromDate: [required, validDateFormat(this.userDateFormat)],\n        toDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.leave.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        comment: [shouldNotExceedCharLength(250)],\n        employee: [required, validSelection],\n      },\n      partialOptions: [\n        {id: 1, label: this.$t('leave.all_days'), key: 'all'},\n        {id: 2, label: this.$t('leave.start_day_only'), key: 'start'},\n        {id: 3, label: this.$t('leave.end_day_only'), key: 'end'},\n        {id: 4, label: this.$t('leave.start_and_end_day'), key: 'start_end'},\n      ],\n      showLeaveConflict: false,\n      isWorkShiftExceeded: false,\n      leaveConflictData: null,\n      yearsArray: [...yearRange()],\n      workShift: {...defaultWorkshift},\n    };\n  },\n\n  computed: {\n    appliedLeaveDuration() {\n      return diffInDays(this.leave.fromDate, this.leave.toDate);\n    },\n    showDuration() {\n      const id = this.leave.partialOptions?.id;\n      return id && id === 1;\n    },\n    showStartDay() {\n      const id = this.leave.partialOptions?.id;\n      return id && (id === 2 || id === 4);\n    },\n    showEndDay() {\n      const id = this.leave.partialOptions?.id;\n      return id && (id === 3 || id === 4);\n    },\n  },\n\n  watch: {\n    'leave.employee': function (employee) {\n      if (employee?.id) {\n        this.http\n          .request({\n            method: 'GET',\n            url: `/api/v2/pim/employees/${employee.id}/work-shift`,\n          })\n          .then((response) => {\n            const {data} = response.data;\n            this.workShift = data;\n          });\n      } else {\n        this.workShift = {...defaultWorkshift};\n      }\n    },\n    appliedLeaveDuration: function (duration) {\n      if (duration === 1) {\n        this.leave.duration.type = {id: 1, label: 'Full Day', key: 'full_day'};\n      } else {\n        this.leave.duration.type = null;\n      }\n    },\n    'leave.fromDate': function (fromDate) {\n      if (!fromDate || this.leave.toDate) return;\n      this.leave.toDate = fromDate;\n    },\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.leaveConflictData = null;\n      this.showLeaveConflict = false;\n\n      this.validateLeaveBalance(this.leave)\n        .then(async ({balance}) => {\n          if (balance <= 0) {\n            const confirmation = await this.$refs.confirmDialog.showDialog();\n            if (confirmation !== 'ok') {\n              return Promise.reject();\n            }\n          }\n          return this.validateOverlapLeaves(this.leave);\n        })\n        .then(({isConflict, isOverWorkshift, data}) => {\n          if (isConflict) {\n            this.leaveConflictData = data;\n            this.showLeaveConflict = true;\n            this.isWorkShiftExceeded = isOverWorkshift;\n            return Promise.reject();\n          }\n          return this.http.create(this.serializeBody(this.leave));\n        })\n        .then(() => {\n          this.$toast.saveSuccess();\n          this.reset();\n        })\n        .catch(() => {\n          this.showLeaveConflict &&\n            this.$toast.warn({\n              title: this.$t('general.warning'),\n              message: this.$t('leave.failed_to_submit'),\n            });\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}