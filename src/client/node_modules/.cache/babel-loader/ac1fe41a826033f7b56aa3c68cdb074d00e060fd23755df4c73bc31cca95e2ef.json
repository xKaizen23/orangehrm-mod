{"ast":null,"code":"import { required, maxFileSize, validFileTypes } from '@/core/util/validation/rules';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport { APIService } from '@/core/util/services/api.service';\nimport EmployeeDataImportModal from '@/orangehrmPimPlugin/components/EmployeeDataImportModal';\nconst attachmentModel = {\n  attachment: null\n};\nexport default {\n  components: {\n    'employee-data-import-modal': EmployeeDataImportModal\n  },\n  props: {\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/csv-import`);\n    const {\n      formRef,\n      reset\n    } = useForm();\n    return {\n      http,\n      reset,\n      formRef\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel\n      },\n      rules: {\n        attachment: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)]\n      },\n      importModalState: null\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.attachment\n      }).then(response => {\n        const {\n          meta\n        } = response.data;\n        this.importModalState = meta;\n      }).finally(() => {\n        this.reset();\n        this.isLoading = false;\n      });\n    },\n    onClickDownload() {\n      const downUrl = `${window.appGlobal.baseUrl}/pim/sampleCsvDownload`;\n      window.open(downUrl, '_blank');\n    },\n    onImportModalClose() {\n      this.importModalState = null;\n    }\n  }\n};","map":{"version":3,"mappings":"AAwHA,SACEA,QAAQ,EACRC,WAAW,EACXC,cAAc,QACT,8BAA8B;AACrC,OAAOC,OAAM,MAAO,oCAAoC;AACxD,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,uBAAsB,MAAO,yDAAyD;AAE7F,MAAMC,eAAc,GAAI;EACtBC,UAAU,EAAE;AACd,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,4BAA4B,EAAEH;EAChC,CAAC;EACDI,KAAK,EAAE;IACLC,gBAAgB,EAAE;MAChBC,IAAI,EAAEC,KAAK;MACXZ,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXU,IAAI,EAAEE,MAAM;MACZb,QAAQ,EAAE;IACZ;EACF,CAAC;EACDc,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIX,UAAU,CACzBY,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,wBAAuB,CACzB;IACD,MAAM;MAACC,OAAO;MAAEC;IAAK,IAAIjB,OAAO,EAAE;IAClC,OAAO;MACLY,IAAI;MACJK,KAAK;MACLD;IACF,CAAC;EACH,CAAC;EAEDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBf,UAAU,EAAE;QACV,GAAGD;MACL,CAAC;MACDiB,KAAK,EAAE;QACLhB,UAAU,EAAE,CACVP,QAAQ,EACRC,WAAW,CAAC,IAAI,CAACA,WAAW,CAAC,EAC7BC,cAAc,CAAC,IAAI,CAACQ,gBAAgB,CAAC;MAEzC,CAAC;MACDc,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,GAAG;MAClB,OAAOC,IAAI,CAACC,KAAK,CAAE,IAAI,CAAC3B,WAAU,IAAK,IAAG,GAAI,IAAI,CAAC,GAAI,GAAG,IAAI,GAAG;IACnE;EACF,CAAC;EACD4B,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACR,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACP,IAAG,CACLgB,MAAM,CAAC;QACN,GAAG,IAAI,CAACxB;MACV,CAAC,EACAyB,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAM;UAACC;QAAI,IAAID,QAAQ,CAACZ,IAAI;QAC5B,IAAI,CAACG,gBAAe,GAAIU,IAAI;MAC9B,CAAC,EACAC,OAAO,CAAC,MAAM;QACb,IAAI,CAACf,KAAK,EAAE;QACZ,IAAI,CAACE,SAAQ,GAAI,KAAK;MACxB,CAAC,CAAC;IACN,CAAC;IACDc,eAAe,GAAG;MAChB,MAAMC,OAAM,GAAK,GAAErB,MAAM,CAACC,SAAS,CAACC,OAAQ,wBAAuB;MACnEF,MAAM,CAACsB,IAAI,CAACD,OAAO,EAAE,QAAQ,CAAC;IAChC,CAAC;IACDE,kBAAkB,GAAG;MACnB,IAAI,CAACf,gBAAe,GAAI,IAAI;IAC9B;EACF;AACF,CAAC","names":["required","maxFileSize","validFileTypes","useForm","APIService","EmployeeDataImportModal","attachmentModel","attachment","components","props","allowedFileTypes","type","Array","Number","setup","http","window","appGlobal","baseUrl","formRef","reset","data","isLoading","rules","importModalState","computed","formattedFileSize","Math","round","methods","onSave","create","then","response","meta","finally","onClickDownload","downUrl","open","onImportModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\dataImport\\EmployeeDataImport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('pim.data_import') }}\n      </oxd-text>\n\n      <oxd-divider />\n      <div class=\"orangehrm-information-card-container\">\n        <oxd-text class=\"orangehrm-sub-title\">\n          {{ $t('general.note') }}:\n        </oxd-text>\n        <ul>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.column_order_should_not_be_changed') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.first_name_and_last_name_are_compulsory') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.all_date_fields_should_be_in_yyyy_mm_dd_format') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.gender_specified_value_should_be_either_m_or_f') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{\n                $t(\n                  'pim.each_import_file_should_be_configured_for_100_records_or_less',\n                )\n              }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.multiple_import_files_may_be_required') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('pim.sample_csv_file') }} :\n              <a\n                href=\"#\"\n                class=\"download-link\"\n                @click.prevent=\"onClickDownload\"\n              >\n                {{ $t('general.download') }}\n              </a>\n            </oxd-text>\n          </li>\n        </ul>\n      </div>\n      <br />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"attachment.attachment\"\n                type=\"file\"\n                :rules=\"rules.attachment\"\n                :label=\"$t('general.select_file')\"\n                :button-label=\"$t('general.browse')\"\n                :placeholder=\"$t('general.no_file_selected')\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{\n                  $t('general.accepts_up_to_n_mb', {count: formattedFileSize})\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <submit-button :label=\"$t('general.upload')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <employee-data-import-modal\n      v-if=\"importModalState\"\n      :data=\"importModalState\"\n      @close=\"onImportModalClose\"\n    ></employee-data-import-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  maxFileSize,\n  validFileTypes,\n} from '@/core/util/validation/rules';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeDataImportModal from '@/orangehrmPimPlugin/components/EmployeeDataImportModal';\n\nconst attachmentModel = {\n  attachment: null,\n};\n\nexport default {\n  components: {\n    'employee-data-import-modal': EmployeeDataImportModal,\n  },\n  props: {\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/csv-import`,\n    );\n    const {formRef, reset} = useForm();\n    return {\n      http,\n      reset,\n      formRef,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel,\n      },\n      rules: {\n        attachment: [\n          required,\n          maxFileSize(this.maxFileSize),\n          validFileTypes(this.allowedFileTypes),\n        ],\n      },\n      importModalState: null,\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.attachment,\n        })\n        .then((response) => {\n          const {meta} = response.data;\n          this.importModalState = meta;\n        })\n        .finally(() => {\n          this.reset();\n          this.isLoading = false;\n        });\n    },\n    onClickDownload() {\n      const downUrl = `${window.appGlobal.baseUrl}/pim/sampleCsvDownload`;\n      window.open(downUrl, '_blank');\n    },\n    onImportModalClose() {\n      this.importModalState = null;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-information-card-container {\n  background-color: $oxd-interface-gray-lighten-2-color;\n  border-radius: 1.2rem;\n  padding: 1.2rem;\n}\n.orangehrm-information-card-text {\n  font-size: $oxd-input-control-font-size;\n  color: $oxd-input-control-font-color;\n  font-weight: $oxd-input-control-font-weight;\n  & .download-link {\n    color: $oxd-primary-one-color;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}