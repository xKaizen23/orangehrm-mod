{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport ProfileImageInput from '@/orangehrmPimPlugin/components/ProfileImageInput';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport { maxFileSize, required, validFileTypes } from '@/core/util/validation/rules';\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\nexport default {\n  components: {\n    'profile-image-input': ProfileImageInput,\n    'edit-employee-layout': EditEmployeeLayout\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    allowedImageTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/picture`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      empPicture: null,\n      rules: {\n        empPicture: [required, maxFileSize(1024 * 1024), validFileTypes(this.allowedImageTypes)]\n      }\n    };\n  },\n  computed: {\n    profilePicUrl() {\n      if (this.empPicture) {\n        const file = this.empPicture.base64;\n        const type = this.empPicture.type;\n        const isPicture = this.allowedImageTypes.findIndex(item => item === type);\n        return isPicture > -1 ? `data:${type};base64,${file}` : defaultPic;\n      } else {\n        return defaultPic;\n      }\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          empPicture: this.empPicture\n        }\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        location.reload();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA+CA,SAAQA,UAAU,QAAO,sCAAsC;AAC/D,OAAOC,iBAAgB,MAAO,mDAAmD;AACjF,OAAOC,kBAAiB,MAAO,oDAAoD;AACnF,SACEC,WAAW,EACXC,QAAQ,EACRC,cAAc,QACT,8BAA8B;AACrC,MAAMC,UAAS,GAAK,GAAEC,MAAM,CAACC,SAAS,CAACC,UAAW,2BAA0B;AAE5E,eAAe;EACbC,UAAU,EAAE;IACV,qBAAqB,EAAET,iBAAiB;IACxC,sBAAsB,EAAEC;EAC1B,CAAC;EAEDS,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZV,QAAQ,EAAE;IACZ,CAAC;IACDW,iBAAiB,EAAE;MACjBF,IAAI,EAAEG,KAAK;MACXZ,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDa,KAAK,CAACN,KAAK,EAAE;IACX,MAAMO,IAAG,GAAI,IAAIlB,UAAU,CACzBO,MAAM,CAACC,SAAS,CAACW,OAAO,EACvB,yBAAwBR,KAAK,CAACC,SAAU,UAAS,CACnD;IAED,OAAO;MACLM;IACF,CAAC;EACH,CAAC;EAEDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;QACLD,UAAU,EAAE,CACVlB,QAAQ,EACRD,WAAW,CAAC,IAAG,GAAI,IAAI,CAAC,EACxBE,cAAc,CAAC,IAAI,CAACU,iBAAiB,CAAC;MAE1C;IACF,CAAC;EACH,CAAC;EAEDS,QAAQ,EAAE;IACRC,aAAa,GAAG;MACd,IAAI,IAAI,CAACH,UAAU,EAAE;QACnB,MAAMI,IAAG,GAAI,IAAI,CAACJ,UAAU,CAACK,MAAM;QACnC,MAAMd,IAAG,GAAI,IAAI,CAACS,UAAU,CAACT,IAAI;QACjC,MAAMe,SAAQ,GAAI,IAAI,CAACb,iBAAiB,CAACc,SAAS,CAC/CC,IAAI,IAAKA,IAAG,KAAMjB,IAAI,CACxB;QACD,OAAOe,SAAQ,GAAI,CAAC,IAAK,QAAOf,IAAK,WAAUa,IAAK,KAAIpB,UAAU;MACpE,OAAO;QACL,OAAOA,UAAU;MACnB;IACF;EACF,CAAC;EAEDyB,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACX,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACH,IAAG,CACLe,OAAO,CAAC;QACPC,MAAM,EAAE,KAAK;QACbd,IAAI,EAAE;UACJE,UAAU,EAAE,IAAI,CAACA;QACnB;MACF,CAAC,EACAa,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAF,IAAI,CAAC,MAAM;QACVG,QAAQ,CAACC,MAAM,EAAE;MACnB,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["APIService","ProfileImageInput","EditEmployeeLayout","maxFileSize","required","validFileTypes","defaultPic","window","appGlobal","publicPath","components","props","empNumber","type","String","allowedImageTypes","Array","setup","http","baseUrl","data","isLoading","empPicture","rules","computed","profilePicUrl","file","base64","isPicture","findIndex","item","methods","onSave","request","method","then","$toast","updateSuccess","location","reload"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeProfilePicture.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.change_profile_picture') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <div class=\"orangehrm-employee-picture\">\n            <profile-image-input\n              v-model=\"empPicture\"\n              :rules=\"rules.empPicture\"\n              :img-src=\"profilePicUrl\"\n            />\n          </div>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ProfileImageInput from '@/orangehrmPimPlugin/components/ProfileImageInput';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport {\n  maxFileSize,\n  required,\n  validFileTypes,\n} from '@/core/util/validation/rules';\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\n\nexport default {\n  components: {\n    'profile-image-input': ProfileImageInput,\n    'edit-employee-layout': EditEmployeeLayout,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    allowedImageTypes: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/picture`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      empPicture: null,\n      rules: {\n        empPicture: [\n          required,\n          maxFileSize(1024 * 1024),\n          validFileTypes(this.allowedImageTypes),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    profilePicUrl() {\n      if (this.empPicture) {\n        const file = this.empPicture.base64;\n        const type = this.empPicture.type;\n        const isPicture = this.allowedImageTypes.findIndex(\n          (item) => item === type,\n        );\n        return isPicture > -1 ? `data:${type};base64,${file}` : defaultPic;\n      } else {\n        return defaultPic;\n      }\n    },\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            empPicture: this.empPicture,\n          },\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          location.reload();\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}