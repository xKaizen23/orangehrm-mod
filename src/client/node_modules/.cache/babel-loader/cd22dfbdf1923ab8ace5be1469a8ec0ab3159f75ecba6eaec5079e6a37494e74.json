{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength, validPhoneNumberFormat } from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst initialLocation = {\n  name: '',\n  countryCode: null,\n  province: '',\n  city: '',\n  address: '',\n  zipCode: '',\n  phone: '',\n  fax: '',\n  note: ''\n};\nexport default {\n  props: {\n    locationId: {\n      type: String,\n      required: true\n    },\n    countries: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/locations');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const locationUniqueValidation = createUniqueValidator('Location', 'name', {\n      entityId: props.locationId\n    });\n    return {\n      http,\n      locationUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      location: {\n        ...initialLocation\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100), this.locationUniqueValidation],\n        countryCode: [required],\n        province: [shouldNotExceedCharLength(50)],\n        city: [shouldNotExceedCharLength(50)],\n        address: [shouldNotExceedCharLength(250)],\n        zipCode: [shouldNotExceedCharLength(30)],\n        phone: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        fax: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        note: [shouldNotExceedCharLength(250)]\n      }\n    };\n  },\n  computed: {\n    hasUpdatePermissions() {\n      return this.$can.update(`locations`);\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(parseInt(this.locationId, 10)).then(response => {\n      const {\n        data\n      } = response.data;\n      this.location.name = data.name;\n      this.location.countryCode = this.countries.find(item => item.id === data.country.countryCode);\n      this.location.province = data.province;\n      this.location.city = data.city;\n      this.location.address = data.address;\n      this.location.zipCode = data.zipCode;\n      this.location.phone = data.phone;\n      this.location.fax = data.fax;\n      this.location.note = data.note;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/admin/viewLocations');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.locationId, {\n        name: this.location.name,\n        countryCode: this.location.countryCode.id,\n        province: this.location.province,\n        city: this.location.city,\n        address: this.location.address,\n        zipCode: this.location.zipCode,\n        phone: this.location.phone,\n        fax: this.location.fax,\n        note: this.location.note\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","shouldNotExceedCharLength","validPhoneNumberFormat","useServerValidation","initialLocation","name","countryCode","province","city","address","zipCode","phone","fax","note","props","locationId","type","String","countries","Array","default","setup","http","window","appGlobal","baseUrl","createUniqueValidator","locationUniqueValidation","entityId","data","isLoading","location","rules","computed","hasUpdatePermissions","$can","update","created","get","parseInt","then","response","find","item","id","country","finally","methods","onCancel","onSave","$toast","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\location\\EditLocation.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\" tag=\"h6\">\n        {{ $t('admin.edit_location') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.name\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.name\"\n                :label=\"$t('general.name')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.city\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.city\"\n                :label=\"$t('general.city')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.province\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.province\"\n                :label=\"$t('general.state_province')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.zipCode\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.zipCode\"\n                :label=\"$t('general.zip_postal_code')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.countryCode\"\n                :clear=\"false\"\n                :disabled=\"!hasUpdatePermissions\"\n                :options=\"countries\"\n                :rules=\"rules.countryCode\"\n                :label=\"$t('general.country')\"\n                required\n                type=\"select\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model.trim=\"location.phone\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.phone\"\n                :label=\"$t('general.phone')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.fax\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.fax\"\n                :label=\"$t('general.fax')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.address\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.address\"\n                :label=\"$t('admin.address')\"\n                type=\"textarea\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.note\"\n                :disabled=\"!hasUpdatePermissions\"\n                :rules=\"rules.note\"\n                :label=\"$t('general.note')\"\n                type=\"textarea\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button v-if=\"hasUpdatePermissions\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validPhoneNumberFormat,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialLocation = {\n  name: '',\n  countryCode: null,\n  province: '',\n  city: '',\n  address: '',\n  zipCode: '',\n  phone: '',\n  fax: '',\n  note: '',\n};\n\nexport default {\n  props: {\n    locationId: {\n      type: String,\n      required: true,\n    },\n    countries: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/locations',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const locationUniqueValidation = createUniqueValidator('Location', 'name', {\n      entityId: props.locationId,\n    });\n\n    return {\n      http,\n      locationUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      location: {...initialLocation},\n      rules: {\n        name: [\n          required,\n          shouldNotExceedCharLength(100),\n          this.locationUniqueValidation,\n        ],\n        countryCode: [required],\n        province: [shouldNotExceedCharLength(50)],\n        city: [shouldNotExceedCharLength(50)],\n        address: [shouldNotExceedCharLength(250)],\n        zipCode: [shouldNotExceedCharLength(30)],\n        phone: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        fax: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        note: [shouldNotExceedCharLength(250)],\n      },\n    };\n  },\n\n  computed: {\n    hasUpdatePermissions() {\n      return this.$can.update(`locations`);\n    },\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(parseInt(this.locationId, 10))\n      .then((response) => {\n        const {data} = response.data;\n        this.location.name = data.name;\n        this.location.countryCode = this.countries.find(\n          (item) => item.id === data.country.countryCode,\n        );\n        this.location.province = data.province;\n        this.location.city = data.city;\n        this.location.address = data.address;\n        this.location.zipCode = data.zipCode;\n        this.location.phone = data.phone;\n        this.location.fax = data.fax;\n        this.location.note = data.note;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/admin/viewLocations');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.locationId, {\n          name: this.location.name,\n          countryCode: this.location.countryCode.id,\n          province: this.location.province,\n          city: this.location.city,\n          address: this.location.address,\n          zipCode: this.location.zipCode,\n          phone: this.location.phone,\n          fax: this.location.fax,\n          note: this.location.note,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}