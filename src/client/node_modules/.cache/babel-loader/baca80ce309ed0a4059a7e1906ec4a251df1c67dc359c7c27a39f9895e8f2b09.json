{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-304890b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-employee-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-employee-image\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-employee-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_profile_image_input = _resolveComponent(\"profile-image-input\");\n  const _component_full_name_input = _resolveComponent(\"full-name-input\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_password_input = _resolveComponent(\"password-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.add_employee')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_profile_image_input, {\n      modelValue: $setup.employee.empPicture,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.employee.empPicture = $event),\n      rules: $data.rules.empPicture,\n      \"img-src\": $options.profilePicUrl\n    }, null, 8, [\"modelValue\", \"rules\", \"img-src\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 1,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_full_name_input, {\n            firstName: $setup.employee.firstName,\n            \"onUpdate:firstName\": _cache[1] || (_cache[1] = $event => $setup.employee.firstName = $event),\n            middleName: $setup.employee.middleName,\n            \"onUpdate:middleName\": _cache[2] || (_cache[2] = $event => $setup.employee.middleName = $event),\n            lastName: $setup.employee.lastName,\n            \"onUpdate:lastName\": _cache[3] || (_cache[3] = $event => $setup.employee.lastName = $event),\n            rules: $data.rules\n          }, null, 8, [\"firstName\", \"middleName\", \"lastName\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $setup.employee.employeeId,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.employee.employeeId = $event),\n            label: _ctx.$t('general.employee_id'),\n            rules: $data.rules.employeeId\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, {\n      class: \"user-form-header\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"user-form-header-text\",\n        tag: \"p\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.create_login_details')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_switch_input, {\n        modelValue: $data.createLogin,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.createLogin = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), $data.createLogin ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.user.username,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.user.username = $event),\n            label: _ctx.$t('general.username'),\n            rules: $data.rules.username,\n            required: \"\",\n            autocomplete: \"off\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('general.status'),\n            classes: {\n              wrapper: '--status-grouped-field'\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.user.status,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.user.status = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.enabled'),\n              value: \"1\"\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.user.status,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.user.status = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.disabled'),\n              value: \"2\"\n            }, null, 8, [\"modelValue\", \"option-label\"])]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_password_input, {\n      password: $data.user.password,\n      \"onUpdate:password\": _cache[9] || (_cache[9] = $event => $data.user.password = $event),\n      passwordConfirm: $data.user.passwordConfirm,\n      \"onUpdate:passwordConfirm\": _cache[10] || (_cache[10] = $event => $data.user.passwordConfirm = $event),\n      \"is-password-required\": $props.isPasswordRequired\n    }, null, 8, [\"password\", \"passwordConfirm\", \"is-password-required\"])], 64)) : _createCommentVNode(\"\", true)])]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;EAO5BA,KAAK,EAAC;AAA8B;;EAClCA,KAAK,EAAC;AAA0B;;EAOhCA,KAAK,EAAC;AAAyB;;;;;;;;;;;;;;;;;;uBAhB5CC,oBAuGM,OAvGNC,UAuGM,GAtGJC,oBAqGM,OArGNC,UAqGM,GApGJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAAgC,mCAA7BQ,OAAE;;MAEPH,aAAeI,yBAEfJ,aA8FWK;IA9FAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAiFM,CAjFNX,oBAiFM,OAjFNY,UAiFM,GAhFJZ,oBAMM,OANNa,UAMM,GALJX,aAIEY;kBAHSC,eAAQ,CAACC,UAAU;iEAAnBD,eAAQ,CAACC,UAAU;MAC3BC,KAAK,EAAER,WAAK,CAACO,UAAU;MACvB,SAAO,EAAEL;uDAGdX,oBAwEM,OAxENkB,UAwEM,GAvEJhB,aAqBeiB;wBApBb,MASW,CATXjB,aASWkB;QATAC,IAAI,EAAE,CAAC;QAAExB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBoB;4BANd,MAKE,CALFpB,aAKEqB;YAJQC,SAAS,EAAET,eAAQ,CAACS,SAAS;sEAAlBT,eAAQ,CAACS,SAAS;YAC7BC,UAAU,EAAEV,eAAQ,CAACU,UAAU;uEAAnBV,eAAQ,CAACU,UAAU;YAC/BC,QAAQ,EAAEX,eAAQ,CAACW,QAAQ;qEAAjBX,eAAQ,CAACW,QAAQ;YAClCT,KAAK,EAAER;;;;;UAKdP,aAQWkB;QARAC,IAAI,EAAE,CAAC;QAAExB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBoB;4BALd,MAIE,CAJFpB,aAIEyB;wBAHSZ,eAAQ,CAACa,UAAU;uEAAnBb,eAAQ,CAACa,UAAU;YAC3BC,KAAK,EAAExB,OAAE;YACTY,KAAK,EAAER,WAAK,CAACmB;;;;;;;QAKtB1B,aAAeI,yBACfJ,aAKeiB;MALDtB,KAAK,EAAC;IAAkB;wBACpC,MAEW,CAFXK,aAEWC;QAFDN,KAAK,EAAC,uBAAuB;QAACO,GAAG,EAAC;;0BAC1C,MAAoC,mCAAjCC,OAAE;;UAEPH,aAA0C4B;oBAAfrB,iBAAW;mEAAXA,iBAAW;;;QAGxBA,iBAAW,kBAA3BX,oBAwCWiC;MAAAC;IAAA,IAvCT9B,aAgCeiB;wBA/Bb,MA8BW,CA9BXjB,aA8BWkB;QA9BAC,IAAI,EAAE,CAAC;QAAExB,KAAK,EAAC;;0BACxB,MAQgB,CARhBK,aAQgBoB;4BAPd,MAME,CANFpB,aAMEyB;wBALSlB,UAAI,CAACwB,QAAQ;uEAAbxB,UAAI,CAACwB,QAAQ;YACrBJ,KAAK,EAAExB,OAAE;YACTY,KAAK,EAAER,WAAK,CAACwB,QAAQ;YACtBC,QAAQ,EAAR,EAAQ;YACRC,YAAY,EAAC;;;YAIjBjC,aAkBgBoB;4BAjBd,MAgBkB,CAhBlBpB,aAgBkBkC;YAffP,KAAK,EAAExB,OAAE;YACTgC,OAAO,EAAE;cAAAC;YAAA;;8BAEV,MAKE,CALFpC,aAKEyB;0BAJSlB,UAAI,CAAC8B,MAAM;yEAAX9B,UAAI,CAAC8B,MAAM;cACpBC,IAAI,EAAC,OAAO;cACX,cAAY,EAAEnC,OAAE;cACjBoC,KAAK,EAAC;yDAERvC,aAKEyB;0BAJSlB,UAAI,CAAC8B,MAAM;yEAAX9B,UAAI,CAAC8B,MAAM;cACpBC,IAAI,EAAC,OAAO;cACX,cAAY,EAAEnC,OAAE;cACjBoC,KAAK,EAAC;;;;;;;;;QAOhBvC,aAIEwC;MAHQC,QAAQ,EAAElC,UAAI,CAACkC,QAAQ;+DAAblC,UAAI,CAACkC,QAAQ;MACvBC,eAAe,EAAEnC,UAAI,CAACmC,eAAe;wEAApBnC,UAAI,CAACmC,eAAe;MAC5C,sBAAoB,EAAEC;qHAM/B3C,aAAeI,yBACfJ,aAQmB4C;wBAPjB,MAAiB,CAAjB5C,aAAiB6C,2BACjB7C,aAIE8C;QAHA,cAAY,EAAC,OAAO;QACnBnB,KAAK,EAAExB,OAAE;QACT4C,OAAK,EAAEtC;yCAEVT,aAAiBgD","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_hoisted_3","_hoisted_4","_component_profile_image_input","$setup","empPicture","rules","_hoisted_5","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_full_name_input","firstName","middleName","lastName","_component_oxd_input_field","employeeId","label","_component_oxd_switch_input","_Fragment","key","username","required","autocomplete","_component_oxd_input_group","classes","wrapper","status","type","value","_component_password_input","password","passwordConfirm","$props","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\SaveEmployee.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.add_employee') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <div class=\"orangehrm-employee-container\">\n          <div class=\"orangehrm-employee-image\">\n            <profile-image-input\n              v-model=\"employee.empPicture\"\n              :rules=\"rules.empPicture\"\n              :img-src=\"profilePicUrl\"\n            />\n          </div>\n          <div class=\"orangehrm-employee-form\">\n            <oxd-form-row>\n              <oxd-grid :cols=\"1\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <full-name-input\n                    v-model:firstName=\"employee.firstName\"\n                    v-model:middleName=\"employee.middleName\"\n                    v-model:lastName=\"employee.lastName\"\n                    :rules=\"rules\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <oxd-input-field\n                    v-model=\"employee.employeeId\"\n                    :label=\"$t('general.employee_id')\"\n                    :rules=\"rules.employeeId\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-form-row>\n            <oxd-divider />\n            <oxd-form-row class=\"user-form-header\">\n              <oxd-text class=\"user-form-header-text\" tag=\"p\">\n                {{ $t('pim.create_login_details') }}\n              </oxd-text>\n              <oxd-switch-input v-model=\"createLogin\" />\n            </oxd-form-row>\n\n            <template v-if=\"createLogin\">\n              <oxd-form-row>\n                <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                  <oxd-grid-item>\n                    <oxd-input-field\n                      v-model=\"user.username\"\n                      :label=\"$t('general.username')\"\n                      :rules=\"rules.username\"\n                      required\n                      autocomplete=\"off\"\n                    />\n                  </oxd-grid-item>\n\n                  <oxd-grid-item>\n                    <oxd-input-group\n                      :label=\"$t('general.status')\"\n                      :classes=\"{wrapper: '--status-grouped-field'}\"\n                    >\n                      <oxd-input-field\n                        v-model=\"user.status\"\n                        type=\"radio\"\n                        :option-label=\"$t('general.enabled')\"\n                        value=\"1\"\n                      />\n                      <oxd-input-field\n                        v-model=\"user.status\"\n                        type=\"radio\"\n                        :option-label=\"$t('general.disabled')\"\n                        value=\"2\"\n                      />\n                    </oxd-input-group>\n                  </oxd-grid-item>\n                </oxd-grid>\n              </oxd-form-row>\n\n              <password-input\n                v-model:password=\"user.password\"\n                v-model:passwordConfirm=\"user.passwordConfirm\"\n                :is-password-required=\"isPasswordRequired\"\n              />\n            </template>\n          </div>\n        </div>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport ProfileImageInput from '@/orangehrmPimPlugin/components/ProfileImageInput';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport PasswordInput from '@/core/components/inputs/PasswordInput';\nimport {\n  maxFileSize,\n  required,\n  shouldNotExceedCharLength,\n  shouldNotLessThanCharLength,\n  validFileTypes,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdSwitchInput} from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\n\nconst employeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  empPicture: null,\n  employeeId: '',\n};\n\nconst userModel = {\n  username: '',\n  userRoleId: 2,\n  empNumber: 0,\n  status: '1',\n  password: '',\n  passwordConfirm: '',\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'profile-image-input': ProfileImageInput,\n    'full-name-input': FullNameInput,\n    'password-input': PasswordInput,\n  },\n\n  props: {\n    empId: {\n      type: String,\n      required: true,\n    },\n    allowedImageTypes: {\n      type: Array,\n      required: true,\n    },\n    isPasswordRequired: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  setup(props) {\n    const employee = ref({\n      ...employeeModel,\n      employeeId: props.empId ? props.empId : '',\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/employees',\n    );\n\n    const {createUniqueValidator} = useServerValidation(http);\n    const employeeIdUniqueValidation = createUniqueValidator(\n      'Employee',\n      'employeeId',\n      {translateKey: 'pim.employee_id_exists'},\n    );\n    const usernameUniqueValidation = createUniqueValidator('User', 'userName', {\n      matchByField: 'deleted',\n      matchByValue: 'false',\n      translateKey: 'pim.username_already_exists',\n    });\n\n    return {\n      http,\n      employee,\n      employeeIdUniqueValidation,\n      usernameUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      createLogin: false,\n      user: {...userModel},\n      empNumber: null,\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        employeeId: [\n          this.employeeIdUniqueValidation,\n          shouldNotExceedCharLength(10),\n        ],\n        empPicture: [\n          maxFileSize(1024 * 1024),\n          validFileTypes(this.allowedImageTypes),\n        ],\n        username: [\n          required,\n          this.usernameUniqueValidation,\n          shouldNotLessThanCharLength(5),\n          shouldNotExceedCharLength(40),\n        ],\n        status: [required],\n      },\n    };\n  },\n\n  computed: {\n    profilePicUrl() {\n      if (this.employee.empPicture) {\n        const file = this.employee.empPicture.base64;\n        const type = this.employee.empPicture.type;\n        const isPicture = this.allowedImageTypes.findIndex(\n          (item) => item === type,\n        );\n        return isPicture > -1 ? `data:${type};base64,${file}` : defaultPic;\n      } else {\n        return defaultPic;\n      }\n    },\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http.getAll().finally(() => {\n      this.isLoading = false;\n    });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/pim/viewEmployeeList');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.employee,\n        })\n        .then((response) => {\n          const {data} = response;\n          if (data?.data) {\n            this.empNumber = data.data.empNumber;\n          }\n          if (this.createLogin && data?.data) {\n            return this.http.request({\n              method: 'POST',\n              url: '/api/v2/admin/users',\n              data: {\n                username: this.user.username,\n                password: this.user.password,\n                status: this.user.status == '1',\n                userRoleId: this.user.userRoleId,\n                empNumber: data.data.empNumber,\n              },\n            });\n          } else {\n            return;\n          }\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.employee = {...employeeModel};\n          this.user = {...userModel};\n          if (this.empNumber) {\n            navigate(`/pim/viewPersonalDetails/empNumber/${this.empNumber}`);\n          } else {\n            this.onCancel();\n          }\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}