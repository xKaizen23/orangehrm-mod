{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport { convertFilesizeToString } from '@ohrm/core/util/helper/filesize';\nimport AddAttachmentModal from './AddAttachmentModal.vue';\nimport EditAttachmentModal from './EditAttachmentModal.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nexport default {\n  name: 'ClaimAttachment',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-attachment-modal': AddAttachmentModal,\n    'edit-attachment-modal': EditAttachmentModal\n  },\n  props: {\n    requestId: {\n      type: Number,\n      required: true\n    },\n    canEdit: {\n      type: Boolean,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/claim/requests/${props.requestId}/attachments`);\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const attachmentDataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          attachedDate: item.date ? formatDate(parseDate(item.date), jsDateFormat, {\n            locale\n          }) : '',\n          filename: item.attachment.fileName ?? '',\n          size: item.attachment.size ? convertFilesizeToString(item.attachment.size, 2) : '',\n          fileType: item.attachment.fileType ? item.attachment.fileType : '',\n          description: item.attachment.description ? item.attachment.description : '',\n          attachedByName: $tEmpName(item.attachedBy, {\n            excludePastEmpTag: false\n          })\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'filename',\n        slot: 'title',\n        cellType: 'oxd-table-cell-truncate',\n        title: this.$t('general.file_name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'description',\n        title: this.$t('general.description'),\n        cellType: 'oxd-table-cell-truncate',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'size',\n        title: this.$t('general.size'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'fileType',\n        title: this.$t('general.type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'attachedDate',\n        title: this.$t('pim.date_added'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'attachedByName',\n        title: this.$t('pim.added_by'),\n        style: {\n          flex: 1\n        }\n      }],\n      checkedItems: [],\n      editModalState: null,\n      showAddAttachmentModal: false,\n      showEditAttachmentModal: false\n    };\n  },\n  computed: {\n    tableHeaders() {\n      let computedHeaders = this.headers;\n      if (computedHeaders.length > 6) {\n        computedHeaders.pop();\n      }\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {}\n      };\n      if (this.canEdit) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        };\n      }\n      headerActions.cellConfig.download = {\n        onClick: this.onClickDownload,\n        props: {\n          name: 'download'\n        }\n      };\n      computedHeaders.push(headerActions);\n      return computedHeaders;\n    }\n  },\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showAddAttachmentModal = true;\n      this.showEditAttachmentModal = false;\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onClickEdit(item) {\n      this.showAddAttachmentModal = false;\n      this.editModalState = item;\n      this.showEditAttachmentModal = true;\n    },\n    onCloseAddAttachmentModal() {\n      this.showAddAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    onCloseEditAttachmentModal() {\n      this.showEditAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    async reloadAttachments() {\n      await this.execQuery();\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/claim/requests/${this.requestId}/attachId/${item.id}`;\n      window.open(downUrl, '_blank');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","DeleteConfirmationDialog","convertFilesizeToString","AddAttachmentModal","EditAttachmentModal","useEmployeeNameTranslate","useLocale","formatDate","parseDate","useDateFormat","name","components","props","requestId","type","Number","required","canEdit","Boolean","allowedFileTypes","Array","maxFileSize","setup","locale","jsDateFormat","http","window","appGlobal","baseUrl","$tEmpName","attachmentDataNormalizer","data","map","item","id","attachedDate","date","filename","attachment","fileName","size","fileType","description","attachedByName","attachedBy","excludePastEmpTag","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","slot","cellType","title","$t","style","flex","checkedItems","editModalState","showAddAttachmentModal","showEditAttachmentModal","computed","tableHeaders","computedHeaders","length","pop","headerActions","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","download","onClickDownload","push","methods","resetDataTable","onClickAdd","onClickDeleteSelected","ids","forEach","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","onCloseAddAttachmentModal","reloadAttachments","onCloseEditAttachmentModal","downUrl","open"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\ClaimAttachment.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-divider class=\"orangehrm-horizontal-margin\" />\n  <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n    <div class=\"orangehrm-action-header\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.attachments') }}\n      </oxd-text>\n      <oxd-button\n        v-if=\"canEdit\"\n        :label=\"$t('general.add')\"\n        icon-name=\"plus\"\n        display-type=\"text\"\n        @click=\"onClickAdd\"\n      />\n    </div>\n  </div>\n  <table-header\n    :total=\"total\"\n    :loading=\"isLoading\"\n    :selected=\"checkedItems.length\"\n    @delete=\"onClickDeleteSelected\"\n  />\n  <div class=\"orangehrm-container\">\n    <oxd-card-table\n      v-model:selected=\"checkedItems\"\n      class=\"orangehrm-card-table\"\n      :items=\"items.data\"\n      :headers=\"tableHeaders\"\n      :selectable=\"canEdit\"\n      :clickable=\"false\"\n      :loading=\"isLoading\"\n      row-decorator=\"oxd-table-decorator-card\"\n    />\n  </div>\n  <add-attachment-modal\n    v-if=\"showAddAttachmentModal\"\n    :request-id=\"requestId\"\n    :allowed-file-types=\"allowedFileTypes\"\n    :max-file-size=\"maxFileSize\"\n    @close=\"onCloseAddAttachmentModal\"\n  ></add-attachment-modal>\n  <edit-attachment-modal\n    v-if=\"showEditAttachmentModal\"\n    :request-id=\"requestId\"\n    :allowed-file-types=\"allowedFileTypes\"\n    :max-file-size=\"maxFileSize\"\n    :data=\"editModalState\"\n    @close=\"onCloseEditAttachmentModal\"\n  ></edit-attachment-modal>\n  <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {convertFilesizeToString} from '@ohrm/core/util/helper/filesize';\nimport AddAttachmentModal from './AddAttachmentModal.vue';\nimport EditAttachmentModal from './EditAttachmentModal.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nexport default {\n  name: 'ClaimAttachment',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-attachment-modal': AddAttachmentModal,\n    'edit-attachment-modal': EditAttachmentModal,\n  },\n  props: {\n    requestId: {\n      type: Number,\n      required: true,\n    },\n    canEdit: {\n      type: Boolean,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/attachments`,\n    );\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const attachmentDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          attachedDate: item.date\n            ? formatDate(parseDate(item.date), jsDateFormat, {locale})\n            : '',\n          filename: item.attachment.fileName ?? '',\n          size: item.attachment.size\n            ? convertFilesizeToString(item.attachment.size, 2)\n            : '',\n          fileType: item.attachment.fileType ? item.attachment.fileType : '',\n          description: item.attachment.description\n            ? item.attachment.description\n            : '',\n          attachedByName: $tEmpName(item.attachedBy, {\n            excludePastEmpTag: false,\n          }),\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'filename',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('general.file_name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'description',\n          title: this.$t('general.description'),\n          cellType: 'oxd-table-cell-truncate',\n          style: {flex: 1},\n        },\n        {name: 'size', title: this.$t('general.size'), style: {flex: 1}},\n        {name: 'fileType', title: this.$t('general.type'), style: {flex: 1}},\n        {\n          name: 'attachedDate',\n          title: this.$t('pim.date_added'),\n          style: {flex: 1},\n        },\n        {\n          name: 'attachedByName',\n          title: this.$t('pim.added_by'),\n          style: {flex: 1},\n        },\n      ],\n      checkedItems: [],\n      editModalState: null,\n      showAddAttachmentModal: false,\n      showEditAttachmentModal: false,\n    };\n  },\n\n  computed: {\n    tableHeaders() {\n      let computedHeaders = this.headers;\n      if (computedHeaders.length > 6) {\n        computedHeaders.pop();\n      }\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.canEdit) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n      }\n      headerActions.cellConfig.download = {\n        onClick: this.onClickDownload,\n        props: {\n          name: 'download',\n        },\n      };\n      computedHeaders.push(headerActions);\n\n      return computedHeaders;\n    },\n  },\n\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showAddAttachmentModal = true;\n      this.showEditAttachmentModal = false;\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onClickEdit(item) {\n      this.showAddAttachmentModal = false;\n      this.editModalState = item;\n      this.showEditAttachmentModal = true;\n    },\n    onCloseAddAttachmentModal() {\n      this.showAddAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    onCloseEditAttachmentModal() {\n      this.showEditAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    async reloadAttachments() {\n      await this.execQuery();\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/claim/requests/${this.requestId}/attachId/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.oxd-divider {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.orangehrm-attachment {\n  border-bottom-right-radius: 1.2rem;\n  overflow: hidden;\n}\n.orangehrm-action {\n  &-header {\n    display: flex;\n    overflow-wrap: break-word;\n    align-items: center;\n    button {\n      margin-left: 1rem;\n      white-space: nowrap;\n    }\n  }\n}\n.orangehrm-button-margin {\n  margin: 0.25rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}