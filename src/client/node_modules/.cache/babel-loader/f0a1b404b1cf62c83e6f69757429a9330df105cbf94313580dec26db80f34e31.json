{"ast":null,"code":"import { computed, ref } from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown.vue';\nimport HiringManagerDropdown from '@/orangehrmRecruitmentPlugin/components/HiringManagerDropdown';\nconst defaultFilters = {\n  jobTitleId: null,\n  hiringManagerId: null,\n  vacancyId: null,\n  status: null\n};\nconst defaultSortOrder = {\n  'vacancy.name': 'ASC',\n  'vacancy.status': 'DEFAULT',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'hiringManager.lastName': 'DEFAULT'\n};\nexport default {\n  name: 'ViewJobVacancy',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-dropdown': VacancyDropdown,\n    'hiring-manager-dropdown': HiringManagerDropdown\n  },\n  setup() {\n    const {\n      $t\n    } = usei18n();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        vacancyId: filters.value.vacancyId?.id,\n        jobTitleId: filters.value.jobTitleId?.id,\n        hiringManagerId: filters.value.hiringManagerId?.id,\n        status: filters.value.status?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        model: 'detailed'\n      };\n    });\n    const userdataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          vacancy: item.name,\n          jobTitle: item.jobTitle?.isDeleted ? item.jobTitle.title + $t('general.deleted') : item.jobTitle?.title,\n          hiringManager: item.hiringManager?.id ? $tEmpName(item.hiringManager) : $t('general.deleted'),\n          status: item.status ? $t('general.active') : $t('general.closed')\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/vacancies');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: userdataNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'vacancy',\n        slot: 'title',\n        title: this.$t('recruitment.vacancy'),\n        sortField: 'vacancy.name',\n        style: {\n          flex: 3\n        }\n      }, {\n        name: 'jobTitle',\n        title: this.$t('general.job_title'),\n        sortField: 'jobTitle.jobTitleName',\n        style: {\n          flex: 3\n        }\n      }, {\n        name: 'hiringManager',\n        title: this.$t('recruitment.hiring_manager'),\n        sortField: 'hiringManager.lastName',\n        style: {\n          flex: 3\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        sortField: 'vacancy.status',\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 2\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      statusOptions: [{\n        id: true,\n        param: 'active',\n        label: this.$t('general.active')\n      }, {\n        id: false,\n        param: 'closed',\n        label: this.$t('general.closed')\n      }],\n      vacancies: [],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/recruitment/addJobVacancy');\n    },\n    onClickEdit(item) {\n      navigate('/recruitment/addJobVacancy/{id}', {\n        id: item.id\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteData([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteData(ids);\n        }\n      });\n    },\n    async deleteData(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {\n        ...defaultFilters\n      };\n      this.filterItems();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","usePaginate","navigate","APIService","useSort","usei18n","useEmployeeNameTranslate","JobtitleDropdown","DeleteConfirmationDialog","VacancyDropdown","HiringManagerDropdown","defaultFilters","jobTitleId","hiringManagerId","vacancyId","status","defaultSortOrder","name","components","setup","$t","$tEmpName","filters","sortDefinition","sortField","sortOrder","onSort","serializedFilters","value","id","model","userdataNormalizer","data","map","item","vacancy","jobTitle","isDeleted","title","hiringManager","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","headers","slot","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","props","edit","onClickEdit","statusOptions","param","label","vacancies","checkedItems","methods","onClickAdd","$refs","deleteDialog","showDialog","then","confirmation","deleteData","onClickDeleteSelected","ids","index","Array","deleteAll","$toast","deleteSuccess","resetDataTable","filterItems","onClickReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewJobVacancy.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('general.vacancies')\">\n      <oxd-form @submit-valid=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <jobtitle-dropdown v-model=\"filters.jobTitleId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <vacancy-dropdown\n                v-model=\"filters.vacancyId\"\n                :label=\"$t('recruitment.vacancy')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <hiring-manager-dropdown v-model=\"filters.hiringManagerId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.status\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :clear=\"false\"\n                :options=\"statusOptions\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :loading=\"isLoading\"\n        :total=\"total\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n          class=\"orangehrm-vacancy-list\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown.vue';\nimport HiringManagerDropdown from '@/orangehrmRecruitmentPlugin/components/HiringManagerDropdown';\n\nconst defaultFilters = {\n  jobTitleId: null,\n  hiringManagerId: null,\n  vacancyId: null,\n  status: null,\n};\nconst defaultSortOrder = {\n  'vacancy.name': 'ASC',\n  'vacancy.status': 'DEFAULT',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'hiringManager.lastName': 'DEFAULT',\n};\nexport default {\n  name: 'ViewJobVacancy',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-dropdown': VacancyDropdown,\n    'hiring-manager-dropdown': HiringManagerDropdown,\n  },\n\n  setup() {\n    const {$t} = usei18n();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const filters = ref({...defaultFilters});\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        vacancyId: filters.value.vacancyId?.id,\n        jobTitleId: filters.value.jobTitleId?.id,\n        hiringManagerId: filters.value.hiringManagerId?.id,\n        status: filters.value.status?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        model: 'detailed',\n      };\n    });\n\n    const userdataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          vacancy: item.name,\n          jobTitle: item.jobTitle?.isDeleted\n            ? item.jobTitle.title + $t('general.deleted')\n            : item.jobTitle?.title,\n\n          hiringManager: item.hiringManager?.id\n            ? $tEmpName(item.hiringManager)\n            : $t('general.deleted'),\n          status: item.status ? $t('general.active') : $t('general.closed'),\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/vacancies',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: userdataNormalizer,\n    });\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'vacancy',\n          slot: 'title',\n          title: this.$t('recruitment.vacancy'),\n          sortField: 'vacancy.name',\n          style: {flex: 3},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          sortField: 'jobTitle.jobTitleName',\n          style: {flex: 3},\n        },\n        {\n          name: 'hiringManager',\n          title: this.$t('recruitment.hiring_manager'),\n          sortField: 'hiringManager.lastName',\n          style: {flex: 3},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          sortField: 'vacancy.status',\n          style: {flex: 2},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 2},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      statusOptions: [\n        {id: true, param: 'active', label: this.$t('general.active')},\n        {id: false, param: 'closed', label: this.$t('general.closed')},\n      ],\n      vacancies: [],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/recruitment/addJobVacancy');\n    },\n    onClickEdit(item) {\n      navigate('/recruitment/addJobVacancy/{id}', {id: item.id});\n    },\n\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteData([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteData(ids);\n        }\n      });\n    },\n\n    async deleteData(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n\n<style src=\"./vacancy.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}