{"ast":null,"code":"import { OxdDialog } from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeaveBalanceInsufficientModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    meta: {\n      type: Object,\n      default: () => null\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    return {\n      locale,\n      jsDateFormat\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        title: this.$t('leave.leave_period'),\n        name: 'period',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('general.date'),\n        name: 'date',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('leave.available_balance'),\n        name: 'balance',\n        style: {\n          flex: 1\n        }\n      }]\n    };\n  },\n  computed: {\n    items() {\n      if (this.data.length > 0) {\n        const leavePeriods = this.data.map(item => item.period);\n        return leavePeriods.flatMap((period, index) => {\n          return this.data[index].leaves.map(leave => {\n            const startDate = formatDate(parseDate(period.startDate), this.jsDateFormat, {\n              locale: this.locale\n            });\n            const endDate = formatDate(parseDate(period.endDate), this.jsDateFormat, {\n              locale: this.locale\n            });\n            const leaveDate = formatDate(parseDate(leave.date), this.jsDateFormat, {\n              locale: this.locale\n            });\n            return {\n              period: `${startDate} - ${endDate}`,\n              date: leaveDate,\n              balance: leave.status?.name || leave.balance.toFixed(2)\n            };\n          });\n        });\n      }\n      return [];\n    },\n    leaveType() {\n      return this.meta?.leaveType?.name;\n    },\n    employeeName() {\n      const employee = this.meta?.employee;\n      if (employee) {\n        return `${employee.firstName} ${employee.lastName}\n          ${employee.terminationId ? this.$t('general.past_employee') : ''}`;\n      }\n      return '';\n    },\n    leaveBalance() {\n      return this.data[0]?.balance ? `${parseFloat(this.data[0].balance.balance).toFixed(2)} Day(s)` : '0.00 Day(s)';\n    }\n  },\n  methods: {\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["OxdDialog","useDateFormat","formatDate","parseDate","useLocale","name","components","props","data","type","Array","required","meta","Object","default","emits","setup","jsDateFormat","locale","headers","title","$t","style","flex","computed","items","length","leavePeriods","map","item","period","flatMap","index","leaves","leave","startDate","endDate","leaveDate","date","balance","status","toFixed","leaveType","employeeName","employee","firstName","lastName","terminationId","leaveBalance","parseFloat","methods","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveBalanceInsufficientModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog\n    :gutters=\"false\"\n    class=\"orangehrm-dialog-modal\"\n    @update:show=\"onCancel\"\n  >\n    <div class=\"orangehrm-dialog-header-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('leave.insufficient_leave_balance') }}\n      </oxd-text>\n    </div>\n    <oxd-divider\n      class=\"orangehrm-dialog-horizontal-margin orangehrm-clear-margins\"\n    />\n    <div\n      class=\"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding\"\n    >\n      <oxd-grid :cols=\"3\">\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('general.employee_name')\">\n            <oxd-text class=\"orangehrm-leave-balance-text\" tag=\"p\">\n              {{ employeeName }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('leave.leave_type')\">\n            <oxd-text class=\"orangehrm-leave-balance-text\" tag=\"p\">\n              {{ leaveType }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('leave.balance')\">\n            <oxd-text class=\"orangehrm-leave-balance-text\" tag=\"p\">\n              {{ leaveBalance }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n      </oxd-grid>\n    </div>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :clickable=\"false\"\n        class=\"orangehrm-horizontal-padding\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div\n      class=\"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding\"\n    >\n      <oxd-form-actions>\n        <oxd-button\n          type=\"submit\"\n          display-type=\"secondary\"\n          :label=\"$t('general.ok')\"\n          @click=\"onCancel\"\n        />\n      </oxd-form-actions>\n    </div>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {OxdDialog} from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  name: 'LeaveBalanceInsufficientModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    meta: {\n      type: Object,\n      default: () => null,\n    },\n  },\n  emits: ['close'],\n  setup() {\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    return {\n      locale,\n      jsDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          title: this.$t('leave.leave_period'),\n          name: 'period',\n          style: {flex: 1},\n        },\n        {\n          title: this.$t('general.date'),\n          name: 'date',\n          style: {flex: 1},\n        },\n        {\n          title: this.$t('leave.available_balance'),\n          name: 'balance',\n          style: {flex: 1},\n        },\n      ],\n    };\n  },\n  computed: {\n    items() {\n      if (this.data.length > 0) {\n        const leavePeriods = this.data.map((item) => item.period);\n        return leavePeriods.flatMap((period, index) => {\n          return this.data[index].leaves.map((leave) => {\n            const startDate = formatDate(\n              parseDate(period.startDate),\n              this.jsDateFormat,\n              {locale: this.locale},\n            );\n            const endDate = formatDate(\n              parseDate(period.endDate),\n              this.jsDateFormat,\n              {locale: this.locale},\n            );\n            const leaveDate = formatDate(\n              parseDate(leave.date),\n              this.jsDateFormat,\n              {locale: this.locale},\n            );\n\n            return {\n              period: `${startDate} - ${endDate}`,\n              date: leaveDate,\n              balance: leave.status?.name || leave.balance.toFixed(2),\n            };\n          });\n        });\n      }\n      return [];\n    },\n    leaveType() {\n      return this.meta?.leaveType?.name;\n    },\n    employeeName() {\n      const employee = this.meta?.employee;\n      if (employee) {\n        return `${employee.firstName} ${employee.lastName}\n          ${employee.terminationId ? this.$t('general.past_employee') : ''}`;\n      }\n      return '';\n    },\n    leaveBalance() {\n      return this.data[0]?.balance\n        ? `${parseFloat(this.data[0].balance.balance).toFixed(2)} Day(s)`\n        : '0.00 Day(s)';\n    },\n  },\n  methods: {\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style src=\"./leave-balance-modal.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}