{"ast":null,"code":"import { computed, reactive, toRefs } from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { OxdIcon } from '@ohrm/oxd';\nexport default {\n  name: 'PostBody',\n  components: {\n    'oxd-icon': OxdIcon,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame\n  },\n  props: {\n    post: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close', 'selectPhoto'],\n  setup(props, context) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const state = reactive({\n      readMore: new String(props.post?.text).length < 500\n    });\n    const postClasses = computed(() => ({\n      'orangehrm-buzz-post-body-text': true,\n      '--truncate': state.readMore === false\n    }));\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n    const onClickPicture = index => {\n      context.emit('selectPhoto', index);\n    };\n    const originalPost = computed(() => {\n      if (props.post.originalPost === null) return null;\n      const {\n        createdDate,\n        createdTime\n      } = props.post.originalPost;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return {\n        text: props.post.originalPost.text,\n        employee: $tEmpName(props.post.originalPost.employee, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale\n        })\n      };\n    });\n    return {\n      postClasses,\n      originalPost,\n      onClickPicture,\n      onClickReadMore,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"AAwEA,SAAQA,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,QAAO,KAAK;AAC9C,OAAOC,SAAQ,MAAO,kCAAkC;AACxD,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAChE,OAAOC,aAAY,MAAO,sCAAsC;AAChE,OAAOC,UAAS,MAAO,6CAA6C;AACpE,OAAOC,UAAS,MAAO,6CAA6C;AACpE,OAAOC,wBAAuB,MAAO,iDAAiD;AACtF,SAAQC,OAAO,QAAO,WAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,UAAU,EAAE;IACV,UAAU,EAAEF,OAAO;IACnB,aAAa,EAAEH,UAAU;IACzB,aAAa,EAAEC;EACjB,CAAC;EAEDK,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;EAE/BC,KAAK,CAACN,KAAK,EAAEO,OAAO,EAAE;IACpB,MAAM;MAACC;IAAM,IAAIlB,SAAS,EAAE;IAC5B,MAAM;MAACmB,YAAY;MAAEC;IAAY,IAAIjB,aAAa,EAAE;IACpD,MAAM;MAACkB;IAAS,IAAIf,wBAAwB,EAAE;IAC9C,MAAMgB,KAAI,GAAIxB,QAAQ,CAAC;MACrByB,QAAQ,EAAE,IAAIC,MAAM,CAACd,KAAK,CAACC,IAAI,EAAEc,IAAI,CAAC,CAACC,MAAK,GAAI;IAClD,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAI9B,QAAQ,CAAC,OAAO;MAClC,+BAA+B,EAAE,IAAI;MACrC,YAAY,EAAEyB,KAAK,CAACC,QAAO,KAAM;IACnC,CAAC,CAAC,CAAC;IAEH,MAAMK,eAAc,GAAI,MAAM;MAC5BN,KAAK,CAACC,QAAO,GAAI,CAACD,KAAK,CAACC,QAAQ;IAClC,CAAC;IAED,MAAMM,cAAa,GAAKC,KAAK,IAAK;MAChCb,OAAO,CAACc,IAAI,CAAC,aAAa,EAAED,KAAK,CAAC;IACpC,CAAC;IAED,MAAME,YAAW,GAAInC,QAAQ,CAAC,MAAM;MAClC,IAAIa,KAAK,CAACC,IAAI,CAACqB,YAAW,KAAM,IAAI,EAAE,OAAO,IAAI;MACjD,MAAM;QAACC,WAAW;QAAEC;MAAW,IAAIxB,KAAK,CAACC,IAAI,CAACqB,YAAY;MAE1D,MAAMG,OAAM,GAAIjC,SAAS,CACtB,GAAE+B,WAAW,IAAIC,WAAW,SAAS,EACtC,sBAAsB,CACvB;MAED,OAAO;QACLT,IAAI,EAAEf,KAAK,CAACC,IAAI,CAACqB,YAAY,CAACP,IAAI;QAClCW,QAAQ,EAAEf,SAAS,CAACX,KAAK,CAACC,IAAI,CAACqB,YAAY,CAACI,QAAQ,EAAE;UACpDC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFC,QAAQ,EAAEtC,UAAU,CAACkC,OAAO,EAAG,GAAEhB,YAAY,IAAIC,YAAa,EAAC,EAAE;UAC/DF;QACF,CAAC;MACH,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;MACLS,WAAW;MACXK,YAAY;MACZH,cAAc;MACdD,eAAe;MACf,GAAG7B,MAAM,CAACuB,KAAK;IACjB,CAAC;EACH;AACF,CAAC","names":["computed","reactive","toRefs","useLocale","formatDate","parseDate","useDateFormat","PhotoFrame","VideoFrame","useEmployeeNameTranslate","OxdIcon","name","components","props","post","type","Object","required","emits","setup","context","locale","jsDateFormat","jsTimeFormat","$tEmpName","state","readMore","String","text","length","postClasses","onClickReadMore","onClickPicture","index","emit","originalPost","createdDate","createdTime","utcDate","employee","includeMiddle","excludePastEmpTag","dateTime"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostBody.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-post-body\">\n    <oxd-text v-if=\"post.text\" tag=\"p\" :class=\"postClasses\">\n      {{ post.text }}\n    </oxd-text>\n    <oxd-text\n      v-show=\"!readMore\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-post-body-readmore\"\n      @click=\"onClickReadMore\"\n    >\n      {{ $t('buzz.read_more') }}\n    </oxd-text>\n    <br v-if=\"post.text && (post.type === 'video' || post.type === 'photo')\" />\n    <video-frame v-if=\"post.type === 'video'\" :video-src=\"post.video.link\">\n    </video-frame>\n    <photo-frame v-if=\"post.type === 'photo'\" :media=\"post.photoIds\">\n      <template #content=\"{index}\">\n        <div\n          v-if=\"index === 3 && post.photoIds.length === 5\"\n          class=\"orangehrm-buzz-post-body-picture --more\"\n          @click=\"onClickPicture(index)\"\n        >\n          <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-more\">+1</oxd-text>\n          <oxd-icon class=\"orangehrm-buzz-post-body-more\" name=\"images\" />\n        </div>\n        <div\n          v-else\n          class=\"orangehrm-buzz-post-body-picture\"\n          @click=\"onClickPicture(index)\"\n        ></div>\n      </template>\n    </photo-frame>\n    <template v-if=\"originalPost\">\n      <br v-if=\"post.text || post.type === 'video' || post.type === 'photo'\" />\n      <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-employee\">\n        {{ originalPost.employee }}\n      </oxd-text>\n      <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-date\">\n        {{ originalPost.dateTime }}\n      </oxd-text>\n      <oxd-text\n        v-if=\"originalPost.text\"\n        tag=\"p\"\n        class=\"orangehrm-buzz-post-body-original-text\"\n      >\n        {{ originalPost.text }}\n      </oxd-text>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'PostBody',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close', 'selectPhoto'],\n\n  setup(props, context) {\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const state = reactive({\n      readMore: new String(props.post?.text).length < 500,\n    });\n\n    const postClasses = computed(() => ({\n      'orangehrm-buzz-post-body-text': true,\n      '--truncate': state.readMore === false,\n    }));\n\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n\n    const onClickPicture = (index) => {\n      context.emit('selectPhoto', index);\n    };\n\n    const originalPost = computed(() => {\n      if (props.post.originalPost === null) return null;\n      const {createdDate, createdTime} = props.post.originalPost;\n\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return {\n        text: props.post.originalPost.text,\n        employee: $tEmpName(props.post.originalPost.employee, {\n          includeMiddle: true,\n          excludePastEmpTag: false,\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale,\n        }),\n      };\n    });\n\n    return {\n      postClasses,\n      originalPost,\n      onClickPicture,\n      onClickReadMore,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style src=\"./post-body.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}