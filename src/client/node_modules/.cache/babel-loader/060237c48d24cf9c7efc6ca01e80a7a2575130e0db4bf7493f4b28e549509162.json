{"ast":null,"code":"import { navigate } from '@/core/util/helper/navigation';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport SupervisorAutoComplete from '@/orangehrmPerformancePlugin/components/SupervisorAutoComplete';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate } from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst reviewModel = {\n  employee: null,\n  supervisorReviewer: null,\n  startDate: null,\n  endDate: null,\n  dueDate: null\n};\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'supervisor-autocomplete': SupervisorAutoComplete\n  },\n  props: {\n    reviewId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      formRef,\n      invalid,\n      validate\n    } = useForm();\n    const {\n      userDateFormat\n    } = useDateFormat();\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/manage/reviews');\n    http.setIgnorePath('/api/v2/performance/manage/reviews/[0-9]+');\n    return {\n      formRef,\n      invalid,\n      validate,\n      http,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      review: {\n        ...reviewModel\n      },\n      rules: {\n        employee: [required, validSelection],\n        supervisorReviewer: [required, validSelection],\n        startDate: [required, validDateFormat(this.userDateFormat), startDateShouldBeBeforeEndDate(() => this.review.endDate, this.$t('general.review_period_start_date_should_be_before_end_date'))],\n        endDate: [required, validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.review.startDate, this.$t('performance.review_period_end_date_should_be_after_start_date'))],\n        dueDate: [required, validDateFormat(), endDateShouldBeAfterStartDate(() => this.review.endDate, this.$t('performance.due_date_should_be_after_review_period_end_date'))]\n      }\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.reviewId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.review.employee = data.employee ? {\n        id: data.employee.empNumber,\n        label: `${data.employee.firstName} ${data.employee.middleName ? data.employee.middleName : ''} ${data.employee.lastName}`,\n        isPastEmployee: data.employee.terminationId ? true : false\n      } : null;\n      this.review.supervisorReviewer = data.reviewer.employee ? {\n        id: data.reviewer.employee.empNumber,\n        label: `${data.reviewer.employee.firstName} ${data.reviewer.employee.middleName ? data.reviewer.employee.middleName : ''} ${data.reviewer.employee.lastName}`,\n        isPastEmployee: data.reviewer.employee.terminationId ? true : false\n      } : null;\n      this.review.startDate = data.reviewPeriodStart;\n      this.review.endDate = data.reviewPeriodEnd;\n      this.review.dueDate = data.dueDate;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/searchPerformanceReview');\n    },\n    onSave(activate = false) {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        if (this.review.supervisorReviewer.isPastEmployee) {\n          return this.$toast.warn({\n            title: this.$t('general.warning'),\n            message: this.$t('performance.cannot_add_a_past_employee_as_a_reviewer')\n          });\n        }\n        this.isLoading = true;\n        this.http.update(this.reviewId, {\n          empNumber: this.review.employee.id,\n          reviewerEmpNumber: this.review.supervisorReviewer.id,\n          startDate: this.review.startDate,\n          endDate: this.review.endDate,\n          dueDate: this.review.dueDate,\n          activate\n        }).then(() => {\n          if (activate === true) {\n            return this.$toast.success({\n              title: this.$t('general.success'),\n              message: this.$t('general.successfully_activated')\n            });\n          } else {\n            return this.$toast.updateSuccess();\n          }\n        }).then(() => {\n          this.onCancel();\n        }).catch(response => {\n          return this.$toast.warn({\n            title: this.$t('general.warning'),\n            message: response?.data.error.message\n          });\n        }).finally(() => {\n          this.isLoading = false;\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","EmployeeAutocomplete","SupervisorAutoComplete","APIService","required","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","useForm","useDateFormat","reviewModel","employee","supervisorReviewer","startDate","endDate","dueDate","components","props","reviewId","type","Number","setup","formRef","invalid","validate","userDateFormat","http","window","appGlobal","baseUrl","setIgnorePath","data","isLoading","review","rules","$t","created","get","then","response","id","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId","reviewer","reviewPeriodStart","reviewPeriodEnd","finally","methods","onCancel","onSave","activate","$toast","warn","title","message","update","reviewerEmpNumber","success","updateSuccess","catch","error"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\EditReview.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\" tag=\"h6\">\n        {{ $t('performance.edit_review') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"review.employee\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <supervisor-autocomplete\n                v-model=\"review.supervisorReviewer\"\n                :rules=\"rules.supervisorReviewer\"\n                required\n                :subordinate=\"review.employee\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.startDate\"\n                :label=\"$t('performance.review_period_start_date')\"\n                :rules=\"rules.startDate\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.endDate\"\n                :label=\"$t('performance.review_period_end_date')\"\n                :rules=\"rules.endDate\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.dueDate\"\n                :label=\"$t('performance.due_date')\"\n                :rules=\"rules.dueDate\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <div class=\"orangehrm-button-row\">\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.cancel')\"\n              type=\"button\"\n              @click=\"onCancel\"\n            />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.save')\"\n              type=\"submit\"\n              @click=\"onSave(false)\"\n            />\n            <oxd-button\n              display-type=\"secondary\"\n              :label=\"$t('performance.activate')\"\n              type=\"button\"\n              @click=\"onSave(true)\"\n            />\n          </div>\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport SupervisorAutoComplete from '@/orangehrmPerformancePlugin/components/SupervisorAutoComplete';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst reviewModel = {\n  employee: null,\n  supervisorReviewer: null,\n  startDate: null,\n  endDate: null,\n  dueDate: null,\n};\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'supervisor-autocomplete': SupervisorAutoComplete,\n  },\n  props: {\n    reviewId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup() {\n    const {formRef, invalid, validate} = useForm();\n    const {userDateFormat} = useDateFormat();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/manage/reviews',\n    );\n    http.setIgnorePath('/api/v2/performance/manage/reviews/[0-9]+');\n    return {\n      formRef,\n      invalid,\n      validate,\n      http,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      review: {...reviewModel},\n      rules: {\n        employee: [required, validSelection],\n        supervisorReviewer: [required, validSelection],\n        startDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          startDateShouldBeBeforeEndDate(\n            () => this.review.endDate,\n            this.$t(\n              'general.review_period_start_date_should_be_before_end_date',\n            ),\n          ),\n        ],\n        endDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.review.startDate,\n            this.$t(\n              'performance.review_period_end_date_should_be_after_start_date',\n            ),\n          ),\n        ],\n        dueDate: [\n          required,\n          validDateFormat(),\n          endDateShouldBeAfterStartDate(\n            () => this.review.endDate,\n            this.$t(\n              'performance.due_date_should_be_after_review_period_end_date',\n            ),\n          ),\n        ],\n      },\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.reviewId)\n      .then((response) => {\n        const {data} = response.data;\n        this.review.employee = data.employee\n          ? {\n              id: data.employee.empNumber,\n              label: `${data.employee.firstName} ${\n                data.employee.middleName ? data.employee.middleName : ''\n              } ${data.employee.lastName}`,\n              isPastEmployee: data.employee.terminationId ? true : false,\n            }\n          : null;\n        this.review.supervisorReviewer = data.reviewer.employee\n          ? {\n              id: data.reviewer.employee.empNumber,\n              label: `${data.reviewer.employee.firstName} ${\n                data.reviewer.employee.middleName\n                  ? data.reviewer.employee.middleName\n                  : ''\n              } ${data.reviewer.employee.lastName}`,\n              isPastEmployee: data.reviewer.employee.terminationId\n                ? true\n                : false,\n            }\n          : null;\n        this.review.startDate = data.reviewPeriodStart;\n        this.review.endDate = data.reviewPeriodEnd;\n        this.review.dueDate = data.dueDate;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/searchPerformanceReview');\n    },\n    onSave(activate = false) {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        if (this.review.supervisorReviewer.isPastEmployee) {\n          return this.$toast.warn({\n            title: this.$t('general.warning'),\n            message: this.$t(\n              'performance.cannot_add_a_past_employee_as_a_reviewer',\n            ),\n          });\n        }\n        this.isLoading = true;\n        this.http\n          .update(this.reviewId, {\n            empNumber: this.review.employee.id,\n            reviewerEmpNumber: this.review.supervisorReviewer.id,\n            startDate: this.review.startDate,\n            endDate: this.review.endDate,\n            dueDate: this.review.dueDate,\n            activate,\n          })\n          .then(() => {\n            if (activate === true) {\n              return this.$toast.success({\n                title: this.$t('general.success'),\n                message: this.$t('general.successfully_activated'),\n              });\n            } else {\n              return this.$toast.updateSuccess();\n            }\n          })\n          .then(() => {\n            this.onCancel();\n          })\n          .catch((response) => {\n            return this.$toast.warn({\n              title: this.$t('general.warning'),\n              message: response?.data.error.message,\n            });\n          })\n          .finally(() => {\n            this.isLoading = false;\n          });\n      });\n    },\n  },\n};\n</script>\n<style src=\"./review.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}