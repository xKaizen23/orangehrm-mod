{"ast":null,"code":"import { computed, ref } from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport { maxFileSize, validFileTypes } from '@/core/util/validation/rules';\nimport PhotoUploadArea from '@/orangehrmBuzzPlugin/components/PhotoUploadArea';\nimport { OxdAlert } from '@ohrm/oxd';\nexport default {\n  name: 'PhotoInput',\n  components: {\n    'oxd-alert': OxdAlert,\n    'photo-frame': PhotoFrame,\n    'photo-upload-area': PhotoUploadArea\n  },\n  props: {\n    modelValue: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    const {\n      $t\n    } = usei18n();\n    const validationMessage = ref('');\n    const fileTypeValidator = validFileTypes(['image/gif', 'image/jpeg', 'image/jpg', 'image/pjpeg', 'image/png', 'image/x-png']);\n    const fileSizeValidator = maxFileSize(1024 * 1024 * 2);\n    const onFileChange = $file => {\n      if (!$file) return;\n      validationMessage.value = '';\n      if (fileSizeValidator($file) !== true) {\n        return validationMessage.value = $t('buzz.file_size_validation_message');\n      }\n      if (fileTypeValidator($file) !== true) {\n        return validationMessage.value = $t('buzz.file_type_validation_message');\n      }\n      context.emit('update:modelValue', [...(props.modelValue || []), $file]);\n    };\n    const onClickRemove = index => {\n      validationMessage.value = '';\n      context.emit('update:modelValue', (props.modelValue || []).filter((_, i) => index !== i));\n    };\n    const onClickCloseAlert = () => {\n      validationMessage.value = '';\n    };\n    const showUploadArea = computed(() => Array.isArray(props.modelValue) && props.modelValue.length < 1);\n    const showUploadButton = computed(() => Array.isArray(props.modelValue) && props.modelValue.length > 0 && props.modelValue.length < 5);\n    return {\n      onFileChange,\n      onClickRemove,\n      showUploadArea,\n      showUploadButton,\n      onClickCloseAlert,\n      validationMessage\n    };\n  }\n};","map":{"version":3,"mappings":"AA0DA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,OAAOC,OAAM,MAAO,gCAAgC;AACpD,OAAOC,UAAS,MAAO,6CAA6C;AACpE,SAAQC,WAAW,EAAEC,cAAc,QAAO,8BAA8B;AACxE,OAAOC,eAAc,MAAO,kDAAkD;AAC9E,SAAQC,QAAQ,QAAO,WAAW;AAElC,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACV,WAAW,EAAEF,QAAQ;IACrB,aAAa,EAAEJ,UAAU;IACzB,mBAAmB,EAAEG;EACvB,CAAC;EAEDI,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAE5BC,KAAK,CAACN,KAAK,EAAEO,OAAO,EAAE;IACpB,MAAM;MAACC;IAAE,IAAIhB,OAAO,EAAE;IACtB,MAAMiB,iBAAgB,GAAIlB,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMmB,iBAAgB,GAAIf,cAAc,CAAC,CACvC,WAAW,EACX,YAAY,EACZ,WAAW,EACX,aAAa,EACb,WAAW,EACX,aAAa,CACd,CAAC;IACF,MAAMgB,iBAAgB,GAAIjB,WAAW,CAAC,IAAG,GAAI,IAAG,GAAI,CAAC,CAAC;IAEtD,MAAMkB,YAAW,GAAKC,KAAK,IAAK;MAC9B,IAAI,CAACA,KAAK,EAAE;MACZJ,iBAAiB,CAACK,KAAI,GAAI,EAAE;MAC5B,IAAIH,iBAAiB,CAACE,KAAK,MAAM,IAAI,EAAE;QACrC,OAAQJ,iBAAiB,CAACK,KAAI,GAAIN,EAAE,CAClC,mCAAmC,CACpC;MACH;MACA,IAAIE,iBAAiB,CAACG,KAAK,MAAM,IAAI,EAAE;QACrC,OAAQJ,iBAAiB,CAACK,KAAI,GAAIN,EAAE,CAClC,mCAAmC,CACpC;MACH;MACAD,OAAO,CAACQ,IAAI,CAAC,mBAAmB,EAAE,CAAC,IAAIf,KAAK,CAACC,UAAS,IAAK,EAAE,CAAC,EAAEY,KAAK,CAAC,CAAC;IACzE,CAAC;IAED,MAAMG,aAAY,GAAKC,KAAK,IAAK;MAC/BR,iBAAiB,CAACK,KAAI,GAAI,EAAE;MAC5BP,OAAO,CAACQ,IAAI,CACV,mBAAmB,EACnB,CAACf,KAAK,CAACC,UAAS,IAAK,EAAE,EAAEiB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKH,KAAI,KAAMG,CAAC,CAAC,CACvD;IACH,CAAC;IAED,MAAMC,iBAAgB,GAAI,MAAM;MAC9BZ,iBAAiB,CAACK,KAAI,GAAI,EAAE;IAC9B,CAAC;IAED,MAAMQ,cAAa,GAAIhC,QAAQ,CAC7B,MAAMa,KAAK,CAACoB,OAAO,CAACvB,KAAK,CAACC,UAAU,KAAKD,KAAK,CAACC,UAAU,CAACuB,MAAK,GAAI,CAAC,CACrE;IAED,MAAMC,gBAAe,GAAInC,QAAQ,CAC/B,MACEa,KAAK,CAACoB,OAAO,CAACvB,KAAK,CAACC,UAAU,KAC9BD,KAAK,CAACC,UAAU,CAACuB,MAAK,GAAI,KAC1BxB,KAAK,CAACC,UAAU,CAACuB,MAAK,GAAI,CAAC,CAC9B;IAED,OAAO;MACLZ,YAAY;MACZI,aAAa;MACbM,cAAc;MACdG,gBAAgB;MAChBJ,iBAAiB;MACjBZ;IACF,CAAC;EACH;AACF,CAAC","names":["computed","ref","usei18n","PhotoFrame","maxFileSize","validFileTypes","PhotoUploadArea","OxdAlert","name","components","props","modelValue","type","Array","required","emits","setup","context","$t","validationMessage","fileTypeValidator","fileSizeValidator","onFileChange","$file","value","emit","onClickRemove","index","filter","_","i","onClickCloseAlert","showUploadArea","isArray","length","showUploadButton"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PhotoInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-photo-input\">\n    <oxd-alert\n      type=\"error\"\n      :show=\"!!validationMessage\"\n      :message=\"validationMessage\"\n    >\n      <oxd-icon-button\n        name=\"x\"\n        class=\"orangehrm-photo-input-remove\"\n        @click=\"onClickCloseAlert\"\n      />\n    </oxd-alert>\n    <photo-upload-area v-if=\"showUploadArea\" @update:model-value=\"onFileChange\">\n    </photo-upload-area>\n    <div class=\"orangehrm-photo-input-field\">\n      <oxd-input-field\n        v-if=\"showUploadButton\"\n        type=\"file\"\n        value=\"\"\n        @update:model-value=\"onFileChange\"\n      >\n        <oxd-button icon-name=\"file-image\" :label=\"$t('buzz.add_photos')\" />\n      </oxd-input-field>\n    </div>\n\n    <photo-frame :media=\"modelValue\">\n      <template #content=\"{index}\">\n        <oxd-icon-button\n          name=\"x\"\n          class=\"orangehrm-photo-input-remove --float\"\n          @click=\"onClickRemove(index)\"\n        />\n      </template>\n    </photo-frame>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport {maxFileSize, validFileTypes} from '@/core/util/validation/rules';\nimport PhotoUploadArea from '@/orangehrmBuzzPlugin/components/PhotoUploadArea';\nimport {OxdAlert} from '@ohrm/oxd';\n\nexport default {\n  name: 'PhotoInput',\n\n  components: {\n    'oxd-alert': OxdAlert,\n    'photo-frame': PhotoFrame,\n    'photo-upload-area': PhotoUploadArea,\n  },\n\n  props: {\n    modelValue: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup(props, context) {\n    const {$t} = usei18n();\n    const validationMessage = ref('');\n    const fileTypeValidator = validFileTypes([\n      'image/gif',\n      'image/jpeg',\n      'image/jpg',\n      'image/pjpeg',\n      'image/png',\n      'image/x-png',\n    ]);\n    const fileSizeValidator = maxFileSize(1024 * 1024 * 2);\n\n    const onFileChange = ($file) => {\n      if (!$file) return;\n      validationMessage.value = '';\n      if (fileSizeValidator($file) !== true) {\n        return (validationMessage.value = $t(\n          'buzz.file_size_validation_message',\n        ));\n      }\n      if (fileTypeValidator($file) !== true) {\n        return (validationMessage.value = $t(\n          'buzz.file_type_validation_message',\n        ));\n      }\n      context.emit('update:modelValue', [...(props.modelValue || []), $file]);\n    };\n\n    const onClickRemove = (index) => {\n      validationMessage.value = '';\n      context.emit(\n        'update:modelValue',\n        (props.modelValue || []).filter((_, i) => index !== i),\n      );\n    };\n\n    const onClickCloseAlert = () => {\n      validationMessage.value = '';\n    };\n\n    const showUploadArea = computed(\n      () => Array.isArray(props.modelValue) && props.modelValue.length < 1,\n    );\n\n    const showUploadButton = computed(\n      () =>\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0 &&\n        props.modelValue.length < 5,\n    );\n\n    return {\n      onFileChange,\n      onClickRemove,\n      showUploadArea,\n      showUploadButton,\n      onClickCloseAlert,\n      validationMessage,\n    };\n  },\n};\n</script>\n\n<style src=\"./photo-input.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}