{"ast":null,"code":"import { onBeforeMount, reactive, toRefs } from 'vue';\nimport { required, maxFileSize, validHexFormat, validFileTypes, imageShouldHaveDimensions } from '@ohrm/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport { reloadPage } from '@ohrm/core/util/helper/navigation';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport InlineColorInput from '@/orangehrmAdminPlugin/components/InlineColorInput';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst colorModel = {\n  primaryColor: null,\n  primaryFontColor: null,\n  secondaryColor: null,\n  secondaryFontColor: null,\n  primaryGradientStartColor: null,\n  primaryGradientEndColor: null\n};\nconst fileUploadModel = {\n  oldAttachment: null,\n  newAttachment: null,\n  method: 'keepCurrent'\n};\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'file-upload-input': FileUploadInput,\n    'inline-color-input': InlineColorInput\n  },\n  props: {\n    allowedImageTypes: {\n      type: Array,\n      required: true\n    },\n    aspectRatios: {\n      type: Object,\n      required: true\n    },\n    aspectRatioTolerance: {\n      type: Number,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/theme`);\n    const {\n      saveSuccess\n    } = useToast();\n    const {\n      formRef,\n      invalid,\n      validate\n    } = useForm();\n    const state = reactive({\n      isLoading: false,\n      colors: {\n        ...colorModel\n      },\n      clientLogo: {\n        ...fileUploadModel\n      },\n      clientBanner: {\n        ...fileUploadModel\n      },\n      loginBanner: {\n        ...fileUploadModel\n      },\n      showSocialMediaImages: true\n    });\n    const rules = {\n      color: [required, validHexFormat],\n      clientLogo: [v => state.clientLogo.method === 'replaceCurrent' ? required(v) : true, maxFileSize(props.maxFileSize), imageShouldHaveDimensions(props.aspectRatios.clientLogo, props.aspectRatioTolerance), validFileTypes(props.allowedImageTypes)],\n      clientBanner: [v => state.clientBanner.method === 'replaceCurrent' ? required(v) : true, maxFileSize(props.maxFileSize), imageShouldHaveDimensions(props.aspectRatios.clientBanner, props.aspectRatioTolerance), validFileTypes(props.allowedImageTypes)],\n      loginBanner: [v => state.loginBanner.method === 'replaceCurrent' ? required(v) : true, maxFileSize(props.maxFileSize), imageShouldHaveDimensions(props.aspectRatios.loginBanner, props.aspectRatioTolerance), validFileTypes(props.allowedImageTypes)]\n    };\n    const onFormSubmit = () => {\n      const getAttachment = fileUploadModel => {\n        if (fileUploadModel.method === null || fileUploadModel.method === 'replaceCurrent') {\n          return fileUploadModel.newAttachment;\n        }\n        return undefined;\n      };\n      state.isLoading = true;\n      http.request({\n        method: 'PUT',\n        url: '/api/v2/admin/theme',\n        data: {\n          variables: state.colors,\n          showSocialMediaImages: state.showSocialMediaImages,\n          currentClientLogo: state.clientLogo.method,\n          clientLogo: getAttachment(state.clientLogo),\n          currentClientBanner: state.clientBanner.method,\n          clientBanner: getAttachment(state.clientBanner),\n          currentLoginBanner: state.loginBanner.method,\n          loginBanner: getAttachment(state.loginBanner)\n        }\n      }).then(() => {\n        return saveSuccess();\n      }).then(() => reloadPage());\n    };\n    const onClickReset = () => {\n      state.isLoading = true;\n      http.request({\n        method: 'DELETE',\n        url: '/api/v2/admin/theme'\n      }).then(() => reloadPage());\n    };\n    const onClickPreview = () => {\n      validate().then(() => {\n        if (invalid.value === true) return;\n        state.isLoading = true;\n        http.request({\n          method: 'POST',\n          url: '/api/v2/admin/theme/preview',\n          data: {\n            ...state.colors\n          }\n        }).then(response => {\n          const {\n            data\n          } = response.data;\n          for (const key in data) {\n            const value = data[key];\n            document.documentElement.style.setProperty(key, value);\n          }\n        }).finally(() => state.isLoading = false);\n      });\n    };\n    onBeforeMount(() => {\n      state.isLoading = true;\n      http.getAll().then(response => {\n        const {\n          data\n        } = response.data;\n        const {\n          clientLogo,\n          clientBanner,\n          loginBanner,\n          showSocialMediaImages,\n          variables\n        } = data;\n        state.colors = variables;\n        if (clientLogo === null) {\n          state.clientLogo.method = null;\n        } else {\n          state.clientLogo.oldAttachment = clientLogo;\n          state.clientLogo.oldAttachment.id = 'clientLogo';\n        }\n        if (clientBanner === null) {\n          state.clientBanner.method = null;\n        } else {\n          state.clientBanner.oldAttachment = clientBanner;\n          state.clientBanner.oldAttachment.id = 'clientBanner';\n        }\n        if (loginBanner === null) {\n          state.loginBanner.method = null;\n        } else {\n          state.loginBanner.oldAttachment = loginBanner;\n          state.loginBanner.oldAttachment.id = 'loginBanner';\n        }\n        state.showSocialMediaImages = showSocialMediaImages;\n      }).finally(() => state.isLoading = false);\n    });\n    return {\n      rules,\n      formRef,\n      onFormSubmit,\n      onClickReset,\n      onClickPreview,\n      ...toRefs(state)\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      let size = Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n      return size === 1 ? size + 'MB' : size + 'MBs';\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["onBeforeMount","reactive","toRefs","required","maxFileSize","validHexFormat","validFileTypes","imageShouldHaveDimensions","useForm","useToast","APIService","reloadPage","FileUploadInput","InlineColorInput","OxdSwitchInput","colorModel","primaryColor","primaryFontColor","secondaryColor","secondaryFontColor","primaryGradientStartColor","primaryGradientEndColor","fileUploadModel","oldAttachment","newAttachment","method","components","props","allowedImageTypes","type","Array","aspectRatios","Object","aspectRatioTolerance","Number","setup","http","window","appGlobal","baseUrl","saveSuccess","formRef","invalid","validate","state","isLoading","colors","clientLogo","clientBanner","loginBanner","showSocialMediaImages","rules","color","v","onFormSubmit","getAttachment","undefined","request","url","data","variables","currentClientLogo","currentClientBanner","currentLoginBanner","then","onClickReset","onClickPreview","value","response","key","document","documentElement","style","setProperty","finally","getAll","id","computed","formattedFileSize","size","Math","round"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\corporateBranding\\CorporateBranding.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.corporate_branding') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\" @submit-valid=\"onFormSubmit\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <inline-color-input\n                v-model=\"colors.primaryColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.primary_color')\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-column-3\">\n              <inline-color-input\n                v-model=\"colors.secondaryColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.secondary_color')\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <inline-color-input\n                v-model=\"colors.primaryFontColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.primary_font_color')\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2 --offset-column-3\">\n              <inline-color-input\n                v-model=\"colors.secondaryFontColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.secondary_font_color')\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-3\">\n              <inline-color-input\n                v-model=\"colors.primaryGradientStartColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.primary_gradient_color_one')\"\n                type=\"color\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-3 --offset-column-3\">\n              <inline-color-input\n                v-model=\"colors.primaryGradientEndColor\"\n                :rules=\"rules.color\"\n                :label=\"$t('admin.primary_gradient_color_two')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <br />\n        <oxd-divider />\n        <br />\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <file-upload-input\n                v-model:newFile=\"clientLogo.newAttachment\"\n                v-model:method=\"clientLogo.method\"\n                :label=\"$t('admin.client_logo')\"\n                :button-label=\"$t('general.browse')\"\n                :file=\"clientLogo.oldAttachment\"\n                :rules=\"rules.clientLogo\"\n                :hint=\"\n                  $t('general.accept_jpg_png_gif_upto_recommended_dimensions', {\n                    fileSize: formattedFileSize,\n                    width: 50,\n                    height: 50,\n                  })\n                \"\n                button-icon=\"\"\n                url=\"admin/theme/attachments/image\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <file-upload-input\n                v-model:newFile=\"clientBanner.newAttachment\"\n                v-model:method=\"clientBanner.method\"\n                :label=\"$t('admin.client_banner')\"\n                :button-label=\"$t('general.browse')\"\n                :file=\"clientBanner.oldAttachment\"\n                :rules=\"rules.clientBanner\"\n                :hint=\"\n                  $t('general.accept_jpg_png_gif_upto_recommended_dimensions', {\n                    fileSize: formattedFileSize,\n                    width: 182,\n                    height: 50,\n                  })\n                \"\n                button-icon=\"\"\n                url=\"admin/theme/attachments/image\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <file-upload-input\n                v-model:newFile=\"loginBanner.newAttachment\"\n                v-model:method=\"loginBanner.method\"\n                :label=\"$t('admin.login_banner')\"\n                :button-label=\"$t('general.browse')\"\n                :file=\"loginBanner.oldAttachment\"\n                :rules=\"rules.loginBanner\"\n                :hint=\"\n                  $t('general.accept_jpg_png_gif_upto_recommended_dimensions', {\n                    fileSize: formattedFileSize,\n                    width: 340,\n                    height: 65,\n                  })\n                \"\n                button-icon=\"\"\n                url=\"admin/theme/attachments/image\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <div class=\"orangehrm-sm-field\">\n                <oxd-text tag=\"p\" class=\"orangehrm-sm-field-label\">\n                  {{ $t('admin.social_media_images') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"showSocialMediaImages\" />\n              </div>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <div class=\"orangehrm-actions-group\">\n            <oxd-button\n              type=\"button\"\n              display-type=\"ghost\"\n              :label=\"$t('general.reset_to_default')\"\n              @click=\"onClickReset\"\n            />\n            <oxd-button\n              type=\"button\"\n              display-type=\"ghost\"\n              :label=\"$t('general.preview')\"\n              @click=\"onClickPreview\"\n            />\n            <oxd-button\n              type=\"submit\"\n              display-type=\"secondary\"\n              :label=\"$t('general.publish')\"\n            />\n          </div>\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {onBeforeMount, reactive, toRefs} from 'vue';\nimport {\n  required,\n  maxFileSize,\n  validHexFormat,\n  validFileTypes,\n  imageShouldHaveDimensions,\n} from '@ohrm/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport useToast from '@/core/util/composable/useToast';\nimport {APIService} from '@/core/util/services/api.service';\nimport {reloadPage} from '@ohrm/core/util/helper/navigation';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport InlineColorInput from '@/orangehrmAdminPlugin/components/InlineColorInput';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst colorModel = {\n  primaryColor: null,\n  primaryFontColor: null,\n  secondaryColor: null,\n  secondaryFontColor: null,\n  primaryGradientStartColor: null,\n  primaryGradientEndColor: null,\n};\n\nconst fileUploadModel = {\n  oldAttachment: null,\n  newAttachment: null,\n  method: 'keepCurrent',\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'file-upload-input': FileUploadInput,\n    'inline-color-input': InlineColorInput,\n  },\n  props: {\n    allowedImageTypes: {\n      type: Array,\n      required: true,\n    },\n    aspectRatios: {\n      type: Object,\n      required: true,\n    },\n    aspectRatioTolerance: {\n      type: Number,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/theme`,\n    );\n\n    const {saveSuccess} = useToast();\n    const {formRef, invalid, validate} = useForm();\n\n    const state = reactive({\n      isLoading: false,\n      colors: {\n        ...colorModel,\n      },\n      clientLogo: {\n        ...fileUploadModel,\n      },\n      clientBanner: {\n        ...fileUploadModel,\n      },\n      loginBanner: {\n        ...fileUploadModel,\n      },\n      showSocialMediaImages: true,\n    });\n\n    const rules = {\n      color: [required, validHexFormat],\n      clientLogo: [\n        (v) =>\n          state.clientLogo.method === 'replaceCurrent' ? required(v) : true,\n        maxFileSize(props.maxFileSize),\n        imageShouldHaveDimensions(\n          props.aspectRatios.clientLogo,\n          props.aspectRatioTolerance,\n        ),\n        validFileTypes(props.allowedImageTypes),\n      ],\n      clientBanner: [\n        (v) =>\n          state.clientBanner.method === 'replaceCurrent' ? required(v) : true,\n        maxFileSize(props.maxFileSize),\n        imageShouldHaveDimensions(\n          props.aspectRatios.clientBanner,\n          props.aspectRatioTolerance,\n        ),\n        validFileTypes(props.allowedImageTypes),\n      ],\n      loginBanner: [\n        (v) =>\n          state.loginBanner.method === 'replaceCurrent' ? required(v) : true,\n        maxFileSize(props.maxFileSize),\n        imageShouldHaveDimensions(\n          props.aspectRatios.loginBanner,\n          props.aspectRatioTolerance,\n        ),\n        validFileTypes(props.allowedImageTypes),\n      ],\n    };\n\n    const onFormSubmit = () => {\n      const getAttachment = (fileUploadModel) => {\n        if (\n          fileUploadModel.method === null ||\n          fileUploadModel.method === 'replaceCurrent'\n        ) {\n          return fileUploadModel.newAttachment;\n        }\n        return undefined;\n      };\n      state.isLoading = true;\n      http\n        .request({\n          method: 'PUT',\n          url: '/api/v2/admin/theme',\n          data: {\n            variables: state.colors,\n            showSocialMediaImages: state.showSocialMediaImages,\n            currentClientLogo: state.clientLogo.method,\n            clientLogo: getAttachment(state.clientLogo),\n            currentClientBanner: state.clientBanner.method,\n            clientBanner: getAttachment(state.clientBanner),\n            currentLoginBanner: state.loginBanner.method,\n            loginBanner: getAttachment(state.loginBanner),\n          },\n        })\n        .then(() => {\n          return saveSuccess();\n        })\n        .then(() => reloadPage());\n    };\n\n    const onClickReset = () => {\n      state.isLoading = true;\n      http\n        .request({\n          method: 'DELETE',\n          url: '/api/v2/admin/theme',\n        })\n        .then(() => reloadPage());\n    };\n\n    const onClickPreview = () => {\n      validate().then(() => {\n        if (invalid.value === true) return;\n        state.isLoading = true;\n        http\n          .request({\n            method: 'POST',\n            url: '/api/v2/admin/theme/preview',\n            data: {\n              ...state.colors,\n            },\n          })\n          .then((response) => {\n            const {data} = response.data;\n            for (const key in data) {\n              const value = data[key];\n              document.documentElement.style.setProperty(key, value);\n            }\n          })\n          .finally(() => (state.isLoading = false));\n      });\n    };\n\n    onBeforeMount(() => {\n      state.isLoading = true;\n      http\n        .getAll()\n        .then((response) => {\n          const {data} = response.data;\n          const {\n            clientLogo,\n            clientBanner,\n            loginBanner,\n            showSocialMediaImages,\n            variables,\n          } = data;\n          state.colors = variables;\n          if (clientLogo === null) {\n            state.clientLogo.method = null;\n          } else {\n            state.clientLogo.oldAttachment = clientLogo;\n            state.clientLogo.oldAttachment.id = 'clientLogo';\n          }\n          if (clientBanner === null) {\n            state.clientBanner.method = null;\n          } else {\n            state.clientBanner.oldAttachment = clientBanner;\n            state.clientBanner.oldAttachment.id = 'clientBanner';\n          }\n          if (loginBanner === null) {\n            state.loginBanner.method = null;\n          } else {\n            state.loginBanner.oldAttachment = loginBanner;\n            state.loginBanner.oldAttachment.id = 'loginBanner';\n          }\n          state.showSocialMediaImages = showSocialMediaImages;\n        })\n        .finally(() => (state.isLoading = false));\n    });\n\n    return {\n      rules,\n      formRef,\n      onFormSubmit,\n      onClickReset,\n      onClickPreview,\n      ...toRefs(state),\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      let size = Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n      return size === 1 ? size + 'MB' : size + 'MBs';\n    },\n  },\n};\n</script>\n\n<style src=\"./corporate-branding.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}