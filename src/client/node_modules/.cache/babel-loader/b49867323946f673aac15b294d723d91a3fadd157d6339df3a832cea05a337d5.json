{"ast":null,"code":"import { urlFor } from '@/core/util/helper/url';\nimport LoginBranding from '@/orangehrmAuthenticationPlugin/components/LoginBranding.vue';\nimport { OxdAlert } from '@ohrm/oxd';\nexport default {\n  name: 'OAuthAuthorize',\n  components: {\n    'login-branding': LoginBranding,\n    'oxd-alert': OxdAlert\n  },\n  props: {\n    params: {\n      type: Object,\n      required: true\n    },\n    clientName: {\n      type: String,\n      default: null\n    },\n    errorType: {\n      type: String,\n      default: null\n    },\n    loginBannerSrc: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      authorized: true\n    };\n  },\n  computed: {\n    submitUrl() {\n      return urlFor('/oauth2/authorize/consent');\n    }\n  },\n  methods: {\n    onCancel() {\n      this.authorized = false;\n      this.onSubmit();\n    },\n    onSubmit() {\n      this.$nextTick(() => {\n        this.$refs.authorizeForm.$el.submit();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA8FA,SAAQA,MAAM,QAAO,wBAAwB;AAC7C,OAAOC,aAAY,MAAO,8DAA8D;AACxF,SAAQC,QAAQ,QAAO,WAAW;AAElC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACV,gBAAgB,EAAEH,aAAa;IAC/B,WAAW,EAAEC;EACf,CAAC;EACDG,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACTN,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,cAAc,EAAE;MACdP,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDM,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,GAAG;MACV,OAAOlB,MAAM,CAAC,2BAA2B,CAAC;IAC5C;EACF,CAAC;EACDmB,OAAO,EAAE;IACPC,QAAQ,GAAG;MACT,IAAI,CAACJ,UAAS,GAAI,KAAK;MACvB,IAAI,CAACK,QAAQ,EAAE;IACjB,CAAC;IACDA,QAAQ,GAAG;MACT,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,KAAK,CAACC,aAAa,CAACC,GAAG,CAACC,MAAM,EAAE;MACvC,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["urlFor","LoginBranding","OxdAlert","name","components","props","params","type","Object","required","clientName","String","default","errorType","loginBannerSrc","data","authorized","computed","submitUrl","methods","onCancel","onSubmit","$nextTick","$refs","authorizeForm","$el","submit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmCoreOAuthPlugin\\pages\\oauth\\OAuthAuthorize.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-oauth-container\">\n    <div class=\"orangehrm-card-container\">\n      <login-branding\n        :img-src=\"loginBannerSrc\"\n        class=\"orangehrm-oauth-branding\"\n      />\n      <oxd-divider />\n      <template v-if=\"errorType === null\">\n        <oxd-text>\n          {{ $t('auth.client_name_would_like_to', {clientName: clientName}) }}:\n        </oxd-text>\n        <ul class=\"orangehrm-oauth-list\">\n          <li>\n            <oxd-text>{{ $t('auth.access_and_manage_your_data') }}</oxd-text>\n          </li>\n          <li>\n            <oxd-text>\n              {{ $t('auth.perform_actions_on_your_behalf') }}\n            </oxd-text>\n          </li>\n        </ul>\n        <oxd-text>{{ $t('auth.do_you_want_to_allow_access') }}</oxd-text>\n        <br />\n        <oxd-form\n          ref=\"authorizeForm\"\n          method=\"GET\"\n          :action=\"submitUrl\"\n          @submit-valid=\"onSubmit\"\n        >\n          <input name=\"authorized\" :value=\"authorized\" type=\"hidden\" />\n          <div v-for=\"(value, name) in params\" :key=\"name\">\n            <input :name=\"name\" :value=\"value\" type=\"hidden\" />\n          </div>\n          <div class=\"orangehrm-oauth-button-container\">\n            <oxd-button\n              display-type=\"ghost\"\n              size=\"large\"\n              class=\"orangehrm-oauth-button\"\n              :label=\"$t('auth.deny')\"\n              @click=\"onCancel\"\n            />\n            <oxd-button\n              display-type=\"secondary\"\n              class=\"orangehrm-oauth-button\"\n              size=\"large\"\n              :label=\"$t('auth.allow_access')\"\n              type=\"submit\"\n            />\n          </div>\n        </oxd-form>\n      </template>\n      <template v-else-if=\"params['client_id'] === 'orangehrm_mobile_app'\">\n        <oxd-alert\n          :show=\"true\"\n          type=\"error\"\n          :message=\"$t('auth.mobile_client_disabled_error')\"\n        />\n      </template>\n      <template v-else>\n        <oxd-alert\n          :show=\"true\"\n          type=\"error\"\n          :message=\"$t('auth.this_request_is_invalid')\"\n        />\n        <oxd-text class=\"orangehrm-oauth-error\">\n          {{ $t('general.error') }}: {{ errorType }}\n        </oxd-text>\n      </template>\n    </div>\n    <slot name=\"footer\"></slot>\n  </div>\n</template>\n\n<script>\nimport {urlFor} from '@/core/util/helper/url';\nimport LoginBranding from '@/orangehrmAuthenticationPlugin/components/LoginBranding.vue';\nimport {OxdAlert} from '@ohrm/oxd';\n\nexport default {\n  name: 'OAuthAuthorize',\n  components: {\n    'login-branding': LoginBranding,\n    'oxd-alert': OxdAlert,\n  },\n  props: {\n    params: {\n      type: Object,\n      required: true,\n    },\n    clientName: {\n      type: String,\n      default: null,\n    },\n    errorType: {\n      type: String,\n      default: null,\n    },\n    loginBannerSrc: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      authorized: true,\n    };\n  },\n  computed: {\n    submitUrl() {\n      return urlFor('/oauth2/authorize/consent');\n    },\n  },\n  methods: {\n    onCancel() {\n      this.authorized = false;\n      this.onSubmit();\n    },\n    onSubmit() {\n      this.$nextTick(() => {\n        this.$refs.authorizeForm.$el.submit();\n      });\n    },\n  },\n};\n</script>\n\n<style src=\"./oauth-authorize.scss\" scoped lang=\"scss\"></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}