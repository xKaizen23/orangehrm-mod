{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_claim_expense_type_dropdown = _resolveComponent(\"claim-expense-type-dropdown\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('claim.add_expense')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 1,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_claim_expense_type_dropdown, {\n              modelValue: $data.expense.type,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.expense.type = $event),\n              label: _ctx.$t('claim.expense_type'),\n              rules: $data.rules.type\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $data.expense.date,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.expense.date = $event),\n              label: _ctx.$t('general.date'),\n              rules: $data.rules.date,\n              years: $data.yearsArray,\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.expense.amount,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.expense.amount = $event),\n              label: _ctx.$t('general.amount'),\n              rules: $data.rules.amount,\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 1,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.expense.note,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.expense.note = $event),\n              type: \"textarea\",\n              label: _ctx.$t('general.note'),\n              rules: $data.rules.note\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          type: \"button\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;EAqBSA,KAAK,EAAC;AAAwB;;;;;;;;;;;;;;;;uBADrCC,aAmEaC;IAnEA,eAAW,EAAEC;EAAQ;sBAChC,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAA6B,mCAA1BC,OAAE;;UAGTH,aAAeI,yBACfJ,aA2DWK;MA3DAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEX;;wBAC5C,MAUe,CAVfG,aAUeS;0BATb,MAQW,CARXT,aAQWU;UARAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAMgB,CANhBM,aAMgBY;8BALd,MAI+B,CAJ/BZ,aAI+Ba;0BAHpBN,aAAO,CAACL,IAAI;yEAAZK,aAAO,CAACL,IAAI;cACpBY,KAAK,EAAEX,OAAE;cACTY,KAAK,EAAER,WAAK,CAACL;;;;;;;UAMtBF,aAoBeS;0BAnBb,MAkBW,CAlBXT,aAkBWU;UAlBAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAQgB,CARhBM,aAQgBY;8BAPd,MAME,CANFZ,aAMEgB;0BALST,aAAO,CAACU,IAAI;yEAAZV,aAAO,CAACU,IAAI;cACpBH,KAAK,EAAEX,OAAE;cACTY,KAAK,EAAER,WAAK,CAACU,IAAI;cACjBC,KAAK,EAAEX,gBAAU;cAClBY,QAAQ,EAAR;;;cAGJnB,aAOgBY;8BANd,MAKE,CALFZ,aAKEoB;0BAJSb,aAAO,CAACc,MAAM;yEAAdd,aAAO,CAACc,MAAM;cACtBP,KAAK,EAAEX,OAAE;cACTY,KAAK,EAAER,WAAK,CAACc,MAAM;cACpBF,QAAQ,EAAR;;;;;;;UAMRnB,aAWeS;0BAVb,MASW,CATXT,aASWU;UATAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAOgB,CAPhBM,aAOgBY;8BANd,MAKE,CALFZ,aAKEoB;0BAJSb,aAAO,CAACe,IAAI;yEAAZf,aAAO,CAACe,IAAI;cACrBpB,IAAI,EAAC,UAAU;cACdY,KAAK,EAAEX,OAAE;cACTY,KAAK,EAAER,WAAK,CAACe;;;;;;;UAMtBtB,aAAeI,yBACfJ,aASmBuB;0BARjB,MAAiB,CAAjBvB,aAAiBwB,2BACjBxB,aAKEyB;UAJAvB,IAAI,EAAC,QAAQ;UACb,cAAY,EAAC,OAAO;UACnBY,KAAK,EAAEX,OAAE;UACTuB,OAAK,EAAE7B;2CAEVG,aAAiB2B","names":["class","_createBlock","_component_oxd_dialog","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_claim_expense_type_dropdown","label","rules","_component_date_input","date","years","required","_component_oxd_input_field","amount","note","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\AddExpenseModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('claim.add_expense') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"1\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <claim-expense-type-dropdown\n              v-model=\"expense.type\"\n              :label=\"$t('claim.expense_type')\"\n              :rules=\"rules.type\"\n            ></claim-expense-type-dropdown>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <date-input\n              v-model=\"expense.date\"\n              :label=\"$t('general.date')\"\n              :rules=\"rules.date\"\n              :years=\"yearsArray\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"expense.amount\"\n              :label=\"$t('general.amount')\"\n              :rules=\"rules.amount\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"1\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"expense.note\"\n              type=\"textarea\"\n              :label=\"$t('general.note')\"\n              :rules=\"rules.note\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {required, validDateFormat} from '@/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {yearRange} from '@ohrm/core/util/helper/year-range';\nimport {OxdDialog} from '@ohrm/oxd';\nimport {\n  shouldNotExceedCharLength,\n  maxCurrency,\n  digitsOnlyWithTwoDecimalPoints,\n} from '@ohrm/core/util/validation/rules';\nimport ClaimExpenseTypeDropdown from './ClaimExpenseTypeDropdown.vue';\n\nconst expenseModel = {\n  type: null,\n  date: null,\n  amount: null,\n  note: null,\n};\n\nexport default {\n  name: 'SaveExpense',\n\n  components: {\n    'oxd-dialog': OxdDialog,\n    'claim-expense-type-dropdown': ClaimExpenseTypeDropdown,\n  },\n\n  props: {\n    requestId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/expenses`,\n    );\n\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      yearsArray: [...yearRange()],\n      expense: {\n        ...expenseModel,\n      },\n\n      rules: {\n        type: [required],\n        date: [required, validDateFormat(this.userDateFormat)],\n        note: [shouldNotExceedCharLength(1000)],\n        amount: [\n          required,\n          maxCurrency(10000000000),\n          digitsOnlyWithTwoDecimalPoints,\n        ],\n      },\n    };\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          expenseTypeId: this.expense.type.id,\n          date: this.expense.date,\n          amount: Number(this.expense.amount).toFixed(2),\n          note: this.expense.note,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.expense = {...expenseModel};\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}