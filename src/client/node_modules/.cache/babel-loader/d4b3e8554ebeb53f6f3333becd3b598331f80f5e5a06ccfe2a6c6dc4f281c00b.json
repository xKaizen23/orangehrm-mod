{"ast":null,"code":"import usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport SaveSubscriber from './SaveSubscriber';\nimport EditSubscriber from './EditSubscriber';\nexport default {\n  components: {\n    'save-subscriber': SaveSubscriber,\n    'edit-subscriber': EditSubscriber,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    subscriptionId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/email-subscriptions/${props.subscriptionId}/subscribers`);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: '30%'\n        }\n      }, {\n        name: 'email',\n        title: this.$t('general.email'),\n        style: {\n          flex: '55%'\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: '15%'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    title() {\n      return this.items.meta ? this.items.meta?.name : '';\n    }\n  },\n  methods: {\n    onClickAdd() {\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.editModalState = {\n        ...item,\n        subscriptionId: this.subscriptionId\n      };\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.editModalState = null;\n      this.showEditModal = false;\n      this.resetDataTable();\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["usePaginate","DeleteConfirmationDialog","APIService","SaveSubscriber","EditSubscriber","components","props","subscriptionId","type","String","required","setup","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","items","data","headers","name","slot","title","$t","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","showSaveModal","showEditModal","editModalState","computed","meta","methods","onClickAdd","item","onSaveModalClose","resetDataTable","onEditModalClose","onClickDeleteSelected","ids","map","index","id","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\emailSubscription\\EditEmailSubscription.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('admin.subscribers') }}: {{ title }}\n        </oxd-text>\n        <div>\n          <oxd-button\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAdd\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :loading=\"isLoading\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n    <save-subscriber\n      v-if=\"showSaveModal\"\n      :data=\"{subscriptionId}\"\n      @close=\"onSaveModalClose\"\n    ></save-subscriber>\n    <edit-subscriber\n      v-if=\"showEditModal\"\n      :data=\"editModalState\"\n      @close=\"onEditModalClose\"\n    ></edit-subscriber>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport SaveSubscriber from './SaveSubscriber';\nimport EditSubscriber from './EditSubscriber';\n\nexport default {\n  components: {\n    'save-subscriber': SaveSubscriber,\n    'edit-subscriber': EditSubscriber,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    subscriptionId: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/email-subscriptions/${props.subscriptionId}/subscribers`,\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: '30%'},\n        },\n        {\n          name: 'email',\n          title: this.$t('general.email'),\n          style: {flex: '55%'},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: '15%'},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    title() {\n      return this.items.meta ? this.items.meta?.name : '';\n    },\n  },\n\n  methods: {\n    onClickAdd() {\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.editModalState = {...item, subscriptionId: this.subscriptionId};\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.editModalState = null;\n      this.showEditModal = false;\n      this.resetDataTable();\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}