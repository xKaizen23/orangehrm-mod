{"ast":null,"code":"import { ref, onBeforeMount, computed } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeavePeriodDropdown',\n  props: {\n    modelValue: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-periods');\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    onBeforeMount(() => {\n      http.getAll().then(({\n        data\n      }) => {\n        options.value = data.data.map(item => {\n          const startDate = formatDate(parseDate(item.startDate), jsDateFormat, {\n            locale\n          });\n          const endDate = formatDate(parseDate(item.endDate), jsDateFormat, {\n            locale\n          });\n          return {\n            id: `${item.startDate}_${item.endDate}`,\n            label: `${startDate} - ${endDate}`,\n            startDate: item.startDate,\n            endDate: item.endDate\n          };\n        });\n      });\n    });\n    const selectedPeriod = computed(() => {\n      return options.value.find(_option => _option.id === props.modelValue?.id);\n    });\n    return {\n      options,\n      selectedPeriod\n    };\n  }\n};","map":{"version":3,"mappings":"AA8BA,SAAQA,GAAG,EAAEC,aAAa,EAAEC,QAAQ,QAAO,KAAK;AAChD,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,OAAOC,aAAY,MAAO,sCAAsC;AAChE,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAChE,OAAOC,SAAQ,MAAO,kCAAkC;AAExD,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAK,CAACN,KAAK,EAAE;IACX,MAAMO,OAAM,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMiB,IAAG,GAAI,IAAId,UAAU,CACzBe,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,6BAA6B,CAC9B;IACD,MAAM;MAACC;IAAY,IAAIjB,aAAa,EAAE;IACtC,MAAM;MAACkB;IAAM,IAAIf,SAAS,EAAE;IAE5BN,aAAa,CAAC,MAAM;MAClBgB,IAAI,CAACM,MAAM,EAAE,CAACC,IAAI,CAAC,CAAC;QAACC;MAAI,CAAC,KAAK;QAC7BT,OAAO,CAACU,KAAI,GAAID,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;UACtC,MAAMC,SAAQ,GAAIxB,UAAU,CAC1BC,SAAS,CAACsB,IAAI,CAACC,SAAS,CAAC,EACzBR,YAAY,EACZ;YAACC;UAAM,CAAC,CACT;UACD,MAAMQ,OAAM,GAAIzB,UAAU,CAACC,SAAS,CAACsB,IAAI,CAACE,OAAO,CAAC,EAAET,YAAY,EAAE;YAChEC;UACF,CAAC,CAAC;UAEF,OAAO;YACLS,EAAE,EAAG,GAAEH,IAAI,CAACC,SAAU,IAAGD,IAAI,CAACE,OAAQ,EAAC;YACvCE,KAAK,EAAG,GAAEH,SAAS,MAAMC,OAAQ,EAAC;YAClCD,SAAS,EAAED,IAAI,CAACC,SAAS;YACzBC,OAAO,EAAEF,IAAI,CAACE;UAChB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMG,cAAa,GAAI/B,QAAQ,CAAC,MAAM;MACpC,OAAOc,OAAO,CAACU,KAAK,CAACQ,IAAI,CACtBC,OAAO,IAAKA,OAAO,CAACJ,EAAC,KAAMtB,KAAK,CAACC,UAAU,EAAEqB,EAAE,CACjD;IACH,CAAC,CAAC;IAEF,OAAO;MACLf,OAAO;MACPiB;IACF,CAAC;EACH;AACF,CAAC","names":["ref","onBeforeMount","computed","APIService","useDateFormat","formatDate","parseDate","useLocale","name","props","modelValue","type","Object","default","emits","setup","options","http","window","appGlobal","baseUrl","jsDateFormat","locale","getAll","then","data","value","map","item","startDate","endDate","id","label","selectedPeriod","find","_option"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeavePeriodDropdown.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-field\n    type=\"select\"\n    :label=\"$t('leave.leave_period')\"\n    :options=\"options\"\n    :model-value=\"selectedPeriod\"\n    @update:model-value=\"$emit('update:modelValue', $event)\"\n  />\n</template>\n\n<script>\nimport {ref, onBeforeMount, computed} from 'vue';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  name: 'LeavePeriodDropdown',\n  props: {\n    modelValue: {\n      type: Object,\n      default: null,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-periods',\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    onBeforeMount(() => {\n      http.getAll().then(({data}) => {\n        options.value = data.data.map((item) => {\n          const startDate = formatDate(\n            parseDate(item.startDate),\n            jsDateFormat,\n            {locale},\n          );\n          const endDate = formatDate(parseDate(item.endDate), jsDateFormat, {\n            locale,\n          });\n\n          return {\n            id: `${item.startDate}_${item.endDate}`,\n            label: `${startDate} - ${endDate}`,\n            startDate: item.startDate,\n            endDate: item.endDate,\n          };\n        });\n      });\n    });\n\n    const selectedPeriod = computed(() => {\n      return options.value.find(\n        (_option) => _option.id === props.modelValue?.id,\n      );\n    });\n\n    return {\n      options,\n      selectedPeriod,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}