{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-09c44eea\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_project_autocomplete = _resolveComponent(\"project-autocomplete\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    class: \"orangehrm-dialog-modal\",\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.copy_activity')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_project_autocomplete, {\n          modelValue: $data.project,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.project = $event),\n          rules: $data.rules.project,\n          \"only-allowed\": false,\n          label: _ctx.$t('time.project_name'),\n          \"exclude-project-ids\": [$props.projectId],\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"rules\", \"label\", \"exclude-project-ids\"])]),\n        _: 1\n      }), $data.activities && $data.activities.length > 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createVNode(_component_oxd_divider), _createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-activites-container\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activities, activity => {\n          return _openBlock(), _createBlock(_component_oxd_grid_item, {\n            key: activity.id\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.selectedActivities,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedActivities = $event),\n              type: \"checkbox\",\n              value: activity.id,\n              disabled: !activity.unique,\n              \"option-label\": activity.name\n            }, null, 8, [\"modelValue\", \"value\", \"disabled\", \"option-label\"])]),\n            _: 2\n          }, 1024);\n        }), 128))]),\n        _: 1\n      })], 64)) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          type: \"button\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;;EAqBSA,KAAK,EAAC;AAAwB;;;;;;;;;;;;;;;uBADrCC,aA6CaC;IA7CDF,KAAK,EAAC,wBAAwB;IAAE,eAAW,EAAEG;;sBACvD,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAA8B,mCAA3BC,OAAE;;UAGTH,aAAeI,yBACfJ,aAqCWK;MArCAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEX;;wBAC5C,MASe,CATfG,aASeS;0BARb,MAOE,CAPFT,aAOEU;sBANSH,aAAO;qEAAPA,aAAO;UACfI,KAAK,EAAEJ,WAAK,CAACK,OAAO;UACpB,cAAY,EAAE,KAAK;UACnBC,KAAK,EAAEV,OAAE;UACT,qBAAmB,GAAGW,gBAAS;UAChCC,QAAQ,EAAR;;;UAGYR,gBAAU,IAAIA,gBAAU,CAACS,MAAM,sBAA/CC,oBAaWC;QAAAC;MAAA,IAZTnB,aAAeI,yBACfJ,aAUWoB;QAVAC,IAAI,EAAE,CAAC;QAAE3B,KAAK,EAAC;;0BACT,MAA8B,oBAA7CuB,oBAQgBC,6BARkBX,gBAAU,EAAtBe,QAAQ;+BAA9B3B,aAQgB4B;YAR+BJ,GAAG,EAAEG,QAAQ,CAACE;;8BAC3D,MAME,CANFxB,aAMEyB;0BALSlB,wBAAkB;yEAAlBA,wBAAkB;cAC3BL,IAAI,EAAC,UAAU;cACdwB,KAAK,EAAEJ,QAAQ,CAACE,EAAE;cAClBG,QAAQ,GAAGL,QAAQ,CAACM,MAAM;cAC1B,cAAY,EAAEN,QAAQ,CAACO;;;;;;iDAMhC7B,aAAeI,yBACfJ,aASmB8B;0BARjB,MAAiB,CAAjB9B,aAAiB+B,2BACjB/B,aAKEgC;UAJA9B,IAAI,EAAC,QAAQ;UACb,cAAY,EAAC,OAAO;UACnBW,KAAK,EAAEV,OAAE;UACT8B,OAAK,EAAEpC;2CAEVG,aAAiBkC","names":["class","_createBlock","_component_oxd_dialog","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_form_row","_component_project_autocomplete","rules","project","label","$props","required","length","_createElementBlock","_Fragment","key","_component_oxd_grid","cols","activity","_component_oxd_grid_item","id","_component_oxd_input_field","value","disabled","unique","name","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\components\\CopyActivityModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog class=\"orangehrm-dialog-modal\" @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('time.copy_activity') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <project-autocomplete\n          v-model=\"project\"\n          :rules=\"rules.project\"\n          :only-allowed=\"false\"\n          :label=\"$t('time.project_name')\"\n          :exclude-project-ids=\"[projectId]\"\n          required\n        />\n      </oxd-form-row>\n      <template v-if=\"activities && activities.length > 0\">\n        <oxd-divider />\n        <oxd-grid :cols=\"2\" class=\"orangehrm-activites-container\">\n          <oxd-grid-item v-for=\"activity in activities\" :key=\"activity.id\">\n            <oxd-input-field\n              v-model=\"selectedActivities\"\n              type=\"checkbox\"\n              :value=\"activity.id\"\n              :disabled=\"!activity.unique\"\n              :option-label=\"activity.name\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </template>\n\n      <oxd-divider />\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {OxdDialog} from '@ohrm/oxd';\nimport {required, validSelection} from '@ohrm/core/util/validation/rules';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\n\nexport default {\n  name: 'CopyActivityModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'project-autocomplete': ProjectAutocomplete,\n  },\n  props: {\n    projectId: {\n      type: Number,\n      required: true,\n    },\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      project: null,\n      activities: null,\n      selectedActivities: [],\n      rules: {\n        project: [\n          required,\n          validSelection,\n          () => {\n            if (this.activities !== null && this.activities.length === 0) {\n              return this.$t('time.no_assigned_activities');\n            } else if (\n              Array.isArray(this.activities) &&\n              this.selectedActivities.length === 0\n            ) {\n              const hasUnique = this.activities.find(\n                (activity) => activity.unique === true,\n              );\n              return hasUnique\n                ? this.$t('time.no_activities_selected')\n                : this.$t('general.already_exists');\n            } else {\n              return true;\n            }\n          },\n        ],\n      },\n    };\n  },\n  watch: {\n    project(value) {\n      this.activities = null;\n      this.selectedActivities = [];\n      if (value) {\n        this.isLoading = true;\n        this.http\n          .request({\n            method: 'GET',\n            url: `/api/v2/time/projects/${this.projectId}/activities/copy/${value.id}`,\n            params: {limit: 0},\n          })\n          .then((response) => {\n            const {data} = response.data;\n            this.activities = data;\n            this.selectedActivities = Array.isArray(data)\n              ? data\n                  .filter((activity) => activity.unique === true)\n                  .map((activity) => activity.id)\n              : [];\n            this.isLoading = false;\n          });\n      }\n    },\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'POST',\n          url: `/api/v2/time/projects/${this.projectId}/activities/copy/${this.project.id}`,\n          data: {\n            activityIds: this.selectedActivities,\n          },\n        })\n        .then(() => {\n          this.$toast.updateSuccess();\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-activites-container {\n  max-height: 180px;\n  overflow-y: auto;\n  @include oxd-scrollbar();\n}\n::v-deep(.oxd-checkbox-wrapper) {\n  word-break: break-word;\n  .oxd-checkbox-input {\n    flex-shrink: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}