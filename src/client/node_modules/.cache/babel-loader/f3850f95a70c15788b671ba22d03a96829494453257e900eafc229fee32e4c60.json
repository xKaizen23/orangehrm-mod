{"ast":null,"code":"import { required, validDateFormat, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst dependentModel = {\n  name: '',\n  relationshipType: null,\n  relationship: '',\n  dateOfBirth: ''\n};\nexport default {\n  name: 'EditDependent',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      dependent: {\n        ...dependentModel\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        relationshipType: [required],\n        relationship: [required, shouldNotExceedCharLength(100)],\n        dateOfBirth: [validDateFormat(this.userDateFormat)]\n      },\n      relationshipOptions: [{\n        id: 'child',\n        label: this.$t('pim.child')\n      }, {\n        id: 'other',\n        label: this.$t('pim.other')\n      }]\n    };\n  },\n  computed: {\n    showRelationship() {\n      return this.dependent.relationshipType?.id == 'other';\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.data.id).then(response => {\n      const {\n        data\n      } = response.data;\n      this.dependent = {\n        ...dependentModel,\n        ...data\n      };\n      this.dependent.relationshipType = this.relationshipOptions.find(item => item.id === data.relationshipType);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.data.id, {\n        ...this.dependent,\n        relationshipType: this.dependent.relationshipType?.id\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.dependent = {\n          ...dependentModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","validDateFormat","shouldNotExceedCharLength","useDateFormat","dependentModel","name","relationshipType","relationship","dateOfBirth","props","http","type","Object","data","emits","setup","userDateFormat","isLoading","dependent","rules","relationshipOptions","id","label","$t","computed","showRelationship","beforeMount","get","then","response","find","item","finally","methods","onSave","update","$toast","updateSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EditDependent.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('pim.edit_dependent') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"dependent.name\"\n              :label=\"$t('general.name')\"\n              :rules=\"rules.name\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"dependent.relationshipType\"\n              type=\"select\"\n              :label=\"$t('pim.relationship')\"\n              :rules=\"rules.relationshipType\"\n              :options=\"relationshipOptions\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item v-if=\"showRelationship\">\n            <oxd-input-field\n              v-model=\"dependent.relationship\"\n              :label=\"$t('pim.please_specify')\"\n              :rules=\"rules.relationship\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <date-input\n              v-model=\"dependent.dateOfBirth\"\n              :label=\"$t('pim.date_of_birth')\"\n              :rules=\"rules.dateOfBirth\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n  <oxd-divider />\n</template>\n\n<script>\nimport {\n  required,\n  validDateFormat,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst dependentModel = {\n  name: '',\n  relationshipType: null,\n  relationship: '',\n  dateOfBirth: '',\n};\n\nexport default {\n  name: 'EditDependent',\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup() {\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      dependent: {...dependentModel},\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        relationshipType: [required],\n        relationship: [required, shouldNotExceedCharLength(100)],\n        dateOfBirth: [validDateFormat(this.userDateFormat)],\n      },\n      relationshipOptions: [\n        {id: 'child', label: this.$t('pim.child')},\n        {id: 'other', label: this.$t('pim.other')},\n      ],\n    };\n  },\n\n  computed: {\n    showRelationship() {\n      return this.dependent.relationshipType?.id == 'other';\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.data.id)\n      .then((response) => {\n        const {data} = response.data;\n        this.dependent = {...dependentModel, ...data};\n        this.dependent.relationshipType = this.relationshipOptions.find(\n          (item) => item.id === data.relationshipType,\n        );\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.data.id, {\n          ...this.dependent,\n          relationshipType: this.dependent.relationshipType?.id,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.dependent = {...dependentModel};\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}