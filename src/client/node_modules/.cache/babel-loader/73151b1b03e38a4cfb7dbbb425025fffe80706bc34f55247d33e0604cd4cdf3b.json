{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport usei18n from '@/core/util/composable/usei18n';\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    unselectableClientIds: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const oAuthClientNormalizer = data => {\n      return data.map(item => {\n        const selectable = props.unselectableClientIds.findIndex(id => id === item.clientId);\n        return {\n          id: item.id,\n          name: item.name,\n          redirectUri: item.redirectUri,\n          enabled: item.enabled ? $t('general.enabled') : $t('general.disabled'),\n          isSelectable: selectable === -1,\n          isDisabled: selectable !== -1\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/oauth-clients');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: oAuthClientNormalizer\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'redirectUri',\n        title: this.$t('admin.redirect_uri'),\n        style: {\n          flex: 3\n        }\n      }, {\n        name: 'enabled',\n        title: this.$t('general.status'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveOAuthClient');\n    },\n    onClickEdit(item) {\n      navigate('/admin/editOAuthClient', {}, {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["usePaginate","navigate","APIService","DeleteConfirmationDialog","usei18n","components","props","unselectableClientIds","type","Array","default","setup","$t","oAuthClientNormalizer","data","map","item","selectable","findIndex","id","clientId","name","redirectUri","enabled","isSelectable","isDisabled","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","items","headers","slot","title","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","methods","onClickAdd","onClickDeleteSelected","ids","forEach","index","push","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmCoreOAuthPlugin\\pages\\registerOAuthClient\\OAuthClient.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('admin.oauth_client_list') }}\n        </oxd-text>\n        <div>\n          <oxd-button\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAdd\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport usei18n from '@/core/util/composable/usei18n';\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    unselectableClientIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n\n    const oAuthClientNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableClientIds.findIndex(\n          (id) => id === item.clientId,\n        );\n        return {\n          id: item.id,\n          name: item.name,\n          redirectUri: item.redirectUri,\n          enabled: item.enabled\n            ? $t('general.enabled')\n            : $t('general.disabled'),\n          isSelectable: selectable === -1,\n          isDisabled: selectable !== -1,\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/oauth-clients',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {normalizer: oAuthClientNormalizer});\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: 2},\n        },\n        {\n          name: 'redirectUri',\n          title: this.$t('admin.redirect_uri'),\n          style: {flex: 3},\n        },\n        {\n          name: 'enabled',\n          title: this.$t('general.status'),\n          style: {flex: 2},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveOAuthClient');\n    },\n    onClickEdit(item) {\n      navigate('/admin/editOAuthClient', {}, {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}