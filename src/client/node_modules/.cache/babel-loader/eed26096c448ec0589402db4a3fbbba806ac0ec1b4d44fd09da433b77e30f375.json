{"ast":null,"code":"import useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeaveConflict',\n  props: {\n    workshiftExceeded: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    return {\n      locale,\n      jsDateFormat\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'date',\n        title: this.$t('general.date'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'hours',\n        title: this.$t('leave.no_of_hours'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'type',\n        title: this.$t('leave.leave_type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'comments',\n        title: this.$t('general.comments'),\n        style: {\n          flex: 1\n        }\n      }]\n    };\n  },\n  computed: {\n    header() {\n      return this.workshiftExceeded ? this.$t('leave.workshift_length_exceeded_due_to_the_following_leave_request') : this.$t('leave.overlapping_leave_request_found');\n    },\n    items() {\n      return this.data.map(item => {\n        return {\n          date: formatDate(parseDate(item.date), this.jsDateFormat, {\n            locale: this.locale\n          }),\n          hours: parseFloat(item.lengthHours).toFixed(2),\n          type: item.leaveType?.name,\n          status: item.status?.name,\n          comments: item.lastComment?.comment\n        };\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA6CA,OAAOA,aAAY,MAAO,sCAAsC;AAChE,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAChE,OAAOC,SAAQ,MAAO,kCAAkC;AAExD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,iBAAiB,EAAE;MACjBC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACDC,IAAI,EAAE;MACJH,IAAI,EAAEI,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAK,GAAG;IACN,MAAM;MAACC;IAAY,IAAId,aAAa,EAAE;IACtC,MAAM;MAACe;IAAM,IAAIZ,SAAS,EAAE;IAE5B,OAAO;MACLY,MAAM;MACND;IACF,CAAC;EACH,CAAC;EACDJ,IAAI,GAAG;IACL,OAAO;MACLM,OAAO,EAAE,CACP;QACEZ,IAAI,EAAE,MAAM;QACZa,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,cAAc,CAAC;QAC9BC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEhB,IAAI,EAAE,OAAO;QACba,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,mBAAmB,CAAC;QACnCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEhB,IAAI,EAAE,MAAM;QACZa,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,kBAAkB,CAAC;QAClCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEhB,IAAI,EAAE,QAAQ;QACda,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,gBAAgB,CAAC;QAChCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEhB,IAAI,EAAE,UAAU;QAChBa,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,kBAAkB,CAAC;QAClCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC;IAEL,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,MAAM,GAAG;MACP,OAAO,IAAI,CAAChB,iBAAgB,GACxB,IAAI,CAACY,EAAE,CACL,oEAAoE,CACtE,GACA,IAAI,CAACA,EAAE,CAAC,uCAAuC,CAAC;IACtD,CAAC;IACDK,KAAK,GAAG;MACN,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;QAC7B,OAAO;UACLC,IAAI,EAAEzB,UAAU,CAACC,SAAS,CAACuB,IAAI,CAACC,IAAI,CAAC,EAAE,IAAI,CAACZ,YAAY,EAAE;YACxDC,MAAM,EAAE,IAAI,CAACA;UACf,CAAC,CAAC;UACFY,KAAK,EAAEC,UAAU,CAACH,IAAI,CAACI,WAAW,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;UAC9CvB,IAAI,EAAEkB,IAAI,CAACM,SAAS,EAAE3B,IAAI;UAC1B4B,MAAM,EAAEP,IAAI,CAACO,MAAM,EAAE5B,IAAI;UACzB6B,QAAQ,EAAER,IAAI,CAACS,WAAW,EAAEC;QAC9B,CAAC;MACH,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["useDateFormat","formatDate","parseDate","useLocale","name","props","workshiftExceeded","type","Boolean","default","data","Array","required","setup","jsDateFormat","locale","headers","title","$t","style","flex","computed","header","items","map","item","date","hours","parseFloat","lengthHours","toFixed","leaveType","status","comments","lastComment","comment"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveConflict.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-paper-container\">\n    <div class=\"orangehrm-header-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ header }}\n      </oxd-text>\n    </div>\n    <table-header\n      :loading=\"false\"\n      :selected=\"0\"\n      :total=\"data.length\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :clickable=\"false\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\"></div>\n  </div>\n  <br />\n</template>\n\n<script>\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  name: 'LeaveConflict',\n  props: {\n    workshiftExceeded: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup() {\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    return {\n      locale,\n      jsDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'date',\n          title: this.$t('general.date'),\n          style: {flex: 1},\n        },\n        {\n          name: 'hours',\n          title: this.$t('leave.no_of_hours'),\n          style: {flex: 1},\n        },\n        {\n          name: 'type',\n          title: this.$t('leave.leave_type'),\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          style: {flex: 1},\n        },\n        {\n          name: 'comments',\n          title: this.$t('general.comments'),\n          style: {flex: 1},\n        },\n      ],\n    };\n  },\n\n  computed: {\n    header() {\n      return this.workshiftExceeded\n        ? this.$t(\n            'leave.workshift_length_exceeded_due_to_the_following_leave_request',\n          )\n        : this.$t('leave.overlapping_leave_request_found');\n    },\n    items() {\n      return this.data.map((item) => {\n        return {\n          date: formatDate(parseDate(item.date), this.jsDateFormat, {\n            locale: this.locale,\n          }),\n          hours: parseFloat(item.lengthHours).toFixed(2),\n          type: item.leaveType?.name,\n          status: item.status?.name,\n          comments: item.lastComment?.comment,\n        };\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}