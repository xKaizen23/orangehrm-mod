{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-top-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.edit_language')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.language.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.language.name = $event),\n            label: _ctx.$t('general.language'),\n            required: \"\",\n            readonly: \"\",\n            disabled: \"\"\n          }, null, 8, [\"modelValue\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.language.fluency,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.language.fluency = $event),\n            label: _ctx.$t('pim.fluency'),\n            required: \"\",\n            readonly: \"\",\n            disabled: \"\"\n          }, null, 8, [\"modelValue\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.language.competencyId,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.language.competencyId = $event),\n            type: \"select\",\n            label: _ctx.$t('pim.competency'),\n            options: $props.competencies,\n            rules: $data.rules.competencyId,\n            clear: false,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"options\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.language.comment,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.language.comment = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comments'),\n            rules: $data.rules.comment\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"]), _createVNode(_component_oxd_divider)]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAoD;;;;;;;;;;;;;uBAA/DC,oBAiEM,OAjENC,UAiEM,GAhEJC,aAEaC;IAFHC,GAAG,EAAC,IAAI;IAACL,KAAK,EAAC;;sBAAuB,MAE9C,mCADAM,OAAE;;MAEJH,aAAeI,yBACfJ,aA0DWK;IA1DAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAgCe,CAhCfT,aAgCeU;wBA/Bb,MA8BW,CA9BXV,aA8BWW;QA9BAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAQgB,CARhBG,aAQgBa;4BAPd,MAME,CANFb,aAMEc;wBALSP,cAAQ,CAACQ,IAAI;uEAAbR,cAAQ,CAACQ,IAAI;YACrBC,KAAK,EAAEb,OAAE;YACVc,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR;;;YAGJnB,aAQgBa;4BAPd,MAME,CANFb,aAMEc;wBALSP,cAAQ,CAACa,OAAO;uEAAhBb,cAAQ,CAACa,OAAO;YACxBJ,KAAK,EAAEb,OAAE;YACVc,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR;;;YAGJnB,aAUgBa;4BATd,MAQE,CARFb,aAQEc;wBAPSP,cAAQ,CAACc,YAAY;uEAArBd,cAAQ,CAACc,YAAY;YAC9BC,IAAI,EAAC,QAAQ;YACZN,KAAK,EAAEb,OAAE;YACToB,OAAO,EAAEC,mBAAY;YACrBC,KAAK,EAAElB,WAAK,CAACc,YAAY;YACzBK,KAAK,EAAE,KAAK;YACbT,QAAQ,EAAR;;;;;;;QAMRjB,aAWeU;wBAVb,MASW,CATXV,aASWW;QATAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAOgB,CAPhBG,aAOgBa;UAPDhB,KAAK,EAAC;QAAiB;4BACpC,MAKE,CALFG,aAKEc;wBAJSP,cAAQ,CAACoB,OAAO;uEAAhBpB,cAAQ,CAACoB,OAAO;YACzBL,IAAI,EAAC,UAAU;YACdN,KAAK,EAAEb,OAAE;YACTsB,KAAK,EAAElB,WAAK,CAACoB;;;;;;;QAMtB3B,aASmB4B;wBARjB,MAAiB,CAAjB5B,aAAiB6B,2BACjB7B,aAKE8B;QAJAR,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBN,KAAK,EAAEb,OAAE;QACT4B,OAAK,EAAEtB;yCAEVT,aAAiBgC;;;;uCAGrBhC,aAAeI","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","label","required","readonly","disabled","fluency","competencyId","type","options","$props","rules","clear","comment","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EditLanguage.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-top-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n      $t('general.edit_language')\n    }}</oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.name\"\n              :label=\"$t('general.language')\"\n              required\n              readonly\n              disabled\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.fluency\"\n              :label=\"$t('pim.fluency')\"\n              required\n              readonly\n              disabled\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.competencyId\"\n              type=\"select\"\n              :label=\"$t('pim.competency')\"\n              :options=\"competencies\"\n              :rules=\"rules.competencyId\"\n              :clear=\"false\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"language.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comments')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n    <oxd-divider />\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\n\nconst languageModel = {\n  name: '',\n  fluency: '',\n  competencyId: null,\n  comment: '',\n};\n\nexport default {\n  name: 'EditLanguage',\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    employeeId: {\n      type: String,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n    competencies: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  data() {\n    return {\n      isLoading: false,\n      language: {...languageModel},\n      rules: {\n        competencyId: [required],\n        comment: [shouldNotExceedCharLength(100)],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n        url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.language.name = data.language.name;\n        this.language.fluency = data.fluency.name;\n        this.language.comment = data.comment ? data.comment : '';\n        this.language.competencyId = this.competencies.find(\n          (item) => item.id === data.competency?.id,\n        );\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,\n          data: {\n            competencyId: this.language.competencyId.id,\n            comment: this.language.comment,\n          },\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}