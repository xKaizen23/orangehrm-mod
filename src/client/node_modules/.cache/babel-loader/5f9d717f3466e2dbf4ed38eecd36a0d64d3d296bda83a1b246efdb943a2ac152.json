{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nexport default {\n  name: 'MyActionSummaryWidget',\n  components: {\n    'base-widget': BaseWidget\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/dashboard/employees/action-summary');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      myActions: [],\n      leaveRequestCount: 0,\n      timeSheetCount: 0,\n      reviewCount: 0,\n      selfReviewCount: 0,\n      interviewCount: 0\n    };\n  },\n  computed: {\n    isEmpty() {\n      return this.myActions.length === 0;\n    },\n    emptyText() {\n      return this.$t('dashboard.no_pending_actions');\n    }\n  },\n  beforeMount() {\n    this.isLoading = false;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.myActions = data.map(item => {\n        const {\n          group,\n          pendingActionCount\n        } = item;\n        if (group === 'Leave Requests To Approve') {\n          this.leaveRequestCount = pendingActionCount;\n        }\n        if (group === 'Timesheets To Approve') {\n          this.timeSheetCount = pendingActionCount;\n        }\n        if (group === 'Pending Appraisal Reviews') {\n          this.reviewCount = pendingActionCount;\n        }\n        if (group === 'Pending Self Reviews') {\n          this.selfReviewCount = pendingActionCount;\n        }\n        if (group === 'Candidates To Interview') {\n          this.interviewCount = pendingActionCount;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onClickPendingLeave() {\n      navigate('/leave/viewLeaveList');\n    },\n    onClickPendingTimesheet() {\n      navigate('/time/viewEmployeeTimesheet');\n    },\n    onClickPendingReview() {\n      navigate('/performance/searchEvaluatePerformanceReview');\n    },\n    onClickPendingInterview() {\n      navigate('/recruitment/viewCandidates', undefined, {\n        statusId: 4\n      });\n    },\n    onClickSelfReview() {\n      navigate('/performance/myPerformanceReview');\n    }\n  }\n};","map":{"version":3,"mappings":"AAgHA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,UAAS,MAAO,sDAAsD;AAE7E,eAAe;EACbC,IAAI,EAAE,uBAAuB;EAE7BC,UAAU,EAAE;IACV,aAAa,EAAEF;EACjB,CAAC;EAEDG,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIL,UAAU,CACzBM,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,4CAA4C,CAC7C;IAED,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,iBAAiB,EAAE,CAAC;MACpBC,cAAc,EAAE,CAAC;MACjBC,WAAW,EAAE,CAAC;MACdC,eAAe,EAAE,CAAC;MAClBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,OAAO,GAAG;MACR,OAAO,IAAI,CAACP,SAAS,CAACQ,MAAK,KAAM,CAAC;IACpC,CAAC;IACDC,SAAS,GAAG;MACV,OAAO,IAAI,CAACC,EAAE,CAAC,8BAA8B,CAAC;IAChD;EACF,CAAC;EAEDC,WAAW,GAAG;IACZ,IAAI,CAACC,SAAQ,GAAI,KAAK;IACtB,IAAI,CAACjB,IAAG,CACLkB,MAAM,EAAC,CACPC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAAChB;MAAI,IAAIgB,QAAQ,CAAChB,IAAI;MAC5B,IAAI,CAACC,SAAQ,GAAID,IAAI,CAACiB,GAAG,CAAEC,IAAI,IAAK;QAClC,MAAM;UAACC,KAAK;UAAEC;QAAkB,IAAIF,IAAI;QACxC,IAAIC,KAAI,KAAM,2BAA2B,EAAE;UACzC,IAAI,CAACjB,iBAAgB,GAAIkB,kBAAkB;QAC7C;QACA,IAAID,KAAI,KAAM,uBAAuB,EAAE;UACrC,IAAI,CAAChB,cAAa,GAAIiB,kBAAkB;QAC1C;QACA,IAAID,KAAI,KAAM,2BAA2B,EAAE;UACzC,IAAI,CAACf,WAAU,GAAIgB,kBAAkB;QACvC;QACA,IAAID,KAAI,KAAM,sBAAsB,EAAE;UACpC,IAAI,CAACd,eAAc,GAAIe,kBAAkB;QAC3C;QACA,IAAID,KAAI,KAAM,yBAAyB,EAAE;UACvC,IAAI,CAACb,cAAa,GAAIc,kBAAkB;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,EACAC,OAAO,CAAC,MAAM;MACb,IAAI,CAACR,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDS,OAAO,EAAE;IACPC,mBAAmB,GAAG;MACpBjC,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC;IACDkC,uBAAuB,GAAG;MACxBlC,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC;IACDmC,oBAAoB,GAAG;MACrBnC,QAAQ,CAAC,8CAA8C,CAAC;IAC1D,CAAC;IACDoC,uBAAuB,GAAG;MACxBpC,QAAQ,CAAC,6BAA6B,EAAEqC,SAAS,EAAE;QACjDC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IACDC,iBAAiB,GAAG;MAClBvC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF;AACF,CAAC","names":["navigate","APIService","BaseWidget","name","components","setup","http","window","appGlobal","baseUrl","data","myActions","leaveRequestCount","timeSheetCount","reviewCount","selfReviewCount","interviewCount","computed","isEmpty","length","emptyText","$t","beforeMount","isLoading","getAll","then","response","map","item","group","pendingActionCount","finally","methods","onClickPendingLeave","onClickPendingTimesheet","onClickPendingReview","onClickPendingInterview","undefined","statusId","onClickSelfReview"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmDashboardPlugin\\components\\MyActionSummaryWidget.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <base-widget\n    icon=\"list-check\"\n    :empty=\"isEmpty\"\n    :empty-text=\"emptyText\"\n    :loading=\"isLoading\"\n    :title=\"$t('dashboard.my_actions')\"\n  >\n    <div v-if=\"myActions.length > 0\" class=\"orangehrm-todo-list\">\n      <div v-if=\"leaveRequestCount > 0\" class=\"orangehrm-todo-list-item\">\n        <oxd-icon-button\n          class=\"orangehrm-report-icon\"\n          name=\"attendanceAlt\"\n          icon-type=\"svg\"\n          display-type=\"success\"\n          @click=\"onClickPendingLeave\"\n        />\n        <oxd-text tag=\"p\" @click=\"onClickPendingLeave\">\n          {{\n            $t('dashboard.n_pending_leave_request', {\n              pendingActionsCount: leaveRequestCount,\n            })\n          }}\n        </oxd-text>\n      </div>\n      <div v-if=\"timeSheetCount > 0\" class=\"orangehrm-todo-list-item\">\n        <oxd-icon-button\n          class=\"orangehrm-report-icon\"\n          name=\"timeAlt\"\n          icon-type=\"svg\"\n          display-type=\"warn\"\n          @click=\"onClickPendingTimesheet\"\n        />\n        <oxd-text tag=\"p\" @click=\"onClickPendingTimesheet\">\n          {{\n            $t('dashboard.n_pending_time_sheet', {\n              pendingActionsCount: timeSheetCount,\n            })\n          }}\n        </oxd-text>\n      </div>\n      <div v-if=\"reviewCount > 0\" class=\"orangehrm-todo-list-item\">\n        <oxd-icon-button\n          class=\"orangehrm-report-icon\"\n          name=\"appraisals\"\n          icon-type=\"svg\"\n          display-type=\"danger\"\n          @click=\"onClickPendingReview\"\n        />\n        <oxd-text tag=\"p\" @click=\"onClickPendingReview\">\n          {{\n            $t('dashboard.n_pending_performance_evaluate', {\n              pendingActionsCount: reviewCount,\n            })\n          }}\n        </oxd-text>\n      </div>\n      <div v-if=\"selfReviewCount > 0\" class=\"orangehrm-todo-list-item\">\n        <oxd-icon-button\n          class=\"orangehrm-report-icon\"\n          name=\"appraisals\"\n          icon-type=\"svg\"\n          display-type=\"danger\"\n          @click=\"onClickPendingReview\"\n        />\n        <oxd-text tag=\"p\" @click=\"onClickSelfReview\">\n          {{\n            $t('dashboard.n_pending_self_review', {\n              pendingActionsCount: selfReviewCount,\n            })\n          }}\n        </oxd-text>\n      </div>\n      <div v-if=\"interviewCount > 0\" class=\"orangehrm-todo-list-item\">\n        <oxd-icon-button\n          class=\"orangehrm-report-icon\"\n          name=\"interview\"\n          icon-type=\"svg\"\n          display-type=\"info\"\n          @click=\"onClickPendingInterview\"\n        />\n        <oxd-text tag=\"p\" @click=\"onClickPendingInterview\">\n          {{\n            $t('dashboard.n_pending_candidate_interview', {\n              pendingActionsCount: interviewCount,\n            })\n          }}\n        </oxd-text>\n      </div>\n    </div>\n  </base-widget>\n</template>\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\n\nexport default {\n  name: 'MyActionSummaryWidget',\n\n  components: {\n    'base-widget': BaseWidget,\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/dashboard/employees/action-summary',\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      myActions: [],\n      leaveRequestCount: 0,\n      timeSheetCount: 0,\n      reviewCount: 0,\n      selfReviewCount: 0,\n      interviewCount: 0,\n    };\n  },\n\n  computed: {\n    isEmpty() {\n      return this.myActions.length === 0;\n    },\n    emptyText() {\n      return this.$t('dashboard.no_pending_actions');\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = false;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        this.myActions = data.map((item) => {\n          const {group, pendingActionCount} = item;\n          if (group === 'Leave Requests To Approve') {\n            this.leaveRequestCount = pendingActionCount;\n          }\n          if (group === 'Timesheets To Approve') {\n            this.timeSheetCount = pendingActionCount;\n          }\n          if (group === 'Pending Appraisal Reviews') {\n            this.reviewCount = pendingActionCount;\n          }\n          if (group === 'Pending Self Reviews') {\n            this.selfReviewCount = pendingActionCount;\n          }\n          if (group === 'Candidates To Interview') {\n            this.interviewCount = pendingActionCount;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onClickPendingLeave() {\n      navigate('/leave/viewLeaveList');\n    },\n    onClickPendingTimesheet() {\n      navigate('/time/viewEmployeeTimesheet');\n    },\n    onClickPendingReview() {\n      navigate('/performance/searchEvaluatePerformanceReview');\n    },\n    onClickPendingInterview() {\n      navigate('/recruitment/viewCandidates', undefined, {\n        statusId: 4,\n      });\n    },\n    onClickSelfReview() {\n      navigate('/performance/myPerformanceReview');\n    },\n  },\n};\n</script>\n<style src=\"./my-action-summary-widget.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}