{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-candidate-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_3 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_6 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_jobtitle_dropdown = _resolveComponent(\"jobtitle-dropdown\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_vacancy_dropdown = _resolveComponent(\"vacancy-dropdown\");\n  const _component_hiring_manager_dropdown = _resolveComponent(\"hiring-manager-dropdown\");\n  const _component_candidate_status_dropdown = _resolveComponent(\"candidate-status-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_candidate_autocomplete = _resolveComponent(\"candidate-autocomplete\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('general.candidates')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems,\n      onReset: $options.onReset\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_jobtitle_dropdown, {\n              modelValue: $setup.filters.jobTitle,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.jobTitle = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_vacancy_dropdown, {\n              modelValue: $setup.filters.vacancy,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.vacancy = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_hiring_manager_dropdown, {\n              modelValue: $setup.filters.hiringManager,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.hiringManager = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_candidate_status_dropdown, {\n              modelValue: $setup.filters.status,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.status = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_candidate_autocomplete, {\n              modelValue: $setup.filters.candidate,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.candidate = $event),\n              rules: $setup.rules.candidate\n            }, null, 8, [\"modelValue\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $setup.filters.keywords,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.filters.keywords = $event),\n              label: _ctx.$t('recruitment.keywords'),\n              placeholder: `${_ctx.$t('recruitment.enter_comma_seperated_words')}...`\n            }, null, 8, [\"modelValue\", \"label\", \"placeholder\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.fromDate,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.filters.fromDate = $event),\n              label: _ctx.$t('recruitment.date_of_application'),\n              placeholder: _ctx.$t('general.from'),\n              rules: $setup.rules.fromDate\n            }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.toDate,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.filters.toDate = $event),\n              label: \"Â \",\n              placeholder: _ctx.$t('general.to'),\n              rules: $setup.rules.toDate\n            }, null, 8, [\"modelValue\", \"placeholder\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $setup.filters.methodOfApplication,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.filters.methodOfApplication = $event),\n              label: _ctx.$t('recruitment.method_of_application'),\n              type: \"select\",\n              options: $data.applications\n            }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          type: \"reset\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset')\n        }, null, 8, [\"label\"]), _createVNode(_component_submit_button, {\n          label: _ctx.$t('general.search')\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\", \"onReset\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_ctx.$can.create('recruitment_candidates') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_oxd_button, {\n    label: _ctx.$t('general.add'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])])) : _createCommentVNode(\"\", true), _createVNode(_component_table_header, {\n    selected: $data.checkedItems.length,\n    total: $setup.total,\n    loading: $setup.isLoading,\n    \"show-divider\": _ctx.$can.create('recruitment_candidates'),\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"selected\", \"total\", \"loading\", \"show-divider\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_card_table, {\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[9] || (_cache[9] = $event => $data.checkedItems = $event),\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[10] || (_cache[10] = $event => $setup.sortDefinition = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: true,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"selected\", \"order\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_6, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[11] || (_cache[11] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","onReset","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_jobtitle_dropdown","$setup","jobTitle","_component_vacancy_dropdown","vacancy","_component_hiring_manager_dropdown","hiringManager","_component_candidate_status_dropdown","status","_component_candidate_autocomplete","candidate","rules","_component_oxd_input_field","keywords","label","placeholder","_component_date_input","fromDate","toDate","methodOfApplication","type","options","$data","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","_component_submit_button","_hoisted_2","_hoisted_3","create","_hoisted_4","onClick","_component_table_header","selected","length","total","loading","onDelete","_hoisted_5","_component_oxd_card_table","order","headers","items","data","selectable","clickable","_hoisted_6","_createBlock","_component_oxd_pagination","current","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewCandidatesList.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-candidate-page\">\n    <oxd-table-filter :filter-title=\"$t('general.candidates')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"onReset\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <jobtitle-dropdown v-model=\"filters.jobTitle\"></jobtitle-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <vacancy-dropdown v-model=\"filters.vacancy\"></vacancy-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <hiring-manager-dropdown\n                v-model=\"filters.hiringManager\"\n              ></hiring-manager-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <candidate-status-dropdown v-model=\"filters.status\" />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <candidate-autocomplete\n                v-model=\"filters.candidate\"\n                :rules=\"rules.candidate\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.keywords\"\n                :label=\"$t('recruitment.keywords')\"\n                :placeholder=\"`${$t(\n                  'recruitment.enter_comma_seperated_words',\n                )}...`\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.fromDate\"\n                :label=\"$t('recruitment.date_of_application')\"\n                :placeholder=\"$t('general.from')\"\n                :rules=\"rules.fromDate\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.toDate\"\n                label=\"&nbsp\"\n                :placeholder=\"$t('general.to')\"\n                :rules=\"rules.toDate\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.methodOfApplication\"\n                :label=\"$t('recruitment.method_of_application')\"\n                type=\"select\"\n                :options=\"applications\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            type=\"reset\"\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n          />\n          <submit-button :label=\"$t('general.search')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div\n        v-if=\"$can.create('recruitment_candidates')\"\n        class=\"orangehrm-header-container\"\n      >\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        :show-divider=\"$can.create('recruitment_candidates')\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport CandidateAutocomplete from '@/orangehrmRecruitmentPlugin/components/CandidateAutocomplete';\nimport HiringManagerDropdown from '@/orangehrmRecruitmentPlugin/components/HiringManagerDropdown';\nimport CandidateStatusDropdown from '@/orangehrmRecruitmentPlugin/components/CandidateStatusDropdown';\n\nconst defaultFilters = {\n  jobTitle: null,\n  vacancy: null,\n  hiringManager: null,\n  status: null,\n  keywords: null,\n  application: null,\n  candidate: null,\n  fromDate: null,\n  toDate: null,\n};\n\nconst defaultSortOrder = {\n  'vacancy.name': 'DEFAULT',\n  'candidate.lastName': 'DEFAULT',\n  'hiringManager.lastName': 'DEFAULT',\n  'candidate.dateOfApplication': 'DESC',\n  'candidateVacancy.status': 'DEFAULT',\n};\n\nexport default {\n  components: {\n    'vacancy-dropdown': VacancyDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'delete-confirmation': DeleteConfirmationDialog,\n    'candidate-autocomplete': CandidateAutocomplete,\n    'hiring-manager-dropdown': HiringManagerDropdown,\n    'candidate-status-dropdown': CandidateStatusDropdown,\n  },\n\n  props: {\n    status: {\n      type: Object,\n      required: false,\n      default: null,\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const statuses = [\n      {id: 1, label: $t('recruitment.application_initiated')},\n      {id: 2, label: $t('recruitment.shortlisted')},\n      {id: 3, label: $t('leave.rejected')},\n      {id: 4, label: $t('recruitment.interview_scheduled')},\n      {id: 5, label: $t('recruitment.interview_passed')},\n      {id: 6, label: $t('recruitment.interview_failed')},\n      {id: 7, label: $t('recruitment.job_offered')},\n      {id: 8, label: $t('recruitment.offer_declined')},\n      {id: 9, label: $t('recruitment.hired')},\n    ];\n    const candidateDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          vacancy:\n            item.vacancy?.status === false\n              ? `${item.vacancy?.name} (${$t('general.closed')})`\n              : item.vacancy?.name,\n          candidate: `${item.firstName} ${item.middleName || ''} ${\n            item.lastName\n          }`,\n          manager: item?.vacancy?.hiringManager?.id\n            ? $tEmpName(item.vacancy.hiringManager, {\n                includeMiddle: true,\n                excludePastEmpTag: false,\n              })\n            : $t('general.deleted'),\n          dateOfApplication: formatDate(\n            parseDate(item.dateOfApplication),\n            jsDateFormat,\n            {locale},\n          ),\n          status:\n            statuses.find((status) => status.id === item.status?.id)?.label ||\n            '',\n          resume: item.hasAttachment,\n          isSelectable: item.deletable,\n        };\n      });\n    };\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.status && {status: props.status}),\n    });\n    const rules = {\n      candidate: [validSelection],\n      fromDate: [\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => filters.value.toDate,\n          $t('general.from_date_should_be_before_to_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      toDate: [\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('general.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n    };\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        jobTitleId: filters.value.jobTitle?.id,\n        vacancyId: filters.value.vacancy?.id,\n        hiringManagerId: filters.value.hiringManager?.id,\n        keywords: filters.value.keywords,\n        candidateId: filters.value.candidate?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        status: filters.value.status?.id,\n        methodOfApplication: filters.value.methodOfApplication?.id,\n        model: 'list',\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/candidates',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: candidateDataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      rules,\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      headers: [\n        {\n          name: 'vacancy',\n          title: this.$t('recruitment.vacancy'),\n          sortField: 'vacancy.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'candidate',\n          slot: 'title',\n          title: this.$t('recruitment.candidate'),\n          sortField: 'candidate.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'manager',\n          title: this.$t('recruitment.hiring_manager'),\n          sortField: 'hiringManager.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'dateOfApplication',\n          title: this.$t('recruitment.date_of_application'),\n          sortField: 'candidate.dateOfApplication',\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          sortField: 'candidateVacancy.status',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ],\n      applications: [\n        {\n          id: 1,\n          label: this.$t('recruitment.manual'),\n        },\n        {\n          id: 2,\n          label: this.$t('recruitment.online'),\n        },\n      ],\n    };\n  },\n  methods: {\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {\n        view: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'eye-fill',\n          },\n        },\n      };\n      if (row.isSelectable) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n      if (row.resume) {\n        cellConfig.download = {\n          onClick: this.onDownload,\n          props: {\n            name: 'download',\n          },\n        };\n      }\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    onClickAdd() {\n      navigate('/recruitment/addCandidate');\n    },\n    onClickEdit(item) {\n      navigate('/recruitment/addCandidate/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onDownload(item) {\n      if (!item?.id) return;\n      const fileUrl = 'recruitment/viewCandidateAttachment/candidateId';\n      const downUrl = `${window.appGlobal.baseUrl}/${fileUrl}/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}