{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-top-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_report_to_employee_autocomplete = _resolveComponent(\"report-to-employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.type === 'Supervisor' ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.add_supervisor')), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true), $props.type === 'Subordinate' ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.add_subordinate')), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_report_to_employee_autocomplete, {\n            modelValue: $data.reportTo.employee,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.reportTo.employee = $event),\n            rules: $data.rules.employee,\n            api: $setup.api,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"api\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.reportTo.reportingMethod,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.reportTo.reportingMethod = $event),\n            type: \"select\",\n            label: _ctx.$t('pim.reporting_method'),\n            rules: $data.rules.reportingMethod,\n            options: $props.reportingMethods,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"options\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: \"Cancel\",\n        onClick: $options.onCancel\n      }, null, 8, [\"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"]), _createVNode(_component_oxd_divider)]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAoD;;;;;;;;;;;;;;uBAA/DC,oBAoDM,OApDNC,UAoDM,GAlDIC,WAAI,mCADZC,aAMWC;;IAJTC,GAAG,EAAC,IAAI;IACRN,KAAK,EAAC;;sBAEN,MAA8B,mCAA3BO,OAAE;;uCAGCJ,WAAI,oCADZC,aAMWC;;IAJTC,GAAG,EAAC,IAAI;IACRN,KAAK,EAAC;;sBAEN,MAA+B,mCAA5BO,OAAE;;uCAEPC,aAAeC,yBACfD,aAkCWE;IAlCAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAqBe,CArBfN,aAqBeO;wBApBb,MAmBW,CAnBXP,aAmBWQ;QAnBAC,IAAI,EAAE,CAAC;QAAEjB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBQ,aAOgBU;4BANd,MAKE,CALFV,aAKEW;wBAJSP,cAAQ,CAACQ,QAAQ;uEAAjBR,cAAQ,CAACQ,QAAQ;YACzBC,KAAK,EAAET,WAAK,CAACQ,QAAQ;YACrBE,GAAG,EAAEC,UAAG;YACTC,QAAQ,EAAR;;;YAGJhB,aASgBU;4BARd,MAOE,CAPFV,aAOEiB;wBANSb,cAAQ,CAACc,eAAe;uEAAxBd,cAAQ,CAACc,eAAe;YACjCC,IAAI,EAAC,QAAQ;YACZC,KAAK,EAAErB,OAAE;YACTc,KAAK,EAAET,WAAK,CAACc,eAAe;YAC5BG,OAAO,EAAE1B,uBAAgB;YAC1BqB,QAAQ,EAAR;;;;;;;QAMRhB,aASmBsB;wBARjB,MAAiB,CAAjBtB,aAAiBuB,2BACjBvB,aAKEwB;QAJAL,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACpBC,KAAK,EAAC,QAAQ;QACbK,OAAK,EAAEnB;gCAEVN,aAAiB0B;;;;uCAGrB1B,aAAeC","names":["class","_createElementBlock","_hoisted_1","$props","_createBlock","_component_oxd_text","tag","_ctx","_createVNode","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_report_to_employee_autocomplete","employee","rules","api","$setup","required","_component_oxd_input_field","reportingMethod","type","label","options","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\SaveEmployeeReportTo.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-top-padding\">\n    <oxd-text\n      v-if=\"type === 'Supervisor'\"\n      tag=\"h6\"\n      class=\"orangehrm-main-title\"\n    >\n      {{ $t('pim.add_supervisor') }}\n    </oxd-text>\n    <oxd-text\n      v-if=\"type === 'Subordinate'\"\n      tag=\"h6\"\n      class=\"orangehrm-main-title\"\n    >\n      {{ $t('pim.add_subordinate') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <report-to-employee-autocomplete\n              v-model=\"reportTo.employee\"\n              :rules=\"rules.employee\"\n              :api=\"api\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"reportTo.reportingMethod\"\n              type=\"select\"\n              :label=\"$t('pim.reporting_method')\"\n              :rules=\"rules.reportingMethod\"\n              :options=\"reportingMethods\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          label=\"Cancel\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n    <oxd-divider />\n  </div>\n</template>\n\n<script>\nimport ReportToEmployeeAutocomplete from '@/orangehrmPimPlugin/components/ReportToEmployeeAutocomplete';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@ohrm/core/util/validation/rules';\n\nconst reportToModel = {\n  employee: null,\n  reportingMethod: null,\n};\n\nexport default {\n  name: 'SaveEmployeeReportTo',\n\n  components: {\n    'report-to-employee-autocomplete': ReportToEmployeeAutocomplete,\n  },\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    reportingMethods: {\n      type: Array,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    empNumber: {\n      type: String,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props) {\n    const api = `/api/v2/pim/employees/${props.empNumber}/report-to/allowed`;\n    return {\n      api,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      reportTo: {...reportToModel},\n      rules: {\n        employee: [required, shouldNotExceedCharLength(100), validSelection],\n        reportingMethod: [required],\n      },\n    };\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          empNumber: this.reportTo.employee?.id,\n          reportingMethodId: this.reportTo.reportingMethod?.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}