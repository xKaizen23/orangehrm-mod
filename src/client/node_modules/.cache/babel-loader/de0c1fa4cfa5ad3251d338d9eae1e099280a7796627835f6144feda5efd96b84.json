{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport ReportCriterion from '@/orangehrmPimPlugin/components/ReportCriterion';\nimport ReportDisplayField from '@/orangehrmPimPlugin/components/ReportDisplayField';\nimport useEmployeeReport from '@/orangehrmPimPlugin/util/composable/useEmployeeReport';\nexport default {\n  components: {\n    'report-criterion': ReportCriterion,\n    'report-display-field': ReportDisplayField\n  },\n  props: {\n    selectionCriteria: {\n      type: Array,\n      required: true\n    },\n    displayFieldGroups: {\n      type: Array,\n      required: true\n    },\n    displayFields: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/reports/defined');\n    const {\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields\n    } = useEmployeeReport(props.selectionCriteria, props.displayFields, props.displayFieldGroups);\n    return {\n      http,\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rules: {\n        name: [required, shouldNotExceedCharLength(250)],\n        includeEmployees: [required]\n      },\n      includeOpts: [{\n        id: 1,\n        key: 'onlyCurrent',\n        label: this.$t('general.current_employees_only')\n      }, {\n        id: 2,\n        key: 'currentAndPast',\n        label: this.$t('general.current_and_past_employees')\n      }, {\n        id: 3,\n        key: 'onlyPast',\n        label: this.$t('general.past_employees_only')\n      }]\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll({\n      limit: 0\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => item.name == v);\n        return index === -1 || this.$t('general.already_exists');\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/pim/viewDefinedPredefinedReports');\n    },\n    onSave() {\n      if (Object.keys(this.report.displayFieldSelected).length === 0) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('pim.at_least_one_display_field_should_be_added')\n        });\n      }\n      this.isLoading = true;\n      let reportId = null;\n      const payload = this.serializeBody(this.report);\n      this.http.create(payload).then(response => {\n        const {\n          data\n        } = response.data;\n        reportId = data.id;\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        reportId && navigate('/pim/displayPredefinedReport/{id}', {\n          id: reportId\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","required","shouldNotExceedCharLength","APIService","ReportCriterion","ReportDisplayField","useEmployeeReport","components","props","selectionCriteria","type","Array","displayFieldGroups","displayFields","setup","http","window","appGlobal","baseUrl","report","addCriterion","serializeBody","addDisplayField","removeCriterion","removeDisplayField","removeDisplayFieldGroup","availableCriteria","availableFieldGroups","availableDisplyFields","data","isLoading","rules","name","includeEmployees","includeOpts","id","key","label","$t","beforeMount","getAll","limit","then","response","push","v","index","findIndex","item","finally","methods","onCancel","onSave","Object","keys","displayFieldSelected","length","$toast","warn","title","message","reportId","payload","create","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\reports\\SaveEmployeeReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n        $t('pim.add_report')\n      }}</oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.name\"\n                :label=\"$t('general.report_name')\"\n                :placeholder=\"$t('general.type_here_message')\"\n                :rules=\"rules.name\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n            {{ $t('pim.selection_criteria') }}\n          </oxd-text>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"orangehrm-report-criteria --span-column-2\">\n              <oxd-input-field\n                v-model=\"report.criterion\"\n                type=\"select\"\n                :label=\"$t('pim.selection_criteria')\"\n                :options=\"availableCriteria\"\n              />\n              <oxd-input-group>\n                <oxd-icon-button\n                  class=\"orangehrm-report-icon\"\n                  name=\"plus\"\n                  @click=\"addCriterion\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.includeEmployees\"\n                type=\"select\"\n                :label=\"$t('pim.include')\"\n                :options=\"includeOpts\"\n                :show-empty-selector=\"false\"\n              />\n            </oxd-grid-item>\n            <!-- start selected criteria fields -->\n            <report-criterion\n              v-for=\"(criterion, index) in report.criteriaSelected\"\n              :key=\"criterion\"\n              v-model:operator=\"\n                report.criteriaFieldValues[criterion.id].operator\n              \"\n              v-model:valueX=\"report.criteriaFieldValues[criterion.id].valueX\"\n              v-model:valueY=\"report.criteriaFieldValues[criterion.id].valueY\"\n              :criterion=\"criterion\"\n              @delete=\"removeCriterion(index)\"\n            >\n            </report-criterion>\n            <!-- end selected criteria fields -->\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n            {{ $t('pim.display_fields') }}\n          </oxd-text>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.fieldGroup\"\n                type=\"select\"\n                :label=\"$t('pim.select_display_field_group')\"\n                :options=\"availableFieldGroups\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-report-criteria --span-column-2\">\n              <oxd-input-field\n                v-model=\"report.displayField\"\n                type=\"select\"\n                :label=\"$t('pim.select_display_field')\"\n                :options=\"availableDisplyFields\"\n              />\n              <oxd-input-group>\n                <oxd-icon-button\n                  class=\"orangehrm-report-icon\"\n                  name=\"plus\"\n                  @click=\"addDisplayField\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n\n            <!-- start display group fields -->\n            <report-display-field\n              v-for=\"(fieldGroup, index) in report.fieldGroupSelected\"\n              :key=\"fieldGroup\"\n              v-model:includeHeader=\"\n                report.displayFieldSelected[fieldGroup.id].includeHeader\n              \"\n              :field-group=\"fieldGroup\"\n              :selected-fields=\"\n                report.displayFieldSelected[fieldGroup.id].fields\n              \"\n              @delete=\"removeDisplayFieldGroup(index)\"\n              @delete-chip=\"removeDisplayField($event, index)\"\n            >\n            </report-display-field>\n            <!-- end display group fields -->\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ReportCriterion from '@/orangehrmPimPlugin/components/ReportCriterion';\nimport ReportDisplayField from '@/orangehrmPimPlugin/components/ReportDisplayField';\nimport useEmployeeReport from '@/orangehrmPimPlugin/util/composable/useEmployeeReport';\n\nexport default {\n  components: {\n    'report-criterion': ReportCriterion,\n    'report-display-field': ReportDisplayField,\n  },\n\n  props: {\n    selectionCriteria: {\n      type: Array,\n      required: true,\n    },\n    displayFieldGroups: {\n      type: Array,\n      required: true,\n    },\n    displayFields: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/reports/defined',\n    );\n    const {\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields,\n    } = useEmployeeReport(\n      props.selectionCriteria,\n      props.displayFields,\n      props.displayFieldGroups,\n    );\n\n    return {\n      http,\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      rules: {\n        name: [required, shouldNotExceedCharLength(250)],\n        includeEmployees: [required],\n      },\n      includeOpts: [\n        {\n          id: 1,\n          key: 'onlyCurrent',\n          label: this.$t('general.current_employees_only'),\n        },\n        {\n          id: 2,\n          key: 'currentAndPast',\n          label: this.$t('general.current_and_past_employees'),\n        },\n        {id: 3, key: 'onlyPast', label: this.$t('general.past_employees_only')},\n      ],\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll({limit: 0})\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.name.push((v) => {\n          const index = data.findIndex((item) => item.name == v);\n          return index === -1 || this.$t('general.already_exists');\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/pim/viewDefinedPredefinedReports');\n    },\n    onSave() {\n      if (Object.keys(this.report.displayFieldSelected).length === 0) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('pim.at_least_one_display_field_should_be_added'),\n        });\n      }\n\n      this.isLoading = true;\n      let reportId = null;\n      const payload = this.serializeBody(this.report);\n      this.http\n        .create(payload)\n        .then((response) => {\n          const {data} = response.data;\n          reportId = data.id;\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          reportId &&\n            navigate('/pim/displayPredefinedReport/{id}', {id: reportId});\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee-report.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}