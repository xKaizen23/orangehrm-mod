{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_leave_conflict = _resolveComponent(\"leave-conflict\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_leave_balance = _resolveComponent(\"leave-balance\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_leave_duration_input = _resolveComponent(\"leave-duration-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showLeaveConflict ? (_openBlock(), _createBlock(_component_leave_conflict, {\n    key: 0,\n    \"workshift-exceeded\": $data.isWorkShiftExceeded,\n    data: $data.leaveConflictData\n  }, null, 8, [\"workshift-exceeded\", \"data\"])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.apply_leave')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), !$data.isLoading && $data.leaveTypes.length === 0 ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    type: \"subtitle-2\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.no_leave_types_with_leave_balance')), 1)]),\n    _: 1\n  })) : (_openBlock(), _createBlock(_component_oxd_form, {\n    key: 1,\n    ref: \"formRef\",\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leave.type,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leave.type = $event),\n            type: \"select\",\n            rules: $data.rules.type,\n            options: $data.leaveTypes,\n            label: _ctx.$t('leave.leave_type'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"options\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_balance, {\n            \"leave-data\": $data.leave\n          }, null, 8, [\"leave-data\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.leave.fromDate,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leave.fromDate = $event),\n            label: _ctx.$t('general.from_date'),\n            rules: $data.rules.fromDate,\n            years: $data.yearsArray,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.leave.toDate,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.leave.toDate = $event),\n            label: _ctx.$t('general.to_date'),\n            rules: $data.rules.toDate,\n            years: $data.yearsArray,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $options.appliedLeaveDuration == 1 ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_leave_duration_input, {\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[3] || (_cache[3] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[4] || (_cache[4] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[5] || (_cache[5] = $event => $data.leave.duration.toTime = $event),\n          label: _ctx.$t('general.duration'),\n          \"work-shift\": $props.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $options.appliedLeaveDuration > 1 ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leave.partialOptions,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.leave.partialOptions = $event),\n            type: \"select\",\n            label: _ctx.$t('leave.partial_days'),\n            options: $data.partialOptions\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), $options.showDuration ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 0,\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[7] || (_cache[7] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[8] || (_cache[8] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[9] || (_cache[9] = $event => $data.leave.duration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('general.duration'),\n          \"work-shift\": $props.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true), $options.showStartDay ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 1,\n          duration: $data.leave.duration.type,\n          \"onUpdate:duration\": _cache[10] || (_cache[10] = $event => $data.leave.duration.type = $event),\n          fromTime: $data.leave.duration.fromTime,\n          \"onUpdate:fromTime\": _cache[11] || (_cache[11] = $event => $data.leave.duration.fromTime = $event),\n          toTime: $data.leave.duration.toTime,\n          \"onUpdate:toTime\": _cache[12] || (_cache[12] = $event => $data.leave.duration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('leave.start_day'),\n          \"work-shift\": $props.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true), $options.showEndDay ? (_openBlock(), _createBlock(_component_leave_duration_input, {\n          key: 2,\n          duration: $data.leave.endDuration.type,\n          \"onUpdate:duration\": _cache[13] || (_cache[13] = $event => $data.leave.endDuration.type = $event),\n          fromTime: $data.leave.endDuration.fromTime,\n          \"onUpdate:fromTime\": _cache[14] || (_cache[14] = $event => $data.leave.endDuration.fromTime = $event),\n          toTime: $data.leave.endDuration.toTime,\n          \"onUpdate:toTime\": _cache[15] || (_cache[15] = $event => $data.leave.endDuration.toTime = $event),\n          partial: true,\n          label: _ctx.$t('leave.end_day'),\n          \"work-shift\": $props.workShift\n        }, null, 8, [\"duration\", \"fromTime\", \"toTime\", \"label\", \"work-shift\"])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leave.comment,\n            \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.leave.comment = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comments'),\n            rules: $data.rules.comment\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_submit_button, {\n        label: _ctx.$t('general.apply')\n      }, null, 8, [\"label\"])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"]))])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","$data","_createBlock","_component_leave_conflict","data","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","length","type","_component_oxd_form","ref","loading","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","rules","options","label","required","_component_leave_balance","_component_date_input","fromDate","years","toDate","key","_component_leave_duration_input","duration","fromTime","toTime","$props","partialOptions","partial","endDuration","comment","_component_oxd_form_actions","_component_required_text","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\LeaveApply.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <leave-conflict\n      v-if=\"showLeaveConflict\"\n      :workshift-exceeded=\"isWorkShiftExceeded\"\n      :data=\"leaveConflictData\"\n    ></leave-conflict>\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('leave.apply_leave') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-text v-if=\"!isLoading && leaveTypes.length === 0\" type=\"subtitle-2\">\n        {{ $t('leave.no_leave_types_with_leave_balance') }}\n      </oxd-text>\n\n      <oxd-form\n        v-else\n        ref=\"formRef\"\n        :loading=\"isLoading\"\n        @submit-valid=\"onSave\"\n      >\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leave.type\"\n                type=\"select\"\n                :rules=\"rules.type\"\n                :options=\"leaveTypes\"\n                :label=\"$t('leave.leave_type')\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <leave-balance :leave-data=\"leave\"></leave-balance>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"leave.fromDate\"\n                :label=\"$t('general.from_date')\"\n                :rules=\"rules.fromDate\"\n                :years=\"yearsArray\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"leave.toDate\"\n                :label=\"$t('general.to_date')\"\n                :rules=\"rules.toDate\"\n                :years=\"yearsArray\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <!-- Single Day|Duration -->\n        <oxd-form-row v-if=\"appliedLeaveDuration == 1\">\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <leave-duration-input\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :label=\"$t('general.duration')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n          </oxd-grid>\n        </oxd-form-row>\n        <!-- Single Day|Duration -->\n\n        <!-- Partial Day|Duration -->\n        <oxd-form-row v-if=\"appliedLeaveDuration > 1\">\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leave.partialOptions\"\n                type=\"select\"\n                :label=\"$t('leave.partial_days')\"\n                :options=\"partialOptions\"\n              />\n            </oxd-grid-item>\n            <leave-duration-input\n              v-if=\"showDuration\"\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('general.duration')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n            <leave-duration-input\n              v-if=\"showStartDay\"\n              v-model:duration=\"leave.duration.type\"\n              v-model:fromTime=\"leave.duration.fromTime\"\n              v-model:toTime=\"leave.duration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('leave.start_day')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n            <leave-duration-input\n              v-if=\"showEndDay\"\n              v-model:duration=\"leave.endDuration.type\"\n              v-model:fromTime=\"leave.endDuration.fromTime\"\n              v-model:toTime=\"leave.endDuration.toTime\"\n              :partial=\"true\"\n              :label=\"$t('leave.end_day')\"\n              :work-shift=\"workShift\"\n            ></leave-duration-input>\n          </oxd-grid>\n        </oxd-form-row>\n        <!-- Partial Day|Duration -->\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leave.comment\"\n                type=\"textarea\"\n                :label=\"$t('general.comments')\"\n                :rules=\"rules.comment\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <submit-button :label=\"$t('general.apply')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validDateFormat,\n  shouldNotExceedCharLength,\n  endDateShouldBeAfterStartDate,\n} from '@/core/util/validation/rules';\nimport {yearRange} from '@ohrm/core/util/helper/year-range';\nimport {diffInDays} from '@ohrm/core/util/helper/datefns';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport LeaveDurationInput from '@/orangehrmLeavePlugin/components/LeaveDurationInput';\nimport LeaveBalance from '@/orangehrmLeavePlugin/components/LeaveBalance';\nimport LeaveConflict from '@/orangehrmLeavePlugin/components/LeaveConflict';\nimport useLeaveValidators from '@/orangehrmLeavePlugin/util/composable/useLeaveValidators';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst leaveModel = {\n  type: null,\n  fromDate: null,\n  toDate: null,\n  comment: '',\n  partialOptions: null,\n  duration: {\n    type: null,\n    fromTime: null,\n    toTime: null,\n  },\n  endDuration: {\n    type: null,\n    fromTime: null,\n    toTime: null,\n  },\n};\n\nexport default {\n  name: 'LeaveApply',\n\n  components: {\n    'leave-duration-input': LeaveDurationInput,\n    'leave-balance': LeaveBalance,\n    'leave-conflict': LeaveConflict,\n  },\n\n  props: {\n    workShift: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-requests',\n    );\n    const {serializeBody, validateOverlapLeaves} = useLeaveValidators(http);\n    const {formRef, reset} = useForm();\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      reset,\n      formRef,\n      serializeBody,\n      userDateFormat,\n      validateOverlapLeaves,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leave: {...leaveModel},\n      rules: {\n        type: [required],\n        fromDate: [required, validDateFormat(this.userDateFormat)],\n        toDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.leave.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        comment: [shouldNotExceedCharLength(250)],\n      },\n      partialOptions: [\n        {id: 1, label: this.$t('leave.all_days'), key: 'all'},\n        {id: 2, label: this.$t('leave.start_day_only'), key: 'start'},\n        {id: 3, label: this.$t('leave.end_day_only'), key: 'end'},\n        {id: 4, label: this.$t('leave.start_and_end_day'), key: 'start_end'},\n      ],\n      showLeaveConflict: false,\n      isWorkShiftExceeded: false,\n      leaveConflictData: null,\n      yearsArray: [...yearRange()],\n      leaveTypes: [],\n    };\n  },\n\n  computed: {\n    appliedLeaveDuration() {\n      return diffInDays(this.leave.fromDate, this.leave.toDate);\n    },\n    showDuration() {\n      const id = this.leave.partialOptions?.id;\n      return id && id === 1;\n    },\n    showStartDay() {\n      const id = this.leave.partialOptions?.id;\n      return id && (id === 2 || id === 4);\n    },\n    showEndDay() {\n      const id = this.leave.partialOptions?.id;\n      return id && (id === 3 || id === 4);\n    },\n  },\n\n  watch: {\n    appliedLeaveDuration: function (duration) {\n      if (duration === 1) {\n        this.leave.duration.type = {id: 1, label: 'Full Day', key: 'full_day'};\n      } else {\n        this.leave.duration.type = null;\n      }\n    },\n    'leave.fromDate': function (fromDate) {\n      if (!fromDate || this.leave.toDate) return;\n      this.leave.toDate = fromDate;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n        url: '/api/v2/leave/leave-types/eligible',\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.leaveTypes = data.map((item) => {\n          return {\n            id: item.id,\n            label: item.name,\n          };\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.showLeaveConflict = false;\n      this.leaveConflictData = null;\n\n      this.validateOverlapLeaves(this.leave)\n        .then(({isConflict, isOverWorkshift, data}) => {\n          if (isConflict) {\n            this.leaveConflictData = data;\n            this.showLeaveConflict = true;\n            this.isWorkShiftExceeded = isOverWorkshift;\n            return Promise.reject();\n          }\n          return this.http.create(this.serializeBody(this.leave));\n        })\n        .then(() => {\n          this.$toast.saveSuccess();\n          this.reset();\n        })\n        .catch(() => {\n          this.showLeaveConflict &&\n            this.$toast.warn({\n              title: this.$t('general.warning'),\n              message: this.$t('leave.failed_to_submit'),\n            });\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}