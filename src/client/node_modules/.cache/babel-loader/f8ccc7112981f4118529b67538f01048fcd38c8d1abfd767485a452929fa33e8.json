{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { reloadPage } from '@ohrm/core/util/helper/navigation';\nexport default {\n  props: {\n    dateFormatList: {\n      type: Array,\n      required: true\n    },\n    languageList: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/localization');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      configuration: {\n        language: null,\n        dateFormat: null\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.configuration.language = this.languageList.find(item => item.id === data.language);\n      this.configuration.dateFormat = this.dateFormatList.find(item => item.id === data.dateFormat);\n    }).finally(() => this.isLoading = false);\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        url: '/api/v2/admin/localization',\n        data: {\n          language: this.configuration.language?.id,\n          dateFormat: this.configuration.dateFormat?.id\n        }\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => reloadPage());\n    }\n  }\n};","map":{"version":3,"mappings":"AAiEA,SAAQA,UAAU,QAAO,sCAAsC;AAC/D,SAAQC,UAAU,QAAO,mCAAmC;AAC5D,eAAe;EACbC,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;MACZH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIT,UAAU,CACzBU,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,4BAA4B,CAC7B;IACD,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QACbC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,WAAW,GAAG;IACZ,IAAI,CAACJ,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACL,IAAG,CACLU,MAAM,EAAC,CACPC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACR;MAAI,IAAIQ,QAAQ,CAACR,IAAI;MAC5B,IAAI,CAACE,aAAa,CAACC,QAAO,GAAI,IAAI,CAACT,YAAY,CAACe,IAAI,CACjDC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAMX,IAAI,CAACG,QAAQ,CACpC;MACD,IAAI,CAACD,aAAa,CAACE,UAAS,GAAI,IAAI,CAACd,cAAc,CAACmB,IAAI,CACrDC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAMX,IAAI,CAACI,UAAU,CACtC;IACH,CAAC,EACAQ,OAAO,CAAC,MAAO,IAAI,CAACX,SAAQ,GAAI,KAAM,CAAC;EAC5C,CAAC;EAEDY,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACb,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLmB,OAAO,CAAC;QACPC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,4BAA4B;QACjCjB,IAAI,EAAE;UACJG,QAAQ,EAAE,IAAI,CAACD,aAAa,CAACC,QAAQ,EAAEQ,EAAE;UACzCP,UAAU,EAAE,IAAI,CAACF,aAAa,CAACE,UAAU,EAAEO;QAC7C;MACF,CAAC,EACAJ,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACW,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAZ,IAAI,CAAC,MAAMnB,UAAU,EAAE,CAAC;IAC7B;EACF;AACF,CAAC","names":["APIService","reloadPage","props","dateFormatList","type","Array","required","languageList","setup","http","window","appGlobal","baseUrl","data","isLoading","configuration","language","dateFormat","beforeMount","getAll","then","response","find","item","id","finally","methods","onSave","request","method","url","$toast","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\localization\\LocalizationConfiguration.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.localization') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.language\"\n                :label=\"$t('general.language')\"\n                type=\"select\"\n                :show-empty-selector=\"false\"\n                :options=\"languageList\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.dateFormat\"\n                :label=\"$t('admin.date_format')\"\n                type=\"select\"\n                :show-empty-selector=\"false\"\n                :options=\"dateFormatList\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {reloadPage} from '@ohrm/core/util/helper/navigation';\nexport default {\n  props: {\n    dateFormatList: {\n      type: Array,\n      required: true,\n    },\n    languageList: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/localization',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      configuration: {\n        language: null,\n        dateFormat: null,\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        this.configuration.language = this.languageList.find(\n          (item) => item.id === data.language,\n        );\n        this.configuration.dateFormat = this.dateFormatList.find(\n          (item) => item.id === data.dateFormat,\n        );\n      })\n      .finally(() => (this.isLoading = false));\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: '/api/v2/admin/localization',\n          data: {\n            language: this.configuration.language?.id,\n            dateFormat: this.configuration.dateFormat?.id,\n          },\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => reloadPage());\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}