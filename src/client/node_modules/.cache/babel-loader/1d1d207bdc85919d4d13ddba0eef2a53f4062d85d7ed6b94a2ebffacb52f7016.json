{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, withKeys as _withKeys, resolveDirective as _resolveDirective, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d912105\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-comment-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-post-comment\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"orangehrm-post-comment-area\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"orangehrm-post-comment-stats\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"orangehrm-post-comment-action-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_profile_image = _resolveComponent(\"profile-image\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_icon = _resolveComponent(\"oxd-icon\");\n  const _directive_autofocus = _resolveDirective(\"autofocus\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_profile_image, {\n    employee: $props.data.employee\n  }, null, 8, [\"employee\"]), _createElementVNode(\"div\", _hoisted_2, [_ctx.edit ? (_openBlock(), _createBlock(_component_oxd_form, {\n    key: 0,\n    onSubmitValid: $setup.onSubmit\n  }, {\n    default: _withCtx(() => [_withDirectives(_createVNode(_component_oxd_input_field, {\n      modelValue: _ctx.comment,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.comment = $event),\n      rules: $setup.rules,\n      onKeydown: _withKeys(_withModifiers($setup.onCancelComment, [\"stop\"]), [\"esc\"])\n    }, null, 8, [\"modelValue\", \"rules\", \"onKeydown\"]), [[_directive_autofocus]]), _createVNode(_component_oxd_text, {\n      tag: \"span\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('buzz.press_esc_to')) + \"Â \", 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_text, {\n      tag: \"span\",\n      class: \"orangehrm-post-comment-action --cancel\",\n      onClick: $setup.onCancelComment\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.cancel')), 1)]),\n      _: 1\n    }, 8, [\"onClick\"])]),\n    _: 1\n  }, 8, [\"onSubmitValid\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-comment-employee\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.employeeFullName), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_text, {\n    tag: \"span\",\n    class: _normalizeClass({\n      'orangehrm-post-comment-text': true,\n      '--truncate': _ctx.readMore === false\n    })\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.comment), 1)]),\n    _: 1\n  }, 8, [\"class\"]), _withDirectives(_createVNode(_component_oxd_text, {\n    tag: \"span\",\n    class: \"orangehrm-post-comment-readmore\",\n    onClick: $setup.onClickReadMore\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('buzz.read_more')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"]), [[_vShow, !_ctx.readMore]]), _createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-comment-datetime\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dateTime), 1)]),\n    _: 1\n  }), $props.data.comment.numOfLikes > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_oxd_icon, {\n    name: \"heart-fill\",\n    class: \"orangehrm-post-comment-stats-icon\"\n  }), _createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-comment-stats-text\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($props.data.comment.numOfLikes), 1)]),\n    _: 1\n  })])) : _createCommentVNode(\"\", true)])), !_ctx.edit ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: _normalizeClass({\n      'orangehrm-post-comment-action': true,\n      '--liked': $props.data.comment.liked === true\n    }),\n    onClick: $setup.onClickLike\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('buzz.like')), 1)]),\n    _: 1\n  }, 8, [\"class\", \"onClick\"]), $props.data.permission.canUpdate ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    tag: \"p\",\n    class: \"orangehrm-post-comment-action\",\n    onClick: $setup.onClickEdit\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.edit')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), $props.data.permission.canDelete ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    tag: \"p\",\n    class: \"orangehrm-post-comment-action\",\n    onClick: $setup.onClickDelete\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.delete')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAA2B;;EAE/BA,KAAK,EAAC;AAAwB;;;EAiBrBA,KAAK,EAAC;;;;EA0BdA,KAAK,EAAC;;;;EAWQA,KAAK,EAAC;;;;;;;;;uBAxD5BC,oBAqFM,OArFNC,UAqFM,GApFJC,aAAyDC;IAAzCC,QAAQ,EAAEC,WAAI,CAACD;6BAC/BE,oBAkFM,OAlFNC,UAkFM,GAjFYC,SAAI,kBAApBC,aAeWC;;IAfYC,aAAY,EAAEC;;sBACnC,MAKE,iBALFV,aAKEW;kBAJSL,YAAO;iEAAPA,YAAO;MAEfM,KAAK,EAAEF,YAAK;MACZG,SAAO,2BAAWH,sBAAe;kFAEpCV,aAAmEc;MAAzDC,GAAG,EAAC;IAAM;wBAAC,MAA6B,mCAA1BT,OAAE,yBAAwB,GAAM;;QACxDN,aAMWc;MALTC,GAAG,EAAC,MAAM;MACVlB,KAAK,EAAC,wCAAwC;MAC7CmB,OAAK,EAAEN;;wBAER,MAA0B,mCAAvBJ,OAAE;;;;6CAGTR,oBAoCM,OApCNmB,UAoCM,GAnCJjB,aAEWc;IAFDC,GAAG,EAAC,GAAG;IAAClB,KAAK,EAAC;;sBACtB,MAAsB,mCAAnBa,uBAAgB;;MAErBV,aAQWc;IAPTC,GAAG,EAAC,MAAM;IACTlB,KAAK;;oBAA+ES,aAAQ;;;sBAK7F,MAAa,mCAAVA,YAAO;;oCAEZN,aAOWc;IALTC,GAAG,EAAC,MAAM;IACVlB,KAAK,EAAC,iCAAiC;IACtCmB,OAAK,EAAEN;;sBAER,MAA0B,mCAAvBJ,OAAE;;iCALIA,aAAQ,KAOnBN,aAEWc;IAFDC,GAAG,EAAC,GAAG;IAAClB,KAAK,EAAC;;sBACtB,MAAc,mCAAXa,eAAQ;;MAGLP,WAAI,CAACe,OAAO,CAACC,UAAU,sBAD/BrB,oBAWM,OAXNsB,UAWM,GAPJpB,aAGEqB;IAFAC,IAAI,EAAC,YAAY;IACjBzB,KAAK,EAAC;MAERG,aAEWc;IAFDC,GAAG,EAAC,GAAG;IAAClB,KAAK,EAAC;;sBACtB,MAA6B,mCAA1BM,WAAI,CAACe,OAAO,CAACC,UAAU;;6CAIpBb,SAAI,kBAAhBR,oBA2BM,OA3BNyB,UA2BM,GA1BJvB,aASWc;IARTC,GAAG,EAAC,GAAG;IACNlB,KAAK;;iBAA8EM,WAAI,CAACe,OAAO,CAACM,KAAK;;IAIrGR,OAAK,EAAEN;;sBAER,MAAqB,mCAAlBJ,OAAE;;+BAGCH,WAAI,CAACsB,UAAU,CAACC,SAAS,kBADjCnB,aAOWO;;IALTC,GAAG,EAAC,GAAG;IACPlB,KAAK,EAAC,+BAA+B;IACpCmB,OAAK,EAAEN;;sBAER,MAAwB,mCAArBJ,OAAE;;uDAGCH,WAAI,CAACsB,UAAU,CAACE,SAAS,kBADjCpB,aAOWO;;IALTC,GAAG,EAAC,GAAG;IACPlB,KAAK,EAAC,+BAA+B;IACpCmB,OAAK,EAAEN;;sBAER,MAA8B,mCAA3BJ,OAAE","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_profile_image","employee","$props","_createElementVNode","_hoisted_2","_ctx","_createBlock","_component_oxd_form","onSubmitValid","$setup","_component_oxd_input_field","rules","onKeydown","_component_oxd_text","tag","onClick","_hoisted_3","comment","numOfLikes","_hoisted_4","_component_oxd_icon","name","_hoisted_5","liked","permission","canUpdate","canDelete"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostComment.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-comment-wrapper\">\n    <profile-image :employee=\"data.employee\"></profile-image>\n    <div class=\"orangehrm-post-comment\">\n      <oxd-form v-if=\"edit\" @submit-valid=\"onSubmit\">\n        <oxd-input-field\n          v-model=\"comment\"\n          v-autofocus\n          :rules=\"rules\"\n          @keydown.esc.stop=\"onCancelComment\"\n        />\n        <oxd-text tag=\"span\">{{ $t('buzz.press_esc_to') }}&nbsp;</oxd-text>\n        <oxd-text\n          tag=\"span\"\n          class=\"orangehrm-post-comment-action --cancel\"\n          @click=\"onCancelComment\"\n        >\n          {{ $t('general.cancel') }}\n        </oxd-text>\n      </oxd-form>\n      <div v-else class=\"orangehrm-post-comment-area\">\n        <oxd-text tag=\"p\" class=\"orangehrm-post-comment-employee\">\n          {{ employeeFullName }}\n        </oxd-text>\n        <oxd-text\n          tag=\"span\"\n          :class=\"{\n            'orangehrm-post-comment-text': true,\n            '--truncate': readMore === false,\n          }\"\n        >\n          {{ comment }}\n        </oxd-text>\n        <oxd-text\n          v-show=\"!readMore\"\n          tag=\"span\"\n          class=\"orangehrm-post-comment-readmore\"\n          @click=\"onClickReadMore\"\n        >\n          {{ $t('buzz.read_more') }}\n        </oxd-text>\n        <oxd-text tag=\"p\" class=\"orangehrm-post-comment-datetime\">\n          {{ dateTime }}\n        </oxd-text>\n        <div\n          v-if=\"data.comment.numOfLikes > 0\"\n          class=\"orangehrm-post-comment-stats\"\n        >\n          <oxd-icon\n            name=\"heart-fill\"\n            class=\"orangehrm-post-comment-stats-icon\"\n          />\n          <oxd-text tag=\"p\" class=\"orangehrm-post-comment-stats-text\">\n            {{ data.comment.numOfLikes }}\n          </oxd-text>\n        </div>\n      </div>\n      <div v-if=\"!edit\" class=\"orangehrm-post-comment-action-area\">\n        <oxd-text\n          tag=\"p\"\n          :class=\"{\n            'orangehrm-post-comment-action': true,\n            '--liked': data.comment.liked === true,\n          }\"\n          @click=\"onClickLike\"\n        >\n          {{ $t('buzz.like') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"data.permission.canUpdate\"\n          tag=\"p\"\n          class=\"orangehrm-post-comment-action\"\n          @click=\"onClickEdit\"\n        >\n          {{ $t('general.edit') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"data.permission.canDelete\"\n          tag=\"p\"\n          class=\"orangehrm-post-comment-action\"\n          @click=\"onClickDelete\"\n        >\n          {{ $t('performance.delete') }}\n        </oxd-text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {computed, reactive, toRefs} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'PostComment',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'profile-image': ProfileImage,\n  },\n\n  directives: {...useAutoFocus()},\n\n  props: {\n    postId: {\n      type: Number,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['edit', 'delete', 'like'],\n\n  setup(props, context) {\n    let loading = false;\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const rules = [required, shouldNotExceedCharLength(65530)];\n    const state = reactive({\n      edit: false,\n      comment: props.data.comment.text,\n      readMore: new String(props.data.comment.text).length < 500,\n    });\n\n    const {updatePostComment, updateCommentLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const onSubmit = () => {\n      updatePostComment(\n        props.postId,\n        props.data.comment.id,\n        state.comment,\n      ).then(() => {\n        state.edit = false;\n        context.emit('edit', props.data.comment.id);\n      });\n    };\n\n    const onClickEdit = () => {\n      state.edit = true;\n    };\n\n    const onClickLike = () => {\n      if (loading) return;\n      loading = true;\n      updateCommentLike(props.data.comment.id, props.data.comment.liked).then(\n        () => {\n          loading = false;\n          context.emit('like', props.data.comment.id);\n        },\n      );\n    };\n\n    const onClickDelete = () => {\n      context.emit('delete', props.data.comment.id);\n    };\n\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n\n    const onCancelComment = () => {\n      state.comment = props.data.comment.text;\n      state.edit = false;\n    };\n\n    const dateTime = computed(() => {\n      const {createdDate, createdTime} = props.data.comment;\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale,\n      });\n    });\n\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.data.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false,\n      });\n    });\n\n    return {\n      rules,\n      dateTime,\n      onSubmit,\n      onClickLike,\n      onClickEdit,\n      onClickDelete,\n      onClickReadMore,\n      onCancelComment,\n      employeeFullName,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style src=\"./post-comment.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}