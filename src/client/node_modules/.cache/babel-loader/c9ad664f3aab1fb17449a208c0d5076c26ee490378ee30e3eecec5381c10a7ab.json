{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5bbb0ad4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_3 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_jobtitle_dropdown = _resolveComponent(\"jobtitle-dropdown\");\n  const _component_subunit_dropdown = _resolveComponent(\"subunit-dropdown\");\n  const _component_include_employee_dropdown = _resolveComponent(\"include-employee-dropdown\");\n  const _component_review_status_dropdown = _resolveComponent(\"review-status-dropdown\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('performance.employee_reviews')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems,\n      onReset: $options.filterItems\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $setup.filters.employee,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n            rules: $data.rules.employee,\n            params: {\n              includeEmployees: $setup.filters.includeEmployees.param\n            }\n          }, null, 8, [\"modelValue\", \"rules\", \"params\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_jobtitle_dropdown, {\n            modelValue: $setup.filters.jobTitle,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.jobTitle = $event)\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_subunit_dropdown, {\n            modelValue: $setup.filters.subunit,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.subunit = $event)\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_include_employee_dropdown, {\n            modelValue: $setup.filters.includeEmployees,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.includeEmployees = $event)\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_review_status_dropdown, {\n            modelValue: $setup.filters.status,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.status = $event)\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $setup.filters.fromDate,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.filters.fromDate = $event),\n            rules: $data.rules.fromDate,\n            label: _ctx.$t('general.from_date')\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $setup.filters.toDate,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.filters.toDate = $event),\n            rules: $data.rules.toDate,\n            label: _ctx.$t('general.to_date')\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset'),\n          type: \"reset\"\n        }, null, 8, [\"label\"]), _createVNode(_component_oxd_button, {\n          class: \"orangehrm-left-space\",\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.search'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\", \"onReset\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_table_header, {\n    selected: 0,\n    total: $setup.total,\n    loading: $setup.isLoading\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[7] || (_cache[7] = $event => $setup.sortDefinition = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: false,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"order\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[8] || (_cache[8] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;gEA0DzCC,oBAAM;;EACDD,KAAK,EAAC;AAA2B;;EAM/BA,KAAK,EAAC;AAAqB;;EAW3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;;;;uBA5E3CE,oBAoFM,OApFNC,UAoFM,GAnFJC,aAwDmBC;IAxDA,cAAY,EAAEC,OAAE;;sBACjC,MAsDW,CAtDXF,aAsDWG;MAtDAC,aAAY,EAAEC,oBAAW;MAAGC,OAAK,EAAED;;wBAC5C,MAoCW,CApCXL,aAoCWO;QApCAC,IAAI,EAAE,CAAC;QAAEZ,KAAK,EAAC;;0BACxB,MAQgB,CARhBI,aAQgBS;4BAPd,MAME,CANFT,aAMEU;wBALSC,cAAO,CAACC,QAAQ;uEAAhBD,cAAO,CAACC,QAAQ;YACxBC,KAAK,EAAEC,WAAK,CAACF,QAAQ;YACrBG,MAAM;gCAAsCJ,cAAO,CAACK,gBAAgB,CAACC;;;;YAK1EjB,aAEgBS;4BADd,MAAgD,CAAhDT,aAAgDkB;wBAApBP,cAAO,CAACQ,QAAQ;uEAAhBR,cAAO,CAACQ,QAAQ;;;YAE9CnB,aAEgBS;4BADd,MAA8C,CAA9CT,aAA8CoB;wBAAnBT,cAAO,CAACU,OAAO;uEAAfV,cAAO,CAACU,OAAO;;;YAE5CrB,aAEgBS;4BADd,MAAgE,CAAhET,aAAgEsB;wBAA5BX,cAAO,CAACK,gBAAgB;uEAAxBL,cAAO,CAACK,gBAAgB;;;YAE9DhB,aAEgBS;UAFDb,KAAK,EAAC;QAAgB;4BACnC,MAAmD,CAAnDI,aAAmDuB;wBAAlBZ,cAAO,CAACa,MAAM;uEAAdb,cAAO,CAACa,MAAM;;;YAEjDxB,aAMgBS;UANDb,KAAK,EAAC;QAAgB;4BACnC,MAIE,CAJFI,aAIEyB;wBAHSd,cAAO,CAACe,QAAQ;uEAAhBf,cAAO,CAACe,QAAQ;YACxBb,KAAK,EAAEC,WAAK,CAACY,QAAQ;YACrBC,KAAK,EAAEzB,OAAE;;;YAGdF,aAMgBS;UANDb,KAAK,EAAC;QAAgB;4BACnC,MAIE,CAJFI,aAIEyB;wBAHSd,cAAO,CAACiB,MAAM;uEAAdjB,cAAO,CAACiB,MAAM;YACtBf,KAAK,EAAEC,WAAK,CAACc,MAAM;YACnBD,KAAK,EAAEzB,OAAE;;;;;UAKhBF,aAAe6B,yBAEf7B,aAYmB8B;0BAXjB,MAIE,CAJF9B,aAIE+B;UAHA,cAAY,EAAC,OAAO;UACnBJ,KAAK,EAAEzB,OAAE;UACV8B,IAAI,EAAC;gCAEPhC,aAKE+B;UAJAnC,KAAK,EAAC,sBAAsB;UAC5B,cAAY,EAAC,WAAW;UACvB+B,KAAK,EAAEzB,OAAE;UACV8B,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACNpC,oBAwBM,OAxBNqC,UAwBM,GAvBJlC,aAIgBmC;IAHbC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE1B,YAAK;IACZ2B,OAAO,EAAE3B;qCAEZd,oBAUM,OAVN0C,UAUM,GATJvC,aAQEwC;IAPQC,KAAK,EAAE9B,qBAAc;0DAAdA,qBAAc;IAC5B+B,OAAO,EAAE5B,aAAO;IAChB6B,KAAK,EAAEhC,YAAK,EAAEiC,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBR,OAAO,EAAE3B,gBAAS;IACnB,eAAa,EAAC;2DAGlBd,oBAMM,OANNkD,UAMM,GAJIpC,oBAAa,kBADrBqC,aAIEC;;IAFQC,OAAO,EAAEvC,kBAAW;4DAAXA,kBAAW;IAC3BwC,MAAM,EAAExC","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","onReset","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","employee","rules","$data","params","includeEmployees","param","_component_jobtitle_dropdown","jobTitle","_component_subunit_dropdown","subunit","_component_include_employee_dropdown","_component_review_status_dropdown","status","_component_date_input","fromDate","label","toDate","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","type","_hoisted_2","_hoisted_3","_component_table_header","selected","total","loading","_hoisted_4","_component_oxd_card_table","order","headers","items","data","selectable","clickable","_hoisted_5","_createBlock","_component_oxd_pagination","current","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\ReviewList.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('performance.employee_reviews')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"filterItems\">\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: filters.includeEmployees.param,\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <jobtitle-dropdown v-model=\"filters.jobTitle\" />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <subunit-dropdown v-model=\"filters.subunit\" />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <include-employee-dropdown v-model=\"filters.includeEmployees\" />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <review-status-dropdown v-model=\"filters.status\" />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.fromDate\"\n              :rules=\"rules.fromDate\"\n              :label=\"$t('general.from_date')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.toDate\"\n              :rules=\"rules.toDate\"\n              :label=\"$t('general.to_date')\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"false\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref, inject} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {\n  viewIcon,\n  evaluateIcon,\n  viewLabel,\n  evaluateLabel,\n} from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport ReviewStatusDropdown from '@/orangehrmPerformancePlugin/components/ReviewStatusDropdown';\nimport usei18n from '@/core/util/composable/usei18n';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport {tableScreenStateKey} from '@ohrm/oxd';\n\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'performanceReview.dueDate': 'DEFAULT',\n  'performanceReview.statusId': 'ASC',\n};\n\nexport default {\n  name: 'ReviewList',\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'review-status-dropdown': ReviewStatusDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  props: {\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props) {\n    const {$t} = usei18n();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const reviewListDateFormat = (date) =>\n      formatDate(parseDate(date), jsDateFormat, {locale});\n\n    const reviewListNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          employee: `${item.employee?.firstName} ${item.employee?.lastName} ${\n            item.employee?.terminationId\n              ? ` ${$t('general.past_employee')}`\n              : ''\n          }`,\n          jobTitle: item.jobTitle?.name,\n          subunit: item.subunit?.name,\n          reviewPeriod: {\n            reviewPeriodStart: reviewListDateFormat(item.reviewPeriodStart),\n            reviewPeriodEnd: reviewListDateFormat(item.reviewPeriodEnd),\n          },\n          dueDate: reviewListDateFormat(item.dueDate),\n          status:\n            item.overallStatus.statusId === 2\n              ? $t('performance.activated')\n              : item.overallStatus.statusId === 3\n              ? $t('performance.in_progress')\n              : $t('performance.completed'),\n          statusId: item.overallStatus.statusId,\n        };\n      });\n    };\n\n    const defaultFilters = {\n      employee: null,\n      jobTitle: null,\n      subunit: null,\n      status: null,\n      fromDate: null,\n      toDate: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    };\n\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.fromDate && {fromDate: props.fromDate}),\n      ...(props.toDate && {toDate: props.toDate}),\n    });\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.employee?.id,\n        jobTitleId: filters.value.jobTitle?.id,\n        subunitId: filters.value.subunit?.id,\n        statusId: filters.value.status?.statusId,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/employees/reviews',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: reviewListNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'employee',\n          title: this.$t('general.employee'),\n          slot: 'title',\n          sortField: 'employee.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          style: {flex: 1},\n        },\n        {\n          name: 'subunit',\n          title: this.$t('general.sub_unit'),\n          style: {flex: 1},\n        },\n        {\n          name: 'reviewPeriod',\n          title: this.$t('performance.review_period'),\n          sortField: 'performanceReview.reviewPeriodStart',\n          style: {flex: 1},\n          cellRenderer: this.reviewPeriodCellRenderer,\n        },\n        {\n          name: 'dueDate',\n          title: this.$t('performance.due_date'),\n          sortField: 'performanceReview.dueDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('performance.review_status'),\n          sortField: 'performanceReview.statusId',\n          style: {flex: 1},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.actionCellRenderer,\n          style: {flex: 1},\n        },\n      ],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n        fromDate: [\n          validDateFormat(this.userDateFormat),\n          startDateShouldBeBeforeEndDate(\n            () => this.filters.toDate,\n            this.$t('general.from_date_should_be_before_to_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        toDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.filters.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n      },\n    };\n  },\n  methods: {\n    actionCellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.statusId === 4) {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.statusId === 4) {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd,\n        },\n      };\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluateByAdmin/{id}', {id: item.id});\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}