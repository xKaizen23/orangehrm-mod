{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dc24a28\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-sm-field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('claim.edit_expense_type')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.expenseTypes.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.expenseTypes.name = $event),\n            label: _ctx.$t('general.name'),\n            disabled: !$data.canEdit,\n            rules: $data.rules.name,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"disabled\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_grid_item, {\n        class: \"--offset-row-2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.expenseTypes.description,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.expenseTypes.description = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.description'),\n            rules: $data.rules.description\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_grid_item, {\n        class: \"--offset-row-3\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n          tag: \"p\",\n          class: \"orangehrm-sm-field-label\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.active')), 1)]),\n          _: 1\n        }), _createVNode(_component_oxd_switch_input, {\n          modelValue: $data.expenseTypes.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.expenseTypes.status = $event)\n        }, null, 8, [\"modelValue\"])])]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;EA+BxBA,KAAK,EAAC;AAAoB;;;;;;;;;;;;;;uBAhCzCC,oBAqDM,OArDNC,UAqDM,GApDJC,oBAmDM,OAnDNC,UAmDM,GAlDJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAAmC,mCAAhCQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aA2CWK;IA3CAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MA8BW,CA9BXT,aA8BWU;MA9BAC,IAAI,EAAE,CAAC;MAAEhB,KAAK,EAAC;;wBACxB,MAUgB,CAVhBK,aAUgBY;0BATd,MAQe,CARfZ,aAQea;4BAPb,MAME,CANFb,aAMEc;wBALSP,kBAAY,CAACQ,IAAI;uEAAjBR,kBAAY,CAACQ,IAAI;YACzBC,KAAK,EAAEb,OAAE;YACTc,QAAQ,GAAGV,aAAO;YAClBW,KAAK,EAAEX,WAAK,CAACQ,IAAI;YAClBI,QAAQ,EAAR;;;;;UAINnB,aASgBY;QATDjB,KAAK,EAAC;MAAgB;0BACnC,MAOe,CAPfK,aAOea;4BANb,MAKE,CALFb,aAKEc;wBAJSP,kBAAY,CAACa,WAAW;uEAAxBb,kBAAY,CAACa,WAAW;YACjCC,IAAI,EAAC,UAAU;YACdL,KAAK,EAAEb,OAAE;YACTe,KAAK,EAAEX,WAAK,CAACa;;;;;UAIpBpB,aAOgBY;QAPDjB,KAAK,EAAC;MAAgB;0BACnC,MAKM,CALNG,oBAKM,OALNwB,UAKM,GAJJtB,aAEWC;UAFDC,GAAG,EAAC,GAAG;UAACP,KAAK,EAAC;;4BACtB,MAA0B,mCAAvBQ,OAAE;;YAEPH,aAAkDuB;sBAAvBhB,kBAAY,CAACiB,MAAM;qEAAnBjB,kBAAY,CAACiB,MAAM;;;;;QAIpDxB,aAAeI,yBAEfJ,aAQmByB;wBAPjB,MAAiB,CAAjBzB,aAAiB0B,2BACjB1B,aAIE2B;QAHA,cAAY,EAAC,OAAO;QACnBX,KAAK,EAAEb,OAAE;QACTyB,OAAK,EAAEnB;yCAEVT,aAAiB6B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_form_row","_component_oxd_input_field","name","label","disabled","rules","required","description","type","_hoisted_3","_component_oxd_switch_input","status","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\claimExpenseTypes\\EditClaimExpenseType.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('claim.edit_expense_type') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-form-row>\n              <oxd-input-field\n                v-model=\"expenseTypes.name\"\n                :label=\"$t('general.name')\"\n                :disabled=\"!canEdit\"\n                :rules=\"rules.name\"\n                required\n              />\n            </oxd-form-row>\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <oxd-form-row>\n              <oxd-input-field\n                v-model=\"expenseTypes.description\"\n                type=\"textarea\"\n                :label=\"$t('general.description')\"\n                :rules=\"rules.description\"\n              />\n            </oxd-form-row>\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-3\">\n            <div class=\"orangehrm-sm-field\">\n              <oxd-text tag=\"p\" class=\"orangehrm-sm-field-label\">\n                {{ $t('general.active') }}\n              </oxd-text>\n              <oxd-switch-input v-model=\"expenseTypes.status\" />\n            </div>\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {OxdSwitchInput} from '@ohrm/oxd';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialExpenseTypes = {\n  name: '',\n  description: '',\n  status: false,\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/claim/expenses/types',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const expenseTypeNameUniqueValidation = createUniqueValidator(\n      'ExpenseType',\n      'name',\n      {entityId: props.id, matchByField: 'isDeleted', matchByValue: 'false'},\n    );\n    return {\n      http,\n      expenseTypeNameUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      expenseTypes: {...initialExpenseTypes},\n      canEdit: false,\n      name: '',\n      rules: {\n        name: [\n          required,\n          this.expenseTypeNameUniqueValidation,\n          shouldNotExceedCharLength(100),\n        ],\n        description: [shouldNotExceedCharLength(1000)],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.id)\n      .then((response) => {\n        const {data} = response.data;\n        this.expenseTypes = {...data};\n        this.name = data.name;\n        this.canEdit = response.data.meta.canEdit;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/claim/viewExpense');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.id, {\n          name: this.canEdit ? this.expenseTypes.name : null,\n          description: this.expenseTypes.description,\n          status: this.expenseTypes.status,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"../save-claim-event.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}