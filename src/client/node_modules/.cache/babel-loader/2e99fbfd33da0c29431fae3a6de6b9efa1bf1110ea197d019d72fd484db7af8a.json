{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_recruitment_status = _resolveComponent(\"recruitment-status\");\n  const _component_candidate_profile = _resolveComponent(\"candidate-profile\");\n  const _component_history_table = _resolveComponent(\"history-table\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.candidate ? (_openBlock(), _createBlock(_component_recruitment_status, {\n    key: 0,\n    candidate: $data.candidate\n  }, null, 8, [\"candidate\"])) : _createCommentVNode(\"\", true), $data.candidate ? (_openBlock(), _createBlock(_component_candidate_profile, {\n    key: 1,\n    candidate: $data.candidate,\n    \"allowed-file-types\": $props.allowedFileTypes,\n    \"max-file-size\": $props.maxFileSize,\n    updatable: $props.updatable,\n    onUpdate: $options.onCandidateUpdate\n  }, null, 8, [\"candidate\", \"allowed-file-types\", \"max-file-size\", \"updatable\", \"onUpdate\"])) : _createCommentVNode(\"\", true), $data.candidate ? (_openBlock(), _createBlock(_component_history_table, {\n    key: 2,\n    candidate: $data.candidate\n  }, null, 8, [\"candidate\"])) : _createCommentVNode(\"\", true)], 64);\n}","map":{"version":3,"mappings":";;;;;6DAoB4BA,eAAS,kBAAnCC,aACqBC;;IADiBC,SAAS,EAAEH;+DAGzCA,eAAS,kBADjBC,aAOqBG;;IALlBD,SAAS,EAAEH,eAAS;IACpB,oBAAkB,EAAEK,uBAAgB;IACpC,eAAa,EAAEA,kBAAW;IAC1BC,SAAS,EAAED,gBAAS;IACpBE,QAAM,EAAEC;+HAEUR,eAAS,kBAA9BC,aAAuEQ;;IAAtCN,SAAS,EAAEH","names":["$data","_createBlock","_component_recruitment_status","candidate","_component_candidate_profile","$props","updatable","onUpdate","$options","_component_history_table"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewCandidateProfile.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <recruitment-status v-if=\"candidate\" :candidate=\"candidate\">\n  </recruitment-status>\n  <candidate-profile\n    v-if=\"candidate\"\n    :candidate=\"candidate\"\n    :allowed-file-types=\"allowedFileTypes\"\n    :max-file-size=\"maxFileSize\"\n    :updatable=\"updatable\"\n    @update=\"onCandidateUpdate\"\n  ></candidate-profile>\n  <history-table v-if=\"candidate\" :candidate=\"candidate\"></history-table>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport RecruitmentStatus from '@/orangehrmRecruitmentPlugin/components/RecruitmentStatus';\nimport CandidateProfile from '@/orangehrmRecruitmentPlugin/components/CandidateProfile';\nimport HistoryTable from '@/orangehrmRecruitmentPlugin/components/HistoryTable';\n\nexport default {\n  components: {\n    'history-table': HistoryTable,\n    'candidate-profile': CandidateProfile,\n    'recruitment-status': RecruitmentStatus,\n  },\n  props: {\n    candidateId: {\n      type: Number,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    updatable: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/candidates',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      candidate: null,\n    };\n  },\n  beforeMount() {\n    this.onCandidateUpdate();\n  },\n  methods: {\n    onCandidateUpdate() {\n      this.http.get(this.candidateId).then(({data: {data}}) => {\n        this.candidate = data;\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}