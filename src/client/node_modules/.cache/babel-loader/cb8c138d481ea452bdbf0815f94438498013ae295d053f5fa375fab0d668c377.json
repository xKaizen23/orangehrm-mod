{"ast":null,"code":"import { reloadPage } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport ConfirmationDialog from '@/core/components/dialogs/ConfirmationDialog';\nimport MaintenanceNote from '@/orangehrmMaintenancePlugin/components/MaintenanceNote';\nimport SelectedCandidates from '@/orangehrmMaintenancePlugin/components/SelectedCandidates';\nexport default {\n  name: 'PurgeCandidate',\n  components: {\n    'maintenance-note': MaintenanceNote,\n    'purge-confirmation': ConfirmationDialog,\n    'selected-candidates': SelectedCandidates\n  },\n  props: {\n    instanceIdentifier: {\n      type: String,\n      default: null\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/maintenance/candidates/purge');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false\n    };\n  },\n  methods: {\n    onClickPurge(vacancy) {\n      const vacancyId = vacancy;\n      this.$refs.purgeDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.purgeCandidates(vacancyId);\n        }\n      });\n    },\n    purgeCandidates(vacancyId) {\n      this.isLoading = true;\n      this.http.deleteAll({\n        vacancyId\n      }).then(() => {\n        return this.$toast.success({\n          title: this.$t('general.success'),\n          message: this.$t('maintenance.purge_success')\n        });\n      }).then(() => {\n        reloadPage();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA,SAAQA,UAAU,QAAO,+BAA+B;AACxD,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,kBAAiB,MAAO,8CAA8C;AAC7E,OAAOC,eAAc,MAAO,yDAAyD;AACrF,OAAOC,kBAAiB,MAAO,4DAA4D;AAE3F,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACV,kBAAkB,EAAEH,eAAe;IACnC,oBAAoB,EAAED,kBAAkB;IACxC,qBAAqB,EAAEE;EACzB,CAAC;EACDG,KAAK,EAAE;IACLC,kBAAkB,EAAE;MAClBC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIZ,UAAU,CACzBa,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,sCAAsC,CACvC;IAED,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,CAACC,OAAO,EAAE;MACpB,MAAMC,SAAQ,GAAID,OAAO;MACzB,IAAI,CAACE,KAAK,CAACC,WAAW,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QACzD,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,eAAe,CAACN,SAAS,CAAC;QACjC;MACF,CAAC,CAAC;IACJ,CAAC;IACDM,eAAe,CAACN,SAAS,EAAE;MACzB,IAAI,CAACJ,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLgB,SAAS,CAAC;QACTP;MACF,CAAC,EACAI,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC;UACzBC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,iBAAiB,CAAC;UACjCC,OAAO,EAAE,IAAI,CAACD,EAAE,CAAC,2BAA2B;QAC9C,CAAC,CAAC;MACJ,CAAC,EACAP,IAAI,CAAC,MAAM;QACV1B,UAAU,EAAE;MACd,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["reloadPage","APIService","ConfirmationDialog","MaintenanceNote","SelectedCandidates","name","components","props","instanceIdentifier","type","String","default","setup","http","window","appGlobal","baseUrl","data","isLoading","methods","onClickPurge","vacancy","vacancyId","$refs","purgeDialog","showDialog","then","confirmation","purgeCandidates","deleteAll","$toast","success","title","$t","message"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmMaintenancePlugin\\pages\\PurgeCandidate.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <selected-candidates :loading=\"isLoading\" @purge=\"onClickPurge\" />\n    <br />\n    <maintenance-note :instance-identifier=\"instanceIdentifier\" />\n\n    <purge-confirmation\n      ref=\"purgeDialog\"\n      :title=\"$t('maintenance.purge_candidates')\"\n      :subtitle=\"$t('maintenance.purge_candidates_warning')\"\n      :cancel-label=\"$t('general.no_cancel')\"\n      :confirm-label=\"$t('maintenance.yes_purge')\"\n    ></purge-confirmation>\n  </div>\n</template>\n\n<script>\nimport {reloadPage} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport ConfirmationDialog from '@/core/components/dialogs/ConfirmationDialog';\nimport MaintenanceNote from '@/orangehrmMaintenancePlugin/components/MaintenanceNote';\nimport SelectedCandidates from '@/orangehrmMaintenancePlugin/components/SelectedCandidates';\n\nexport default {\n  name: 'PurgeCandidate',\n  components: {\n    'maintenance-note': MaintenanceNote,\n    'purge-confirmation': ConfirmationDialog,\n    'selected-candidates': SelectedCandidates,\n  },\n  props: {\n    instanceIdentifier: {\n      type: String,\n      default: null,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/maintenance/candidates/purge',\n    );\n\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n    };\n  },\n  methods: {\n    onClickPurge(vacancy) {\n      const vacancyId = vacancy;\n      this.$refs.purgeDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.purgeCandidates(vacancyId);\n        }\n      });\n    },\n    purgeCandidates(vacancyId) {\n      this.isLoading = true;\n      this.http\n        .deleteAll({\n          vacancyId,\n        })\n        .then(() => {\n          return this.$toast.success({\n            title: this.$t('general.success'),\n            message: this.$t('maintenance.purge_success'),\n          });\n        })\n        .then(() => {\n          reloadPage();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}