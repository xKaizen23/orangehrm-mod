{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport { required, numericOnly, maxFileSize, validSelection, validFileTypes, shouldNotExceedCharLength, numberShouldBeBetweenMinAndMaxValue } from '@ohrm/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyLinkCard from '../components/VacancyLinkCard.vue';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst vacancyModel = {\n  jobTitle: null,\n  name: '',\n  hiringManager: null,\n  numOfPositions: '',\n  description: '',\n  status: false,\n  isPublished: false\n};\nconst VacancyAttachmentModel = {\n  id: null,\n  comment: '',\n  oldAttachment: {},\n  newAttachment: null,\n  method: 'keepCurrent'\n};\nconst basePath = `${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`;\nconst attachmentNormalizer = data => {\n  return data.map(item => {\n    return {\n      id: item.id,\n      vacancyId: item.vacancyId,\n      fileName: item.attachment.fileName,\n      fileSize: +(item.attachment.fileSize / 1024).toFixed(2) + ' kb',\n      fileType: item.attachment.fileType,\n      comment: item.comment,\n      attachmentType: item.attachmentType\n    };\n  });\n};\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-link-card': VacancyLinkCard,\n    'delete-confirmation': DeleteConfirmationDialog,\n    'file-upload-input': FileUploadInput\n  },\n  props: {\n    vacancyId: {\n      type: String,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/vacancies');\n    const httpAttachments = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/vacancy/attachments');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const vacancyNameUniqueValidation = createUniqueValidator('Vacancy', 'name', {\n      entityId: props.vacancyId\n    });\n    return {\n      http,\n      httpAttachments,\n      vacancyNameUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      isLoadingAttachment: false,\n      isLoadingTable: false,\n      isAddClicked: false,\n      isEditClicked: false,\n      currentName: '',\n      vacancy: {\n        ...vacancyModel\n      },\n      vacancyAttachment: {\n        ...VacancyAttachmentModel\n      },\n      rules: {\n        jobTitle: [required],\n        name: [required, this.vacancyNameUniqueValidation, shouldNotExceedCharLength(50)],\n        hiringManager: [required, validSelection, v => v?.isPastEmployee ? this.$t('general.invalid') : true],\n        numOfPositions: [value => {\n          if (value === null || value === '') return true;\n          return typeof numericOnly(value) === 'string' ? numericOnly(value) : numberShouldBeBetweenMinAndMaxValue(1, 99)(value);\n        }],\n        description: [],\n        status: [required],\n        isPublished: [required],\n        addAttachment: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)],\n        updateAttachment: [v => {\n          if (this.vacancyAttachment.method == 'replaceCurrent') {\n            return required(v);\n          } else {\n            return true;\n          }\n        }, validFileTypes(this.allowedFileTypes), maxFileSize(this.maxFileSize)],\n        comment: [shouldNotExceedCharLength(200)]\n      },\n      headers: [{\n        name: 'fileName',\n        slot: 'title',\n        title: this.$t('general.file_name'),\n        style: {\n          flex: 3\n        }\n      }, {\n        name: 'fileSize',\n        title: this.$t('general.file_size'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'fileType',\n        title: this.$t('general.file_type'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'comment',\n        title: this.$t('general.comment'),\n        style: {\n          flex: 4\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 2\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          download: {\n            onClick: this.downloadFile,\n            props: {\n              name: 'download'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      attachments: [],\n      checkedItems: [],\n      rssFeedUrl: `${basePath}/recruitmentApply/jobs.rss`,\n      webUrl: `${basePath}/recruitmentApply/jobs.html`\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.isLoadingTable = true;\n    this.http.get(this.vacancyId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.currentName = data.name;\n      this.vacancy.name = data.name;\n      this.vacancy.description = data.description;\n      this.vacancy.numOfPositions = data.numOfPositions || '';\n      this.vacancy.status = data.status;\n      this.vacancy.isPublished = data.isPublished;\n      this.vacancy.hiringManager = data.hiringManager.id ? {\n        id: data.hiringManager.id,\n        label: `${data.hiringManager.firstName} ${data.hiringManager.middleName} ${data.hiringManager.lastName}`,\n        isPastEmployee: data.hiringManager.terminationId ? true : false\n      } : this.$t('general.deleted');\n      this.vacancy.jobTitle = data.jobTitle.isDeleted ? null : {\n        id: data.jobTitle.id,\n        label: data.jobTitle.title\n      };\n    }).then(() => {\n      this.httpAttachments.request({\n        method: 'GET',\n        url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.attachments = attachmentNormalizer(data);\n      });\n    }).finally(() => {\n      this.isLoadingTable = false;\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/recruitment/viewJobVacancy');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.vacancy = {\n        name: this.vacancy.name,\n        jobTitleId: this.vacancy.jobTitle.id,\n        employeeId: this.vacancy.hiringManager.id,\n        numOfPositions: this.vacancy.numOfPositions ? parseInt(this.vacancy.numOfPositions) : null,\n        description: this.vacancy.description,\n        status: this.vacancy.status,\n        isPublished: this.vacancy.isPublished\n      };\n      this.http.update(this.vacancyId, {\n        ...this.vacancy\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        navigate('/recruitment/addJobVacancy/{id}', {\n          id: this.vacancyId\n        });\n      });\n    },\n    onSaveAttachment() {\n      this.isLoadingAttachment = true;\n      this.isLoadingTable = true;\n      this.httpAttachments.create({\n        vacancyId: parseInt(this.vacancyId),\n        attachment: this.vacancyAttachment.newAttachment ? this.vacancyAttachment.newAttachment : undefined,\n        comment: this.vacancyAttachment.comment,\n        attachmentType: 1\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.updateVisibility();\n        this.resetDataTable();\n        this.isLoadingAttachment = false;\n        this.isLoadingTable = false;\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteData([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.attachments[index]?.id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteData(ids);\n        }\n      });\n    },\n    async deleteData(items) {\n      if (items instanceof Array) {\n        this.isLoadingTable = true;\n        this.httpAttachments.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.resetDataTable();\n          this.isLoadingTable = false;\n        });\n      }\n    },\n    resetDataTable() {\n      this.checkedItems = [];\n      this.httpAttachments.request({\n        method: 'GET',\n        url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.attachments = attachmentNormalizer(data);\n      });\n    },\n    onClickAdd() {\n      this.isEditClicked = false;\n      this.isAddClicked = true;\n    },\n    onClickEdit(item) {\n      this.vacancyAttachment.id = item.id;\n      this.vacancyAttachment.comment = item.comment;\n      this.vacancyAttachment.oldAttachment = {\n        id: item.id,\n        filename: item.fileName,\n        fileType: item.fileType,\n        fileSize: item.filefileSize\n      };\n      this.vacancyAttachment.newAttachment = null;\n      this.vacancyAttachment.method = 'keepCurrent';\n      this.isAddClicked = false;\n      this.isEditClicked = true;\n    },\n    onUpdateAttachment() {\n      this.isLoadingAttachment = true;\n      this.isLoadingTable = true;\n      this.httpAttachments.request({\n        method: 'PUT',\n        url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments/${this.vacancyAttachment.id}`,\n        data: {\n          vacancyId: parseInt(this.vacancyId),\n          currentAttachment: this.vacancyAttachment.oldAttachment ? this.vacancyAttachment.method : undefined,\n          attachment: this.vacancyAttachment.newAttachment ? this.vacancyAttachment.newAttachment : undefined,\n          comment: this.vacancyAttachment.comment,\n          attachmentType: 1\n        }\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.updateVisibility();\n        this.resetDataTable();\n        this.isLoadingAttachment = false;\n        this.isLoadingTable = false;\n      });\n    },\n    updateVisibility() {\n      this.isAddClicked = false;\n      this.isEditClicked = false;\n      this.vacancyAttachment = {\n        ...VacancyAttachmentModel\n      };\n    },\n    downloadFile(item) {\n      if (!item?.id) return;\n      const fileUrl = 'recruitment/viewVacancyAttachment/attachId';\n      const downUrl = `${window.appGlobal.baseUrl}/${fileUrl}/${item.id}`;\n      window.open(downUrl, '_blank');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","navigate","DeleteConfirmationDialog","FileUploadInput","required","numericOnly","maxFileSize","validSelection","validFileTypes","shouldNotExceedCharLength","numberShouldBeBetweenMinAndMaxValue","EmployeeAutocomplete","JobtitleDropdown","VacancyLinkCard","OxdSwitchInput","useServerValidation","vacancyModel","jobTitle","name","hiringManager","numOfPositions","description","status","isPublished","VacancyAttachmentModel","id","comment","oldAttachment","newAttachment","method","basePath","window","location","protocol","host","appGlobal","baseUrl","attachmentNormalizer","data","map","item","vacancyId","fileName","attachment","fileSize","toFixed","fileType","attachmentType","components","props","type","String","allowedFileTypes","Array","Number","setup","http","httpAttachments","createUniqueValidator","vacancyNameUniqueValidation","entityId","isLoading","isLoadingAttachment","isLoadingTable","isAddClicked","isEditClicked","currentName","vacancy","vacancyAttachment","rules","v","isPastEmployee","$t","value","addAttachment","updateAttachment","headers","slot","title","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","download","downloadFile","edit","onClickEdit","attachments","checkedItems","rssFeedUrl","webUrl","computed","formattedFileSize","Math","round","created","get","then","response","label","firstName","middleName","lastName","terminationId","isDeleted","request","url","finally","methods","onCancel","onSave","jobTitleId","employeeId","parseInt","update","$toast","saveSuccess","onSaveAttachment","create","undefined","updateVisibility","resetDataTable","$refs","deleteDialog","showDialog","confirmation","deleteData","onClickDeleteSelected","ids","index","items","deleteAll","deleteSuccess","onClickAdd","filename","filefileSize","onUpdateAttachment","currentAttachment","fileUrl","downUrl","open"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\EditJobVacancy.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('recruitment.edit_vacancy') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"vacancy.name\"\n              :label=\"$t('recruitment.vacancy_name')\"\n              required\n              :rules=\"rules.name\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <jobtitle-dropdown\n              v-model=\"vacancy.jobTitle\"\n              :rules=\"rules.jobTitle\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangehrm-grid-item-span-2\">\n            <oxd-input-field\n              v-model=\"vacancy.description\"\n              type=\"textarea\"\n              :label=\"$t('general.description')\"\n              :placeholder=\"$t('general.type_description_here')\"\n              :rules=\"rules.description\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"vacancy.hiringManager\"\n              :params=\"{\n                includeEmployees: 'onlyCurrent',\n              }\"\n              required\n              :rules=\"rules.hiringManager\"\n              :label=\"$t('recruitment.hiring_manager')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"vacancy.numOfPositions\"\n                  :label=\"$t('recruitment.num_of_positions')\"\n                  :rules=\"rules.numOfPositions\"\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangerhrm-switch-wrapper\">\n            <oxd-text class=\"orangehrm-text\" tag=\"p\">\n              {{ $t('general.active') }}\n            </oxd-text>\n            <oxd-switch-input v-model=\"vacancy.status\" />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangerhrm-switch-wrapper\">\n            <oxd-text class=\"orangehrm-text\" tag=\"p\">\n              {{ $t('recruitment.publish_in_rss_feed_and_web_page') }}\n            </oxd-text>\n            <oxd-switch-input v-model=\"vacancy.isPublished\" />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangehrm-grid-item-span-2\">\n            <div class=\"orangehrm-vacancy-links\">\n              <vacancy-link-card\n                :label=\"$t('recruitment.rss_feed_url')\"\n                :url=\"rssFeedUrl\"\n              />\n              <vacancy-link-card\n                :label=\"$t('recruitment.web_page_url')\"\n                :url=\"webUrl\"\n              />\n            </div>\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <br />\n    <div v-if=\"isAddClicked && !isEditClicked\" class=\"orangehrm-card-container\">\n      <oxd-text\n        tag=\"h6\"\n        class=\"orangehrm-main-title orangehrm-attachment-header__title\"\n      >\n        {{ $t('general.add_attachment') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoadingAttachment\" @submit-valid=\"onSaveAttachment\">\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <file-upload-input\n              v-model:newFile=\"vacancyAttachment.newAttachment\"\n              v-model:method=\"vacancyAttachment.method\"\n              :label=\"$t('general.select_file')\"\n              :button-label=\"$t('general.browse')\"\n              :file=\"vacancyAttachment.oldAttachment\"\n              :rules=\"rules.addAttachment\"\n              :url=\"`recruitment/vacancyAttachment/attachId`\"\n              :hint=\"\n                $t('general.accepts_up_to_n_mb', {count: formattedFileSize})\n              \"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"vacancyAttachment.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comment')\"\n              :placeholder=\"$t('general.type_comment_here')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"updateVisibility\"\n          />\n          <submit-button :label=\"$t('general.save')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <div v-if=\"isEditClicked && !isAddClicked\" class=\"orangehrm-card-container\">\n      <oxd-text\n        tag=\"h6\"\n        class=\"orangehrm-main-title orangehrm-attachment-header__title\"\n      >\n        {{ $t('general.edit_attachment') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form\n        :loading=\"isLoadingAttachment\"\n        @submit-valid=\"onUpdateAttachment\"\n      >\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <file-upload-input\n              v-model:newFile=\"vacancyAttachment.newAttachment\"\n              v-model:method=\"vacancyAttachment.method\"\n              :label=\"$t('general.select_file')\"\n              :button-label=\"$t('general.browse')\"\n              :file=\"vacancyAttachment.oldAttachment\"\n              :rules=\"rules.updateAttachment\"\n              :url=\"`recruitment/viewVacancyAttachment/attachId`\"\n              :hint=\"\n                $t('general.accepts_up_to_n_mb', {count: formattedFileSize})\n              \"\n              :deletable=\"false\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"vacancyAttachment.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comment')\"\n              :placeholder=\"$t('general.type_comment_here')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"updateVisibility\"\n          />\n          <submit-button :label=\"$t('general.save')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container orangehrm-attachment-header\">\n        <oxd-text\n          tag=\"h6\"\n          class=\"orangehrm-main-title orangehrm-attachment-header__title\"\n        >\n          {{ $t('general.attachments') }}\n        </oxd-text>\n        <oxd-button\n          v-if=\"!isAddClicked && !isEditClicked\"\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"text\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :loading=\"isLoadingTable\"\n        :total=\"attachments.length\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"attachments\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoadingTable\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n      <br />\n      <br />\n    </div>\n  </div>\n</template>\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport {\n  required,\n  numericOnly,\n  maxFileSize,\n  validSelection,\n  validFileTypes,\n  shouldNotExceedCharLength,\n  numberShouldBeBetweenMinAndMaxValue,\n} from '@ohrm/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyLinkCard from '../components/VacancyLinkCard.vue';\nimport {OxdSwitchInput} from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst vacancyModel = {\n  jobTitle: null,\n  name: '',\n  hiringManager: null,\n  numOfPositions: '',\n  description: '',\n  status: false,\n  isPublished: false,\n};\n\nconst VacancyAttachmentModel = {\n  id: null,\n  comment: '',\n  oldAttachment: {},\n  newAttachment: null,\n  method: 'keepCurrent',\n};\n\nconst basePath = `${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`;\n\nconst attachmentNormalizer = (data) => {\n  return data.map((item) => {\n    return {\n      id: item.id,\n      vacancyId: item.vacancyId,\n      fileName: item.attachment.fileName,\n      fileSize: +(item.attachment.fileSize / 1024).toFixed(2) + ' kb',\n      fileType: item.attachment.fileType,\n      comment: item.comment,\n      attachmentType: item.attachmentType,\n    };\n  });\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-link-card': VacancyLinkCard,\n    'delete-confirmation': DeleteConfirmationDialog,\n    'file-upload-input': FileUploadInput,\n  },\n\n  props: {\n    vacancyId: {\n      type: String,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/vacancies',\n    );\n    const httpAttachments = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/vacancy/attachments',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const vacancyNameUniqueValidation = createUniqueValidator(\n      'Vacancy',\n      'name',\n      {entityId: props.vacancyId},\n    );\n    return {\n      http,\n      httpAttachments,\n      vacancyNameUniqueValidation,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      isLoadingAttachment: false,\n      isLoadingTable: false,\n      isAddClicked: false,\n      isEditClicked: false,\n      currentName: '',\n      vacancy: {...vacancyModel},\n      vacancyAttachment: {...VacancyAttachmentModel},\n      rules: {\n        jobTitle: [required],\n        name: [\n          required,\n          this.vacancyNameUniqueValidation,\n          shouldNotExceedCharLength(50),\n        ],\n        hiringManager: [\n          required,\n          validSelection,\n          (v) => (v?.isPastEmployee ? this.$t('general.invalid') : true),\n        ],\n        numOfPositions: [\n          (value) => {\n            if (value === null || value === '') return true;\n            return typeof numericOnly(value) === 'string'\n              ? numericOnly(value)\n              : numberShouldBeBetweenMinAndMaxValue(1, 99)(value);\n          },\n        ],\n        description: [],\n        status: [required],\n        isPublished: [required],\n        addAttachment: [\n          required,\n          maxFileSize(this.maxFileSize),\n          validFileTypes(this.allowedFileTypes),\n        ],\n        updateAttachment: [\n          (v) => {\n            if (this.vacancyAttachment.method == 'replaceCurrent') {\n              return required(v);\n            } else {\n              return true;\n            }\n          },\n          validFileTypes(this.allowedFileTypes),\n          maxFileSize(this.maxFileSize),\n        ],\n        comment: [shouldNotExceedCharLength(200)],\n      },\n      headers: [\n        {\n          name: 'fileName',\n          slot: 'title',\n          title: this.$t('general.file_name'),\n          style: {flex: 3},\n        },\n        {\n          name: 'fileSize',\n          title: this.$t('general.file_size'),\n          style: {flex: 2},\n        },\n        {\n          name: 'fileType',\n          title: this.$t('general.file_type'),\n          style: {flex: 2},\n        },\n        {\n          name: 'comment',\n          title: this.$t('general.comment'),\n          style: {flex: 4},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 2},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            download: {\n              onClick: this.downloadFile,\n              props: {\n                name: 'download',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      attachments: [],\n      checkedItems: [],\n      rssFeedUrl: `${basePath}/recruitmentApply/jobs.rss`,\n      webUrl: `${basePath}/recruitmentApply/jobs.html`,\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n  created() {\n    this.isLoading = true;\n    this.isLoadingTable = true;\n\n    this.http\n      .get(this.vacancyId)\n      .then((response) => {\n        const {data} = response.data;\n        this.currentName = data.name;\n        this.vacancy.name = data.name;\n        this.vacancy.description = data.description;\n        this.vacancy.numOfPositions = data.numOfPositions || '';\n        this.vacancy.status = data.status;\n        this.vacancy.isPublished = data.isPublished;\n        this.vacancy.hiringManager = data.hiringManager.id\n          ? {\n              id: data.hiringManager.id,\n              label: `${data.hiringManager.firstName} ${data.hiringManager.middleName} ${data.hiringManager.lastName}`,\n              isPastEmployee: data.hiringManager.terminationId ? true : false,\n            }\n          : this.$t('general.deleted');\n        this.vacancy.jobTitle = data.jobTitle.isDeleted\n          ? null\n          : {\n              id: data.jobTitle.id,\n              label: data.jobTitle.title,\n            };\n      })\n      .then(() => {\n        this.httpAttachments\n          .request({\n            method: 'GET',\n            url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`,\n          })\n          .then((response) => {\n            const {data} = response.data;\n            this.attachments = attachmentNormalizer(data);\n          });\n      })\n      .finally(() => {\n        this.isLoadingTable = false;\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onCancel() {\n      navigate('/recruitment/viewJobVacancy');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.vacancy = {\n        name: this.vacancy.name,\n        jobTitleId: this.vacancy.jobTitle.id,\n        employeeId: this.vacancy.hiringManager.id,\n        numOfPositions: this.vacancy.numOfPositions\n          ? parseInt(this.vacancy.numOfPositions)\n          : null,\n        description: this.vacancy.description,\n        status: this.vacancy.status,\n        isPublished: this.vacancy.isPublished,\n      };\n      this.http\n        .update(this.vacancyId, {...this.vacancy})\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          navigate('/recruitment/addJobVacancy/{id}', {id: this.vacancyId});\n        });\n    },\n    onSaveAttachment() {\n      this.isLoadingAttachment = true;\n      this.isLoadingTable = true;\n      this.httpAttachments\n        .create({\n          vacancyId: parseInt(this.vacancyId),\n          attachment: this.vacancyAttachment.newAttachment\n            ? this.vacancyAttachment.newAttachment\n            : undefined,\n          comment: this.vacancyAttachment.comment,\n          attachmentType: 1,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.updateVisibility();\n          this.resetDataTable();\n          this.isLoadingAttachment = false;\n          this.isLoadingTable = false;\n        });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteData([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.attachments[index]?.id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteData(ids);\n        }\n      });\n    },\n\n    async deleteData(items) {\n      if (items instanceof Array) {\n        this.isLoadingTable = true;\n        this.httpAttachments\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.resetDataTable();\n            this.isLoadingTable = false;\n          });\n      }\n    },\n    resetDataTable() {\n      this.checkedItems = [];\n      this.httpAttachments\n        .request({\n          method: 'GET',\n          url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`,\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.attachments = attachmentNormalizer(data);\n        });\n    },\n    onClickAdd() {\n      this.isEditClicked = false;\n      this.isAddClicked = true;\n    },\n    onClickEdit(item) {\n      this.vacancyAttachment.id = item.id;\n      this.vacancyAttachment.comment = item.comment;\n      this.vacancyAttachment.oldAttachment = {\n        id: item.id,\n        filename: item.fileName,\n        fileType: item.fileType,\n        fileSize: item.filefileSize,\n      };\n      this.vacancyAttachment.newAttachment = null;\n      this.vacancyAttachment.method = 'keepCurrent';\n      this.isAddClicked = false;\n      this.isEditClicked = true;\n    },\n    onUpdateAttachment() {\n      this.isLoadingAttachment = true;\n      this.isLoadingTable = true;\n      this.httpAttachments\n        .request({\n          method: 'PUT',\n          url: `/api/v2/recruitment/vacancies/${this.vacancyId}/attachments/${this.vacancyAttachment.id}`,\n          data: {\n            vacancyId: parseInt(this.vacancyId),\n            currentAttachment: this.vacancyAttachment.oldAttachment\n              ? this.vacancyAttachment.method\n              : undefined,\n            attachment: this.vacancyAttachment.newAttachment\n              ? this.vacancyAttachment.newAttachment\n              : undefined,\n            comment: this.vacancyAttachment.comment,\n            attachmentType: 1,\n          },\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.updateVisibility();\n          this.resetDataTable();\n          this.isLoadingAttachment = false;\n          this.isLoadingTable = false;\n        });\n    },\n    updateVisibility() {\n      this.isAddClicked = false;\n      this.isEditClicked = false;\n      this.vacancyAttachment = {...VacancyAttachmentModel};\n    },\n    downloadFile(item) {\n      if (!item?.id) return;\n      const fileUrl = 'recruitment/viewVacancyAttachment/attachId';\n      const downUrl = `${window.appGlobal.baseUrl}/${fileUrl}/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n  },\n};\n</script>\n\n<style src=\"./vacancy.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}