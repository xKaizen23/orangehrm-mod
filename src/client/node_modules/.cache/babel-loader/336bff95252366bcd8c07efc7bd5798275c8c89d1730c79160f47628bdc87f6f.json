{"ast":null,"code":"import { maxFileSize, required, validFileTypes } from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport { APIService } from '@/core/util/services/api.service';\nimport LanguageStringsImportModal from '@/orangehrmAdminPlugin/components/LanguageStringsImportModal.vue';\nimport RequiredText from '@/core/components/labels/RequiredText.vue';\nimport SubmitButton from '@/core/components/buttons/SubmitButton.vue';\nconst attachmentModel = {\n  attachment: null\n};\nexport default {\n  components: {\n    SubmitButton,\n    RequiredText,\n    'language-string-import-modal': LanguageStringsImportModal\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true\n    },\n    languageName: {\n      type: String,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/i18n/languages/${props.languageId}/import`);\n    const {\n      formRef,\n      reset\n    } = useForm();\n    return {\n      http,\n      reset,\n      formRef\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel\n      },\n      rules: {\n        attachment: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)]\n      },\n      importModalState: null\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.attachment\n      }).then(response => {\n        const {\n          meta\n        } = response.data;\n        this.importModalState = meta;\n      }).finally(() => {\n        this.reset();\n        this.isLoading = false;\n      });\n    },\n    onClickDownload() {\n      const downUrl = `${window.appGlobal.baseUrl}/admin/viewLanguagePackage/languageId/${this.languageId}`;\n      window.open(downUrl, '_blank');\n    },\n    onImportModalClose() {\n      this.importModalState = null;\n    }\n  }\n};","map":{"version":3,"mappings":"AAoGA,SACEA,WAAW,EACXC,QAAQ,EACRC,cAAc,QACT,8BAA8B;AACrC,OAAOC,OAAM,MAAO,gCAAgC;AACpD,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,0BAAyB,MAAO,kEAAkE;AACzG,OAAOC,YAAW,MAAO,2CAA2C;AACpE,OAAOC,YAAW,MAAO,4CAA4C;AAErE,MAAMC,eAAc,GAAI;EACtBC,UAAU,EAAE;AACd,CAAC;AACD,eAAe;EACbC,UAAU,EAAE;IACVH,YAAY;IACZD,YAAY;IACZ,8BAA8B,EAAED;EAClC,CAAC;EACDM,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZb,QAAQ,EAAE;IACZ,CAAC;IACDc,YAAY,EAAE;MACZF,IAAI,EAAEG,MAAM;MACZf,QAAQ,EAAE;IACZ,CAAC;IACDgB,gBAAgB,EAAE;MAChBJ,IAAI,EAAEK,KAAK;MACXjB,QAAQ,EAAE;IACZ,CAAC;IACDD,WAAW,EAAE;MACXa,IAAI,EAAEC,MAAM;MACZb,QAAQ,EAAE;IACZ;EACF,CAAC;EACDkB,KAAK,CAACR,KAAK,EAAE;IACX,MAAMS,IAAG,GAAI,IAAIhB,UAAU,CACzBiB,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,gCAA+BZ,KAAK,CAACC,UAAW,SAAQ,CAC1D;IACD,MAAM;MAACY,OAAO;MAAEC;IAAK,IAAItB,OAAO,EAAE;IAClC,OAAO;MACLiB,IAAI;MACJK,KAAK;MACLD;IACF,CAAC;EACH,CAAC;EACDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBlB,UAAU,EAAE;QACV,GAAGD;MACL,CAAC;MACDoB,KAAK,EAAE;QACLnB,UAAU,EAAE,CACVR,QAAQ,EACRD,WAAW,CAAC,IAAI,CAACA,WAAW,CAAC,EAC7BE,cAAc,CAAC,IAAI,CAACe,gBAAgB,CAAC;MAEzC,CAAC;MACDY,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,GAAG;MAClB,OAAOC,IAAI,CAACC,KAAK,CAAE,IAAI,CAACjC,WAAU,IAAK,IAAG,GAAI,IAAI,CAAC,GAAI,GAAG,IAAI,GAAG;IACnE;EACF,CAAC;EACDkC,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACR,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACP,IAAG,CACLgB,MAAM,CAAC;QACN,GAAG,IAAI,CAAC3B;MACV,CAAC,EACA4B,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAM;UAACC;QAAI,IAAID,QAAQ,CAACZ,IAAI;QAC5B,IAAI,CAACG,gBAAe,GAAIU,IAAI;MAC9B,CAAC,EACAC,OAAO,CAAC,MAAM;QACb,IAAI,CAACf,KAAK,EAAE;QACZ,IAAI,CAACE,SAAQ,GAAI,KAAK;MACxB,CAAC,CAAC;IACN,CAAC;IACDc,eAAe,GAAG;MAChB,MAAMC,OAAM,GAAK,GAAErB,MAAM,CAACC,SAAS,CAACC,OAAQ,yCAAwC,IAAI,CAACX,UAAW,EAAC;MACrGS,MAAM,CAACsB,IAAI,CAACD,OAAO,EAAE,QAAQ,CAAC;IAChC,CAAC;IACDE,kBAAkB,GAAG;MACnB,IAAI,CAACf,gBAAe,GAAI,IAAI;IAC9B;EACF;AACF,CAAC","names":["maxFileSize","required","validFileTypes","useForm","APIService","LanguageStringsImportModal","RequiredText","SubmitButton","attachmentModel","attachment","components","props","languageId","type","Number","languageName","String","allowedFileTypes","Array","setup","http","window","appGlobal","baseUrl","formRef","reset","data","isLoading","rules","importModalState","computed","formattedFileSize","Math","round","methods","onSave","create","then","response","meta","finally","onClickDownload","downUrl","open","onImportModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\languageImport\\LanguageImport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('admin.import_language_package') }}: {{ languageName }}\n      </oxd-text>\n      <oxd-divider />\n      <div class=\"orangehrm-information-card-container\">\n        <oxd-text class=\"orangehrm-sub-title\">\n          {{ $t('general.note') }}:\n        </oxd-text>\n        <ul>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('admin.use_the_sample_template') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('admin.only_edit_the_target_field') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('admin.do_not_change_the_template') }}\n            </oxd-text>\n          </li>\n          <li>\n            <oxd-text class=\"orangehrm-information-card-text\">\n              {{ $t('admin.sample_xliff') }}:\n              <a\n                href=\"#\"\n                class=\"download-link\"\n                @click.prevent=\"onClickDownload\"\n              >\n                {{ $t('general.download') }}\n              </a>\n            </oxd-text>\n          </li>\n        </ul>\n      </div>\n      <br />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"attachment.attachment\"\n                type=\"file\"\n                :rules=\"rules.attachment\"\n                :label=\"$t('general.select_file')\"\n                :button-label=\"$t('general.browse')\"\n                :placeholder=\"$t('general.no_file_selected')\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{\n                  $t('general.accepts_up_to_n_mb', {count: formattedFileSize})\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <submit-button :label=\"$t('general.upload')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <language-string-import-modal\n      v-if=\"importModalState\"\n      :data=\"importModalState\"\n      :language-id=\"languageId\"\n      @close=\"onImportModalClose\"\n    ></language-string-import-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  maxFileSize,\n  required,\n  validFileTypes,\n} from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport {APIService} from '@/core/util/services/api.service';\nimport LanguageStringsImportModal from '@/orangehrmAdminPlugin/components/LanguageStringsImportModal.vue';\nimport RequiredText from '@/core/components/labels/RequiredText.vue';\nimport SubmitButton from '@/core/components/buttons/SubmitButton.vue';\n\nconst attachmentModel = {\n  attachment: null,\n};\nexport default {\n  components: {\n    SubmitButton,\n    RequiredText,\n    'language-string-import-modal': LanguageStringsImportModal,\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true,\n    },\n    languageName: {\n      type: String,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/i18n/languages/${props.languageId}/import`,\n    );\n    const {formRef, reset} = useForm();\n    return {\n      http,\n      reset,\n      formRef,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel,\n      },\n      rules: {\n        attachment: [\n          required,\n          maxFileSize(this.maxFileSize),\n          validFileTypes(this.allowedFileTypes),\n        ],\n      },\n      importModalState: null,\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.attachment,\n        })\n        .then((response) => {\n          const {meta} = response.data;\n          this.importModalState = meta;\n        })\n        .finally(() => {\n          this.reset();\n          this.isLoading = false;\n        });\n    },\n    onClickDownload() {\n      const downUrl = `${window.appGlobal.baseUrl}/admin/viewLanguagePackage/languageId/${this.languageId}`;\n      window.open(downUrl, '_blank');\n    },\n    onImportModalClose() {\n      this.importModalState = null;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-information-card-container {\n  background-color: $oxd-interface-gray-lighten-2-color;\n  border-radius: 1.2rem;\n  padding: 1.2rem;\n}\n\n.orangehrm-information-card-text {\n  font-size: $oxd-input-control-font-size;\n  color: $oxd-input-control-font-color;\n  font-weight: $oxd-input-control-font-weight;\n\n  & .download-link {\n    color: $oxd-primary-one-color;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}