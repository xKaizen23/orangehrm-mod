{"ast":null,"code":"import { ref, watchEffect } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ActivityDropdown',\n  props: {\n    projectId: {\n      type: Number,\n      required: false,\n      default: null\n    }\n  },\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    watchEffect(async () => {\n      if (props.projectId) {\n        http.request({\n          method: 'GET',\n          url: `/api/v2/time/project/${props.projectId}/activities`,\n          params: {\n            limit: 0\n          }\n        }).then(({\n          data\n        }) => {\n          options.value = data.data.map(item => {\n            return {\n              id: item.id,\n              label: item.name,\n              isDeleted: item.deleted\n            };\n          });\n        });\n      } else {\n        options.value = [];\n      }\n    });\n    return {\n      options\n    };\n  }\n};","map":{"version":3,"mappings":"AAwBA,SAAQA,GAAG,EAAEC,WAAW,QAAO,KAAK;AACpC,SAAQC,UAAU,QAAO,sCAAsC;AAE/D,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,CAACN,KAAK,EAAE;IACX,MAAMO,OAAM,GAAIX,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMY,IAAG,GAAI,IAAIV,UAAU,CAACW,MAAM,CAACC,SAAS,CAACC,OAAO,EAAE,EAAE,CAAC;IAEzDd,WAAW,CAAC,YAAY;MACtB,IAAIG,KAAK,CAACC,SAAS,EAAE;QACnBO,IAAG,CACAI,OAAO,CAAC;UACPC,MAAM,EAAE,KAAK;UACbC,GAAG,EAAG,wBAAuBd,KAAK,CAACC,SAAU,aAAY;UACzDc,MAAM,EAAE;YAACC,KAAK,EAAE;UAAC;QACnB,CAAC,EACAC,IAAI,CAAC,CAAC;UAACC;QAAI,CAAC,KAAK;UAChBX,OAAO,CAACY,KAAI,GAAID,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;YACtC,OAAO;cACLC,EAAE,EAAED,IAAI,CAACC,EAAE;cACXC,KAAK,EAAEF,IAAI,CAACtB,IAAI;cAChByB,SAAS,EAAEH,IAAI,CAACI;YAClB,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,CAAC;MACN,OAAO;QACLlB,OAAO,CAACY,KAAI,GAAI,EAAE;MACpB;IACF,CAAC,CAAC;IAEF,OAAO;MACLZ;IACF,CAAC;EACH;AACF,CAAC","names":["ref","watchEffect","APIService","name","props","projectId","type","Number","required","default","setup","options","http","window","appGlobal","baseUrl","request","method","url","params","limit","then","data","value","map","item","id","label","isDeleted","deleted"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\components\\ActivityDropdown.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-field type=\"select\" :options=\"options\"> </oxd-input-field>\n</template>\n\n<script>\nimport {ref, watchEffect} from 'vue';\nimport {APIService} from '@ohrm/core/util/services/api.service';\n\nexport default {\n  name: 'ActivityDropdown',\n  props: {\n    projectId: {\n      type: Number,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, '');\n\n    watchEffect(async () => {\n      if (props.projectId) {\n        http\n          .request({\n            method: 'GET',\n            url: `/api/v2/time/project/${props.projectId}/activities`,\n            params: {limit: 0},\n          })\n          .then(({data}) => {\n            options.value = data.data.map((item) => {\n              return {\n                id: item.id,\n                label: item.name,\n                isDeleted: item.deleted,\n              };\n            });\n          });\n      } else {\n        options.value = [];\n      }\n    });\n\n    return {\n      options,\n    };\n  },\n};\n</script>\n\n<style scoped>\n::v-deep(.oxd-select-wrapper) {\n  min-width: 150px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}