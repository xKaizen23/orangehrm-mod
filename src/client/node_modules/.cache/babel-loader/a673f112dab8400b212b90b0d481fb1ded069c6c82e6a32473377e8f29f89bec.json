{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ClaimEmployeeAutocomplete',\n  props: {\n    params: {\n      type: Object,\n      default: () => ({})\n    },\n    apiPath: {\n      type: String,\n      default: '/api/v2/pim/employees'\n    },\n    authEmployeeNumber: {\n      type: Number,\n      default: null\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, props.apiPath);\n    return {\n      http\n    };\n  },\n  methods: {\n    async loadEmployees(searchParam) {\n      return new Promise(resolve => {\n        if (searchParam.trim()) {\n          this.http.getAll({\n            nameOrId: searchParam.trim(),\n            ...this.params\n          }).then(({\n            data\n          }) => {\n            resolve(data.data.filter(employee => employee.empNumber !== this.authEmployeeNumber).map(employee => {\n              return {\n                id: employee.empNumber,\n                label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n                _employee: employee,\n                isPastEmployee: employee.terminationId ? true : false\n              };\n            }));\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA,SAAQA,UAAU,QAAO,sCAAsC;AAC/D,eAAe;EACbC,IAAI,EAAE,2BAA2B;EACjCC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX,CAAC;IACDG,kBAAkB,EAAE;MAClBL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE;IACX;EACF,CAAC;EACDK,KAAK,CAACT,KAAK,EAAE;IACX,MAAMU,IAAG,GAAI,IAAIZ,UAAU,CAACa,MAAM,CAACC,SAAS,CAACC,OAAO,EAAEb,KAAK,CAACK,OAAO,CAAC;IACpE,OAAO;MACLK;IACF,CAAC;EACH,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,aAAa,CAACC,WAAW,EAAE;MAC/B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9B,IAAIF,WAAW,CAACG,IAAI,EAAE,EAAE;UACtB,IAAI,CAACT,IAAG,CACLU,MAAM,CAAC;YACNC,QAAQ,EAAEL,WAAW,CAACG,IAAI,EAAE;YAC5B,GAAG,IAAI,CAAClB;UACV,CAAC,EACAqB,IAAI,CAAC,CAAC;YAACC;UAAI,CAAC,KAAK;YAChBL,OAAO,CACLK,IAAI,CAACA,IAAG,CACLC,MAAM,CACJC,QAAQ,IACPA,QAAQ,CAACC,SAAQ,KAAM,IAAI,CAACnB,kBAAkB,CAClD,CACCoB,GAAG,CAAEF,QAAQ,IAAK;cACjB,OAAO;gBACLG,EAAE,EAAEH,QAAQ,CAACC,SAAS;gBACtBG,KAAK,EAAG,GAAEJ,QAAQ,CAACK,SAAS,IAAIL,QAAQ,CAACM,UAAU,IAAIN,QAAQ,CAACO,QAAS,EAAC;gBAC1EC,SAAS,EAAER,QAAQ;gBACnBS,cAAc,EAAET,QAAQ,CAACU,aAAY,GAAI,IAAG,GAAI;cAClD,CAAC;YACH,CAAC,CAAC,CACL;UACH,CAAC,CAAC;QACN,OAAO;UACLjB,OAAO,CAAC,EAAE,CAAC;QACb;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["APIService","name","props","params","type","Object","default","apiPath","String","authEmployeeNumber","Number","setup","http","window","appGlobal","baseUrl","methods","loadEmployees","searchParam","Promise","resolve","trim","getAll","nameOrId","then","data","filter","employee","empNumber","map","id","label","firstName","middleName","lastName","_employee","isPastEmployee","terminationId"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\ClaimEmployeeAutocomplete.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-field\n    type=\"autocomplete\"\n    :label=\"$t('general.employee_name')\"\n    :clear=\"false\"\n    :create-options=\"loadEmployees\"\n  >\n    <template #afterSelected=\"{data}\">\n      <template v-if=\"data.isPastEmployee\">\n        {{ $t('general.past_employee') }}\n      </template>\n    </template>\n    <template #option=\"{data}\">\n      <span>{{ data.label }}</span>\n      <div v-if=\"data.isPastEmployee\" class=\"past-employee-tag\">\n        {{ $t('general.past_employee') }}\n      </div>\n    </template>\n  </oxd-input-field>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ClaimEmployeeAutocomplete',\n  props: {\n    params: {\n      type: Object,\n      default: () => ({}),\n    },\n    apiPath: {\n      type: String,\n      default: '/api/v2/pim/employees',\n    },\n    authEmployeeNumber: {\n      type: Number,\n      default: null,\n    },\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, props.apiPath);\n    return {\n      http,\n    };\n  },\n  methods: {\n    async loadEmployees(searchParam) {\n      return new Promise((resolve) => {\n        if (searchParam.trim()) {\n          this.http\n            .getAll({\n              nameOrId: searchParam.trim(),\n              ...this.params,\n            })\n            .then(({data}) => {\n              resolve(\n                data.data\n                  .filter(\n                    (employee) =>\n                      employee.empNumber !== this.authEmployeeNumber,\n                  )\n                  .map((employee) => {\n                    return {\n                      id: employee.empNumber,\n                      label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n                      _employee: employee,\n                      isPastEmployee: employee.terminationId ? true : false,\n                    };\n                  }),\n              );\n            });\n        } else {\n          resolve([]);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.past-employee-tag {\n  margin-left: auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}