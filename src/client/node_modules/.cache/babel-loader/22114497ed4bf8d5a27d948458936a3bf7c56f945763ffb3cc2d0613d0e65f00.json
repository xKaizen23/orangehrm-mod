{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  return _openBlock(), _createBlock(_component_oxd_input_field, {\n    type: \"select\",\n    label: _ctx.$t('general.status'),\n    options: $setup.options\n  }, null, 8, [\"label\", \"options\"]);\n}","map":{"version":3,"mappings":";;;uBAoBEA,aAIEC;IAHAC,IAAI,EAAC,QAAQ;IACZC,KAAK,EAAEC,OAAE;IACTC,OAAO,EAAEC","names":["_createBlock","_component_oxd_input_field","type","label","_ctx","options","$setup"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\components\\CandidateStatusDropdown.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-field\n    type=\"select\"\n    :label=\"$t('general.status')\"\n    :options=\"options\"\n  />\n</template>\n\n<script>\nimport {ref, onBeforeMount} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nexport default {\n  name: 'CandidateStatusDropdown',\n  setup() {\n    const options = ref([]);\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/candidates/statuses',\n    );\n    onBeforeMount(() => {\n      http.getAll().then(({data}) => {\n        options.value = data.data.map((item) => {\n          return {\n            id: item.id,\n            label: item.label,\n          };\n        });\n      });\n    });\n    return {\n      options,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}