{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_claim_event_dropdown = _resolveComponent(\"claim-event-dropdown\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('claim.create_claim_request')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_claim_event_dropdown, {\n            modelValue: $data.request.event,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.request.event = $event),\n            rules: $data.rules.event,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.request.currency,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.request.currency = $event),\n            type: \"select\",\n            rules: $data.rules.currency,\n            options: $props.currencies,\n            label: _ctx.$t('general.currency'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"options\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.request.remarks,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.request.remarks = $event),\n            type: \"textarea\",\n            label: _ctx.$t('claim.remarks'),\n            rules: $data.rules.remarks\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button, {\n        label: _ctx.$t('claim.create')\n      }, null, 8, [\"label\"])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;uBADvCC,oBAyDM,OAzDNC,UAyDM,GAxDJC,oBAuDM,OAvDNC,UAuDM,GAtDJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAAsC,mCAAnCQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aA+CWK;IA/CAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAoBe,CApBfT,aAoBeU;wBAnBb,MAkBW,CAlBXV,aAkBWW;QAlBAC,IAAI,EAAE,CAAC;QAAEjB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBa;4BALd,MAIE,CAJFb,aAIEc;wBAHSP,aAAO,CAACQ,KAAK;uEAAbR,aAAO,CAACQ,KAAK;YACrBC,KAAK,EAAET,WAAK,CAACQ,KAAK;YACnBE,QAAQ,EAAR;;;YAGJjB,aASgBa;4BARd,MAOE,CAPFb,aAOEkB;wBANSX,aAAO,CAACY,QAAQ;uEAAhBZ,aAAO,CAACY,QAAQ;YACzBC,IAAI,EAAC,QAAQ;YACZJ,KAAK,EAAET,WAAK,CAACY,QAAQ;YACrBE,OAAO,EAAEC,iBAAU;YACnBC,KAAK,EAAEpB,OAAE;YACVc,QAAQ,EAAR;;;;;;;QAMRjB,aAWeU;wBAVb,MASW,CATXV,aASWW;QATAC,IAAI,EAAE,CAAC;QAAEjB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBa;UAPDlB,KAAK,EAAC;QAAiB;4BACpC,MAKE,CALFK,aAKEkB;wBAJSX,aAAO,CAACiB,OAAO;uEAAfjB,aAAO,CAACiB,OAAO;YACxBJ,IAAI,EAAC,UAAU;YACdG,KAAK,EAAEpB,OAAE;YACTa,KAAK,EAAET,WAAK,CAACiB;;;;;;;QAMtBxB,aAAeI,yBAEfJ,aAQmByB;wBAPjB,MAAiB,CAAjBzB,aAAiB0B,2BACjB1B,aAIE2B;QAHA,cAAY,EAAC,OAAO;QACnBJ,KAAK,EAAEpB,OAAE;QACTyB,OAAK,EAAEnB;yCAEVT,aAA6C6B;QAA7BN,KAAK,EAAEpB,OAAE","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_claim_event_dropdown","event","rules","required","_component_oxd_input_field","currency","type","options","$props","label","remarks","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\submitClaim\\SubmitClaimRequest.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('claim.create_claim_request') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <claim-event-dropdown\n                v-model=\"request.event\"\n                :rules=\"rules.event\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"request.currency\"\n                type=\"select\"\n                :rules=\"rules.currency\"\n                :options=\"currencies\"\n                :label=\"$t('general.currency')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"--span-column-2\">\n              <oxd-input-field\n                v-model=\"request.remarks\"\n                type=\"textarea\"\n                :label=\"$t('claim.remarks')\"\n                :rules=\"rules.remarks\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button :label=\"$t('claim.create')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport ClaimEventDropdownVue from '../../components/ClaimEventDropdown.vue';\n\nconst claimRequest = {\n  event: null,\n  currency: null,\n  remarks: null,\n};\n\nexport default {\n  name: 'SubmitClaimRequest',\n\n  components: {\n    'claim-event-dropdown': ClaimEventDropdownVue,\n  },\n\n  props: {\n    currencies: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/claim/requests',\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      request: {...claimRequest},\n      id: 0,\n      rules: {\n        event: [required],\n        currency: [required],\n        remarks: [shouldNotExceedCharLength(1000)],\n      },\n    };\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/claim/viewClaim');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          claimEventId: this.request.event.id,\n          currencyId: this.request.currency.id,\n          remarks: this.request.remarks,\n        })\n        .then((res) => {\n          this.id = res.data.data.id;\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          navigate('/claim/submitClaim/id/{id}', {id: this.id});\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}