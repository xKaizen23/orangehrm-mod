{"ast":null,"code":"import { computed, ref } from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport EmploymentStatusDropdown from '@/orangehrmPimPlugin/components/EmploymentStatusDropdown';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport { shouldNotExceedCharLength, validSelection } from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nconst defaultSortOrder = {\n  'employee.employeeId': 'DEFAULT',\n  'employee.firstName': 'ASC',\n  'employee.lastName': 'DEFAULT',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'empStatus.name': 'DEFAULT',\n  'subunit.name': 'DEFAULT',\n  'supervisor.firstName': 'DEFAULT'\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'employment-status-dropdown': EmploymentStatusDropdown,\n    'include-employee-dropdown': IncludeEmployeeDropdown\n  },\n  props: {\n    unselectableEmpNumbers: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const dataNormalizer = data => {\n      return data.map(item => {\n        const selectable = props.unselectableEmpNumbers.findIndex(empNumber => empNumber == item.empNumber);\n        return {\n          id: item.empNumber,\n          employeeId: item.employeeId,\n          firstAndMiddleName: `${item.firstName} ${item.middleName}`,\n          lastName: item.lastName + (item.terminationId ? ` ${$t('general.past_employee')}` : ''),\n          jobTitle: item.jobTitle?.isDeleted ? item.jobTitle.title + $t('general.deleted') : item.jobTitle?.title,\n          empStatus: item.empStatus?.name,\n          subunit: item.subunit?.name,\n          supervisor: item.supervisors ? item.supervisors.map(supervisor => `${supervisor.firstName} ${supervisor.lastName}`).join(',') : '',\n          isSelectable: selectable === -1\n        };\n      });\n    };\n    const filters = ref({\n      employee: null,\n      employeeId: '',\n      empStatusId: null,\n      supervisor: null,\n      jobTitleId: null,\n      subunitId: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only')\n      }\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        model: 'detailed',\n        nameOrId: typeof filters.value.employee === 'string' ? filters.value.employee : undefined,\n        empNumber: filters.value.employee?.id,\n        employeeId: filters.value.employeeId,\n        empStatusId: filters.value.empStatusId?.id,\n        includeEmployees: filters.value.includeEmployees?.param,\n        supervisorEmpNumbers: filters.value.supervisor ? [filters.value.supervisor.id] : undefined,\n        jobTitleId: filters.value.jobTitleId?.id,\n        subunitId: filters.value.subunitId?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/employees');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: dataNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100)],\n        supervisor: [shouldNotExceedCharLength(100), validSelection]\n      }\n    };\n  },\n  computed: {\n    headers() {\n      return [{\n        name: 'employeeId',\n        slot: 'title',\n        title: this.$t('general.id'),\n        sortField: 'employee.employeeId',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'firstAndMiddleName',\n        title: this.$t('pim.first_middle_name'),\n        sortField: 'employee.firstName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'lastName',\n        title: this.$t('general.last_name'),\n        sortField: 'employee.lastName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'jobTitle',\n        title: this.$t('general.job_title'),\n        sortField: 'jobTitle.jobTitleName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'empStatus',\n        title: this.$t('general.employment_status'),\n        sortField: 'empStatus.name',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'subunit',\n        title: this.$t('general.sub_unit'),\n        sortField: 'subunit.name',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'supervisor',\n        title: this.$t('pim.supervisor'),\n        sortField: 'supervisor.firstName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer\n      }];\n    }\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/pim/addEmployee');\n    },\n    onClickEdit($event) {\n      const id = $event.id ? $event.id : $event.item?.id;\n      navigate('/pim/viewPersonalDetails/empNumber/{id}', {\n        id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item, $event) {\n      $event.stopImmediatePropagation();\n      const isSelectable = this.unselectableEmpNumbers.findIndex(empNumber => empNumber == item.id);\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    cellRenderer(...[,,, row]) {\n      const cellConfig = {\n        edit: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        }\n      };\n      if (this.$can.delete('employee_list') && !this.unselectableEmpNumbers.includes(row.id)) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AA8HA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,OAAOC,wBAAuB,MAAO,mDAAmD;AACxF,OAAOC,WAAU,MAAO,wCAAwC;AAChE,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,oBAAmB,MAAO,+CAA+C;AAChF,OAAOC,gBAAe,MAAO,kDAAkD;AAC/E,OAAOC,eAAc,MAAO,iDAAiD;AAC7E,OAAOC,wBAAuB,MAAO,0DAA0D;AAC/F,OAAOC,uBAAsB,MAAO,oDAAoD;AACxF,OAAOC,OAAM,MAAO,oCAAoC;AACxD,SACEC,yBAAyB,EACzBC,cAAc,QACT,8BAA8B;AACrC,OAAOC,OAAM,MAAO,gCAAgC;AAEpD,MAAMC,gBAAe,GAAI;EACvB,qBAAqB,EAAE,SAAS;EAChC,oBAAoB,EAAE,KAAK;EAC3B,mBAAmB,EAAE,SAAS;EAC9B,uBAAuB,EAAE,SAAS;EAClC,gBAAgB,EAAE,SAAS;EAC3B,cAAc,EAAE,SAAS;EACzB,sBAAsB,EAAE;AAC1B,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,qBAAqB,EAAEd,wBAAwB;IAC/C,uBAAuB,EAAEI,oBAAoB;IAC7C,mBAAmB,EAAEC,gBAAgB;IACrC,kBAAkB,EAAEC,eAAe;IACnC,4BAA4B,EAAEC,wBAAwB;IACtD,2BAA2B,EAAEC;EAC/B,CAAC;EAEDO,KAAK,EAAE;IACLC,sBAAsB,EAAE;MACtBC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EAEDC,KAAK,CAACL,KAAK,EAAE;IACX,MAAM;MAACM;IAAE,IAAIT,OAAO,EAAE;IACtB,MAAMU,cAAa,GAAKC,IAAI,IAAK;MAC/B,OAAOA,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;QACxB,MAAMC,UAAS,GAAIX,KAAK,CAACC,sBAAsB,CAACW,SAAS,CACtDC,SAAS,IAAKA,SAAQ,IAAKH,IAAI,CAACG,SAAS,CAC3C;QACD,OAAO;UACLC,EAAE,EAAEJ,IAAI,CAACG,SAAS;UAClBE,UAAU,EAAEL,IAAI,CAACK,UAAU;UAC3BC,kBAAkB,EAAG,GAAEN,IAAI,CAACO,SAAS,IAAIP,IAAI,CAACQ,UAAW,EAAC;UAC1DC,QAAQ,EACNT,IAAI,CAACS,QAAO,IACXT,IAAI,CAACU,aAAY,GAAI,IAAId,EAAE,CAAC,uBAAuB,CAAE,KAAI,EAAE,CAAC;UAC/De,QAAQ,EAAEX,IAAI,CAACW,QAAQ,EAAEC,SAAQ,GAC7BZ,IAAI,CAACW,QAAQ,CAACE,KAAI,GAAIjB,EAAE,CAAC,iBAAiB,IAC1CI,IAAI,CAACW,QAAQ,EAAEE,KAAK;UACxBC,SAAS,EAAEd,IAAI,CAACc,SAAS,EAAEC,IAAI;UAC/BC,OAAO,EAAEhB,IAAI,CAACgB,OAAO,EAAED,IAAI;UAC3BE,UAAU,EAAEjB,IAAI,CAACkB,WAAU,GACvBlB,IAAI,CAACkB,WAAU,CACZnB,GAAG,CACDkB,UAAU,IACR,GAAEA,UAAU,CAACV,SAAS,IAAIU,UAAU,CAACR,QAAS,EAAC,CACpD,CACCU,IAAI,CAAC,GAAG,IACX,EAAE;UACNC,YAAY,EAAEnB,UAAS,KAAM,CAAC;QAChC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,MAAMoB,OAAM,GAAI/C,GAAG,CAAC;MAClBgD,QAAQ,EAAE,IAAI;MACdjB,UAAU,EAAE,EAAE;MACdkB,WAAW,EAAE,IAAI;MACjBN,UAAU,EAAE,IAAI;MAChBO,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,gBAAgB,EAAE;QAChBtB,EAAE,EAAE,CAAC;QACLuB,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAEhC,EAAE,CAAC,gCAAgC;MAC5C;IACF,CAAC,CAAC;IACF,MAAM;MAACiC,cAAc;MAAEC,SAAS;MAAEC,SAAS;MAAEC;IAAM,IAAIhD,OAAO,CAAC;MAC7D6C,cAAc,EAAEzC;IAClB,CAAC,CAAC;IACF,MAAM6C,iBAAgB,GAAI5D,QAAQ,CAAC,MAAM;MACvC,OAAO;QACL6D,KAAK,EAAE,UAAU;QACjBC,QAAQ,EACN,OAAOd,OAAO,CAACe,KAAK,CAACd,QAAO,KAAM,QAAO,GACrCD,OAAO,CAACe,KAAK,CAACd,QAAO,GACrBe,SAAS;QACflC,SAAS,EAAEkB,OAAO,CAACe,KAAK,CAACd,QAAQ,EAAElB,EAAE;QACrCC,UAAU,EAAEgB,OAAO,CAACe,KAAK,CAAC/B,UAAU;QACpCkB,WAAW,EAAEF,OAAO,CAACe,KAAK,CAACb,WAAW,EAAEnB,EAAE;QAC1CsB,gBAAgB,EAAEL,OAAO,CAACe,KAAK,CAACV,gBAAgB,EAAEC,KAAK;QACvDW,oBAAoB,EAAEjB,OAAO,CAACe,KAAK,CAACnB,UAAS,GACzC,CAACI,OAAO,CAACe,KAAK,CAACnB,UAAU,CAACb,EAAE,IAC5BiC,SAAS;QACbb,UAAU,EAAEH,OAAO,CAACe,KAAK,CAACZ,UAAU,EAAEpB,EAAE;QACxCqB,SAAS,EAAEJ,OAAO,CAACe,KAAK,CAACX,SAAS,EAAErB,EAAE;QACtC0B,SAAS,EAAEA,SAAS,CAACM,KAAK;QAC1BL,SAAS,EAAEA,SAAS,CAACK;MACvB,CAAC;IACH,CAAC,CAAC;IAEF,MAAMG,IAAG,GAAI,IAAI7D,UAAU,CACzB8D,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,uBAAuB,CACxB;IACD,MAAM;MACJC,aAAa;MACbC,WAAW;MACXC,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC;IACF,IAAI1E,WAAW,CAAC+D,IAAI,EAAE;MACpBY,KAAK,EAAElB,iBAAiB;MACxBmB,UAAU,EAAEvD;IACd,CAAC,CAAC;IAEFmC,MAAM,CAACkB,SAAS,CAAC;IAEjB,OAAO;MACLX,IAAI;MACJI,aAAa;MACbC,WAAW;MACXK,SAAS;MACTJ,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRG,SAAS;MACTG,KAAK,EAAEL,QAAQ;MACf3B,OAAO;MACPQ;IACF,CAAC;EACH,CAAC;EACD/B,IAAI,GAAG;IACL,OAAO;MACLwD,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE;QACLjC,QAAQ,EAAE,CAACrC,yBAAyB,CAAC,GAAG,CAAC,CAAC;QAC1CgC,UAAU,EAAE,CAAChC,yBAAyB,CAAC,GAAG,CAAC,EAAEC,cAAc;MAC7D;IACF,CAAC;EACH,CAAC;EACDb,QAAQ,EAAE;IACRmF,OAAO,GAAG;MACR,OAAO,CACL;QACEzC,IAAI,EAAE,YAAY;QAClB0C,IAAI,EAAE,OAAO;QACb5C,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,YAAY,CAAC;QAC5BkC,SAAS,EAAE,qBAAqB;QAChC4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,oBAAoB;QAC1BF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,uBAAuB,CAAC;QACvCkC,SAAS,EAAE,oBAAoB;QAC/B4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,UAAU;QAChBF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,mBAAmB,CAAC;QACnCkC,SAAS,EAAE,mBAAmB;QAC9B4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,UAAU;QAChBF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,mBAAmB,CAAC;QACnCkC,SAAS,EAAE,uBAAuB;QAClC4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,WAAW;QACjBF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,2BAA2B,CAAC;QAC3CkC,SAAS,EAAE,gBAAgB;QAC3B4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,SAAS;QACfF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,kBAAkB,CAAC;QAClCkC,SAAS,EAAE,cAAc;QACzB4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,YAAY;QAClBF,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,gBAAgB,CAAC;QAChCkC,SAAS,EAAE,sBAAsB;QACjC4B,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACE5C,IAAI,EAAE,SAAS;QACf0C,IAAI,EAAE,QAAQ;QACd5C,KAAK,EAAE,IAAI,CAACjB,EAAE,CAAC,iBAAiB,CAAC;QACjC8D,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC,CAAC;QAChBC,QAAQ,EAAE,wBAAwB;QAClCC,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC,CACF;IACH;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAU,GAAG;MACXtF,QAAQ,CAAC,kBAAkB,CAAC;IAC9B,CAAC;IACDuF,WAAW,CAACC,MAAM,EAAE;MAClB,MAAM7D,EAAC,GAAI6D,MAAM,CAAC7D,EAAC,GAAI6D,MAAM,CAAC7D,EAAC,GAAI6D,MAAM,CAACjE,IAAI,EAAEI,EAAE;MAClD3B,QAAQ,CAAC,yCAAyC,EAAE;QAAC2B;MAAE,CAAC,CAAC;IAC3D,CAAC;IACD8D,qBAAqB,GAAG;MACtB,MAAMC,GAAE,GAAI,IAAI,CAACb,YAAY,CAACvD,GAAG,CAAEqE,KAAK,IAAK;QAC3C,OAAO,IAAI,CAACf,KAAK,EAAEvD,IAAI,CAACsE,KAAK,CAAC,CAAChE,EAAE;MACnC,CAAC,CAAC;MACF,IAAI,CAACiE,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAACP,GAAG,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;IACDQ,aAAa,CAAC3E,IAAI,EAAEiE,MAAM,EAAE;MAC1BA,MAAM,CAACW,wBAAwB,EAAE;MACjC,MAAMxD,YAAW,GAAI,IAAI,CAAC7B,sBAAsB,CAACW,SAAS,CACvDC,SAAS,IAAKA,SAAQ,IAAKH,IAAI,CAACI,EAAE,CACpC;MACD,IAAIgB,YAAW,GAAI,CAAC,CAAC,EAAE;QACrB,OAAO,IAAI,CAACyD,MAAM,CAACC,YAAY,EAAE;MACnC;MACA,IAAI,CAACT,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAAC,CAAC1E,IAAI,CAACI,EAAE,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IACDsE,WAAW,CAACrB,KAAK,EAAE;MACjB,IAAIA,KAAI,YAAa5D,KAAK,EAAE;QAC1B,IAAI,CAACwD,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACV,IAAG,CACLwC,SAAS,CAAC;UACTZ,GAAG,EAAEd;QACP,CAAC,EACAmB,IAAI,CAAC,MAAM;UACV,OAAO,IAAI,CAACK,MAAM,CAACG,aAAa,EAAE;QACpC,CAAC,EACAR,IAAI,CAAC,MAAM;UACV,IAAI,CAACvB,SAAQ,GAAI,KAAK;UACtB,IAAI,CAACgC,cAAc,EAAE;QACvB,CAAC,CAAC;MACN;IACF,CAAC;IACD,MAAMA,cAAc,GAAG;MACrB,IAAI,CAAC3B,YAAW,GAAI,EAAE;MACtB,MAAM,IAAI,CAACJ,SAAS,EAAE;IACxB,CAAC;IACD,MAAMgC,WAAW,GAAG;MAClB,MAAM,IAAI,CAAChC,SAAS,EAAE;IACxB,CAAC;IACDW,YAAY,CAAC,GAAG,KAAOsB,GAAG,CAAC,EAAE;MAC3B,MAAMC,UAAS,GAAI;QACjBC,IAAI,EAAE;UACJC,OAAO,EAAE,IAAI,CAACtB,WAAW;UACzB1E,KAAK,EAAE;YACLyB,IAAI,EAAE;UACR;QACF;MACF,CAAC;MAED,IACE,IAAI,CAACwE,IAAI,CAACC,MAAM,CAAC,eAAe,KAChC,CAAC,IAAI,CAACjG,sBAAsB,CAACkG,QAAQ,CAACN,GAAG,CAAC/E,EAAE,GAC5C;QACAgF,UAAU,CAACI,MAAK,GAAI;UAClBF,OAAO,EAAE,IAAI,CAACX,aAAa;UAC3Be,SAAS,EAAE,iBAAiB;UAC5BpG,KAAK,EAAE;YACLyB,IAAI,EAAE;UACR;QACF,CAAC;MACH;MAEA,OAAO;QACLzB,KAAK,EAAE;UACLqG,MAAM,EAAE;YACNP;UACF;QACF;MACF,CAAC;IACH;EACF;AACF,CAAC","names":["computed","ref","DeleteConfirmationDialog","usePaginate","navigate","APIService","EmployeeAutocomplete","JobtitleDropdown","SubunitDropdown","EmploymentStatusDropdown","IncludeEmployeeDropdown","useSort","shouldNotExceedCharLength","validSelection","usei18n","defaultSortOrder","components","props","unselectableEmpNumbers","type","Array","default","setup","$t","dataNormalizer","data","map","item","selectable","findIndex","empNumber","id","employeeId","firstAndMiddleName","firstName","middleName","lastName","terminationId","jobTitle","isDeleted","title","empStatus","name","subunit","supervisor","supervisors","join","isSelectable","filters","employee","empStatusId","jobTitleId","subunitId","includeEmployees","param","label","sortDefinition","sortField","sortOrder","onSort","serializedFilters","model","nameOrId","value","undefined","supervisorEmpNumbers","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","checkedItems","rules","headers","slot","style","flex","cellType","cellRenderer","methods","onClickAdd","onClickEdit","$event","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","onClickDelete","stopImmediatePropagation","$toast","cannotDelete","deleteAll","deleteSuccess","resetDataTable","filterItems","row","cellConfig","edit","onClick","$can","delete","includes","component","header"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\Employee.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('pim.employee_information')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.employee\"\n                :rules=\"rules.employee\"\n                :params=\"{includeEmployees: filters.includeEmployees?.param}\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.employeeId\"\n                :label=\"$t('general.employee_id')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <employment-status-dropdown v-model=\"filters.empStatusId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <include-employee-dropdown\n                v-model=\"filters.includeEmployees\"\n              ></include-employee-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.supervisor\"\n                :rules=\"rules.supervisor\"\n                :label=\"$t('pim.supervisor_name')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <jobtitle-dropdown v-model=\"filters.jobTitleId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <subunit-dropdown v-model=\"filters.subunitId\" />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div\n        v-if=\"$can.create('employee_list')\"\n        class=\"orangehrm-header-container\"\n      >\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          ref=\"cardTable\"\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"$can.delete('employee_list')\"\n          :clickable=\"true\"\n          :loading=\"isLoading\"\n          class=\"orangehrm-employee-list\"\n          row-decorator=\"oxd-table-decorator-card\"\n          @click=\"onClickEdit\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport EmploymentStatusDropdown from '@/orangehrmPimPlugin/components/EmploymentStatusDropdown';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\n\nconst defaultSortOrder = {\n  'employee.employeeId': 'DEFAULT',\n  'employee.firstName': 'ASC',\n  'employee.lastName': 'DEFAULT',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'empStatus.name': 'DEFAULT',\n  'subunit.name': 'DEFAULT',\n  'supervisor.firstName': 'DEFAULT',\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'employment-status-dropdown': EmploymentStatusDropdown,\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n  },\n\n  props: {\n    unselectableEmpNumbers: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const dataNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableEmpNumbers.findIndex(\n          (empNumber) => empNumber == item.empNumber,\n        );\n        return {\n          id: item.empNumber,\n          employeeId: item.employeeId,\n          firstAndMiddleName: `${item.firstName} ${item.middleName}`,\n          lastName:\n            item.lastName +\n            (item.terminationId ? ` ${$t('general.past_employee')}` : ''),\n          jobTitle: item.jobTitle?.isDeleted\n            ? item.jobTitle.title + $t('general.deleted')\n            : item.jobTitle?.title,\n          empStatus: item.empStatus?.name,\n          subunit: item.subunit?.name,\n          supervisor: item.supervisors\n            ? item.supervisors\n                .map(\n                  (supervisor) =>\n                    `${supervisor.firstName} ${supervisor.lastName}`,\n                )\n                .join(',')\n            : '',\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n\n    const filters = ref({\n      employee: null,\n      employeeId: '',\n      empStatusId: null,\n      supervisor: null,\n      jobTitleId: null,\n      subunitId: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    });\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        model: 'detailed',\n        nameOrId:\n          typeof filters.value.employee === 'string'\n            ? filters.value.employee\n            : undefined,\n        empNumber: filters.value.employee?.id,\n        employeeId: filters.value.employeeId,\n        empStatusId: filters.value.empStatusId?.id,\n        includeEmployees: filters.value.includeEmployees?.param,\n        supervisorEmpNumbers: filters.value.supervisor\n          ? [filters.value.supervisor.id]\n          : undefined,\n        jobTitleId: filters.value.jobTitleId?.id,\n        subunitId: filters.value.subunitId?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/employees',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: dataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100)],\n        supervisor: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n  computed: {\n    headers() {\n      return [\n        {\n          name: 'employeeId',\n          slot: 'title',\n          title: this.$t('general.id'),\n          sortField: 'employee.employeeId',\n          style: {flex: 1},\n        },\n        {\n          name: 'firstAndMiddleName',\n          title: this.$t('pim.first_middle_name'),\n          sortField: 'employee.firstName',\n          style: {flex: 1},\n        },\n        {\n          name: 'lastName',\n          title: this.$t('general.last_name'),\n          sortField: 'employee.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          sortField: 'jobTitle.jobTitleName',\n          style: {flex: 1},\n        },\n        {\n          name: 'empStatus',\n          title: this.$t('general.employment_status'),\n          sortField: 'empStatus.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'subunit',\n          title: this.$t('general.sub_unit'),\n          sortField: 'subunit.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'supervisor',\n          title: this.$t('pim.supervisor'),\n          sortField: 'supervisor.firstName',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ];\n    },\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/pim/addEmployee');\n    },\n    onClickEdit($event) {\n      const id = $event.id ? $event.id : $event.item?.id;\n      navigate('/pim/viewPersonalDetails/empNumber/{id}', {id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item, $event) {\n      $event.stopImmediatePropagation();\n      const isSelectable = this.unselectableEmpNumbers.findIndex(\n        (empNumber) => empNumber == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {\n        edit: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        },\n      };\n\n      if (\n        this.$can.delete('employee_list') &&\n        !this.unselectableEmpNumbers.includes(row.id)\n      ) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}