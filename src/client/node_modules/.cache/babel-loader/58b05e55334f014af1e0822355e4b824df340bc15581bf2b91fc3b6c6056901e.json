{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport { OxdPieChart, CHART_COLORS } from '@ohrm/oxd';\nexport default {\n  name: 'EmployeeLocationWidget',\n  components: {\n    'base-widget': BaseWidget,\n    'oxd-pie-chart': OxdPieChart\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/dashboard/employees/locations');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      dataset: [],\n      isLoading: false\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data,\n        meta\n      } = response.data;\n      const colors = [CHART_COLORS.COLOR_HEAT_WAVE, CHART_COLORS.COLOR_CHROME_YELLOW, CHART_COLORS.COLOR_YELLOW_GREEN, CHART_COLORS.COLOR_MOUNTAIN_MEADOW, CHART_COLORS.COLOR_PACIFIC_BLUE, CHART_COLORS.COLOR_BLEU_DE_FRANCE, CHART_COLORS.COLOR_MAJORELLE_BLUE, CHART_COLORS.COLOR_MEDIUM_ORCHID, CHART_COLORS.COLOR_FANDANGO_PINK];\n      this.dataset = data.map((item, index) => {\n        return item.count ? {\n          value: item.count,\n          color: colors[index],\n          label: item.location.name\n        } : false;\n      }).filter(item => item);\n      if (meta?.otherEmployeeCount) {\n        this.dataset.push({\n          value: meta.otherEmployeeCount,\n          color: CHART_COLORS.COLOR_FANDANGO_PINK,\n          label: this.$t('pim.other')\n        });\n      }\n      if (meta?.unassignedEmployeeCount) {\n        this.dataset.push({\n          value: meta.unassignedEmployeeCount,\n          color: CHART_COLORS.COLOR_TART_ORANGE,\n          label: this.$t('dashboard.unassigned')\n        });\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  }\n};","map":{"version":3,"mappings":";AAoCA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,UAAS,MAAO,sDAAsD;AAC7E,SAAQC,WAAW,EAAEC,YAAY,QAAO,WAAW;AAEnD,eAAe;EACbC,IAAI,EAAE,wBAAwB;EAE9BC,UAAU,EAAE;IACV,aAAa,EAAEJ,UAAU;IACzB,eAAe,EAAEC;EACnB,CAAC;EAEDI,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIP,UAAU,CACzBQ,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,uCAAuC,CACxC;IAED,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAEDC,WAAW,GAAG;IACZ,IAAI,CAACD,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACN,IAAG,CACLQ,MAAM,EAAC,CACPC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACN,IAAI;QAAEO;MAAI,IAAID,QAAQ,CAACN,IAAI;MAElC,MAAMQ,MAAK,GAAI,CACbhB,YAAY,CAACiB,eAAe,EAC5BjB,YAAY,CAACkB,mBAAmB,EAChClB,YAAY,CAACmB,kBAAkB,EAC/BnB,YAAY,CAACoB,qBAAqB,EAClCpB,YAAY,CAACqB,kBAAkB,EAC/BrB,YAAY,CAACsB,oBAAoB,EACjCtB,YAAY,CAACuB,oBAAoB,EACjCvB,YAAY,CAACwB,mBAAmB,EAChCxB,YAAY,CAACyB,mBAAmB,CACjC;MAED,IAAI,CAAChB,OAAM,GAAID,IAAG,CACfkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACpB,OAAOD,IAAI,CAACE,KAAI,GACZ;UACEC,KAAK,EAAEH,IAAI,CAACE,KAAK;UACjBE,KAAK,EAAEf,MAAM,CAACY,KAAK,CAAC;UACpBI,KAAK,EAAEL,IAAI,CAACM,QAAQ,CAAChC;QACvB,IACA,KAAK;MACX,CAAC,EACAiC,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAAC;MAEzB,IAAIZ,IAAI,EAAEoB,kBAAkB,EAAE;QAC5B,IAAI,CAAC1B,OAAO,CAAC2B,IAAI,CAAC;UAChBN,KAAK,EAAEf,IAAI,CAACoB,kBAAkB;UAC9BJ,KAAK,EAAE/B,YAAY,CAACyB,mBAAmB;UACvCO,KAAK,EAAE,IAAI,CAACK,EAAE,CAAC,WAAW;QAC5B,CAAC,CAAC;MACJ;MAEA,IAAItB,IAAI,EAAEuB,uBAAuB,EAAE;QACjC,IAAI,CAAC7B,OAAO,CAAC2B,IAAI,CAAC;UAChBN,KAAK,EAAEf,IAAI,CAACuB,uBAAuB;UACnCP,KAAK,EAAE/B,YAAY,CAACuC,iBAAiB;UACrCP,KAAK,EAAE,IAAI,CAACK,EAAE,CAAC,sBAAsB;QACvC,CAAC,CAAC;MACJ;IACF,CAAC,EACAG,OAAO,CAAC,MAAM;MACb,IAAI,CAAC9B,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN;AACF,CAAC","names":["APIService","BaseWidget","OxdPieChart","CHART_COLORS","name","components","setup","http","window","appGlobal","baseUrl","data","dataset","isLoading","beforeMount","getAll","then","response","meta","colors","COLOR_HEAT_WAVE","COLOR_CHROME_YELLOW","COLOR_YELLOW_GREEN","COLOR_MOUNTAIN_MEADOW","COLOR_PACIFIC_BLUE","COLOR_BLEU_DE_FRANCE","COLOR_MAJORELLE_BLUE","COLOR_MEDIUM_ORCHID","COLOR_FANDANGO_PINK","map","item","index","count","value","color","label","location","filter","otherEmployeeCount","push","$t","unassignedEmployeeCount","COLOR_TART_ORANGE","finally"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmDashboardPlugin\\components\\EmployeeLocationWidget.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <base-widget\n    icon=\"pie-chart-fill\"\n    :loading=\"isLoading\"\n    :title=\"$t('dashboard.employee_distribution_by_location')\"\n  >\n    <oxd-pie-chart\n      :data=\"dataset\"\n      :aspect-ratio=\"false\"\n      :custom-legend=\"true\"\n      :custom-tooltip=\"true\"\n      wrapper-classes=\"emp-distrib-chart\"\n    ></oxd-pie-chart>\n  </base-widget>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport {OxdPieChart, CHART_COLORS} from '@ohrm/oxd';\n\nexport default {\n  name: 'EmployeeLocationWidget',\n\n  components: {\n    'base-widget': BaseWidget,\n    'oxd-pie-chart': OxdPieChart,\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/dashboard/employees/locations',\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      dataset: [],\n      isLoading: false,\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data, meta} = response.data;\n\n        const colors = [\n          CHART_COLORS.COLOR_HEAT_WAVE,\n          CHART_COLORS.COLOR_CHROME_YELLOW,\n          CHART_COLORS.COLOR_YELLOW_GREEN,\n          CHART_COLORS.COLOR_MOUNTAIN_MEADOW,\n          CHART_COLORS.COLOR_PACIFIC_BLUE,\n          CHART_COLORS.COLOR_BLEU_DE_FRANCE,\n          CHART_COLORS.COLOR_MAJORELLE_BLUE,\n          CHART_COLORS.COLOR_MEDIUM_ORCHID,\n          CHART_COLORS.COLOR_FANDANGO_PINK,\n        ];\n\n        this.dataset = data\n          .map((item, index) => {\n            return item.count\n              ? {\n                  value: item.count,\n                  color: colors[index],\n                  label: item.location.name,\n                }\n              : false;\n          })\n          .filter((item) => item);\n\n        if (meta?.otherEmployeeCount) {\n          this.dataset.push({\n            value: meta.otherEmployeeCount,\n            color: CHART_COLORS.COLOR_FANDANGO_PINK,\n            label: this.$t('pim.other'),\n          });\n        }\n\n        if (meta?.unassignedEmployeeCount) {\n          this.dataset.push({\n            value: meta.unassignedEmployeeCount,\n            color: CHART_COLORS.COLOR_TART_ORANGE,\n            label: this.$t('dashboard.unassigned'),\n          });\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.emp-distrib-chart {\n  width: auto;\n  height: 312px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}