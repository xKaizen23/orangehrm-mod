{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-68867dd2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-photo-input\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-photo-input-field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_alert = _resolveComponent(\"oxd-alert\");\n  const _component_photo_upload_area = _resolveComponent(\"photo-upload-area\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_photo_frame = _resolveComponent(\"photo-frame\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_alert, {\n    type: \"error\",\n    show: !!$setup.validationMessage,\n    message: $setup.validationMessage\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_icon_button, {\n      name: \"x\",\n      class: \"orangehrm-photo-input-remove\",\n      onClick: $setup.onClickCloseAlert\n    }, null, 8, [\"onClick\"])]),\n    _: 1\n  }, 8, [\"show\", \"message\"]), $setup.showUploadArea ? (_openBlock(), _createBlock(_component_photo_upload_area, {\n    key: 0,\n    \"onUpdate:modelValue\": $setup.onFileChange\n  }, null, 8, [\"onUpdate:modelValue\"])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_2, [$setup.showUploadButton ? (_openBlock(), _createBlock(_component_oxd_input_field, {\n    key: 0,\n    type: \"file\",\n    value: \"\",\n    \"onUpdate:modelValue\": $setup.onFileChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_button, {\n      \"icon-name\": \"file-image\",\n      label: _ctx.$t('buzz.add_photos')\n    }, null, 8, [\"label\"])]),\n    _: 1\n  }, 8, [\"onUpdate:modelValue\"])) : _createCommentVNode(\"\", true)]), _createVNode(_component_photo_frame, {\n    media: $props.modelValue\n  }, {\n    content: _withCtx(({\n      index\n    }) => [_createVNode(_component_oxd_icon_button, {\n      name: \"x\",\n      class: \"orangehrm-photo-input-remove --float\",\n      onClick: $event => $setup.onClickRemove(index)\n    }, null, 8, [\"onClick\"])]),\n    _: 1\n  }, 8, [\"media\"])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAuB;;EAc3BA,KAAK,EAAC;AAA6B;;;;;;;;uBAd1CC,oBAkCM,OAlCNC,UAkCM,GAjCJC,aAUYC;IATVC,IAAI,EAAC,OAAO;IACXC,IAAI,IAAIC,wBAAiB;IACzBC,OAAO,EAAED;;sBAEV,MAIE,CAJFJ,aAIEM;MAHAC,IAAI,EAAC,GAAG;MACRV,KAAK,EAAC,8BAA8B;MACnCW,OAAK,EAAEJ;;;8BAGaA,qBAAc,kBAAvCK,aACoBC;;IADsB,qBAAkB,EAAEN;yEAE9DO,oBASM,OATNC,UASM,GAPIR,uBAAgB,kBADxBK,aAOkBI;;IALhBX,IAAI,EAAC,MAAM;IACXY,KAAK,EAAC,EAAE;IACP,qBAAkB,EAAEV;;sBAErB,MAAoE,CAApEJ,aAAoEe;MAAxD,WAAS,EAAC,YAAY;MAAEC,KAAK,EAAEC,OAAE;;;qEAIjDjB,aAQckB;IARAC,KAAK,EAAEC;EAAU;IAClBC,OAAO,WAChB,CAIE;MALiBC;IAAK,OACxBtB,aAIEM;MAHAC,IAAI,EAAC,GAAG;MACRV,KAAK,EAAC,sCAAsC;MAC3CW,OAAK,YAAEJ,oBAAa,CAACkB,KAAK","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_alert","type","show","$setup","message","_component_oxd_icon_button","name","onClick","_createBlock","_component_photo_upload_area","_createElementVNode","_hoisted_2","_component_oxd_input_field","value","_component_oxd_button","label","_ctx","_component_photo_frame","media","$props","content","index"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PhotoInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-photo-input\">\n    <oxd-alert\n      type=\"error\"\n      :show=\"!!validationMessage\"\n      :message=\"validationMessage\"\n    >\n      <oxd-icon-button\n        name=\"x\"\n        class=\"orangehrm-photo-input-remove\"\n        @click=\"onClickCloseAlert\"\n      />\n    </oxd-alert>\n    <photo-upload-area v-if=\"showUploadArea\" @update:model-value=\"onFileChange\">\n    </photo-upload-area>\n    <div class=\"orangehrm-photo-input-field\">\n      <oxd-input-field\n        v-if=\"showUploadButton\"\n        type=\"file\"\n        value=\"\"\n        @update:model-value=\"onFileChange\"\n      >\n        <oxd-button icon-name=\"file-image\" :label=\"$t('buzz.add_photos')\" />\n      </oxd-input-field>\n    </div>\n\n    <photo-frame :media=\"modelValue\">\n      <template #content=\"{index}\">\n        <oxd-icon-button\n          name=\"x\"\n          class=\"orangehrm-photo-input-remove --float\"\n          @click=\"onClickRemove(index)\"\n        />\n      </template>\n    </photo-frame>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport {maxFileSize, validFileTypes} from '@/core/util/validation/rules';\nimport PhotoUploadArea from '@/orangehrmBuzzPlugin/components/PhotoUploadArea';\nimport {OxdAlert} from '@ohrm/oxd';\n\nexport default {\n  name: 'PhotoInput',\n\n  components: {\n    'oxd-alert': OxdAlert,\n    'photo-frame': PhotoFrame,\n    'photo-upload-area': PhotoUploadArea,\n  },\n\n  props: {\n    modelValue: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup(props, context) {\n    const {$t} = usei18n();\n    const validationMessage = ref('');\n    const fileTypeValidator = validFileTypes([\n      'image/gif',\n      'image/jpeg',\n      'image/jpg',\n      'image/pjpeg',\n      'image/png',\n      'image/x-png',\n    ]);\n    const fileSizeValidator = maxFileSize(1024 * 1024 * 2);\n\n    const onFileChange = ($file) => {\n      if (!$file) return;\n      validationMessage.value = '';\n      if (fileSizeValidator($file) !== true) {\n        return (validationMessage.value = $t(\n          'buzz.file_size_validation_message',\n        ));\n      }\n      if (fileTypeValidator($file) !== true) {\n        return (validationMessage.value = $t(\n          'buzz.file_type_validation_message',\n        ));\n      }\n      context.emit('update:modelValue', [...(props.modelValue || []), $file]);\n    };\n\n    const onClickRemove = (index) => {\n      validationMessage.value = '';\n      context.emit(\n        'update:modelValue',\n        (props.modelValue || []).filter((_, i) => index !== i),\n      );\n    };\n\n    const onClickCloseAlert = () => {\n      validationMessage.value = '';\n    };\n\n    const showUploadArea = computed(\n      () => Array.isArray(props.modelValue) && props.modelValue.length < 1,\n    );\n\n    const showUploadButton = computed(\n      () =>\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0 &&\n        props.modelValue.length < 5,\n    );\n\n    return {\n      onFileChange,\n      onClickRemove,\n      showUploadArea,\n      showUploadButton,\n      onClickCloseAlert,\n      validationMessage,\n    };\n  },\n};\n</script>\n\n<style src=\"./photo-input.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}