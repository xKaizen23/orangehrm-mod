{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport EntitlementSituationalModal from '@/orangehrmLeavePlugin/components/EntitlementSituationalModal';\nimport { OxdLabel } from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst leaveTypeModel = {\n  id: '',\n  name: '',\n  situational: ''\n};\nexport default {\n  components: {\n    'oxd-label': OxdLabel,\n    'entitlement-situational-modal': EntitlementSituationalModal\n  },\n  props: {\n    leaveTypeId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-types');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const leaveTypeUniqueValidation = createUniqueValidator('LeaveType', 'name', {\n      entityId: props.leaveTypeId\n    });\n    return {\n      http,\n      leaveTypeUniqueValidation\n    };\n  },\n  data() {\n    return {\n      showModal: false,\n      isLoading: false,\n      leaveType: {\n        ...leaveTypeModel\n      },\n      rules: {\n        name: [required, this.leaveTypeUniqueValidation, shouldNotExceedCharLength(50)]\n      }\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.leaveTypeId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.leaveType.id = data.id;\n      this.leaveType.name = data.name;\n      this.leaveType.situational = data.situational;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.leaveTypeId, {\n        name: this.leaveType.name,\n        situational: this.leaveType.situational\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/leave/leaveTypeList');\n    },\n    onModalOpen() {\n      this.showModal = true;\n    },\n    onModalClose() {\n      this.showModal = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AA6FA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AACzC,OAAOC,2BAA0B,MAAO,+DAA+D;AACvG,SAAQC,QAAQ,QAAO,WAAW;AAClC,OAAOC,mBAAkB,MAAO,4CAA4C;AAE5E,MAAMC,cAAa,GAAI;EACrBC,EAAE,EAAE,EAAE;EACNC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,WAAW,EAAEN,QAAQ;IACrB,+BAA+B,EAAED;EACnC,CAAC;EACDQ,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZb,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDc,KAAK,CAACJ,KAAK,EAAE;IACX,MAAMK,IAAG,GAAI,IAAIhB,UAAU,CACzBiB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,2BAA2B,CAC5B;IACD,MAAM;MAACC;IAAqB,IAAIf,mBAAmB,CAACW,IAAI,CAAC;IACzD,MAAMK,yBAAwB,GAAID,qBAAqB,CACrD,WAAW,EACX,MAAM,EACN;MAACE,QAAQ,EAAEX,KAAK,CAACC;IAAW,CAAC,CAC9B;IACD,OAAO;MACLI,IAAI;MACJK;IACF,CAAC;EACH,CAAC;EAEDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE;QAAC,GAAGpB;MAAc,CAAC;MAC9BqB,KAAK,EAAE;QACLnB,IAAI,EAAE,CACJP,QAAQ,EACR,IAAI,CAACoB,yBAAyB,EAC9BnB,yBAAyB,CAAC,EAAE,CAAC;MAEjC;IACF,CAAC;EACH,CAAC;EACD0B,OAAO,GAAG;IACR,IAAI,CAACH,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACT,IAAG,CACLa,GAAG,CAAC,IAAI,CAACjB,WAAW,EACpBkB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACR;MAAI,IAAIQ,QAAQ,CAACR,IAAI;MAC5B,IAAI,CAACG,SAAS,CAACnB,EAAC,GAAIgB,IAAI,CAAChB,EAAE;MAC3B,IAAI,CAACmB,SAAS,CAAClB,IAAG,GAAIe,IAAI,CAACf,IAAI;MAC/B,IAAI,CAACkB,SAAS,CAACjB,WAAU,GAAIc,IAAI,CAACd,WAAW;IAC/C,CAAC,EACAuB,OAAO,CAAC,MAAM;MACb,IAAI,CAACP,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDQ,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACT,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACT,IAAG,CACLmB,MAAM,CAAC,IAAI,CAACvB,WAAW,EAAE;QACxBJ,IAAI,EAAE,IAAI,CAACkB,SAAS,CAAClB,IAAI;QACzBC,WAAW,EAAE,IAAI,CAACiB,SAAS,CAACjB;MAC9B,CAAC,EACAqB,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACM,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAP,IAAI,CAAC,MAAM;QACV,IAAI,CAACQ,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACTvC,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC;IACDwC,WAAW,GAAG;MACZ,IAAI,CAACf,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDgB,YAAY,GAAG;MACb,IAAI,CAAChB,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC","names":["navigate","APIService","required","shouldNotExceedCharLength","EntitlementSituationalModal","OxdLabel","useServerValidation","leaveTypeModel","id","name","situational","components","props","leaveTypeId","type","Number","setup","http","window","appGlobal","baseUrl","createUniqueValidator","leaveTypeUniqueValidation","entityId","data","showModal","isLoading","leaveType","rules","created","get","then","response","finally","methods","onSave","update","$toast","updateSuccess","onCancel","onModalOpen","onModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\leaveType\\EditLeaveType.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('leave.edit_leave_type') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"leaveType.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :classes=\"{wrapper: '--status-grouped-field'}\">\n                <template #label>\n                  <div class=\"label-is-entitlement-situational\">\n                    <oxd-label\n                      :label=\"$t('leave.is_entitlement_situational')\"\n                    />\n                    <oxd-icon-button\n                      class=\"--help\"\n                      name=\"exclamation-circle\"\n                      :with-container=\"false\"\n                      @click=\"onModalOpen\"\n                    />\n                  </div>\n                </template>\n                <oxd-input-field\n                  v-model=\"leaveType.situational\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.yes')\"\n                  :value=\"true\"\n                />\n                <oxd-input-field\n                  v-model=\"leaveType.situational\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.no')\"\n                  :value=\"false\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n      <entitlement-situational-modal\n        v-if=\"showModal\"\n        @close=\"onModalClose\"\n      ></entitlement-situational-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport EntitlementSituationalModal from '@/orangehrmLeavePlugin/components/EntitlementSituationalModal';\nimport {OxdLabel} from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst leaveTypeModel = {\n  id: '',\n  name: '',\n  situational: '',\n};\n\nexport default {\n  components: {\n    'oxd-label': OxdLabel,\n    'entitlement-situational-modal': EntitlementSituationalModal,\n  },\n  props: {\n    leaveTypeId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-types',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const leaveTypeUniqueValidation = createUniqueValidator(\n      'LeaveType',\n      'name',\n      {entityId: props.leaveTypeId},\n    );\n    return {\n      http,\n      leaveTypeUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      showModal: false,\n      isLoading: false,\n      leaveType: {...leaveTypeModel},\n      rules: {\n        name: [\n          required,\n          this.leaveTypeUniqueValidation,\n          shouldNotExceedCharLength(50),\n        ],\n      },\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.leaveTypeId)\n      .then((response) => {\n        const {data} = response.data;\n        this.leaveType.id = data.id;\n        this.leaveType.name = data.name;\n        this.leaveType.situational = data.situational;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.leaveTypeId, {\n          name: this.leaveType.name,\n          situational: this.leaveType.situational,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/leave/leaveTypeList');\n    },\n    onModalOpen() {\n      this.showModal = true;\n    },\n    onModalClose() {\n      this.showModal = false;\n    },\n  },\n};\n</script>\n\n<style src=\"./leave-type.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}