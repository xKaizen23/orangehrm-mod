{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport CopyActivityModal from '@/orangehrmTimePlugin/components/CopyActivityModal.vue';\nimport SaveActivityModal from '@/orangehrmTimePlugin/components/SaveActivityModal.vue';\nimport EditActivityModal from '@/orangehrmTimePlugin/components/EditActivityModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nexport default {\n  name: 'Activities',\n  components: {\n    'copy-activity-modal': CopyActivityModal,\n    'save-activity-modal': SaveActivityModal,\n    'edit-activity-modal': EditActivityModal,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    projectId: {\n      type: Number,\n      required: true\n    },\n    unselectableIds: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/project/${props.projectId}/activities`);\n    const activitiesNormalizer = data => {\n      return data.map(item => {\n        const selectable = props.unselectableIds.findIndex(id => id == item.id);\n        return {\n          ...item,\n          isSelectable: selectable === -1\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: activitiesNormalizer\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('time.activity_name'),\n        style: {\n          'flex-basis': '80%'\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          'flex-shrink': 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showCopyFromModal: false,\n      showSaveActivityModal: false,\n      showEditActivityModal: false,\n      editActivityModalState: null\n    };\n  },\n  methods: {\n    onClickAdd() {\n      this.showSaveActivityModal = true;\n    },\n    onClickEdit(item) {\n      this.editActivityModalState = item.id;\n      this.showEditActivityModal = true;\n    },\n    onClickCopyFrom() {\n      this.showCopyFromModal = true;\n    },\n    onCloseModal() {\n      this.showCopyFromModal = false;\n      this.showSaveActivityModal = false;\n      this.showEditActivityModal = false;\n      this.resetDataTable();\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(id => id == item.id);\n      if (isSelectable > -1) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t('time.not_allowed_to_delete_project_activities_which_have_time_logged_against')\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          this.$toast.deleteSuccess();\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","CopyActivityModal","SaveActivityModal","EditActivityModal","DeleteConfirmationDialog","name","components","props","projectId","type","Number","required","unselectableIds","Array","default","setup","http","window","appGlobal","baseUrl","activitiesNormalizer","data","map","item","selectable","findIndex","id","isSelectable","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","items","headers","slot","title","$t","style","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","showCopyFromModal","showSaveActivityModal","showEditActivityModal","editActivityModalState","methods","onClickAdd","onClickCopyFrom","onCloseModal","resetDataTable","onClickDeleteSelected","ids","forEach","index","push","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","$toast","error","message","deleteAll","deleteSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\components\\Activities.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-paper-container\">\n    <div class=\"orangehrm-header-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('time.activities') }}\n      </oxd-text>\n      <div class=\"orangehrm-main-actions\">\n        <oxd-button\n          :label=\"$t('time.copy_from')\"\n          display-type=\"ghost\"\n          @click=\"onClickCopyFrom\"\n        />\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n    </div>\n    <table-header\n      :total=\"total\"\n      :loading=\"isLoading\"\n      :selected=\"checkedItems.length\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"true\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n    <copy-activity-modal\n      v-if=\"showCopyFromModal\"\n      :project-id=\"projectId\"\n      @close=\"onCloseModal\"\n    ></copy-activity-modal>\n    <save-activity-modal\n      v-if=\"showSaveActivityModal\"\n      :project-id=\"projectId\"\n      @close=\"onCloseModal\"\n    ></save-activity-modal>\n    <edit-activity-modal\n      v-if=\"showEditActivityModal\"\n      :project-id=\"projectId\"\n      :activity-id=\"editActivityModalState\"\n      @close=\"onCloseModal\"\n    ></edit-activity-modal>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport CopyActivityModal from '@/orangehrmTimePlugin/components/CopyActivityModal.vue';\nimport SaveActivityModal from '@/orangehrmTimePlugin/components/SaveActivityModal.vue';\nimport EditActivityModal from '@/orangehrmTimePlugin/components/EditActivityModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\n\nexport default {\n  name: 'Activities',\n\n  components: {\n    'copy-activity-modal': CopyActivityModal,\n    'save-activity-modal': SaveActivityModal,\n    'edit-activity-modal': EditActivityModal,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    projectId: {\n      type: Number,\n      required: true,\n    },\n    unselectableIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/time/project/${props.projectId}/activities`,\n    );\n\n    const activitiesNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableIds.findIndex(\n          (id) => id == item.id,\n        );\n        return {\n          ...item,\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: activitiesNormalizer,\n    });\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('time.activity_name'),\n          style: {'flex-basis': '80%'},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {'flex-shrink': 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showCopyFromModal: false,\n      showSaveActivityModal: false,\n      showEditActivityModal: false,\n      editActivityModalState: null,\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      this.showSaveActivityModal = true;\n    },\n    onClickEdit(item) {\n      this.editActivityModalState = item.id;\n      this.showEditActivityModal = true;\n    },\n    onClickCopyFrom() {\n      this.showCopyFromModal = true;\n    },\n    onCloseModal() {\n      this.showCopyFromModal = false;\n      this.showSaveActivityModal = false;\n      this.showEditActivityModal = false;\n      this.resetDataTable();\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(\n        (id) => id == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t(\n            'time.not_allowed_to_delete_project_activities_which_have_time_logged_against',\n          ),\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            this.$toast.deleteSuccess();\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-main-actions {\n  gap: 0.4rem;\n  display: flex;\n  flex-direction: column;\n  ::v-deep(.oxd-button--medium) {\n    width: 100%;\n  }\n  @include oxd-respond-to('md') {\n    flex-direction: row;\n    ::v-deep(.oxd-button--medium) {\n      width: unset;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}