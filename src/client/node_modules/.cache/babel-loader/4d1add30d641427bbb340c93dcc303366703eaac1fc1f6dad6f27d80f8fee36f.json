{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { secondsTohhmm, parseTimeInSeconds } from '@ohrm/core/util/helper/datefns';\nimport { onBeforeMount, toRefs } from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport Timesheet from '@/orangehrmTimePlugin/components/Timesheet.vue';\nimport useTimesheetAPIs from '@/orangehrmTimePlugin/util/composable/useTimesheetAPIs';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  components: {\n    timesheet: Timesheet\n  },\n  props: {\n    myTimesheet: {\n      type: Boolean,\n      default: false\n    },\n    timesheetId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/timesheets`);\n    http.setIgnorePath('/api/v2/time/timesheets/[0-9]+/entries');\n    let timesheetModal = [];\n    const {\n      saveSuccess\n    } = useToast();\n    const {\n      state,\n      fetchTimesheetEntries,\n      updateTimesheetEntries\n    } = useTimesheetAPIs(http);\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const loadTimesheet = () => {\n      state.isLoading = true;\n      timesheetModal = [];\n      state.timesheetRecords = [];\n      fetchTimesheetEntries(props.timesheetId, !props.myTimesheet).then(response => {\n        const {\n          data,\n          meta,\n          timesheet,\n          allowedActions\n        } = response;\n        state.timesheet = timesheet;\n        state.employee = meta.employee;\n        state.timesheetColumns = meta.columns;\n        state.timesheetSubtotal = meta.sum.label;\n        state.timesheetStatus = timesheet.status.name;\n        state.timesheetAllowedActions = allowedActions;\n        if (data.length > 0) {\n          state.timesheetRecords = data;\n          timesheetModal = JSON.parse(JSON.stringify(data));\n        } else {\n          state.timesheetRecords.push({\n            project: null,\n            activity: null,\n            dates: {}\n          });\n          timesheetModal.push({\n            project: null,\n            activity: null,\n            dates: {}\n          });\n        }\n        state.isLoading = false;\n      });\n    };\n    const onClickReset = () => loadTimesheet();\n    const onClickCancel = () => {\n      if (props.myTimesheet) {\n        navigate('/time/viewMyTimesheet', {}, {\n          startDate: state.timesheet.startDate\n        });\n      } else {\n        navigate('/time/viewTimesheet/employeeId/{id}', {\n          id: state.employee?.empNumber\n        }, {\n          startDate: state.timesheet.startDate\n        });\n      }\n    };\n    const onSave = () => {\n      state.isLoading = true;\n      const payload = {\n        entries: state.timesheetRecords.map(record => {\n          const dates = {};\n          for (const date in record.dates) {\n            const _duration = parseTimeInSeconds(record.dates[date].duration);\n            dates[date] = {\n              duration: _duration > 0 ? secondsTohhmm(_duration) : '00:00'\n            };\n          }\n          return {\n            projectId: record.project.id,\n            activityId: record.activity.id,\n            dates\n          };\n        }),\n        deletedEntries: timesheetModal.filter(record => {\n          if (!record.project) return false;\n          return state.timesheetRecords.findIndex(item => item.project.id === record.project.id && item.activity.id === record.activity.id) < 0;\n        }).map(record => ({\n          projectId: record.project.id,\n          activityId: record.activity.id\n        }))\n      };\n      updateTimesheetEntries(props.timesheetId, payload, !props.myTimesheet).then(() => {\n        return saveSuccess();\n      }).catch(() => {\n        // Catch invalid parameter error when submitting without any time\n        return saveSuccess();\n      }).then(() => {\n        onClickCancel();\n      });\n    };\n    onBeforeMount(() => loadTimesheet());\n    return {\n      onSave,\n      onClickReset,\n      onClickCancel,\n      ...toRefs(state),\n      jsDateFormat,\n      locale,\n      translateEmpName: $tEmpName\n    };\n  },\n  computed: {\n    title() {\n      if (this.myTimesheet) {\n        return this.$t('time.edit_timesheet');\n      } else if (this.employee) {\n        const empName = this.translateEmpName(this.employee, {\n          includeMiddle: false,\n          excludePastEmpTag: false\n        });\n        return `${this.$t('time.edit_timesheet_for')} ${empName}`;\n      }\n      return '';\n    },\n    timesheetDateRange() {\n      if (!this.timesheet) return '';\n      const startDate = formatDate(parseDate(this.timesheet.startDate), this.jsDateFormat, {\n        locale: this.locale\n      });\n      const endDate = formatDate(parseDate(this.timesheet.endDate), this.jsDateFormat, {\n        locale: this.locale\n      });\n      return `${startDate} - ${endDate}`;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["secondsTohhmm","parseTimeInSeconds","onBeforeMount","toRefs","useToast","navigate","APIService","Timesheet","useTimesheetAPIs","useDateFormat","formatDate","parseDate","useLocale","useEmployeeNameTranslate","components","timesheet","props","myTimesheet","type","Boolean","default","timesheetId","Number","required","setup","http","window","appGlobal","baseUrl","setIgnorePath","timesheetModal","saveSuccess","state","fetchTimesheetEntries","updateTimesheetEntries","jsDateFormat","locale","$tEmpName","loadTimesheet","isLoading","timesheetRecords","then","response","data","meta","allowedActions","employee","timesheetColumns","columns","timesheetSubtotal","sum","label","timesheetStatus","status","name","timesheetAllowedActions","length","JSON","parse","stringify","push","project","activity","dates","onClickReset","onClickCancel","startDate","id","empNumber","onSave","payload","entries","map","record","date","_duration","duration","projectId","activityId","deletedEntries","filter","findIndex","item","catch","translateEmpName","computed","title","$t","empName","includeMiddle","excludePastEmpTag","timesheetDateRange","endDate"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\timesheets\\EditTimeSheet.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <timesheet\n      v-model:records=\"timesheetRecords\"\n      :editable=\"true\"\n      :loading=\"isLoading\"\n      :timesheet-id=\"timesheetId\"\n      :columns=\"timesheetColumns\"\n      @submit-valid=\"onSave\"\n    >\n      <template #header-title>\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ title }}\n        </oxd-text>\n      </template>\n      <template #header-options>\n        <oxd-text\n          v-if=\"timesheetDateRange\"\n          tag=\"p\"\n          class=\"orangehrm-timeperiod-title\"\n        >\n          {{ $t('time.timesheet_period') }}\n        </oxd-text>\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ timesheetDateRange }}\n        </oxd-text>\n      </template>\n\n      <template #footer-options>\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onClickCancel\"\n        />\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.reset')\"\n          @click=\"onClickReset\"\n        />\n        <oxd-button\n          type=\"submit\"\n          display-type=\"secondary\"\n          :label=\"$t('general.save')\"\n        />\n      </template>\n    </timesheet>\n  </div>\n</template>\n\n<script>\nimport {\n  secondsTohhmm,\n  parseTimeInSeconds,\n} from '@ohrm/core/util/helper/datefns';\nimport {onBeforeMount, toRefs} from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport Timesheet from '@/orangehrmTimePlugin/components/Timesheet.vue';\nimport useTimesheetAPIs from '@/orangehrmTimePlugin/util/composable/useTimesheetAPIs';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  components: {\n    timesheet: Timesheet,\n  },\n\n  props: {\n    myTimesheet: {\n      type: Boolean,\n      default: false,\n    },\n    timesheetId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/time/timesheets`,\n    );\n\n    http.setIgnorePath('/api/v2/time/timesheets/[0-9]+/entries');\n\n    let timesheetModal = [];\n\n    const {saveSuccess} = useToast();\n    const {state, fetchTimesheetEntries, updateTimesheetEntries} =\n      useTimesheetAPIs(http);\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const loadTimesheet = () => {\n      state.isLoading = true;\n      timesheetModal = [];\n      state.timesheetRecords = [];\n      fetchTimesheetEntries(props.timesheetId, !props.myTimesheet).then(\n        (response) => {\n          const {data, meta, timesheet, allowedActions} = response;\n          state.timesheet = timesheet;\n          state.employee = meta.employee;\n          state.timesheetColumns = meta.columns;\n          state.timesheetSubtotal = meta.sum.label;\n          state.timesheetStatus = timesheet.status.name;\n          state.timesheetAllowedActions = allowedActions;\n          if (data.length > 0) {\n            state.timesheetRecords = data;\n            timesheetModal = JSON.parse(JSON.stringify(data));\n          } else {\n            state.timesheetRecords.push({\n              project: null,\n              activity: null,\n              dates: {},\n            });\n            timesheetModal.push({\n              project: null,\n              activity: null,\n              dates: {},\n            });\n          }\n          state.isLoading = false;\n        },\n      );\n    };\n\n    const onClickReset = () => loadTimesheet();\n\n    const onClickCancel = () => {\n      if (props.myTimesheet) {\n        navigate(\n          '/time/viewMyTimesheet',\n          {},\n          {\n            startDate: state.timesheet.startDate,\n          },\n        );\n      } else {\n        navigate(\n          '/time/viewTimesheet/employeeId/{id}',\n          {\n            id: state.employee?.empNumber,\n          },\n          {startDate: state.timesheet.startDate},\n        );\n      }\n    };\n\n    const onSave = () => {\n      state.isLoading = true;\n      const payload = {\n        entries: state.timesheetRecords.map((record) => {\n          const dates = {};\n          for (const date in record.dates) {\n            const _duration = parseTimeInSeconds(record.dates[date].duration);\n            dates[date] = {\n              duration: _duration > 0 ? secondsTohhmm(_duration) : '00:00',\n            };\n          }\n          return {\n            projectId: record.project.id,\n            activityId: record.activity.id,\n            dates,\n          };\n        }),\n        deletedEntries: timesheetModal\n          .filter((record) => {\n            if (!record.project) return false;\n            return (\n              state.timesheetRecords.findIndex(\n                (item) =>\n                  item.project.id === record.project.id &&\n                  item.activity.id === record.activity.id,\n              ) < 0\n            );\n          })\n          .map((record) => ({\n            projectId: record.project.id,\n            activityId: record.activity.id,\n          })),\n      };\n      updateTimesheetEntries(props.timesheetId, payload, !props.myTimesheet)\n        .then(() => {\n          return saveSuccess();\n        })\n        .catch(() => {\n          // Catch invalid parameter error when submitting without any time\n          return saveSuccess();\n        })\n        .then(() => {\n          onClickCancel();\n        });\n    };\n\n    onBeforeMount(() => loadTimesheet());\n\n    return {\n      onSave,\n      onClickReset,\n      onClickCancel,\n      ...toRefs(state),\n      jsDateFormat,\n      locale,\n      translateEmpName: $tEmpName,\n    };\n  },\n\n  computed: {\n    title() {\n      if (this.myTimesheet) {\n        return this.$t('time.edit_timesheet');\n      } else if (this.employee) {\n        const empName = this.translateEmpName(this.employee, {\n          includeMiddle: false,\n          excludePastEmpTag: false,\n        });\n        return `${this.$t('time.edit_timesheet_for')} ${empName}`;\n      }\n      return '';\n    },\n    timesheetDateRange() {\n      if (!this.timesheet) return '';\n      const startDate = formatDate(\n        parseDate(this.timesheet.startDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      const endDate = formatDate(\n        parseDate(this.timesheet.endDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      return `${startDate} - ${endDate}`;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-timeperiod-title {\n  font-size: 12px;\n  margin-right: 10px;\n}\n.orangehrm-form-hint {\n  margin-right: auto;\n  font-weight: 600;\n  font-size: 0.75rem;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}