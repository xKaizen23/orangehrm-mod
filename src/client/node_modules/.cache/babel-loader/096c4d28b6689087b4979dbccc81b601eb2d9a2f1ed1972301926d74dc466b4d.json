{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1ce8046c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.edit_salary_component')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.salaryComponent.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.salaryComponent.name = $event),\n            label: _ctx.$t('pim.salary_component'),\n            rules: $data.rules.name,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.salaryComponent.payGradeId,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.salaryComponent.payGradeId = $event),\n            type: \"select\",\n            label: _ctx.$t('general.pay_grade'),\n            options: $props.paygrades\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.salaryComponent.payFrequencyId,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.salaryComponent.payFrequencyId = $event),\n            type: \"select\",\n            label: _ctx.$t('pim.pay_frequency'),\n            options: $props.payFrequencies\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [(_openBlock(), _createBlock(_component_oxd_input_field, {\n            key: $options.currenciesOpts,\n            modelValue: $data.salaryComponent.currencyId,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.salaryComponent.currencyId = $event),\n            type: \"select\",\n            label: _ctx.$t('general.currency'),\n            options: $options.currenciesOpts,\n            rules: $data.rules.currencyId,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"options\", \"rules\"]))]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.salaryComponent.salaryAmount,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.salaryComponent.salaryAmount = $event),\n            label: _ctx.$t('general.amount'),\n            rules: $data.rules.salaryAmount,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"]), $options.minAmount !== undefined || $options.maxAmount !== undefined ? (_openBlock(), _createBlock(_component_oxd_text, {\n            key: 0,\n            class: \"orangehrm-input-hint\",\n            tag: \"p\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Min: \" + _toDisplayString($options.minAmount ?? 0) + \" - Max: \" + _toDisplayString($options.maxAmount ?? 0), 1)]),\n            _: 1\n          })) : _createCommentVNode(\"\", true)]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.salaryComponent.comment,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.salaryComponent.comment = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comments'),\n            rules: $data.rules.comment\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, {\n      class: \"directdeposit-form-header\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"directdeposit-form-header-text\",\n        tag: \"p\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.include_direct_deposit_details')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_switch_input, {\n        modelValue: $data.includeDirectDeposit,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.includeDirectDeposit = $event)\n      }, null, 8, [\"modelValue\"])]),\n      _: 1\n    }), $data.includeDirectDeposit ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.directDeposit.directDepositAccount,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.directDeposit.directDepositAccount = $event),\n            label: _ctx.$t('pim.account_number'),\n            rules: $data.rules.directDepositAccount,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.directDeposit.directDepositAccountType,\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.directDeposit.directDepositAccountType = $event),\n            type: \"select\",\n            label: _ctx.$t('pim.account_type'),\n            rules: $data.rules.directDepositAccountType,\n            options: $props.accountTypes,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"options\"])]),\n          _: 1\n        }), $options.showOptionalAccountType ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.accountType,\n            \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.accountType = $event),\n            label: _ctx.$t('pim.please_specify'),\n            rules: $data.rules.accountType,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }), _createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.directDeposit.directDepositRoutingNumber,\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.directDeposit.directDepositRoutingNumber = $event),\n            label: _ctx.$t('pim.routing_number'),\n            rules: $data.rules.directDepositRoutingNumber,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.directDeposit.directDepositAmount,\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.directDeposit.directDepositAmount = $event),\n            label: _ctx.$t('general.amount'),\n            rules: $data.rules.directDepositAmount,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])]), _createVNode(_component_oxd_divider)], 64);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","label","rules","required","payGradeId","type","options","$props","payFrequencyId","_createBlock","key","currencyId","salaryAmount","undefined","comment","_component_oxd_switch_input","directDepositAccount","directDepositAccountType","accountType","directDepositRoutingNumber","directDepositAmount","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EditSalaryComponent.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('pim.edit_salary_component') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"salaryComponent.name\"\n              :label=\"$t('pim.salary_component')\"\n              :rules=\"rules.name\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"salaryComponent.payGradeId\"\n              type=\"select\"\n              :label=\"$t('general.pay_grade')\"\n              :options=\"paygrades\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"salaryComponent.payFrequencyId\"\n              type=\"select\"\n              :label=\"$t('pim.pay_frequency')\"\n              :options=\"payFrequencies\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              :key=\"currenciesOpts\"\n              v-model=\"salaryComponent.currencyId\"\n              type=\"select\"\n              :label=\"$t('general.currency')\"\n              :options=\"currenciesOpts\"\n              :rules=\"rules.currencyId\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"salaryComponent.salaryAmount\"\n              :label=\"$t('general.amount')\"\n              :rules=\"rules.salaryAmount\"\n              required\n            />\n            <oxd-text\n              v-if=\"minAmount !== undefined || maxAmount !== undefined\"\n              class=\"orangehrm-input-hint\"\n              tag=\"p\"\n            >\n              Min: {{ minAmount ?? 0 }} - Max: {{ maxAmount ?? 0 }}\n            </oxd-text>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"salaryComponent.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comments')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row class=\"directdeposit-form-header\">\n        <oxd-text class=\"directdeposit-form-header-text\" tag=\"p\">\n          {{ $t('pim.include_direct_deposit_details') }}\n        </oxd-text>\n        <oxd-switch-input v-model=\"includeDirectDeposit\" />\n      </oxd-form-row>\n\n      <oxd-form-row v-if=\"includeDirectDeposit\">\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"directDeposit.directDepositAccount\"\n              :label=\"$t('pim.account_number')\"\n              :rules=\"rules.directDepositAccount\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"directDeposit.directDepositAccountType\"\n              type=\"select\"\n              :label=\"$t('pim.account_type')\"\n              :rules=\"rules.directDepositAccountType\"\n              :options=\"accountTypes\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item v-if=\"showOptionalAccountType\">\n            <oxd-input-field\n              v-model=\"accountType\"\n              :label=\"$t('pim.please_specify')\"\n              :rules=\"rules.accountType\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"directDeposit.directDepositRoutingNumber\"\n              :label=\"$t('pim.routing_number')\"\n              :rules=\"rules.directDepositRoutingNumber\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"directDeposit.directDepositAmount\"\n              :label=\"$t('general.amount')\"\n              :rules=\"rules.directDepositAmount\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n  <oxd-divider />\n</template>\n\n<script>\nimport {\n  digitsOnlyWithDecimalPoint,\n  maxCurrency,\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst salComponentModel = {\n  name: '',\n  salaryAmount: '',\n  comment: '',\n  payGradeId: null,\n  payFrequencyId: null,\n  currencyId: null,\n};\n\nconst directDepositModel = {\n  directDepositAccount: '',\n  directDepositAccountType: null,\n  directDepositRoutingNumber: '',\n  directDepositAmount: '',\n};\n\nexport default {\n  name: 'EditSalaryComponent',\n\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n  },\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n    paygrades: {\n      type: Array,\n      default: () => [],\n    },\n    payFrequencies: {\n      type: Array,\n      default: () => [],\n    },\n    currencies: {\n      type: Array,\n      default: () => [],\n    },\n    accountTypes: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  emits: ['close'],\n\n  data() {\n    return {\n      isLoading: false,\n      includeDirectDeposit: false,\n      salaryComponent: {...salComponentModel},\n      directDeposit: {...directDepositModel},\n      accountType: '',\n      usableCurrencies: [],\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        salaryAmount: [\n          required,\n          digitsOnlyWithDecimalPoint,\n          maxCurrency(1000000000),\n        ],\n        comment: [shouldNotExceedCharLength(250)],\n        currencyId: [required],\n        directDepositAccount: [required, shouldNotExceedCharLength(100)],\n        directDepositAccountType: [required],\n        accountType: [required, shouldNotExceedCharLength(20)],\n        directDepositRoutingNumber: [\n          required,\n          shouldNotExceedCharLength(9),\n          digitsOnlyWithDecimalPoint,\n        ],\n        directDepositAmount: [\n          required,\n          digitsOnlyWithDecimalPoint,\n          maxCurrency(1000000000),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    showOptionalAccountType() {\n      return this.directDeposit.directDepositAccountType?.id == 'OTHER';\n    },\n    minAmount() {\n      return this.currencyInfo?.minAmount;\n    },\n    maxAmount() {\n      return this.currencyInfo?.maxAmount;\n    },\n    currenciesOpts() {\n      const paygrade = this.salaryComponent.payGradeId?.id;\n      if (!paygrade) {\n        return this.currencies;\n      } else if (paygrade && this.usableCurrencies.length > 0) {\n        return this.currencies.filter(\n          (item) =>\n            this.usableCurrencies.findIndex(\n              (currency) => currency.id === item.id,\n            ) > -1,\n        );\n      } else {\n        return [];\n      }\n    },\n    currencyInfo() {\n      return this.usableCurrencies.find(\n        (item) => item.id === this.salaryComponent.currencyId?.id,\n      );\n    },\n  },\n\n  watch: {\n    'salaryComponent.payGradeId': function (newVal) {\n      if (newVal?.id) {\n        this.isLoading = true;\n        this.http\n          .request({\n            url: `/api/v2/admin/pay-grades/${newVal.id}/currencies`,\n            method: 'GET',\n            params: {limit: 0},\n          })\n          .then((response) => {\n            const {data} = response.data;\n            this.usableCurrencies = data.map((item) => {\n              return {\n                id: item.currencyType.id,\n                name: item.currencyType.name,\n                minAmount: item.minSalary,\n                maxAmount: item.maxSalary,\n              };\n            });\n            const currency = this.salaryComponent.currencyId;\n            const currencyIndex = this.usableCurrencies.findIndex(\n              (item) => item.id === currency?.id,\n            );\n            this.salaryComponent.currencyId =\n              currencyIndex === -1 ? [] : this.salaryComponent.currencyId;\n          })\n          .then(() => {\n            this.isLoading = false;\n          });\n      } else {\n        this.usableCurrencies = [];\n      }\n    },\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      this.rules.salaryAmount.push((v) => {\n        const min = this.minAmount ? this.minAmount : 0;\n        return v >= min || this.$t('pim.should_be_within_min_max_values');\n      });\n      this.rules.salaryAmount.push((v) => {\n        const max = this.maxAmount ? this.maxAmount : 999999999;\n        return v <= max || this.$t('pim.should_be_within_min_max_values');\n      });\n    });\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.data.id)\n      .then((response) => {\n        const {data} = response.data;\n        this.salaryComponent.name = data.salaryName;\n        this.salaryComponent.salaryAmount = data.amount;\n        this.salaryComponent.comment = data.comment ? data.comment : '';\n        this.salaryComponent.payGradeId = this.paygrades.find(\n          (item) => item.id === data.payGrade?.id,\n        );\n        this.salaryComponent.payFrequencyId = this.payFrequencies.find(\n          (item) => item.id === data.payPeriod?.id,\n        );\n        this.salaryComponent.currencyId = this.currencies.find(\n          (item) => item.id === data.currencyType?.id,\n        );\n        if (data.directDebit.id !== null) {\n          this.includeDirectDeposit = true;\n          this.directDeposit.directDepositAccount = data.directDebit.account;\n          const accountType = this.accountTypes.find(\n            (item) => item.id === data.directDebit.accountType,\n          );\n          this.directDeposit.directDepositAccountType = accountType\n            ? accountType\n            : {id: 'OTHER', label: this.$t('pim.other')};\n          this.accountType =\n            accountType.length === 0 ? data.directDebit.accountType : '';\n          this.directDeposit.directDepositRoutingNumber =\n            data.directDebit.routingNumber;\n          this.directDeposit.directDepositAmount = data.directDebit.amount;\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const accountType = this.showOptionalAccountType\n        ? this.accountType\n        : this.directDeposit.directDepositAccountType?.id;\n      this.http\n        .update(this.data.id, {\n          // Paygrade fields\n          salaryComponent: this.salaryComponent.name,\n          salaryAmount: this.salaryComponent.salaryAmount,\n          payGradeId: this.salaryComponent.payGradeId?.id,\n          currencyId: this.salaryComponent.currencyId?.id,\n          payFrequencyId: this.salaryComponent.payFrequencyId?.id,\n          comment: this.salaryComponent.comment\n            ? this.salaryComponent.comment\n            : null,\n          addDirectDeposit: this.includeDirectDeposit,\n          // Directdeposi fields\n          directDepositAccount: this.includeDirectDeposit\n            ? this.directDeposit.directDepositAccount\n            : undefined,\n          directDepositAccountType: this.includeDirectDeposit\n            ? accountType\n            : undefined,\n          directDepositAmount: this.includeDirectDeposit\n            ? this.directDeposit.directDepositAmount\n            : undefined,\n          directDepositRoutingNumber: this.includeDirectDeposit\n            ? this.directDeposit.directDepositRoutingNumber\n            : undefined,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.directdeposit-form-header {\n  display: flex;\n  padding: 1rem;\n  &-text {\n    font-size: 0.8rem;\n    margin-right: 1rem;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}