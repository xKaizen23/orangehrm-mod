{"ast":null,"code":"import { resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, mergeProps as _mergeProps, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_label = _resolveComponent(\"oxd-label\");\n  const _component_oxd_color_input = _resolveComponent(\"oxd-color-input\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createBlock(_component_oxd_input_group, {\n    class: \"oxd-input-field-bottom-space\",\n    message: $setup.message,\n    classes: $setup.classes\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_label, {\n      label: $props.label,\n      class: _normalizeClass($setup.classes.label)\n    }, null, 8, [\"label\", \"class\"]), _createVNode(_component_oxd_color_input, _mergeProps(_ctx.$attrs, {\n      disabled: $props.disabled,\n      \"has-error\": $setup.hasError,\n      \"model-value\": $props.modelValue,\n      \"dropdown-position\": \"left\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event))\n    }), null, 16, [\"disabled\", \"has-error\", \"model-value\"])]),\n    _: 1\n  }, 8, [\"message\", \"classes\"]);\n}","map":{"version":3,"mappings":";;;;;uBAoBEA,aAckBC;IAbhBC,KAAK,EAAC,8BAA8B;IACnCC,OAAO,EAAEC,cAAO;IAChBC,OAAO,EAAED;;sBAEV,MAAmD,CAAnDE,aAAmDC;MAAvCC,KAAK,EAAEC,YAAK;MAAGP,KAAK,kBAAEE,cAAO,CAACI,KAAK;qCAC/CF,aAOEI,4BAPFC,YACUC,IAMR,OANc;MACbC,QAAQ,EAAEJ,eAAQ;MAClB,WAAS,EAAEL,eAAQ;MACnB,aAAW,EAAEK,iBAAU;MACxB,mBAAiB,EAAC,MAAM;MACvB,qBAAkB,sCAAEG,UAAK,sBAAsBE,MAAM","names":["_createBlock","_component_oxd_input_group","class","message","$setup","classes","_createVNode","_component_oxd_label","label","$props","_component_oxd_color_input","_mergeProps","_ctx","disabled","$event"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\components\\InlineColorInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-group\n    class=\"oxd-input-field-bottom-space\"\n    :message=\"message\"\n    :classes=\"classes\"\n  >\n    <oxd-label :label=\"label\" :class=\"classes.label\" />\n    <oxd-color-input\n      v-bind=\"$attrs\"\n      :disabled=\"disabled\"\n      :has-error=\"hasError\"\n      :model-value=\"modelValue\"\n      dropdown-position=\"left\"\n      @update:model-value=\"$emit('update:modelValue', $event)\"\n    />\n  </oxd-input-group>\n</template>\n\n<script>\nimport {toRef, nextTick, computed} from 'vue';\nimport {OxdColorInput, OxdLabel, useField} from '@ohrm/oxd';\n\nexport default {\n  name: 'InlineColorInput',\n  components: {\n    'oxd-label': OxdLabel,\n    'oxd-color-input': OxdColorInput,\n  },\n  inheritAttrs: false,\n  props: {\n    label: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n      required: false,\n    },\n    required: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    modelValue: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    const disabled = toRef(props, 'disabled');\n    const modelValue = toRef(props, 'modelValue');\n    const initialValue = modelValue.value;\n\n    const onReset = async () => {\n      context.emit('update:modelValue', initialValue);\n      await nextTick();\n    };\n\n    const {hasError, message} = useField({\n      fieldLabel: props.label ?? '',\n      rules: props.rules,\n      modelValue,\n      onReset,\n      disabled,\n    });\n\n    const classes = computed(() => ({\n      label: {\n        'oxd-input-field-required': props.required,\n      },\n      message: {\n        'oxd-input-field-error-message': hasError,\n      },\n      wrapper: {\n        'orangehrm-color-input-wrapper': true,\n      },\n    }));\n\n    return {\n      classes,\n      message,\n      hasError,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.oxd-input-group__label-wrapper) {\n  display: none;\n}\n::v-deep(.orangehrm-color-input-wrapper) {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n::v-deep(.oxd-color-input) {\n  padding: 2px;\n  flex-shrink: 0;\n}\n.oxd-input-field-bottom-space {\n  margin-bottom: 1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}