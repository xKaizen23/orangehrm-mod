{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { reloadPage } from '@ohrm/core/util/helper/navigation';\nimport { required } from '@/core/util/validation/rules';\nimport { addDays, formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nconst leavePeriodModel = {\n  startMonth: null,\n  startDay: null,\n  currentPeriod: null\n};\nexport default {\n  props: {\n    monthDates: {\n      type: Object,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-period');\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    return {\n      http,\n      jsDateFormat,\n      locale\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      leavePeriod: {\n        ...leavePeriodModel\n      },\n      leavePeriodDefined: true,\n      rules: {\n        startMonth: [required],\n        startDay: [required]\n      }\n    };\n  },\n  computed: {\n    months() {\n      return Array(12).fill('').map((...[, index]) => {\n        return {\n          id: index + 1,\n          label: this.locale.localize.month(index, {\n            width: 'wide'\n          })\n        };\n      });\n    },\n    dates() {\n      return (this.monthDates[this.leavePeriod.startMonth?.id] ?? []).map(day => {\n        return {\n          id: day,\n          label: String(day).padStart(2, '0')\n        };\n      });\n    },\n    endDay() {\n      const month = this.leavePeriod.startMonth?.id;\n      const date = this.leavePeriod.startDay?.id;\n      const year = new Date().getFullYear();\n      if (month && date) {\n        const endDay = addDays(new Date(year, month - 1, date), 364);\n        const isFollowingYear = endDay.getFullYear() > year;\n        return formatDate(endDay, 'LLLL dd', {\n          locale: this.locale\n        }) + (isFollowingYear ? ` (${this.$t('leave.following_year')})` : '');\n      }\n      return '-';\n    }\n  },\n  watch: {\n    'leavePeriod.startMonth': function () {\n      this.leavePeriod.startDay = this.dates.length > 0 ? this.dates[0] : null;\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET'\n    }).then(response => {\n      const {\n        data,\n        meta\n      } = response.data;\n      this.updateLeavePeriodModel(data);\n      this.defineLeavePeriod(meta);\n      this.resetLeavePeriod();\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          startMonth: this.leavePeriod.startMonth?.id,\n          startDay: this.leavePeriod.startDay?.id\n        }\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        this.updateLeavePeriodModel(data);\n        this.defineLeavePeriod(meta);\n        this.resetLeavePeriod();\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.isLoading = false;\n        if (!this.leavePeriodDefined) {\n          reloadPage();\n        }\n      });\n    },\n    onClickReset() {\n      this.resetLeavePeriod();\n    },\n    resetLeavePeriod() {\n      this.leavePeriod.startMonth = leavePeriodModel.startMonth;\n      this.$nextTick(() => {\n        this.leavePeriod.startDay = leavePeriodModel.startDay;\n      });\n    },\n    updateLeavePeriodModel(data) {\n      leavePeriodModel.startMonth = this.months.find(m => {\n        return m.id === data.startMonth;\n      });\n      this.$nextTick(() => {\n        leavePeriodModel.startDay = this.dates.find(d => {\n          return d.id === data.startDay;\n        });\n      });\n    },\n    defineLeavePeriod(meta) {\n      if (meta.leavePeriodDefined === true) {\n        this.leavePeriodDefined = meta.leavePeriodDefined;\n        const startDate = formatDate(parseDate(meta.currentLeavePeriod.startDate), this.jsDateFormat, {\n          locale: this.locale\n        });\n        const endDate = formatDate(parseDate(meta.currentLeavePeriod.endDate), this.jsDateFormat, {\n          locale: this.locale\n        });\n        this.leavePeriod.currentPeriod = `${startDate} ${this.$t('general.to').toLowerCase()} ${endDate}`;\n      } else {\n        this.leavePeriodDefined = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","reloadPage","required","addDays","formatDate","parseDate","useDateFormat","useLocale","leavePeriodModel","startMonth","startDay","currentPeriod","props","monthDates","type","Object","setup","http","window","appGlobal","baseUrl","jsDateFormat","locale","data","isLoading","leavePeriod","leavePeriodDefined","rules","computed","months","Array","fill","map","index","id","label","localize","month","width","dates","day","String","padStart","endDay","date","year","Date","getFullYear","isFollowingYear","$t","watch","length","beforeMount","request","method","then","response","meta","updateLeavePeriodModel","defineLeavePeriod","resetLeavePeriod","finally","methods","onSave","$toast","saveSuccess","onClickReset","$nextTick","find","m","d","startDate","currentLeavePeriod","endDate","toLowerCase"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\configure\\LeavePeriod.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.leave_period') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leavePeriod.startMonth\"\n                type=\"select\"\n                :options=\"months\"\n                :rules=\"rules.startMonth\"\n                :label=\"$t('leave.start_month')\"\n                required\n              />\n            </oxd-grid-item>\n\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leavePeriod.startDay\"\n                type=\"select\"\n                :options=\"dates\"\n                :rules=\"rules.startDay\"\n                :label=\"$t('general.start_date')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :label=\"$t('general.end_date')\">\n                <oxd-text type=\"subtitle-2\" class=\"orangehrm-leave-period\">\n                  {{ endDay }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n\n            <oxd-grid-item v-if=\"leavePeriod.currentPeriod\">\n              <oxd-input-group :label=\"$t('leave.current_leave_period')\">\n                <oxd-text type=\"subtitle-2\" class=\"orangehrm-leave-period\">\n                  {{ leavePeriod.currentPeriod }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {reloadPage} from '@ohrm/core/util/helper/navigation';\nimport {required} from '@/core/util/validation/rules';\nimport {addDays, formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\n\nconst leavePeriodModel = {\n  startMonth: null,\n  startDay: null,\n  currentPeriod: null,\n};\n\nexport default {\n  props: {\n    monthDates: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-period',\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    return {\n      http,\n      jsDateFormat,\n      locale,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leavePeriod: {...leavePeriodModel},\n      leavePeriodDefined: true,\n      rules: {\n        startMonth: [required],\n        startDay: [required],\n      },\n    };\n  },\n\n  computed: {\n    months() {\n      return Array(12)\n        .fill('')\n        .map((...[, index]) => {\n          return {\n            id: index + 1,\n            label: this.locale.localize.month(index, {\n              width: 'wide',\n            }),\n          };\n        });\n    },\n    dates() {\n      return (this.monthDates[this.leavePeriod.startMonth?.id] ?? []).map(\n        (day) => {\n          return {\n            id: day,\n            label: String(day).padStart(2, '0'),\n          };\n        },\n      );\n    },\n    endDay() {\n      const month = this.leavePeriod.startMonth?.id;\n      const date = this.leavePeriod.startDay?.id;\n      const year = new Date().getFullYear();\n      if (month && date) {\n        const endDay = addDays(new Date(year, month - 1, date), 364);\n        const isFollowingYear = endDay.getFullYear() > year;\n        return (\n          formatDate(endDay, 'LLLL dd', {locale: this.locale}) +\n          (isFollowingYear ? ` (${this.$t('leave.following_year')})` : '')\n        );\n      }\n      return '-';\n    },\n  },\n\n  watch: {\n    'leavePeriod.startMonth': function () {\n      this.leavePeriod.startDay = this.dates.length > 0 ? this.dates[0] : null;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n      })\n      .then((response) => {\n        const {data, meta} = response.data;\n        this.updateLeavePeriodModel(data);\n        this.defineLeavePeriod(meta);\n        this.resetLeavePeriod();\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            startMonth: this.leavePeriod.startMonth?.id,\n            startDay: this.leavePeriod.startDay?.id,\n          },\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          this.updateLeavePeriodModel(data);\n          this.defineLeavePeriod(meta);\n          this.resetLeavePeriod();\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n          if (!this.leavePeriodDefined) {\n            reloadPage();\n          }\n        });\n    },\n\n    onClickReset() {\n      this.resetLeavePeriod();\n    },\n\n    resetLeavePeriod() {\n      this.leavePeriod.startMonth = leavePeriodModel.startMonth;\n      this.$nextTick(() => {\n        this.leavePeriod.startDay = leavePeriodModel.startDay;\n      });\n    },\n\n    updateLeavePeriodModel(data) {\n      leavePeriodModel.startMonth = this.months.find((m) => {\n        return m.id === data.startMonth;\n      });\n      this.$nextTick(() => {\n        leavePeriodModel.startDay = this.dates.find((d) => {\n          return d.id === data.startDay;\n        });\n      });\n    },\n\n    defineLeavePeriod(meta) {\n      if (meta.leavePeriodDefined === true) {\n        this.leavePeriodDefined = meta.leavePeriodDefined;\n        const startDate = formatDate(\n          parseDate(meta.currentLeavePeriod.startDate),\n          this.jsDateFormat,\n          {locale: this.locale},\n        );\n        const endDate = formatDate(\n          parseDate(meta.currentLeavePeriod.endDate),\n          this.jsDateFormat,\n          {locale: this.locale},\n        );\n        this.leavePeriod.currentPeriod = `${startDate} ${this.$t(\n          'general.to',\n        ).toLowerCase()} ${endDate}`;\n      } else {\n        this.leavePeriodDefined = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-leave-duration {\n  padding: $oxd-input-control-vertical-padding 0rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}