{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_3 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_6 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('performance.performance_trackers')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.empNumber,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.empNumber = $event),\n              rules: $data.rules.employee,\n              params: {\n                includeEmployees: 'currentAndPast'\n              }\n            }, null, 8, [\"modelValue\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset'),\n          onClick: $options.onClickReset\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n          class: \"orangehrm-left-space\",\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.search'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_button, {\n    \"display-type\": \"secondary\",\n    \"icon-name\": \"plus\",\n    label: _ctx.$t('general.add'),\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])]), _createVNode(_component_table_header, {\n    loading: $setup.isLoading,\n    selected: $data.checkedItems.length,\n    total: $setup.total,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"loading\", \"selected\", \"total\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_card_table, {\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[1] || (_cache[1] = $event => $setup.sortDefinition = $event),\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[2] || (_cache[2] = $event => $data.checkedItems = $event),\n    clickable: false,\n    headers: $data.headers,\n    items: $setup.response?.data,\n    loading: $setup.isLoading,\n    selectable: true,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"order\", \"selected\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_6, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[3] || (_cache[3] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":";;EAmBOA,KAAK,EAAC;AAAgC;gCAgCzCC,oBAAM;;EACDD,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EAclCA,KAAK,EAAC;AAAqB;;EAY3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;uBA5D3CE,oBAqEM,OArENC,UAqEM,GApEJC,aA8BmBC;IA9BA,cAAY,EAAEC,OAAE;;sBACjC,MA4BW,CA5BXF,aA4BWG;MA5BAC,aAAY,EAAEC;IAAW;wBAClC,MAYe,CAZfL,aAYeM;0BAXb,MAUW,CAVXN,aAUWO;UAVAC,IAAI,EAAE,CAAC;UAAEZ,KAAK,EAAC;;4BACxB,MAQgB,CARhBI,aAQgBS;8BAPd,MAME,CANFT,aAMEU;0BALSC,cAAO,CAACC,SAAS;yEAAjBD,cAAO,CAACC,SAAS;cACzBC,KAAK,EAAEC,WAAK,CAACC,QAAQ;cACrBC,MAAM,EAAE;;;;;;;;;UAOjBhB,aAAeiB,yBACfjB,aAYmBkB;0BAXjB,MAIE,CAJFlB,aAIEmB;UAHA,cAAY,EAAC,OAAO;UACnBC,KAAK,EAAElB,OAAE;UACTmB,OAAK,EAAEhB;2CAEVL,aAKEmB;UAJAvB,KAAK,EAAC,sBAAsB;UAC5B,cAAY,EAAC,WAAW;UACvBwB,KAAK,EAAElB,OAAE;UACVoB,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACN1B,oBAkCM,OAlCN2B,UAkCM,GAjCJ3B,oBAOM,OAPN4B,UAOM,GANJzB,aAKEmB;IAJA,cAAY,EAAC,WAAW;IACxB,WAAS,EAAC,MAAM;IACfC,KAAK,EAAElB,OAAE;IACTmB,OAAK,EAAEhB;uCAGZL,aAKgB0B;IAJbC,OAAO,EAAEhB,gBAAS;IAClBiB,QAAQ,EAAEd,kBAAY,CAACe,MAAM;IAC7BC,KAAK,EAAEnB,YAAK;IACZoB,QAAM,EAAE1B;6DAEXR,oBAWM,OAXNmC,UAWM,GAVJhC,aASEiC;IARQC,KAAK,EAAEvB,qBAAc;0DAAdA,qBAAc;IACrBiB,QAAQ,EAAEd,kBAAY;6DAAZA,kBAAY;IAC7BqB,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAEtB,aAAO;IAChBuB,KAAK,EAAE1B,eAAQ,EAAE2B,IAAI;IACrBX,OAAO,EAAEhB,gBAAS;IAClB4B,UAAU,EAAE,IAAI;IACjB,eAAa,EAAC;uEAGlB1C,oBAMM,OANN2C,UAMM,GAJI7B,oBAAa,kBADrB8B,aAIkBC;;IAFRC,OAAO,EAAEhC,kBAAW;4DAAXA,kBAAW;IAC3BkB,MAAM,EAAElB;2EAIfX,aAA8D4C;IAAzCC,GAAG,EAAC;EAAc","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","empNumber","rules","$data","employee","params","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","label","onClick","type","_hoisted_2","_hoisted_3","_hoisted_4","_component_table_header","loading","selected","length","total","onDelete","_hoisted_5","_component_oxd_card_table","order","clickable","headers","items","data","selectable","_hoisted_6","_createBlock","_component_oxd_pagination","current","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\PerformanceTrackers.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('performance.performance_trackers')\">\n      <oxd-form @submit-valid=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.empNumber\"\n                :rules=\"rules.employee\"\n                :params=\"{\n                  includeEmployees: 'currentAndPast',\n                }\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-button\n          display-type=\"secondary\"\n          icon-name=\"plus\"\n          :label=\"$t('general.add')\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :loading=\"isLoading\"\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          v-model:selected=\"checkedItems\"\n          :clickable=\"false\"\n          :headers=\"headers\"\n          :items=\"response?.data\"\n          :loading=\"isLoading\"\n          :selectable=\"true\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        ></oxd-pagination>\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport useSort from '@/core/util/composable/useSort';\nimport {navigate} from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nconst defaultFilters = {\n  empNumber: null,\n};\n\nconst defaultSortOrder = {\n  'performanceTracker.modifiedDate': 'DESC',\n  'employee.lastName': 'ASC',\n  'performanceTracker.trackerName': 'ASC',\n  'performanceTracker.addedDate': 'DESC',\n};\n\nexport default {\n  name: 'TrackerList',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  props: {\n    unselectableIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const trackerNormalizer = (data) => {\n      return data.map((row) => {\n        return {\n          id: row.id,\n          tracker: row.trackerName,\n          addDate: formatDate(parseDate(row.addedDate), jsDateFormat, {\n            locale,\n          }),\n          modifiedDate: formatDate(parseDate(row.modifiedDate), jsDateFormat, {\n            locale,\n          }),\n          empName: $tEmpName(row.employee, {\n            includeMiddle: false,\n            excludePastEmpTag: false,\n          }),\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/config/trackers',\n    );\n\n    const filters = ref({...defaultFilters});\n\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        empNumber: filters.value.empNumber?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        includeEmployees: filters.value.includeEmployees?.param,\n      };\n    });\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      response,\n      pages,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: trackerNormalizer,\n      prefetch: true,\n      toastNoRecords: true,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      total,\n      isLoading,\n      showPaginator,\n      currentPage,\n      pages,\n      response,\n      execQuery,\n      sortDefinition,\n      filters,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'empName',\n          title: this.$t('general.employee'),\n          slot: 'title',\n          sortField: 'employee.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'tracker',\n          title: this.$t('performance.tracker'),\n          style: {flex: 1},\n          sortField: 'performanceTracker.trackerName',\n        },\n        {\n          name: 'addDate',\n          title: this.$t('performance.added_date'),\n          sortField: 'performanceTracker.addedDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'modifiedDate',\n          title: this.$t('performance.modified_date'),\n          sortField: 'performanceTracker.modifiedDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/performance/addPerformanceTracker');\n    },\n    onClickEdit(item) {\n      navigate('/performance/addPerformanceTracker/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.response?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(\n        (id) => id == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}