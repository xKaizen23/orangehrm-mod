{"ast":null,"code":"import { resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_time_range = _resolveComponent(\"time-range\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_grid_item, {\n    style: {\n      \"grid-column-start\": \"1\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_field, _mergeProps({\n      type: \"select\"\n    }, _ctx.$attrs, {\n      options: $options.options,\n      \"model-value\": $props.duration,\n      rules: $data.rules.duration,\n      \"show-empty-selector\": $props.partial,\n      required: $props.partial,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:duration', $event))\n    }), null, 16, [\"options\", \"model-value\", \"rules\", \"show-empty-selector\", \"required\"])]),\n    _: 1\n  }), $props.duration && $props.duration.id === 4 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createVNode(_component_time_range, {\n    rules: $data.rules,\n    \"from-time\": $props.fromTime,\n    \"to-time\": $props.toTime,\n    \"work-shift\": $props.workShift,\n    \"onUpdate:fromTime\": _cache[1] || (_cache[1] = $event => _ctx.$emit('update:fromTime', $event)),\n    \"onUpdate:toTime\": _cache[2] || (_cache[2] = $event => _ctx.$emit('update:toTime', $event))\n  }, null, 8, [\"rules\", \"from-time\", \"to-time\", \"work-shift\"]), _createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n      label: _ctx.$t('general.duration')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"orangehrm-leave-duration\",\n        tag: \"p\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.selectedTimeDuration), 1)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"label\"])]),\n    _: 1\n  })], 64)) : _createCommentVNode(\"\", true)], 64);\n}","map":{"version":3,"mappings":";;;;;;;6DAqBEA,aAWgBC;IAXDC,KAA4B,EAA5B;MAAA;IAAA;EAA4B;sBACzC,MASE,CATFF,aASEG,4BATFC,YASE;MARAC,IAAI,EAAC;IAAQ,GACLC,WAAM;MACbC,OAAO,EAAEC,gBAAO;MAChB,aAAW,EAAEC,eAAQ;MACrBC,KAAK,EAAEC,WAAK,CAACC,QAAQ;MACrB,qBAAmB,EAAEH,cAAO;MAC5BI,QAAQ,EAAEJ,cAAO;MACjB,qBAAkB,sCAAEH,UAAK,oBAAoBQ,MAAM;;;MAGxCL,eAAQ,IAAIA,eAAQ,CAACM,EAAE,wBAAvCC,oBAgBWC;IAAAC;EAAA,IAfTlB,aAOcmB;IANXT,KAAK,EAAEC,WAAK;IACZ,WAAS,EAAEF,eAAQ;IACnB,SAAO,EAAEA,aAAM;IACf,YAAU,EAAEA,gBAAS;IACrB,mBAAgB,sCAAEH,UAAK,oBAAoBQ,MAAM;IACjD,iBAAc,sCAAER,UAAK,kBAAkBQ,MAAM;gEAEhDd,aAMgBC;sBALd,MAIkB,CAJlBD,aAIkBoB;MAJAC,KAAK,EAAEf,OAAE;;wBACzB,MAEW,CAFXN,aAEWsB;QAFDC,KAAK,EAAC,0BAA0B;QAACC,GAAG,EAAC;;0BAC7C,MAA0B,mCAAvBhB,6BAAoB","names":["_createVNode","_component_oxd_grid_item","style","_component_oxd_input_field","_mergeProps","type","_ctx","options","$options","$props","rules","$data","duration","required","$event","id","_createElementBlock","_Fragment","key","_component_time_range","_component_oxd_input_group","label","_component_oxd_text","class","tag"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveDurationInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <!-- Always use inside within OXD-Grid inside OXD-Form -->\n  <oxd-grid-item style=\"grid-column-start: 1\">\n    <oxd-input-field\n      type=\"select\"\n      v-bind=\"$attrs\"\n      :options=\"options\"\n      :model-value=\"duration\"\n      :rules=\"rules.duration\"\n      :show-empty-selector=\"partial\"\n      :required=\"partial\"\n      @update:model-value=\"$emit('update:duration', $event)\"\n    />\n  </oxd-grid-item>\n  <template v-if=\"duration && duration.id === 4\">\n    <time-range\n      :rules=\"rules\"\n      :from-time=\"fromTime\"\n      :to-time=\"toTime\"\n      :work-shift=\"workShift\"\n      @update:from-time=\"$emit('update:fromTime', $event)\"\n      @update:to-time=\"$emit('update:toTime', $event)\"\n    ></time-range>\n    <oxd-grid-item>\n      <oxd-input-group :label=\"$t('general.duration')\">\n        <oxd-text class=\"orangehrm-leave-duration\" tag=\"p\">\n          {{ selectedTimeDuration }}\n        </oxd-text>\n      </oxd-input-group>\n    </oxd-grid-item>\n  </template>\n</template>\n\n<script>\nimport {diffInTime} from '@ohrm/core/util/helper/datefns';\nimport {\n  required,\n  validTimeFormat,\n  endTimeShouldBeAfterStartTime,\n  startTimeShouldBeBeforeEndTime,\n} from '@/core/util/validation/rules';\nimport TimeRange from '@/orangehrmLeavePlugin/components/TimeRange';\n\nexport default {\n  name: 'LeaveDurationInput',\n  components: {\n    'time-range': TimeRange,\n  },\n  inheritAttrs: false,\n  props: {\n    duration: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    fromTime: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toTime: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    partial: {\n      type: Boolean,\n      default: false,\n    },\n    workShift: {\n      type: Object,\n      required: true,\n      default: () => ({}),\n    },\n  },\n  emits: ['update:fromTime', 'update:toTime', 'update:duration'],\n  data() {\n    return {\n      rules: {\n        duration: [required],\n        fromTime: [\n          required,\n          validTimeFormat,\n          startTimeShouldBeBeforeEndTime(\n            () => this.toTime,\n            this.$t('general.from_time_should_be_before_to_time'),\n          ),\n        ],\n        toTime: [\n          required,\n          validTimeFormat,\n          endTimeShouldBeAfterStartTime(\n            () => this.fromTime,\n            this.$t('general.to_time_should_be_after_from_time'),\n          ),\n          (value) => {\n            if (value) {\n              const workLength = diffInTime(\n                this.workShift.startTime,\n                this.workShift.endTime,\n              );\n              const selectedLength = diffInTime(this.fromTime, value);\n              if (selectedLength > workLength)\n                return this.$t(\n                  'leave.duration_should_be_less_than_work_shift_length',\n                );\n            }\n            return true;\n          },\n        ],\n      },\n    };\n  },\n  computed: {\n    selectedTimeDuration() {\n      const timeDifference = diffInTime(this.fromTime, this.toTime);\n      return (timeDifference / 3600).toFixed(2);\n    },\n    options() {\n      const durations = [\n        {id: 1, label: this.$t('leave.full_day'), key: 'full_day'},\n        {\n          id: 2,\n          label: this.$t('leave.half_day_morning'),\n          key: 'half_day_morning',\n        },\n        {\n          id: 3,\n          label: this.$t('leave.half_day_evening'),\n          key: 'half_day_afternoon',\n        },\n        {id: 4, label: this.$t('leave.specify_time'), key: 'specify_time'},\n      ];\n      return this.partial ? durations.filter((i) => i.id != 1) : durations;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-leave-duration {\n  padding: $oxd-input-control-vertical-padding 0rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}