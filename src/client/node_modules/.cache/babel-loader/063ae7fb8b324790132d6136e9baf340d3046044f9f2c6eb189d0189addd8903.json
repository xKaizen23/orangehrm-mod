{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_3 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_include_employee_dropdown = _resolveComponent(\"include-employee-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('performance.employee_performance_trackers')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems,\n      onReset: $options.resetDataTable\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.empName,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.empName = $event),\n              rules: $data.rules.employee,\n              \"api-path\": \"/api/v2/performance/trackers/reviewers\",\n              params: {\n                includeEmployees: $setup.filters.includeEmployees.param\n              }\n            }, null, 8, [\"modelValue\", \"rules\", \"params\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_include_employee_dropdown, {\n              modelValue: $setup.filters.includeEmployees,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.includeEmployees = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset'),\n          type: \"reset\"\n        }, null, 8, [\"label\"]), _createVNode(_component_oxd_button, {\n          class: \"orangehrm-left-space\",\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.search'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\", \"onReset\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_table_header, {\n    selected: 0,\n    total: $setup.total,\n    loading: $setup.isLoading\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[2] || (_cache[2] = $event => $setup.sortDefinition = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: false,\n    clickable: true,\n    loading: $setup.isLoading,\n    class: \"orangehrm-employee-list\",\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"order\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[3] || (_cache[3] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;gCAyCzCC,oBAAM;;EACDD,KAAK,EAAC;AAA2B;;EAM/BA,KAAK,EAAC;AAAqB;;EAY3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;uBA5D3CE,oBAoEM,OApENC,UAoEM,GAnEJC,aAuCmBC;IAtChB,cAAY,EAAEC,OAAE;;sBAEjB,MAmCW,CAnCXF,aAmCWG;MAnCAC,aAAY,EAAEC,oBAAW;MAAGC,OAAK,EAAED;;wBAC5C,MAmBe,CAnBfL,aAmBeO;0BAlBb,MAiBW,CAjBXP,aAiBWQ;UAjBAC,IAAI,EAAE,CAAC;UAAEb,KAAK,EAAC;;4BACxB,MAUgB,CAVhBI,aAUgBU;8BATd,MAQwB,CARxBV,aAQwBW;0BAPbC,cAAO,CAACC,OAAO;yEAAfD,cAAO,CAACC,OAAO;cACvBC,KAAK,EAAEC,WAAK,CAACC,QAAQ;cACtB,UAAQ,EAAC,wCAAwC;cAChDC,MAAM;kCAAwCL,cAAO,CAACM,gBAAgB,CAACC;;;;cAM5EnB,aAIgBU;8BAHd,MAE6B,CAF7BV,aAE6BoB;0BADlBR,cAAO,CAACM,gBAAgB;yEAAxBN,cAAO,CAACM,gBAAgB;;;;;;;UAKzClB,aAAeqB,yBACfrB,aAYmBsB;0BAXjB,MAIE,CAJFtB,aAIEuB;UAHA,cAAY,EAAC,OAAO;UACnBC,KAAK,EAAEtB,OAAE;UACVuB,IAAI,EAAC;gCAEPzB,aAKEuB;UAJA3B,KAAK,EAAC,sBAAsB;UAC5B,cAAY,EAAC,WAAW;UACvB4B,KAAK,EAAEtB,OAAE;UACVuB,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACN7B,oBAyBM,OAzBN8B,UAyBM,GAxBJ3B,aAIgB4B;IAHbC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAElB,YAAK;IACZmB,OAAO,EAAEnB;qCAEZf,oBAWM,OAXNmC,UAWM,GAVJhC,aASEiC;IARQC,KAAK,EAAEtB,qBAAc;0DAAdA,qBAAc;IAC5BuB,OAAO,EAAEpB,aAAO;IAChBqB,KAAK,EAAExB,YAAK,EAAEyB,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,IAAI;IACfR,OAAO,EAAEnB,gBAAS;IACnBhB,KAAK,EAAC,yBAAyB;IAC/B,eAAa,EAAC;2DAGlBC,oBAMM,OANN2C,UAMM,GAJI5B,oBAAa,kBADrB6B,aAIEC;;IAFQC,OAAO,EAAE/B,kBAAW;4DAAXA,kBAAW;IAC3BgC,MAAM,EAAEhC","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","onReset","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","empName","rules","$data","employee","params","includeEmployees","param","_component_include_employee_dropdown","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","label","type","_hoisted_2","_hoisted_3","_component_table_header","selected","total","loading","_hoisted_4","_component_oxd_card_table","order","headers","items","data","selectable","clickable","_hoisted_5","_createBlock","_component_oxd_pagination","current","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\EmployeeTrackers.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter\n      :filter-title=\"$t('performance.employee_performance_trackers')\"\n    >\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"resetDataTable\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.empName\"\n                :rules=\"rules.employee\"\n                api-path=\"/api/v2/performance/trackers/reviewers\"\n                :params=\"{\n                  includeEmployees: filters.includeEmployees.param,\n                }\"\n              >\n              </employee-autocomplete>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <include-employee-dropdown\n                v-model=\"filters.includeEmployees\"\n              ></include-employee-dropdown>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"false\"\n          :clickable=\"true\"\n          :loading=\"isLoading\"\n          class=\"orangehrm-employee-list\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport usei18n from '@/core/util/composable/usei18n';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\n\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'tracker.trackerName': 'DEFAULT',\n  'tracker.modifiedDate': 'DESC',\n  'tracker.addedDate': 'DEFAULT',\n};\nexport default {\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  setup() {\n    const {$t} = usei18n();\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const employeeTrackerNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          title: item.title,\n          empName: `${item.employee?.firstName} ${item.employee?.lastName} ${\n            item.employee?.terminationId\n              ? ` ${$t('general.past_employee')}`\n              : ''\n          }`,\n          modifiedDate: formatDate(parseDate(item.modifiedDate), jsDateFormat, {\n            locale,\n          }),\n          addedDate: formatDate(parseDate(item.addedDate), jsDateFormat, {\n            locale,\n          }),\n        };\n      });\n    };\n\n    const defaultFilters = {\n      empName: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    };\n\n    const filters = ref({...defaultFilters});\n\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilter = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.empName?.id,\n        includeEmployees: filters.value.includeEmployees?.param,\n      };\n    });\n\n    const api = '/api/v2/performance/employees/trackers';\n    const http = new APIService(window.appGlobal.baseUrl, api);\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      isLoading,\n      response,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilter,\n      normalizer: employeeTrackerNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      total,\n      showPaginator,\n      currentPage,\n      pages,\n      pageSize,\n      isLoading,\n      items: response,\n      api,\n      http,\n      execQuery,\n      sortDefinition,\n      filters,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'empName',\n          slot: 'title',\n          title: this.$t('general.employee_name'),\n          sortField: 'employee.lastName',\n          style: {flex: 2},\n        },\n        {\n          name: 'title',\n          title: this.$t('general.trackers'),\n          sortField: 'tracker.trackerName',\n          style: {flex: 2},\n        },\n        {\n          name: 'addedDate',\n          title: this.$t('performance.added_date'),\n          sortField: 'tracker.addedDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'modifiedDate',\n          title: this.$t('performance.modified_date'),\n          sortField: 'tracker.modifiedDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            view: {\n              onClick: this.onClickView,\n              component: 'oxd-button',\n              props: {\n                name: 'view',\n                label: this.$t('general.view'),\n                class: 'orangehrm-left-space',\n                displayType: 'text',\n              },\n            },\n          },\n        },\n      ],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n\n  methods: {\n    async resetDataTable() {\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickView(item) {\n      navigate('/performance/addPerformanceTrackerLog/trackId/{id}', {\n        id: item.id,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}