{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b2e37d60\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.leave_period')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leavePeriod.startMonth,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leavePeriod.startMonth = $event),\n            type: \"select\",\n            options: $options.months,\n            rules: $data.rules.startMonth,\n            label: _ctx.$t('leave.start_month'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"options\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leavePeriod.startDay,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leavePeriod.startDay = $event),\n            type: \"select\",\n            options: $options.dates,\n            rules: $data.rules.startDay,\n            label: _ctx.$t('general.start_date'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"options\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('general.end_date')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\",\n              class: \"orangehrm-leave-period\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.endDay), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        }), $data.leavePeriod.currentPeriod ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('leave.current_leave_period')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\",\n              class: \"orangehrm-leave-period\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($data.leavePeriod.currentPeriod), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.reset'),\n        onClick: $options.onClickReset\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;uBADvCC,oBAoEM,OApENC,UAoEM,GAnEJC,oBAkEM,OAlENC,UAkEM,GAjEJC,aAEWC;IAFDN,KAAK,EAAC;EAAsB;sBACpC,MAA8B,mCAA3BO,OAAE;;MAGPF,aAAeG,yBAEfH,aA0DWI;IA1DAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAwBe,CAxBfR,aAwBeS;wBAvBb,MAsBW,CAtBXT,aAsBWU;QAtBAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MASgB,CAThBK,aASgBY;4BARd,MAOE,CAPFZ,aAOEa;wBANSP,iBAAW,CAACQ,UAAU;uEAAtBR,iBAAW,CAACQ,UAAU;YAC/BC,IAAI,EAAC,QAAQ;YACZC,OAAO,EAAER,eAAM;YACfS,KAAK,EAAEX,WAAK,CAACQ,UAAU;YACvBI,KAAK,EAAEhB,OAAE;YACViB,QAAQ,EAAR;;;YAIJnB,aASgBY;4BARd,MAOE,CAPFZ,aAOEa;wBANSP,iBAAW,CAACc,QAAQ;uEAApBd,iBAAW,CAACc,QAAQ;YAC7BL,IAAI,EAAC,QAAQ;YACZC,OAAO,EAAER,cAAK;YACdS,KAAK,EAAEX,WAAK,CAACc,QAAQ;YACrBF,KAAK,EAAEhB,OAAE;YACViB,QAAQ,EAAR;;;;;;;QAMRnB,aAkBeS;wBAjBb,MAgBW,CAhBXT,aAgBWU;QAhBAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBY;4BALd,MAIkB,CAJlBZ,aAIkBqB;YAJAH,KAAK,EAAEhB,OAAE;;8BACzB,MAEW,CAFXF,aAEWC;cAFDc,IAAI,EAAC,YAAY;cAACpB,KAAK,EAAC;;gCAChC,MAAY,mCAATa,eAAM;;;;;;YAKMF,iBAAW,CAACgB,aAAa,kBAA9CC,aAMgBX;UAAAY;QAAA;4BALd,MAIkB,CAJlBxB,aAIkBqB;YAJAH,KAAK,EAAEhB,OAAE;;8BACzB,MAEW,CAFXF,aAEWC;cAFDc,IAAI,EAAC,YAAY;cAACpB,KAAK,EAAC;;gCAChC,MAA+B,mCAA5BW,iBAAW,CAACgB,aAAa;;;;;;;;;;QAOtCtB,aAAeG,yBAEfH,aAQmByB;wBAPjB,MAAiB,CAAjBzB,aAAiB0B,2BACjB1B,aAIE2B;QAHA,cAAY,EAAC,OAAO;QACnBT,KAAK,EAAEhB,OAAE;QACT0B,OAAK,EAAEpB;yCAEVR,aAAiB6B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","startMonth","type","options","rules","label","required","startDay","_component_oxd_input_group","currentPeriod","_createBlock","key","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\configure\\LeavePeriod.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.leave_period') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leavePeriod.startMonth\"\n                type=\"select\"\n                :options=\"months\"\n                :rules=\"rules.startMonth\"\n                :label=\"$t('leave.start_month')\"\n                required\n              />\n            </oxd-grid-item>\n\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leavePeriod.startDay\"\n                type=\"select\"\n                :options=\"dates\"\n                :rules=\"rules.startDay\"\n                :label=\"$t('general.start_date')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :label=\"$t('general.end_date')\">\n                <oxd-text type=\"subtitle-2\" class=\"orangehrm-leave-period\">\n                  {{ endDay }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n\n            <oxd-grid-item v-if=\"leavePeriod.currentPeriod\">\n              <oxd-input-group :label=\"$t('leave.current_leave_period')\">\n                <oxd-text type=\"subtitle-2\" class=\"orangehrm-leave-period\">\n                  {{ leavePeriod.currentPeriod }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {reloadPage} from '@ohrm/core/util/helper/navigation';\nimport {required} from '@/core/util/validation/rules';\nimport {addDays, formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\n\nconst leavePeriodModel = {\n  startMonth: null,\n  startDay: null,\n  currentPeriod: null,\n};\n\nexport default {\n  props: {\n    monthDates: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-period',\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    return {\n      http,\n      jsDateFormat,\n      locale,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leavePeriod: {...leavePeriodModel},\n      leavePeriodDefined: true,\n      rules: {\n        startMonth: [required],\n        startDay: [required],\n      },\n    };\n  },\n\n  computed: {\n    months() {\n      return Array(12)\n        .fill('')\n        .map((...[, index]) => {\n          return {\n            id: index + 1,\n            label: this.locale.localize.month(index, {\n              width: 'wide',\n            }),\n          };\n        });\n    },\n    dates() {\n      return (this.monthDates[this.leavePeriod.startMonth?.id] ?? []).map(\n        (day) => {\n          return {\n            id: day,\n            label: String(day).padStart(2, '0'),\n          };\n        },\n      );\n    },\n    endDay() {\n      const month = this.leavePeriod.startMonth?.id;\n      const date = this.leavePeriod.startDay?.id;\n      const year = new Date().getFullYear();\n      if (month && date) {\n        const endDay = addDays(new Date(year, month - 1, date), 364);\n        const isFollowingYear = endDay.getFullYear() > year;\n        return (\n          formatDate(endDay, 'LLLL dd', {locale: this.locale}) +\n          (isFollowingYear ? ` (${this.$t('leave.following_year')})` : '')\n        );\n      }\n      return '-';\n    },\n  },\n\n  watch: {\n    'leavePeriod.startMonth': function () {\n      this.leavePeriod.startDay = this.dates.length > 0 ? this.dates[0] : null;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n      })\n      .then((response) => {\n        const {data, meta} = response.data;\n        this.updateLeavePeriodModel(data);\n        this.defineLeavePeriod(meta);\n        this.resetLeavePeriod();\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            startMonth: this.leavePeriod.startMonth?.id,\n            startDay: this.leavePeriod.startDay?.id,\n          },\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          this.updateLeavePeriodModel(data);\n          this.defineLeavePeriod(meta);\n          this.resetLeavePeriod();\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n          if (!this.leavePeriodDefined) {\n            reloadPage();\n          }\n        });\n    },\n\n    onClickReset() {\n      this.resetLeavePeriod();\n    },\n\n    resetLeavePeriod() {\n      this.leavePeriod.startMonth = leavePeriodModel.startMonth;\n      this.$nextTick(() => {\n        this.leavePeriod.startDay = leavePeriodModel.startDay;\n      });\n    },\n\n    updateLeavePeriodModel(data) {\n      leavePeriodModel.startMonth = this.months.find((m) => {\n        return m.id === data.startMonth;\n      });\n      this.$nextTick(() => {\n        leavePeriodModel.startDay = this.dates.find((d) => {\n          return d.id === data.startDay;\n        });\n      });\n    },\n\n    defineLeavePeriod(meta) {\n      if (meta.leavePeriodDefined === true) {\n        this.leavePeriodDefined = meta.leavePeriodDefined;\n        const startDate = formatDate(\n          parseDate(meta.currentLeavePeriod.startDate),\n          this.jsDateFormat,\n          {locale: this.locale},\n        );\n        const endDate = formatDate(\n          parseDate(meta.currentLeavePeriod.endDate),\n          this.jsDateFormat,\n          {locale: this.locale},\n        );\n        this.leavePeriod.currentPeriod = `${startDate} ${this.$t(\n          'general.to',\n        ).toLowerCase()} ${endDate}`;\n      } else {\n        this.leavePeriodDefined = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-leave-duration {\n  padding: $oxd-input-control-vertical-padding 0rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}