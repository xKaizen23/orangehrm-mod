{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.edit_currency')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.payCurrency.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.payCurrency.name = $event),\n            label: _ctx.$t('general.currency'),\n            required: \"\",\n            readonly: \"\",\n            disabled: \"\"\n          }, null, 8, [\"modelValue\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.payCurrency.minSalary,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.payCurrency.minSalary = $event),\n            label: _ctx.$t('admin.minimum_salary'),\n            rules: $data.rules.minSalary\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.payCurrency.maxSalary,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.payCurrency.maxSalary = $event),\n            label: _ctx.$t('admin.maximum_salary'),\n            rules: $data.rules.maxSalary\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])]);\n}","map":{"version":3,"mappings":";;EAmBOA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;uBAArCC,oBAkDM,OAlDNC,UAkDM,GAjDJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACL,KAAK,EAAC;;sBACvB,MAA+B,mCAA5BM,OAAE;;MAEPH,aAAeI,yBACfJ,aA4CWK;IA5CAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAYe,CAZfT,aAYeU;wBAXb,MAUW,CAVXV,aAUWW;QAVAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAQgB,CARhBG,aAQgBa;4BAPd,MAME,CANFb,aAMEc;wBALSP,iBAAW,CAACQ,IAAI;uEAAhBR,iBAAW,CAACQ,IAAI;YACxBC,KAAK,EAAEb,OAAE;YACVc,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR;;;;;;;QAKRnB,aAiBeU;wBAhBb,MAeW,CAfXV,aAeWW;QAfAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAMgB,CANhBG,aAMgBa;4BALd,MAIE,CAJFb,aAIEc;wBAHSP,iBAAW,CAACa,SAAS;uEAArBb,iBAAW,CAACa,SAAS;YAC7BJ,KAAK,EAAEb,OAAE;YACTkB,KAAK,EAAEd,WAAK,CAACa;;;YAGlBpB,aAMgBa;4BALd,MAIE,CAJFb,aAIEc;wBAHSP,iBAAW,CAACe,SAAS;uEAArBf,iBAAW,CAACe,SAAS;YAC7BN,KAAK,EAAEb,OAAE;YACTkB,KAAK,EAAEd,WAAK,CAACe;;;;;;;QAKtBtB,aAAeI,yBAEfJ,aASmBuB;wBARjB,MAAiB,CAAjBvB,aAAiBwB,2BACjBxB,aAKEyB;QAJAC,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBV,KAAK,EAAEb,OAAE;QACTwB,OAAK,EAAElB;yCAEVT,aAAiB4B","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","label","required","readonly","disabled","minSalary","rules","maxSalary","_component_oxd_form_actions","_component_required_text","_component_oxd_button","type","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\payGrade\\EditPayCurrency.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('admin.edit_currency') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.name\"\n              :label=\"$t('general.currency')\"\n              required\n              readonly\n              disabled\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.minSalary\"\n              :label=\"$t('admin.minimum_salary')\"\n              :rules=\"rules.minSalary\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.maxSalary\"\n              :label=\"$t('admin.maximum_salary')\"\n              :rules=\"rules.maxSalary\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  maxCurrency,\n  digitsOnlyWithTwoDecimalPoints,\n  maxValueShouldBeGreaterThanMinValue,\n  minValueShouldBeLowerThanMaxValue,\n} from '@ohrm/core/util/validation/rules';\n\nconst payCurrencyModel = {\n  currencyId: null,\n  minSalary: '',\n  maxSalary: '',\n};\n\nexport default {\n  name: 'EditPayCurrency',\n  props: {\n    payGradeId: {\n      type: Number,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n  emits: ['close'],\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/pay-grades/${props.payGradeId}/currencies`,\n    );\n    return {http};\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      payCurrency: {...payCurrencyModel},\n      rules: {\n        currencyId: [required],\n        minSalary: [\n          maxCurrency(1000000000),\n          digitsOnlyWithTwoDecimalPoints,\n          minValueShouldBeLowerThanMaxValue(\n            () => this.payCurrency.maxSalary,\n            this.$t('admin.should_be_lower_than_maximum_salary'),\n          ),\n        ],\n        maxSalary: [\n          maxCurrency(1000000000),\n          digitsOnlyWithTwoDecimalPoints,\n          maxValueShouldBeGreaterThanMinValue(\n            () => this.payCurrency.minSalary,\n            this.$t('admin.should_be_higher_than_minimum_salary'),\n          ),\n        ],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.data.id)\n      .then((response) => {\n        const {data} = response.data;\n        this.payCurrency.name = data.currencyType.name;\n        this.payCurrency.minSalary = data.minSalary ? data.minSalary : '0';\n        this.payCurrency.maxSalary = data.maxSalary ? data.maxSalary : '0';\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.data.id, {\n          minSalary: this.payCurrency.minSalary,\n          maxSalary: this.payCurrency.maxSalary,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}