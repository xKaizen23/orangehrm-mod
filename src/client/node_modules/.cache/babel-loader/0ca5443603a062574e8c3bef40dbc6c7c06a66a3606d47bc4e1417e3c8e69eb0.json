{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref, inject } from 'vue';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { viewIcon, editIcon, evaluateIcon, viewLabel, editLabel, evaluateLabel } from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport ReviewStatusDropdown from '@/orangehrmPerformancePlugin/components/ReviewStatusDropdown';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { tableScreenStateKey } from '@ohrm/oxd';\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'performanceReview.dueDate': 'DEFAULT',\n  'performanceReview.statusId': 'ASC',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'reviewerEmployee.lastName': 'DEFAULT'\n};\nexport default {\n  name: 'ReviewSearch',\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'review-status-dropdown': ReviewStatusDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'delete-confirmation-dialog': DeleteConfirmationDialog\n  },\n  props: {\n    fromDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const reviewListDateFormat = date => formatDate(parseDate(date), jsDateFormat, {\n      locale\n    });\n    const statusOpts = [{\n      id: 1,\n      label: $t('performance.inactive')\n    }, {\n      id: 2,\n      label: $t('performance.activated')\n    }, {\n      id: 3,\n      label: $t('performance.in_progress')\n    }, {\n      id: 4,\n      label: $t('performance.completed')\n    }];\n    const reviewListNormalizer = data => {\n      return data.map(item => {\n        const employee = item.employee;\n        const reviewer = item.reviewer?.employee;\n        return {\n          id: item.id,\n          employee: $tEmpName(employee),\n          reviewer: $tEmpName(reviewer),\n          jobTitle: item.jobTitle?.name,\n          reviewPeriod: {\n            reviewPeriodStart: reviewListDateFormat(item.reviewPeriodStart),\n            reviewPeriodEnd: reviewListDateFormat(item.reviewPeriodEnd)\n          },\n          dueDate: reviewListDateFormat(item.dueDate),\n          status: statusOpts.find(el => el.id === item.overallStatus.statusId).label,\n          statusId: item.overallStatus.statusId\n        };\n      });\n    };\n    const defaultFilters = {\n      employee: null,\n      jobTitle: null,\n      status: null,\n      reviewer: null,\n      fromDate: null,\n      toDate: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only')\n      }\n    };\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.fromDate && {\n        fromDate: props.fromDate\n      }),\n      ...(props.toDate && {\n        toDate: props.toDate\n      })\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.employee?.id,\n        jobTitleId: filters.value.jobTitle?.id,\n        statusId: filters.value.status?.id,\n        reviewerEmpNumber: filters.value.reviewer?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/manage/reviews');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: reviewListNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      statusOpts,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'employee',\n        title: this.$t('general.employee'),\n        slot: 'title',\n        sortField: 'employee.lastName',\n        style: {\n          flex: '14%'\n        }\n      }, {\n        name: 'jobTitle',\n        title: this.$t('general.job_title'),\n        sortField: 'jobTitle.jobTitleName',\n        style: {\n          flex: '14%'\n        }\n      }, {\n        name: 'reviewPeriod',\n        title: this.$t('performance.review_period'),\n        sortField: 'performanceReview.reviewPeriodStart',\n        style: {\n          flex: '14%'\n        },\n        cellRenderer: this.reviewPeriodCellRenderer\n      }, {\n        name: 'dueDate',\n        title: this.$t('performance.due_date'),\n        sortField: 'performanceReview.dueDate',\n        style: {\n          flex: '14%'\n        }\n      }, {\n        name: 'reviewer',\n        title: this.$t('performance.reviewer'),\n        sortField: 'reviewerEmployee.lastName',\n        style: {\n          flex: '14%'\n        }\n      }, {\n        name: 'status',\n        title: this.$t('performance.review_status'),\n        sortField: 'performanceReview.statusId',\n        style: {\n          flex: '14%'\n        }\n      }, {\n        name: 'action',\n        slot: 'footer',\n        title: this.$t('general.actions'),\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.actionButtonCellRenderer,\n        style: {\n          flex: '16%'\n        }\n      }],\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n        fromDate: [validDateFormat(this.userDateFormat), startDateShouldBeBeforeEndDate(() => this.filters.toDate, this.$t('general.from_date_should_be_before_to_date'), {\n          allowSameDate: true\n        })],\n        toDate: [validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.filters.fromDate, this.$t('general.to_date_should_be_after_from_date'), {\n          allowSameDate: true\n        })]\n      }\n    };\n  },\n  methods: {\n    actionButtonCellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n      cellConfig.delete = {\n        onClick: this.onClickDelete,\n        component: 'oxd-icon-button',\n        props: {\n          name: 'trash'\n        }\n      };\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.statusId === 4) {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else if (row.statusId === 1) {\n          cellConfig.edit = editIcon;\n          cellConfig.edit.props.title = this.$t('general.edit');\n          cellConfig.edit.onClick = this.onClickEdit;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.statusId === 4) {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else if (row.statusId === 1) {\n          cellConfig.edit = editLabel;\n          cellConfig.edit.props.label = this.$t('general.edit');\n          cellConfig.edit.onClick = this.onClickEdit;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd\n        }\n      };\n    },\n    onClickEdit(item) {\n      navigate('/performance/saveReview/{id}', {\n        id: item.id\n      });\n    },\n    onClickAdd() {\n      navigate('/performance/saveReview');\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluateByAdmin/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","inject","navigate","APIService","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","shouldNotExceedCharLength","viewIcon","editIcon","evaluateIcon","viewLabel","editLabel","evaluateLabel","formatDate","parseDate","useSort","usePaginate","usei18n","useLocale","useDateFormat","EmployeeAutocomplete","JobtitleDropdown","DeleteConfirmationDialog","ReviewStatusDropdown","IncludeEmployeeDropdown","ReviewPeriodCell","useEmployeeNameTranslate","tableScreenStateKey","defaultSortOrder","name","components","props","fromDate","type","String","required","default","toDate","setup","$t","jsDateFormat","userDateFormat","locale","$tEmpName","reviewListDateFormat","date","statusOpts","id","label","reviewListNormalizer","data","map","item","employee","reviewer","jobTitle","reviewPeriod","reviewPeriodStart","reviewPeriodEnd","dueDate","status","find","el","overallStatus","statusId","defaultFilters","includeEmployees","param","filters","sortDefinition","sortField","sortOrder","onSort","serializedFilters","value","empNumber","jobTitleId","reviewerEmpNumber","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","headers","title","slot","style","flex","cellRenderer","reviewPeriodCellRenderer","cellType","actionButtonCellRenderer","checkedItems","rules","allowSameDate","methods","row","cellConfig","screenState","delete","onClick","onClickDelete","component","screenType","view","onClickEvaluate","edit","onClickEdit","evaluate","header","args","cellData","onClickAdd","onClickDeleteSelected","ids","forEach","index","push","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess","resetDataTable","filterItems"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\ReviewSearch.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter\n      :filter-title=\"$t('performance.manage_performance_reviews')\"\n    >\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"resetDataTable\">\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: filters.includeEmployees.param,\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <jobtitle-dropdown v-model=\"filters.jobTitle\" />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <review-status-dropdown\n              v-model=\"filters.status\"\n              :options=\"statusOpts\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <include-employee-dropdown v-model=\"filters.includeEmployees\" />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <!-- All reviewers are searchable regardless of include employees param -->\n            <employee-autocomplete\n              v-model=\"filters.reviewer\"\n              :label=\"$t('performance.reviewer')\"\n              :params=\"{\n                includeEmployees: 'currentAndPast',\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.fromDate\"\n              :rules=\"rules.fromDate\"\n              :label=\"$t('general.from_date')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.toDate\"\n              :rules=\"rules.toDate\"\n              :label=\"$t('general.to_date')\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation-dialog ref=\"deleteDialog\"></delete-confirmation-dialog>\n  </div>\n</template>\n\n<script>\nimport {computed, ref, inject} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {\n  viewIcon,\n  editIcon,\n  evaluateIcon,\n  viewLabel,\n  editLabel,\n  evaluateLabel,\n} from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport ReviewStatusDropdown from '@/orangehrmPerformancePlugin/components/ReviewStatusDropdown';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {tableScreenStateKey} from '@ohrm/oxd';\n\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'performanceReview.dueDate': 'DEFAULT',\n  'performanceReview.statusId': 'ASC',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'reviewerEmployee.lastName': 'DEFAULT',\n};\n\nexport default {\n  name: 'ReviewSearch',\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'review-status-dropdown': ReviewStatusDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'delete-confirmation-dialog': DeleteConfirmationDialog,\n  },\n  props: {\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props) {\n    const {$t} = usei18n();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const reviewListDateFormat = (date) =>\n      formatDate(parseDate(date), jsDateFormat, {locale});\n\n    const statusOpts = [\n      {id: 1, label: $t('performance.inactive')},\n      {id: 2, label: $t('performance.activated')},\n      {id: 3, label: $t('performance.in_progress')},\n      {id: 4, label: $t('performance.completed')},\n    ];\n\n    const reviewListNormalizer = (data) => {\n      return data.map((item) => {\n        const employee = item.employee;\n        const reviewer = item.reviewer?.employee;\n        return {\n          id: item.id,\n          employee: $tEmpName(employee),\n          reviewer: $tEmpName(reviewer),\n          jobTitle: item.jobTitle?.name,\n          reviewPeriod: {\n            reviewPeriodStart: reviewListDateFormat(item.reviewPeriodStart),\n            reviewPeriodEnd: reviewListDateFormat(item.reviewPeriodEnd),\n          },\n          dueDate: reviewListDateFormat(item.dueDate),\n          status: statusOpts.find((el) => el.id === item.overallStatus.statusId)\n            .label,\n          statusId: item.overallStatus.statusId,\n        };\n      });\n    };\n\n    const defaultFilters = {\n      employee: null,\n      jobTitle: null,\n      status: null,\n      reviewer: null,\n      fromDate: null,\n      toDate: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    };\n\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.fromDate && {fromDate: props.fromDate}),\n      ...(props.toDate && {toDate: props.toDate}),\n    });\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.employee?.id,\n        jobTitleId: filters.value.jobTitle?.id,\n        statusId: filters.value.status?.id,\n        reviewerEmpNumber: filters.value.reviewer?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/manage/reviews',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: reviewListNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      statusOpts,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'employee',\n          title: this.$t('general.employee'),\n          slot: 'title',\n          sortField: 'employee.lastName',\n          style: {flex: '14%'},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          sortField: 'jobTitle.jobTitleName',\n          style: {flex: '14%'},\n        },\n        {\n          name: 'reviewPeriod',\n          title: this.$t('performance.review_period'),\n          sortField: 'performanceReview.reviewPeriodStart',\n          style: {flex: '14%'},\n          cellRenderer: this.reviewPeriodCellRenderer,\n        },\n        {\n          name: 'dueDate',\n          title: this.$t('performance.due_date'),\n          sortField: 'performanceReview.dueDate',\n          style: {flex: '14%'},\n        },\n        {\n          name: 'reviewer',\n          title: this.$t('performance.reviewer'),\n          sortField: 'reviewerEmployee.lastName',\n          style: {flex: '14%'},\n        },\n        {\n          name: 'status',\n          title: this.$t('performance.review_status'),\n          sortField: 'performanceReview.statusId',\n          style: {flex: '14%'},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.actionButtonCellRenderer,\n          style: {flex: '16%'},\n        },\n      ],\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n        fromDate: [\n          validDateFormat(this.userDateFormat),\n          startDateShouldBeBeforeEndDate(\n            () => this.filters.toDate,\n            this.$t('general.from_date_should_be_before_to_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        toDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.filters.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n      },\n    };\n  },\n  methods: {\n    actionButtonCellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n\n      cellConfig.delete = {\n        onClick: this.onClickDelete,\n        component: 'oxd-icon-button',\n        props: {\n          name: 'trash',\n        },\n      };\n\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.statusId === 4) {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else if (row.statusId === 1) {\n          cellConfig.edit = editIcon;\n          cellConfig.edit.props.title = this.$t('general.edit');\n          cellConfig.edit.onClick = this.onClickEdit;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.statusId === 4) {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else if (row.statusId === 1) {\n          cellConfig.edit = editLabel;\n          cellConfig.edit.props.label = this.$t('general.edit');\n          cellConfig.edit.onClick = this.onClickEdit;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd,\n        },\n      };\n    },\n    onClickEdit(item) {\n      navigate('/performance/saveReview/{id}', {id: item.id});\n    },\n    onClickAdd() {\n      navigate('/performance/saveReview');\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluateByAdmin/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}