{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_buzz_post_input = _resolveComponent(\"oxd-buzz-post-input\");\n  const _component_photo_input = _resolveComponent(\"photo-input\");\n  const _component_post_modal = _resolveComponent(\"post-modal\");\n  return _openBlock(), _createBlock(_component_post_modal, {\n    loading: _ctx.isLoading,\n    disabled: $setup.isDisabled,\n    title: _ctx.$t('buzz.share_photos'),\n    onSubmit: $setup.onSubmit,\n    onClose: _cache[2] || (_cache[2] = $event => _ctx.$emit('close', false))\n  }, {\n    header: _withCtx(() => [_createVNode(_component_oxd_buzz_post_input, {\n      modelValue: _ctx.post.text,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.post.text = $event),\n      rules: $setup.rules.text,\n      placeholder: _ctx.$t('buzz.post_placeholder')\n    }, null, 8, [\"modelValue\", \"rules\", \"placeholder\"])]),\n    default: _withCtx(() => [_createVNode(_component_photo_input, {\n      modelValue: _ctx.post.photos,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.post.photos = $event)\n    }, null, 8, [\"modelValue\"])]),\n    _: 1\n  }, 8, [\"loading\", \"disabled\", \"title\", \"onSubmit\"]);\n}","map":{"version":3,"mappings":";;;;;uBAoBEA,aAgBaC;IAfVC,OAAO,EAAEC,cAAS;IAClBC,QAAQ,EAAEC,iBAAU;IACpBC,KAAK,EAAEH,OAAE;IACTI,QAAM,EAAEF,eAAQ;IAChBG,OAAK,sCAAEL,UAAK;;IAEFM,MAAM,WACf,MAKsB,CALtBC,aAKsBC;kBAJXR,SAAI,CAACS,IAAI;iEAATT,SAAI,CAACS,IAAI;MACjBC,KAAK,EAAER,YAAK,CAACO,IAAI;MACjBE,WAAW,EAAEX,OAAE;;sBAIpB,MAAqC,CAArCO,aAAqCK;kBAAfZ,SAAI,CAACa,MAAM;iEAAXb,SAAI,CAACa,MAAM","names":["_createBlock","_component_post_modal","loading","_ctx","disabled","$setup","title","onSubmit","onClose","header","_createVNode","_component_oxd_buzz_post_input","text","rules","placeholder","_component_photo_input","photos"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\SharePhotoModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <post-modal\n    :loading=\"isLoading\"\n    :disabled=\"isDisabled\"\n    :title=\"$t('buzz.share_photos')\"\n    @submit=\"onSubmit\"\n    @close=\"$emit('close', false)\"\n  >\n    <template #header>\n      <oxd-buzz-post-input\n        v-model=\"post.text\"\n        :rules=\"rules.text\"\n        :placeholder=\"$t('buzz.post_placeholder')\"\n      >\n      </oxd-buzz-post-input>\n    </template>\n    <photo-input v-model=\"post.photos\" />\n  </post-modal>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoInput from '@/orangehrmBuzzPlugin/components/PhotoInput';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport {OxdBuzzPostInput} from '@ohrm/oxd';\n\nexport default {\n  name: 'SharePhotoModal',\n\n  components: {\n    'post-modal': PostModal,\n    'photo-input': PhotoInput,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n  },\n\n  props: {\n    text: {\n      type: String,\n      default: null,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props, context) {\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)],\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n\n    const state = reactive({\n      post: {\n        text: props.text || null,\n        photos: [],\n      },\n      isLoading: false,\n    });\n\n    const onSubmit = () => {\n      state.isLoading = true;\n      http\n        .create({\n          type: 'photo',\n          text: state.post.text,\n          photos: state.post.photos,\n        })\n        .then(() => context.emit('close', true));\n    };\n\n    const isDisabled = computed(() => state.post.photos.length === 0);\n\n    return {\n      rules,\n      onSubmit,\n      isDisabled,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}