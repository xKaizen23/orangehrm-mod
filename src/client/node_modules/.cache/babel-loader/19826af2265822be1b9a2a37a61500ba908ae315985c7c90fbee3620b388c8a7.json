{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nexport default {\n  name: 'ClaimActionButtons',\n  props: {\n    requestId: {\n      type: Number,\n      required: true\n    },\n    allowedActions: {\n      type: Array,\n      required: true\n    },\n    isAssigned: {\n      default: false,\n      type: Boolean,\n      required: false\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/claim/requests/${props.requestId}/action`);\n    return {\n      http\n    };\n  },\n  computed: {\n    isCancelAllowed() {\n      return this.allowedActions.includes('Cancel');\n    },\n    isSubmitAllowed() {\n      return this.allowedActions.includes('Submit');\n    },\n    isApproveAllowed() {\n      return this.allowedActions.includes('Approve');\n    },\n    isRejectAllowed() {\n      return this.allowedActions.includes('Reject');\n    },\n    isPayAllowed() {\n      return this.allowedActions.includes('Pay');\n    }\n  },\n  methods: {\n    onClaimAction(action) {\n      this.http.request({\n        method: 'PUT',\n        data: {\n          action: action\n        }\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.isAssigned ? navigate(`/claim/assignClaim/id/${this.requestId}`) : navigate(`/claim/submitClaim/id/${this.requestId}`);\n      });\n    },\n    onBack() {\n      this.isAssigned ? navigate('/claim/viewAssignClaim') : navigate('/claim/viewClaim');\n    }\n  }\n};","map":{"version":3,"mappings":"AAuEA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,SAAQC,QAAQ,QAAO,mCAAmC;AAE1D,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,cAAc,EAAE;MACdH,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ,CAAC;IACDG,UAAU,EAAE;MACVC,OAAO,EAAE,KAAK;MACdN,IAAI,EAAEO,OAAO;MACbL,QAAQ,EAAE;IACZ;EACF,CAAC;EACDM,KAAK,CAACV,KAAK,EAAE;IACX,MAAMW,IAAG,GAAI,IAAId,UAAU,CACzBe,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,0BAAyBd,KAAK,CAACC,SAAU,SAAQ,CACnD;IACD,OAAO;MACLU;IACF,CAAC;EACH,CAAC;EACDI,QAAQ,EAAE;IACRC,eAAe,GAAG;MAChB,OAAO,IAAI,CAACX,cAAc,CAACY,QAAQ,CAAC,QAAQ,CAAC;IAC/C,CAAC;IACDC,eAAe,GAAG;MAChB,OAAO,IAAI,CAACb,cAAc,CAACY,QAAQ,CAAC,QAAQ,CAAC;IAC/C,CAAC;IACDE,gBAAgB,GAAG;MACjB,OAAO,IAAI,CAACd,cAAc,CAACY,QAAQ,CAAC,SAAS,CAAC;IAChD,CAAC;IACDG,eAAe,GAAG;MAChB,OAAO,IAAI,CAACf,cAAc,CAACY,QAAQ,CAAC,QAAQ,CAAC;IAC/C,CAAC;IACDI,YAAY,GAAG;MACb,OAAO,IAAI,CAAChB,cAAc,CAACY,QAAQ,CAAC,KAAK,CAAC;IAC5C;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,aAAa,CAACC,MAAM,EAAE;MACpB,IAAI,CAACb,IAAG,CACLc,OAAO,CAAC;QACPC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;UACJH,MAAM,EAAEA;QACV;MACF,CAAC,EACAI,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAF,IAAI,CAAC,MAAM;QACV,IAAI,CAACrB,UAAS,GACVT,QAAQ,CAAE,yBAAwB,IAAI,CAACG,SAAU,EAAC,IAClDH,QAAQ,CAAE,yBAAwB,IAAI,CAACG,SAAU,EAAC,CAAC;MACzD,CAAC,CAAC;IACN,CAAC;IACD8B,MAAM,GAAG;MACP,IAAI,CAACxB,UAAS,GACVT,QAAQ,CAAC,wBAAwB,IACjCA,QAAQ,CAAC,kBAAkB,CAAC;IAClC;EACF;AACF,CAAC","names":["APIService","navigate","name","props","requestId","type","Number","required","allowedActions","Array","isAssigned","default","Boolean","setup","http","window","appGlobal","baseUrl","computed","isCancelAllowed","includes","isSubmitAllowed","isApproveAllowed","isRejectAllowed","isPayAllowed","methods","onClaimAction","action","request","method","data","then","$toast","saveSuccess","onBack"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\ClaimActionButtons.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div\n    :class=\"{\n      'orangehrm-action-button-container': allowedActions.length < 2,\n      'orangehrm-action-buttons-container': allowedActions.length > 1,\n    }\"\n  >\n    <oxd-button\n      display-type=\"ghost\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('general.back')\"\n      @click=\"onBack\"\n    />\n    <oxd-button\n      v-if=\"isCancelAllowed\"\n      display-type=\"danger\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('general.cancel')\"\n      @click=\"onClaimAction('CANCEL')\"\n    />\n    <oxd-button\n      v-if=\"isRejectAllowed\"\n      display-type=\"danger\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('general.reject')\"\n      @click=\"onClaimAction('REJECT')\"\n    />\n    <oxd-button\n      v-if=\"isApproveAllowed\"\n      display-type=\"secondary\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('general.approve')\"\n      @click=\"onClaimAction('APPROVE')\"\n    />\n    <oxd-button\n      v-if=\"isPayAllowed\"\n      display-type=\"secondary\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('claim.pay')\"\n      @click=\"onClaimAction('PAY')\"\n    />\n    <oxd-button\n      v-if=\"isSubmitAllowed\"\n      display-type=\"secondary\"\n      class=\"orangehrm-sm-button\"\n      :label=\"$t('general.submit')\"\n      @click=\"onClaimAction('SUBMIT')\"\n    />\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\n\nexport default {\n  name: 'ClaimActionButtons',\n  props: {\n    requestId: {\n      type: Number,\n      required: true,\n    },\n    allowedActions: {\n      type: Array,\n      required: true,\n    },\n    isAssigned: {\n      default: false,\n      type: Boolean,\n      required: false,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/action`,\n    );\n    return {\n      http,\n    };\n  },\n  computed: {\n    isCancelAllowed() {\n      return this.allowedActions.includes('Cancel');\n    },\n    isSubmitAllowed() {\n      return this.allowedActions.includes('Submit');\n    },\n    isApproveAllowed() {\n      return this.allowedActions.includes('Approve');\n    },\n    isRejectAllowed() {\n      return this.allowedActions.includes('Reject');\n    },\n    isPayAllowed() {\n      return this.allowedActions.includes('Pay');\n    },\n  },\n  methods: {\n    onClaimAction(action) {\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            action: action,\n          },\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.isAssigned\n            ? navigate(`/claim/assignClaim/id/${this.requestId}`)\n            : navigate(`/claim/submitClaim/id/${this.requestId}`);\n        });\n    },\n    onBack() {\n      this.isAssigned\n        ? navigate('/claim/viewAssignClaim')\n        : navigate('/claim/viewClaim');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.orangehrm-action-buttons-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n  padding: 25px;\n  @media screen and (max-width: 600px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n}\n.orangehrm-action-button-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n  padding: 25px;\n}\n.orangehrm-sm-button {\n  margin-left: 1rem;\n  @media screen and (max-width: 600px) {\n    margin-bottom: 1rem;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}