{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('attendance.employee_attendance_records')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.onClickView\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.employee,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n              rules: $setup.rules.employee,\n              params: {\n                includeEmployees: 'currentAndPast'\n              }\n            }, null, 8, [\"modelValue\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.date,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.date = $event),\n              rules: $setup.rules.date,\n              years: $data.yearArray,\n              label: _ctx.$t('general.date'),\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"rules\", \"years\", \"label\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.view'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [$props.isEditable && $setup.filters.employee ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_oxd_button, {\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    label: _ctx.$t('general.add'),\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_text, {\n    class: \"orangehrm-header-total\",\n    tag: \"span\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.total_duration')) + \": \" + _toDisplayString($setup.totalDuration), 1)]),\n    _: 1\n  })])) : _createCommentVNode(\"\", true), _createVNode(_component_table_header, {\n    total: $setup.total,\n    loading: $setup.isLoading,\n    \"show-divider\": $props.isEditable,\n    selected: $data.checkedItems.length,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"total\", \"loading\", \"show-divider\", \"selected\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[2] || (_cache[2] = $event => $data.checkedItems = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: $props.isEditable,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"selected\", \"headers\", \"items\", \"selectable\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[3] || (_cache[3] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)]), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)])], 64);\n}","map":{"version":3,"mappings":";gCA2DEA,oBAAM;;EACDC,KAAK,EAAC;AAA2B;;;EAGlCA,KAAK,EAAC;;;EAmBHA,KAAK,EAAC;AAAqB;;EAW3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;;;;6DAzEzCC,aAsCmBC;IArChB,cAAY,EAAEC,OAAE;;sBAEjB,MAkCW,CAlCXF,aAkCWG;MAlCAC,aAAY,EAAEC;IAAW;wBAClC,MAqBe,CArBfL,aAqBeM;0BApBb,MAmBW,CAnBXN,aAmBWO;UAnBAC,IAAI,EAAE,CAAC;UAAET,KAAK,EAAC;;4BACxB,MAQgB,CARhBC,aAQgBS;8BAPd,MAME,CANFT,aAMEU;0BALSC,cAAO,CAACC,QAAQ;yEAAhBD,cAAO,CAACC,QAAQ;cACxBC,KAAK,EAAEF,YAAK,CAACC,QAAQ;cACrBE,MAAM,EAAE;;;;;cAKbd,aAQgBS;8BAPd,MAME,CANFT,aAMEe;0BALSJ,cAAO,CAACK,IAAI;yEAAZL,cAAO,CAACK,IAAI;cACpBH,KAAK,EAAEF,YAAK,CAACK,IAAI;cACjBC,KAAK,EAAEC,eAAS;cAChBC,KAAK,EAAEjB,OAAE;cACVkB,QAAQ,EAAR;;;;;;;UAMRpB,aAAeqB,yBAEfrB,aAOmBsB;0BANjB,MAAiB,CAAjBtB,aAAiBuB,2BACjBvB,aAIEwB;UAHA,cAAY,EAAC,WAAW;UACvBL,KAAK,EAAEjB,OAAE;UACVuB,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACN5B,oBAyCM,OAzCN6B,UAyCM,GAvCIC,iBAAU,IAAIjB,cAAO,CAACC,QAAQ,kBADtCiB,oBAaM,OAbNC,UAaM,GATJ9B,aAKEwB;IAJA,WAAS,EAAC,MAAM;IAChB,cAAY,EAAC,WAAW;IACvBL,KAAK,EAAEjB,OAAE;IACT6B,OAAK,EAAE1B;qCAEVL,aAEWgC;IAFDjC,KAAK,EAAC,wBAAwB;IAACkC,GAAG,EAAC;;sBAC3C,MAA+B,mCAA5B/B,OAAE,2BAA0B,IAAE,oBAAGS,oBAAa;;yCAGrDX,aAMgBkC;IALbC,KAAK,EAAExB,YAAK;IACZyB,OAAO,EAAEzB,gBAAS;IAClB,cAAY,EAAEiB,iBAAU;IACxBS,QAAQ,EAAEnB,kBAAY,CAACoB,MAAM;IAC7BC,QAAM,EAAElC;6EAEXP,oBAUM,OAVN0C,UAUM,GATJxC,aAQEyC;IAPQJ,QAAQ,EAAEnB,kBAAY;6DAAZA,kBAAY;IAC7BwB,OAAO,EAAExB,aAAO;IAChByB,KAAK,EAAEhC,YAAK,EAAEiC,IAAI;IAClBC,UAAU,EAAEjB,iBAAU;IACtBkB,SAAS,EAAE,KAAK;IAChBV,OAAO,EAAEzB,gBAAS;IACnB,eAAa,EAAC;4EAGlBb,oBAMM,OANNiD,UAMM,GAJIpC,oBAAa,kBADrBqC,aAIEC;;IAFQC,OAAO,EAAEvC,kBAAW;4DAAXA,kBAAW;IAC3B2B,MAAM,EAAE3B;yEAGbX,aAA8DmD;IAAzCC,GAAG,EAAC;EAAc","names":["_createElementVNode","class","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","employee","rules","params","_component_date_input","date","years","$data","label","required","_component_oxd_divider","_component_oxd_form_actions","_component_required_text","_component_oxd_button","type","_hoisted_1","_hoisted_2","$props","_createElementBlock","_hoisted_3","onClick","_component_oxd_text","tag","_component_table_header","total","loading","selected","length","onDelete","_hoisted_4","_component_oxd_card_table","headers","items","data","selectable","clickable","_hoisted_5","_createBlock","_component_oxd_pagination","current","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\ViewEmployeeAttendanceDetailed.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-table-filter\n    :filter-title=\"$t('attendance.employee_attendance_records')\"\n  >\n    <oxd-form @submit-valid=\"onClickView\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: 'currentAndPast',\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"filters.date\"\n              :rules=\"rules.date\"\n              :years=\"yearArray\"\n              :label=\"$t('general.date')\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.view')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-table-filter>\n  <br />\n  <div class=\"orangehrm-paper-container\">\n    <div\n      v-if=\"isEditable && filters.employee\"\n      class=\"orangehrm-header-container\"\n    >\n      <oxd-button\n        icon-name=\"plus\"\n        display-type=\"secondary\"\n        :label=\"$t('general.add')\"\n        @click=\"onClickAdd\"\n      />\n      <oxd-text class=\"orangehrm-header-total\" tag=\"span\">\n        {{ $t('time.total_duration') }}: {{ totalDuration }}\n      </oxd-text>\n    </div>\n    <table-header\n      :total=\"total\"\n      :loading=\"isLoading\"\n      :show-divider=\"isEditable\"\n      :selected=\"checkedItems.length\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"isEditable\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {\n  freshDate,\n  parseDate,\n  parseTime,\n  formatTime,\n  formatDate,\n  getStandardTimezone,\n} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {yearRange} from '@/core/util/helper/year-range';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport RecordCell from '@/orangehrmAttendancePlugin/components/RecordCell.vue';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    date: {\n      type: String,\n      default: null,\n    },\n    employee: {\n      type: Object,\n      required: true,\n    },\n    isEditable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      date: props.date ? props.date : formatDate(freshDate(), 'yyyy-MM-dd'),\n      employee: props.employee\n        ? {\n            id: props.employee.empNumber,\n            label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n            isPastEmployee: props.employee.terminationId,\n          }\n        : null,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        date: filters.value.date,\n        empNumber: filters.value.employee?.id,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/attendance/employees/${props.employee.empNumber}/records`,\n    );\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat, timeFormat, jsTimeFormat} =\n      useDateFormat();\n\n    const rules = {\n      date: [required, validDateFormat(userDateFormat)],\n      employee: [shouldNotExceedCharLength(100), validSelection],\n    };\n\n    const attendanceRecordNormalizer = (data) => {\n      return data.map((item) => {\n        const {punchIn, punchOut} = item;\n        const punchInDate = formatDate(\n          parseDate(punchIn?.userDate),\n          jsDateFormat,\n          {locale},\n        );\n        const punchInTime = formatTime(\n          parseTime(punchIn?.userTime, timeFormat),\n          jsTimeFormat,\n        );\n        const punchOutDate = formatDate(\n          parseDate(punchOut?.userDate),\n          jsDateFormat,\n          {locale},\n        );\n        const punchOutTime = formatTime(\n          parseTime(punchOut?.userTime, timeFormat),\n          jsTimeFormat,\n        );\n\n        return {\n          id: item.id,\n          punchIn: {\n            ...punchIn,\n            userTime: punchInTime,\n            userDate: punchInDate,\n          },\n          punchOut: {\n            ...punchOut,\n            userTime: punchOutTime,\n            userDate: punchOutDate,\n          },\n          duration: item.duration,\n          punchInNote: punchIn.note,\n          punchOutNote: punchOut.note,\n        };\n      });\n    };\n\n    const {\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: attendanceRecordNormalizer,\n      prefetch: true,\n    });\n\n    const totalDuration = computed(() => {\n      const meta = response.value?.meta;\n      return meta ? meta.sum.label : '0.00';\n    });\n\n    return {\n      http,\n      rules,\n      total,\n      pages,\n      filters,\n      pageSize,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n      items: response,\n      totalDuration,\n    };\n  },\n\n  data() {\n    return {\n      yearArray: [...yearRange()],\n      headers: [\n        {\n          name: 'punchIn',\n          slot: 'title',\n          title: this.$t('attendance.punch_in'),\n          style: {flex: 1},\n          cellRenderer: this.cellRenderer,\n        },\n        {\n          name: 'punchInNote',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('attendance.punch_in_note'),\n          style: {flex: 1},\n        },\n        {\n          name: 'punchOut',\n          slot: 'title',\n          title: this.$t('attendance.punch_out'),\n          style: {flex: 1},\n          cellRenderer: this.cellRenderer,\n        },\n        {\n          name: 'punchOutNote',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('attendance.punch_out_note'),\n          style: {flex: 1},\n        },\n        {\n          name: 'duration',\n          slot: 'title',\n          title: this.$t('attendance.duration_hours'),\n          style: {flex: 1},\n        },\n        {\n          ...(this.isEditable && {\n            name: 'actions',\n            title: this.$t('general.actions'),\n            slot: 'action',\n            style: {flex: 1},\n            cellType: 'oxd-table-cell-actions',\n            cellConfig: {\n              delete: {\n                onClick: this.onClickDelete,\n                component: 'oxd-icon-button',\n                props: {\n                  name: 'trash',\n                },\n              },\n              edit: {\n                onClick: this.onClickEdit,\n                props: {\n                  name: 'pencil-fill',\n                },\n              },\n            },\n          }),\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    cellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: RecordCell,\n        props: {\n          date: cellData.userDate,\n          time: cellData.userTime,\n          offset: getStandardTimezone(cellData.offset),\n        },\n      };\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickView() {\n      return navigate('/attendance/viewAttendanceRecord', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date,\n      });\n    },\n    onClickAdd() {\n      return navigate('/attendance/proxyPunchInPunchOut', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date,\n      });\n    },\n    onClickEdit(item) {\n      return navigate('/attendance/editEmployeeAttendanceRecord/{id}', {\n        id: item.id,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}