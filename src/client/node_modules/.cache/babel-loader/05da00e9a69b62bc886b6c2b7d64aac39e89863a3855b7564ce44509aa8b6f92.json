{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0d2237c8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-paper-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_timezone_dropdown = _resolveComponent(\"timezone-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('attendance.edit_attendance_records')), 1)]),\n    _: 1\n  }), $options.totalDuration ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    tag: \"span\",\n    class: \"orangehrm-header-total\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.total_duration')) + \": \" + _toDisplayString($options.totalDuration), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)]), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid no-gap\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('attendance.punch_in')), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, {\n            class: \"--offset-row-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $data.attendance.punchIn.userDate,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.attendance.punchIn.userDate = $event),\n              label: _ctx.$t('general.date'),\n              rules: $data.rules.punchIn.userDate,\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, {\n            class: \"--offset-row-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attendance.punchIn.userTime,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.attendance.punchIn.userTime = $event),\n              label: _ctx.$t('general.time'),\n              rules: $data.rules.punchIn.userTime,\n              type: \"time\",\n              placeholder: _ctx.$t('attendance.hh_mm'),\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"placeholder\"])]),\n            _: 1\n          }), $props.isTimezoneEditable ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n            key: 0,\n            class: \"--offset-row-3 --span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_timezone_dropdown, {\n              modelValue: $data.attendance.punchIn.timezone,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.attendance.punchIn.timezone = $event),\n              required: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_grid_item, {\n            class: \"--span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attendance.punchIn.note,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.attendance.punchIn.note = $event),\n              rules: $data.rules.punchIn.note,\n              label: _ctx.$t('general.note'),\n              placeholder: _ctx.$t('general.type_here'),\n              type: \"textarea\"\n            }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), $data.attendance.punchOut ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n        key: 0,\n        class: \"orangehrm-punch-out-record\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('attendance.punch_out')), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, {\n            class: \"--offset-row-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $data.attendance.punchOut.userDate,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.attendance.punchOut.userDate = $event),\n              label: _ctx.$t('general.date'),\n              rules: $data.rules.punchOut.userDate,\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, {\n            class: \"--offset-row-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attendance.punchOut.userTime,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.attendance.punchOut.userTime = $event),\n              label: _ctx.$t('general.time'),\n              rules: $data.rules.punchOut.userTime,\n              type: \"time\",\n              placeholder: _ctx.$t('attendance.hh_mm'),\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"placeholder\"])]),\n            _: 1\n          }), $props.isTimezoneEditable ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n            key: 0,\n            class: \"--offset-row-3 --span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_timezone_dropdown, {\n              modelValue: $data.attendance.punchOut.timezone,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.attendance.punchOut.timezone = $event),\n              required: \"\"\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_grid_item, {\n            class: \"--span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attendance.punchOut.note,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.attendance.punchOut.note = $event),\n              rules: $data.rules.punchOut.note,\n              label: _ctx.$t('general.note'),\n              placeholder: _ctx.$t('general.type_here'),\n              type: \"textarea\"\n            }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })) : _createCommentVNode(\"\", true)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_text","tag","_ctx","$options","_createBlock","_component_oxd_divider","_hoisted_4","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_grid","cols","_component_oxd_grid_item","type","_component_date_input","punchIn","userDate","label","rules","required","_component_oxd_input_field","userTime","placeholder","$props","_component_timezone_dropdown","timezone","note","punchOut","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\EditAttendance.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <div class=\"orangehrm-header\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('attendance.edit_attendance_records') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"totalDuration\"\n          tag=\"span\"\n          class=\"orangehrm-header-total\"\n        >\n          {{ $t('time.total_duration') }}: {{ totalDuration }}\n        </oxd-text>\n      </div>\n      <oxd-divider />\n\n      <div class=\"orangehrm-paper-container\">\n        <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid no-gap\">\n            <oxd-grid-item>\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <oxd-text type=\"subtitle-2\">\n                    {{ $t('attendance.punch_in') }}\n                  </oxd-text>\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <date-input\n                    v-model=\"attendance.punchIn.userDate\"\n                    :label=\"$t('general.date')\"\n                    :rules=\"rules.punchIn.userDate\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchIn.userTime\"\n                    :label=\"$t('general.time')\"\n                    :rules=\"rules.punchIn.userTime\"\n                    type=\"time\"\n                    :placeholder=\"$t('attendance.hh_mm')\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item\n                  v-if=\"isTimezoneEditable\"\n                  class=\"--offset-row-3 --span-column-2\"\n                >\n                  <timezone-dropdown\n                    v-model=\"attendance.punchIn.timezone\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--span-column-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchIn.note\"\n                    :rules=\"rules.punchIn.note\"\n                    :label=\"$t('general.note')\"\n                    :placeholder=\"$t('general.type_here')\"\n                    type=\"textarea\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n\n            <oxd-grid-item\n              v-if=\"attendance.punchOut\"\n              class=\"orangehrm-punch-out-record\"\n            >\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <oxd-text type=\"subtitle-2\">\n                    {{ $t('attendance.punch_out') }}\n                  </oxd-text>\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <date-input\n                    v-model=\"attendance.punchOut.userDate\"\n                    :label=\"$t('general.date')\"\n                    :rules=\"rules.punchOut.userDate\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchOut.userTime\"\n                    :label=\"$t('general.time')\"\n                    :rules=\"rules.punchOut.userTime\"\n                    type=\"time\"\n                    :placeholder=\"$t('attendance.hh_mm')\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item\n                  v-if=\"isTimezoneEditable\"\n                  class=\"--offset-row-3 --span-column-2\"\n                >\n                  <timezone-dropdown\n                    v-model=\"attendance.punchOut.timezone\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--span-column-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchOut.note\"\n                    :rules=\"rules.punchOut.note\"\n                    :label=\"$t('general.note')\"\n                    :placeholder=\"$t('general.type_here')\"\n                    type=\"textarea\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n          </oxd-grid>\n\n          <oxd-divider />\n          <oxd-form-actions>\n            <required-text />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.cancel')\"\n              @click=\"onCancel\"\n            />\n            <submit-button />\n          </oxd-form-actions>\n        </oxd-form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validDateFormat,\n} from '@/core/util/validation/rules';\nimport {diffInTime, parseDate, secondsTohhmm} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport TimezoneDropdown from '@/orangehrmAttendancePlugin/components/TimezoneDropdown.vue';\n\nconst attendanceRecordModal = {\n  userDate: null,\n  userTime: null,\n  utcDate: null,\n  utcTime: null,\n  note: null,\n  timezone: null,\n  timezoneOffset: null,\n};\n\nexport default {\n  components: {\n    'timezone-dropdown': TimezoneDropdown,\n  },\n  props: {\n    attendanceId: {\n      type: Number,\n      required: true,\n    },\n    isEmployeeEdit: {\n      type: Boolean,\n      default: false,\n    },\n    isTimezoneEditable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/attendance/records`,\n    );\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attendance: {\n        employee: null,\n        punchIn: {...attendanceRecordModal},\n        punchOut: {...attendanceRecordModal},\n      },\n      rules: {\n        punchIn: {\n          userDate: [\n            required,\n            validDateFormat(this.userDateFormat),\n            promiseDebounce(\n              () => this.validateRecord('punch-in-overlaps'),\n              500,\n            ),\n          ],\n          userTime: [\n            required,\n            promiseDebounce(\n              () => this.validateRecord('punch-in-overlaps'),\n              500,\n            ),\n          ],\n          note: [shouldNotExceedCharLength(250)],\n        },\n        punchOut: {\n          userDate: [\n            required,\n            validDateFormat(this.userDateFormat),\n            promiseDebounce(\n              () => this.validateRecord('punch-out-overlaps'),\n              500,\n            ),\n          ],\n          userTime: [\n            required,\n            promiseDebounce(\n              () => this.validateRecord('punch-out-overlaps'),\n              500,\n            ),\n          ],\n          note: [shouldNotExceedCharLength(250)],\n        },\n      },\n    };\n  },\n  computed: {\n    totalDuration() {\n      if (!this.attendance.punchOut?.userDate) return null;\n      if (\n        parseDate(this.attendance.punchIn.userDate) === null ||\n        parseDate(this.attendance.punchOut.userDate) === null\n      ) {\n        return null;\n      }\n\n      const startTime = `${this.attendance.punchIn.userDate} ${this.attendance.punchIn.userTime}`;\n      const punchInTz =\n        this.attendance.punchIn.timezone?._offset ??\n        parseFloat(this.attendance.punchIn.timezoneOffset);\n      const startTimezone =\n        (punchInTz > 0 ? ' +' : ' -') +\n        secondsTohhmm(Math.abs(punchInTz) * 3600);\n\n      const endTime = `${this.attendance.punchOut.userDate} ${this.attendance.punchOut.userTime}`;\n      const punchOutTz =\n        this.attendance.punchOut.timezone?._offset ??\n        parseFloat(this.attendance.punchOut.timezoneOffset);\n      const endTimezone =\n        (punchOutTz > 0 ? ' +' : ' -') +\n        secondsTohhmm(Math.abs(punchOutTz) * 3600);\n\n      // yyyy-MM-dd HH:mm xxx <=> 2022-03-07 14:26 +05:30\n      return parseFloat(\n        diffInTime(\n          startTime + startTimezone,\n          endTime + endTimezone,\n          'yyyy-MM-dd HH:mm xxx',\n        ) / 3600,\n      ).toFixed(2);\n    },\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.attendanceId)\n      .then((response) => {\n        const {data} = response.data;\n        this.attendance.employee = data.employee;\n        this.attendance.punchIn = {\n          ...data.punchIn,\n          timezone: {\n            id: data.punchIn.timezone.name,\n            label: data.punchIn.timezone.label,\n            _offset: data.punchIn.timezoneOffset,\n          },\n        };\n        this.attendance.punchOut = data.punchOut?.userDate\n          ? {\n              ...data.punchOut,\n              timezone: {\n                id: data.punchOut.timezone.name,\n                label: data.punchOut.timezone.label,\n                _offset: data.punchOut.timezoneOffset,\n              },\n            }\n          : null;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onCancel() {\n      if (this.isEmployeeEdit) {\n        navigate('/attendance/viewAttendanceRecord', undefined, {\n          employeeId: this.attendance.employee?.empNumber,\n          date: this.attendance.punchIn?.userDate,\n        });\n      } else {\n        navigate('/attendance/viewMyAttendanceRecord', undefined, {\n          date: this.attendance.punchIn?.userDate,\n        });\n      }\n    },\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        punchInDate: this.attendance.punchIn.userDate,\n        punchInTime: this.attendance.punchIn.userTime,\n        punchInNote: this.attendance.punchIn.note,\n        ...(this.isTimezoneEditable && {\n          punchInOffset: this.attendance.punchIn.timezone\n            ? this.attendance.punchIn.timezone._offset\n            : this.attendance.punchIn.timezoneOffset,\n          punchInTimezoneName: this.attendance.punchIn.timezone\n            ? this.attendance.punchIn.timezone.id\n            : this.attendance.punchIn.timezone.name,\n        }),\n      };\n      if (this.attendance.punchOut) {\n        payload.punchOutDate = this.attendance.punchOut.userDate;\n        payload.punchOutTime = this.attendance.punchOut.userTime;\n        payload.punchOutNote = this.attendance.punchOut.note;\n        if (this.isTimezoneEditable) {\n          payload.punchOutOffset = this.attendance.punchOut.timezone\n            ? this.attendance.punchOut.timezone._offset\n            : this.attendance.punchOut.timezoneOffset;\n          payload.punchOutTimezoneName = this.attendance.punchOut.timezone\n            ? this.attendance.punchOut.timezone.id\n            : this.attendance.punchOut.timezone.name;\n        }\n      }\n      this.http\n        .update(this.attendanceId, payload)\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    validateRecord(apiPath) {\n      if (parseDate(this.attendance.punchIn.userDate) === null) {\n        return true;\n      }\n      if (\n        this.attendance.punchOut &&\n        parseDate(this.attendance.punchOut.userDate) === null\n      ) {\n        return true;\n      }\n      return new Promise((resolve) => {\n        this.http\n          .request({\n            method: 'GET',\n            url: `/api/v2/attendance/records/${apiPath}`,\n            params: {\n              recordId: this.attendanceId,\n              punchInTimezoneOffset: this.attendance.punchIn.timezone\n                ? this.attendance.punchIn.timezone._offset\n                : this.attendance.punchIn.timezoneOffset,\n              punchInDate: this.attendance.punchIn.userDate,\n              punchInTime: this.attendance.punchIn.userTime,\n              punchOutTimezoneOffset: this.attendance.punchOut?.timezone\n                ? this.attendance.punchOut.timezone._offset\n                : this.attendance.punchOut?.timezoneOffset,\n              punchOutDate: this.attendance.punchOut?.userDate,\n              punchOutTime: this.attendance.punchOut?.userTime,\n            },\n            // Prevent triggering response interceptor on 400\n            validateStatus: (status) => {\n              return (status >= 200 && status < 300) || status == 400;\n            },\n          })\n          .then((res) => {\n            const {data, error} = res.data;\n            if (error) {\n              return resolve(error.message);\n            }\n            return data.valid === true\n              ? resolve(true)\n              : resolve(this.$t('attendance.overlapping_records_found'));\n          });\n      });\n    },\n  },\n};\n</script>\n\n<style src=\"./edit-attendance.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}