{"ast":null,"code":"import { diffInTime } from '@ohrm/core/util/helper/datefns';\nimport { required, validTimeFormat, endTimeShouldBeAfterStartTime, startTimeShouldBeBeforeEndTime } from '@/core/util/validation/rules';\nimport TimeRange from '@/orangehrmLeavePlugin/components/TimeRange';\nexport default {\n  name: 'LeaveDurationInput',\n  components: {\n    'time-range': TimeRange\n  },\n  inheritAttrs: false,\n  props: {\n    duration: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    fromTime: {\n      type: String,\n      required: false,\n      default: null\n    },\n    toTime: {\n      type: String,\n      required: false,\n      default: null\n    },\n    partial: {\n      type: Boolean,\n      default: false\n    },\n    workShift: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  emits: ['update:fromTime', 'update:toTime', 'update:duration'],\n  data() {\n    return {\n      rules: {\n        duration: [required],\n        fromTime: [required, validTimeFormat, startTimeShouldBeBeforeEndTime(() => this.toTime, this.$t('general.from_time_should_be_before_to_time'))],\n        toTime: [required, validTimeFormat, endTimeShouldBeAfterStartTime(() => this.fromTime, this.$t('general.to_time_should_be_after_from_time')), value => {\n          if (value) {\n            const workLength = diffInTime(this.workShift.startTime, this.workShift.endTime);\n            const selectedLength = diffInTime(this.fromTime, value);\n            if (selectedLength > workLength) return this.$t('leave.duration_should_be_less_than_work_shift_length');\n          }\n          return true;\n        }]\n      }\n    };\n  },\n  computed: {\n    selectedTimeDuration() {\n      const timeDifference = diffInTime(this.fromTime, this.toTime);\n      return (timeDifference / 3600).toFixed(2);\n    },\n    options() {\n      const durations = [{\n        id: 1,\n        label: this.$t('leave.full_day'),\n        key: 'full_day'\n      }, {\n        id: 2,\n        label: this.$t('leave.half_day_morning'),\n        key: 'half_day_morning'\n      }, {\n        id: 3,\n        label: this.$t('leave.half_day_evening'),\n        key: 'half_day_afternoon'\n      }, {\n        id: 4,\n        label: this.$t('leave.specify_time'),\n        key: 'specify_time'\n      }];\n      return this.partial ? durations.filter(i => i.id != 1) : durations;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["diffInTime","required","validTimeFormat","endTimeShouldBeAfterStartTime","startTimeShouldBeBeforeEndTime","TimeRange","name","components","inheritAttrs","props","duration","type","Object","default","fromTime","String","toTime","partial","Boolean","workShift","emits","data","rules","$t","value","workLength","startTime","endTime","selectedLength","computed","selectedTimeDuration","timeDifference","toFixed","options","durations","id","label","key","filter","i"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveDurationInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <!-- Always use inside within OXD-Grid inside OXD-Form -->\n  <oxd-grid-item style=\"grid-column-start: 1\">\n    <oxd-input-field\n      type=\"select\"\n      v-bind=\"$attrs\"\n      :options=\"options\"\n      :model-value=\"duration\"\n      :rules=\"rules.duration\"\n      :show-empty-selector=\"partial\"\n      :required=\"partial\"\n      @update:model-value=\"$emit('update:duration', $event)\"\n    />\n  </oxd-grid-item>\n  <template v-if=\"duration && duration.id === 4\">\n    <time-range\n      :rules=\"rules\"\n      :from-time=\"fromTime\"\n      :to-time=\"toTime\"\n      :work-shift=\"workShift\"\n      @update:from-time=\"$emit('update:fromTime', $event)\"\n      @update:to-time=\"$emit('update:toTime', $event)\"\n    ></time-range>\n    <oxd-grid-item>\n      <oxd-input-group :label=\"$t('general.duration')\">\n        <oxd-text class=\"orangehrm-leave-duration\" tag=\"p\">\n          {{ selectedTimeDuration }}\n        </oxd-text>\n      </oxd-input-group>\n    </oxd-grid-item>\n  </template>\n</template>\n\n<script>\nimport {diffInTime} from '@ohrm/core/util/helper/datefns';\nimport {\n  required,\n  validTimeFormat,\n  endTimeShouldBeAfterStartTime,\n  startTimeShouldBeBeforeEndTime,\n} from '@/core/util/validation/rules';\nimport TimeRange from '@/orangehrmLeavePlugin/components/TimeRange';\n\nexport default {\n  name: 'LeaveDurationInput',\n  components: {\n    'time-range': TimeRange,\n  },\n  inheritAttrs: false,\n  props: {\n    duration: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    fromTime: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toTime: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    partial: {\n      type: Boolean,\n      default: false,\n    },\n    workShift: {\n      type: Object,\n      required: true,\n      default: () => ({}),\n    },\n  },\n  emits: ['update:fromTime', 'update:toTime', 'update:duration'],\n  data() {\n    return {\n      rules: {\n        duration: [required],\n        fromTime: [\n          required,\n          validTimeFormat,\n          startTimeShouldBeBeforeEndTime(\n            () => this.toTime,\n            this.$t('general.from_time_should_be_before_to_time'),\n          ),\n        ],\n        toTime: [\n          required,\n          validTimeFormat,\n          endTimeShouldBeAfterStartTime(\n            () => this.fromTime,\n            this.$t('general.to_time_should_be_after_from_time'),\n          ),\n          (value) => {\n            if (value) {\n              const workLength = diffInTime(\n                this.workShift.startTime,\n                this.workShift.endTime,\n              );\n              const selectedLength = diffInTime(this.fromTime, value);\n              if (selectedLength > workLength)\n                return this.$t(\n                  'leave.duration_should_be_less_than_work_shift_length',\n                );\n            }\n            return true;\n          },\n        ],\n      },\n    };\n  },\n  computed: {\n    selectedTimeDuration() {\n      const timeDifference = diffInTime(this.fromTime, this.toTime);\n      return (timeDifference / 3600).toFixed(2);\n    },\n    options() {\n      const durations = [\n        {id: 1, label: this.$t('leave.full_day'), key: 'full_day'},\n        {\n          id: 2,\n          label: this.$t('leave.half_day_morning'),\n          key: 'half_day_morning',\n        },\n        {\n          id: 3,\n          label: this.$t('leave.half_day_evening'),\n          key: 'half_day_afternoon',\n        },\n        {id: 4, label: this.$t('leave.specify_time'), key: 'specify_time'},\n      ];\n      return this.partial ? durations.filter((i) => i.id != 1) : durations;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-leave-duration {\n  padding: $oxd-input-control-vertical-padding 0rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}