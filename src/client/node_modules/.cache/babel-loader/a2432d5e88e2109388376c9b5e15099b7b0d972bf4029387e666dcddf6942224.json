{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1c01b456\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_password_input = _resolveComponent(\"password-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.update_password')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    ref: \"formRef\",\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('general.username')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              class: \"orangehrm-user-name\",\n              tag: \"p\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($props.userName), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.user.currentPassword,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.currentPassword = $event),\n            type: \"password\",\n            label: _ctx.$t('pim.current_password'),\n            rules: $data.rules.currentPassword,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_password_input, {\n      password: $data.user.password,\n      \"onUpdate:password\": _cache[1] || (_cache[1] = $event => $data.user.password = $event),\n      passwordConfirm: $data.user.passwordConfirm,\n      \"onUpdate:passwordConfirm\": _cache[2] || (_cache[2] = $event => $data.user.passwordConfirm = $event)\n    }, null, 8, [\"password\", \"passwordConfirm\"]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;;uBADvCC,oBAgDM,OAhDNC,UAgDM,GA/CJC,oBA8CM,OA9CNC,UA8CM,GA7CJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAA+B,mCAA5BQ,OAAE;;MAEPH,aAAeI,yBAEfJ,aAuCWK;IAvCDC,GAAG,EAAC,SAAS;IAAEC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC1D,MAoBe,CApBfV,aAoBeW;wBAnBb,MAkBW,CAlBXX,aAkBWY;QAlBAC,IAAI,EAAE,CAAC;QAAElB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBc;4BALd,MAIkB,CAJlBd,aAIkBe;YAJAC,KAAK,EAAEb,OAAE;;8BACzB,MAEW,CAFXH,aAEWC;cAFDN,KAAK,EAAC,qBAAqB;cAACO,GAAG,EAAC;;gCACxC,MAAc,mCAAXe,eAAQ;;;;;;YAKjBjB,aAQgBc;4BAPd,MAME,CANFd,aAMEkB;wBALSV,UAAI,CAACW,eAAe;uEAApBX,UAAI,CAACW,eAAe;YAC7BC,IAAI,EAAC,UAAU;YACdJ,KAAK,EAAEb,OAAE;YACTkB,KAAK,EAAEb,WAAK,CAACW,eAAe;YAC7BG,QAAQ,EAAR;;;;;;;QAMRtB,aAGEuB;MAFQC,QAAQ,EAAEhB,UAAI,CAACgB,QAAQ;+DAAbhB,UAAI,CAACgB,QAAQ;MACvBC,eAAe,EAAEjB,UAAI,CAACiB,eAAe;sEAApBjB,UAAI,CAACiB,eAAe;kDAG/CzB,aAAeI,yBACfJ,aASmB0B;wBARjB,MAAiB,CAAjB1B,aAAiB2B,2BACjB3B,aAKE4B;QAJAR,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBJ,KAAK,EAAEb,OAAE;QACT0B,OAAK,EAAEnB;yCAEVV,aAAiB8B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","ref","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_group","label","$props","_component_oxd_input_field","currentPassword","type","rules","required","_component_password_input","password","passwordConfirm","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\updatePassword\\UpdatePassword.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.update_password') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :label=\"$t('general.username')\">\n                <oxd-text class=\"orangehrm-user-name\" tag=\"p\">\n                  {{ userName }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"user.currentPassword\"\n                type=\"password\"\n                :label=\"$t('pim.current_password')\"\n                :rules=\"rules.currentPassword\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <password-input\n          v-model:password=\"user.password\"\n          v-model:passwordConfirm=\"user.passwordConfirm\"\n        />\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport {APIService} from '@/core/util/services/api.service';\nimport PasswordInput from '@/core/components/inputs/PasswordInput';\n\nconst userModel = {\n  currentPassword: '',\n  password: '',\n  passwordConfirm: '',\n};\n\nexport default {\n  components: {\n    'password-input': PasswordInput,\n  },\n  props: {\n    userName: {\n      type: String,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/core/update-password',\n    );\n    const {formRef, reset} = useForm();\n    return {\n      http,\n      formRef,\n      reset,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      user: {...userModel},\n      rules: {\n        currentPassword: [required, shouldNotExceedCharLength(64)],\n      },\n    };\n  },\n\n  methods: {\n    onCancel() {\n      window.history.back();\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: '/api/v2/pim/update-password',\n          data: {\n            newPassword: this.user.password,\n            currentPassword: this.user.currentPassword,\n          },\n          validateStatus: (status) => {\n            return (status >= 200 && status < 300) || status === 422;\n          },\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            this.reset();\n            return this.$toast.saveSuccess();\n          } else {\n            return this.$toast.error({\n              title: this.$t('general.error'),\n              message: this.$t('pim.current_password_is_incorrect'),\n            });\n          }\n        })\n        .finally(() => (this.isLoading = false));\n    },\n  },\n};\n</script>\n\n<style src=\"./update-password.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}