{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-da722d4c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_leave_type_dropdown = _resolveComponent(\"leave-type-dropdown\");\n  const _component_leave_period_dropdown = _resolveComponent(\"leave-period-dropdown\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_entitlement_update_modal = _resolveComponent(\"entitlement-update-modal\");\n  const _component_entitlement_bulk_update_modal = _resolveComponent(\"entitlement-bulk-update-modal\");\n  const _component_entitlement_no_match_modal = _resolveComponent(\"entitlement-no-match-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.add_leave_entitlement')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('leave.add_to'),\n            classes: {\n              wrapper: '--grouped-field'\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.leaveEntitlement.bulkAssign,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leaveEntitlement.bulkAssign = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('leave.individual_employee'),\n              value: \"0\"\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.leaveEntitlement.bulkAssign,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leaveEntitlement.bulkAssign = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('leave.multiple_employees'),\n              value: \"1\"\n            }, null, 8, [\"modelValue\", \"option-label\"])]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $data.leaveEntitlement.bulkAssign == 0 ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $data.leaveEntitlement.employee,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.leaveEntitlement.employee = $event),\n            params: {\n              includeEmployees: 'currentAndPast'\n            },\n            rules: $data.rules.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leaveEntitlement.location,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.leaveEntitlement.location = $event),\n            type: \"select\",\n            label: _ctx.$t('general.location'),\n            options: $props.locations\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leaveEntitlement.subunit,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.leaveEntitlement.subunit = $event),\n            type: \"select\",\n            label: _ctx.$t('general.sub_unit'),\n            options: $props.subunits\n          }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"orangehrm-leave-entitled\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_text, {\n            class: \"orangehrm-leave-entitled-text\",\n            type: \"subtitle-2\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.matches_emp_count_employees', {\n              empMatchCount: $data.empMatchCount\n            })), 1)]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_type_dropdown, {\n            modelValue: $data.leaveEntitlement.leaveType,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.leaveEntitlement.leaveType = $event),\n            \"empty-text\": _ctx.$t('leave.no_leave_types_defined'),\n            rules: $data.rules.leaveType,\n            \"eligible-only\": false,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"empty-text\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_period_dropdown, {\n            modelValue: $data.leaveEntitlement.leavePeriod,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.leaveEntitlement.leavePeriod = $event),\n            rules: $data.rules.leavePeriod,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leaveEntitlement.entitlement,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.leaveEntitlement.entitlement = $event),\n            rules: $data.rules.entitlement,\n            label: _ctx.$t('leave.entitlement'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])]), _createVNode(_component_entitlement_update_modal, {\n    ref: \"updateModal\",\n    data: $data.leaveEntitlement\n  }, null, 8, [\"data\"]), _createVNode(_component_entitlement_bulk_update_modal, {\n    ref: \"bulkUpdateModal\",\n    data: $data.leaveEntitlement\n  }, null, 8, [\"data\"]), _createVNode(_component_entitlement_no_match_modal, {\n    ref: \"noMatchModal\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_group","label","classes","wrapper","_component_oxd_input_field","bulkAssign","type","value","_createBlock","key","_component_employee_autocomplete","employee","params","rules","required","location","options","$props","subunit","_component_leave_type_dropdown","leaveType","_component_leave_period_dropdown","leavePeriod","entitlement","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button","_component_entitlement_update_modal","ref","data","_component_entitlement_bulk_update_modal","_component_entitlement_no_match_modal"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\entitlements\\AddEntitlement.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.add_leave_entitlement') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group\n                :label=\"$t('leave.add_to')\"\n                :classes=\"{wrapper: '--grouped-field'}\"\n              >\n                <oxd-input-field\n                  v-model=\"leaveEntitlement.bulkAssign\"\n                  type=\"radio\"\n                  :option-label=\"$t('leave.individual_employee')\"\n                  value=\"0\"\n                />\n                <oxd-input-field\n                  v-model=\"leaveEntitlement.bulkAssign\"\n                  type=\"radio\"\n                  :option-label=\"$t('leave.multiple_employees')\"\n                  value=\"1\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row v-if=\"leaveEntitlement.bulkAssign == 0\">\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"leaveEntitlement.employee\"\n                :params=\"{\n                  includeEmployees: 'currentAndPast',\n                }\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row v-else>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.location\"\n                type=\"select\"\n                :label=\"$t('general.location')\"\n                :options=\"locations\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.subunit\"\n                type=\"select\"\n                :label=\"$t('general.sub_unit')\"\n                :options=\"subunits\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-leave-entitled\">\n              <oxd-text class=\"orangehrm-leave-entitled-text\" type=\"subtitle-2\">\n                {{\n                  $t('leave.matches_emp_count_employees', {\n                    empMatchCount: empMatchCount,\n                  })\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <leave-type-dropdown\n                v-model=\"leaveEntitlement.leaveType\"\n                :empty-text=\"$t('leave.no_leave_types_defined')\"\n                :rules=\"rules.leaveType\"\n                :eligible-only=\"false\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <leave-period-dropdown\n                v-model=\"leaveEntitlement.leavePeriod\"\n                :rules=\"rules.leavePeriod\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.entitlement\"\n                :rules=\"rules.entitlement\"\n                :label=\"$t('leave.entitlement')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n\n    <entitlement-update-modal\n      ref=\"updateModal\"\n      :data=\"leaveEntitlement\"\n    ></entitlement-update-modal>\n    <entitlement-bulk-update-modal\n      ref=\"bulkUpdateModal\"\n      :data=\"leaveEntitlement\"\n    ></entitlement-bulk-update-modal>\n    <entitlement-no-match-modal ref=\"noMatchModal\"></entitlement-no-match-modal>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {required, max, validSelection} from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeavePeriodDropdown from '@/orangehrmLeavePlugin/components/LeavePeriodDropdown';\nimport EntitlementUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementUpdateModal';\nimport EntitlementBulkUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementBulkUpdateModal';\nimport EntitlementNoMatchModal from '@/orangehrmLeavePlugin/components/EntitlementNoMatchModal';\n\nconst leaveEntitlementModel = {\n  bulkAssign: 0,\n  employee: null,\n  leaveType: null,\n  leavePeriod: null,\n  entitlement: '',\n  subunit: null,\n  location: null,\n};\n\nexport default {\n  components: {\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-period-dropdown': LeavePeriodDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'entitlement-update-modal': EntitlementUpdateModal,\n    'entitlement-bulk-update-modal': EntitlementBulkUpdateModal,\n    'entitlement-no-match-modal': EntitlementNoMatchModal,\n  },\n\n  props: {\n    locations: {\n      type: Array,\n      default: () => [],\n    },\n    subunits: {\n      type: Array,\n      default: () => [],\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-entitlements',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leaveEntitlement: {...leaveEntitlementModel},\n      leavePeriodDefined: false,\n      rules: {\n        employee: [required, validSelection],\n        leaveType: [required],\n        leavePeriod: [required],\n        entitlement: [\n          required,\n          (v) => {\n            return (\n              /^\\d+(\\.\\d{1,2})?$/.test(v) ||\n              this.$t('leave.should_be_a_number_with_2_decimal_places')\n            );\n          },\n          max(10000),\n        ],\n      },\n      empMatchCount: 0,\n    };\n  },\n\n  watch: {\n    'leaveEntitlement.location': 'fetchEmployeeCount',\n    'leaveEntitlement.subunit': 'fetchEmployeeCount',\n  },\n\n  beforeMount() {\n    this.fetchEmployeeCount();\n    if (this.leavePeriod) {\n      this.leaveEntitlement.leavePeriod = this.leavePeriod;\n    }\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/leave/viewLeaveEntitlements');\n    },\n    async onSave() {\n      let confirmation = null;\n      this.isLoading = true;\n      const isBulkAssign = this.leaveEntitlement.bulkAssign == 1;\n\n      if (isBulkAssign) {\n        if (this.empMatchCount === 0) {\n          this.isLoading = false;\n          return this.$refs.noMatchModal.showDialog();\n        }\n        confirmation = await this.$refs.bulkUpdateModal.showDialog();\n      } else {\n        confirmation = await this.$refs.updateModal.showDialog();\n      }\n\n      if (confirmation !== 'ok') {\n        this.isLoading = false;\n        return;\n      }\n\n      const payload = {\n        empNumber: undefined,\n        bulkAssign: undefined,\n        locationId: undefined,\n        subunitId: undefined,\n        leaveTypeId: this.leaveEntitlement.leaveType?.id,\n        fromDate: this.leaveEntitlement.leavePeriod?.startDate,\n        toDate: this.leaveEntitlement.leavePeriod?.endDate,\n        entitlement: this.leaveEntitlement.entitlement,\n      };\n      if (isBulkAssign) {\n        payload.bulkAssign = true;\n        payload.locationId = this.leaveEntitlement.location?.id;\n        payload.subunitId = this.leaveEntitlement.subunit?.id;\n      } else {\n        payload.empNumber = this.leaveEntitlement.employee?.id;\n      }\n      this.http\n        .create(payload)\n        .then((response) => {\n          let toast = null;\n          let params = null;\n          const {data} = response.data;\n          if (Array.isArray(data)) {\n            toast = this.$toast.success({\n              title: this.$t('general.success'),\n              message: this.$t('leave.entitlement_added_to_n_employees', {\n                count: data.length,\n              }),\n            });\n          } else {\n            params = {\n              empNumber: data.employee.empNumber,\n              leaveTypeId: data.leaveType.id,\n              startDate: data.fromDate,\n              endDate: data.toDate,\n            };\n            toast = this.$toast.saveSuccess();\n          }\n          return new Promise((resolve) => {\n            toast.then(() => {\n              resolve(params);\n            });\n          });\n        })\n        .then((params) => {\n          if (params) {\n            navigate('/leave/viewLeaveEntitlements', undefined, params);\n          } else {\n            navigate('/leave/viewLeaveEntitlements');\n          }\n        });\n    },\n    async fetchEmployeeCount() {\n      this.http\n        .request({\n          method: 'GET',\n          url: '/api/v2/pim/employees/count',\n          params: {\n            locationId: this.leaveEntitlement.location?.id,\n            subunitId: this.leaveEntitlement.subunit?.id,\n          },\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.empMatchCount = parseInt(data.count);\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./add-entitlement.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}