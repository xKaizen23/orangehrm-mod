{"ast":null,"code":"import QualificationDropdown from '@/orangehrmPimPlugin/components/QualificationDropdown';\nimport { required, validDateFormat, shouldNotExceedCharLength, endDateShouldBeAfterStartDate } from '@ohrm/core/util/validation/rules';\nimport { yearRange } from '@ohrm/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst licenseModel = {\n  licenseId: null,\n  licenseNo: '',\n  issuedDate: '',\n  expiryDate: ''\n};\nexport default {\n  name: 'SaveLicense',\n  components: {\n    'qualification-dropdown': QualificationDropdown\n  },\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    api: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      license: {\n        ...licenseModel\n      },\n      yearArray: [...yearRange()],\n      rules: {\n        licenseId: [required],\n        licenseNo: [shouldNotExceedCharLength(50)],\n        issuedDate: [validDateFormat(this.userDateFormat)],\n        expiryDate: [validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.license.issuedDate, this.$t('pim.expiry_date_should_be_after_issued_date'))]\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.license,\n        licenseId: this.license.licenseId?.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":"AAmFA,OAAOA,qBAAoB,MAAO,uDAAuD;AACzF,SACEC,QAAQ,EACRC,eAAe,EACfC,yBAAyB,EACzBC,6BAA6B,QACxB,kCAAkC;AACzC,SAAQC,SAAS,QAAO,mCAAmC;AAC3D,OAAOC,aAAY,MAAO,sCAAsC;AAEhE,MAAMC,YAAW,GAAI;EACnBC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE;AACd,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,aAAa;EAEnBC,UAAU,EAAE;IACV,wBAAwB,EAAEb;EAC5B,CAAC;EAEDc,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZhB,QAAQ,EAAE;IACZ,CAAC;IACDiB,GAAG,EAAE;MACHF,IAAI,EAAEG,MAAM;MACZlB,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDmB,KAAK,EAAE,CAAC,OAAO,CAAC;EAEhBC,KAAK,GAAG;IACN,MAAM;MAACC;IAAc,IAAIhB,aAAa,EAAE;IAExC,OAAO;MACLgB;IACF,CAAC;EACH,CAAC;EAEDC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;QAAC,GAAGlB;MAAY,CAAC;MAC1BmB,SAAS,EAAE,CAAC,GAAGrB,SAAS,EAAE,CAAC;MAC3BsB,KAAK,EAAE;QACLnB,SAAS,EAAE,CAACP,QAAQ,CAAC;QACrBQ,SAAS,EAAE,CAACN,yBAAyB,CAAC,EAAE,CAAC,CAAC;QAC1CO,UAAU,EAAE,CAACR,eAAe,CAAC,IAAI,CAACoB,cAAc,CAAC,CAAC;QAClDX,UAAU,EAAE,CACVT,eAAe,CAAC,IAAI,CAACoB,cAAc,CAAC,EACpClB,6BAA6B,CAC3B,MAAM,IAAI,CAACqB,OAAO,CAACf,UAAU,EAC7B,IAAI,CAACkB,EAAE,CAAC,6CAA6C,CAAC,CACvD;MAEL;IACF,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACN,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACT,IAAG,CACLgB,MAAM,CAAC;QACN,GAAG,IAAI,CAACN,OAAO;QACfjB,SAAS,EAAE,IAAI,CAACiB,OAAO,CAACjB,SAAS,EAAEwB;MACrC,CAAC,EACAC,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAF,IAAI,CAAC,MAAM;QACV,IAAI,CAACG,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACT,IAAI,CAACC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;IAC3B;EACF;AACF,CAAC","names":["QualificationDropdown","required","validDateFormat","shouldNotExceedCharLength","endDateShouldBeAfterStartDate","yearRange","useDateFormat","licenseModel","licenseId","licenseNo","issuedDate","expiryDate","name","components","props","http","type","Object","api","String","emits","setup","userDateFormat","data","isLoading","license","yearArray","rules","$t","methods","onSave","create","id","then","$toast","saveSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\SaveLicense.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-top-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n      $t('general.add_license')\n    }}</oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <qualification-dropdown\n              v-model=\"license.licenseId\"\n              :label=\"$t('pim.license_type')\"\n              :rules=\"rules.licenseId\"\n              :api=\"api\"\n              required\n            ></qualification-dropdown>\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"license.licenseNo\"\n              :label=\"$t('pim.license_number')\"\n              :rules=\"rules.licenseNo\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <date-input\n              v-model=\"license.issuedDate\"\n              :label=\"$t('pim.issued_date')\"\n              :rules=\"rules.issuedDate\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"license.expiryDate\"\n              :label=\"$t('general.expiry_date')\"\n              :rules=\"rules.expiryDate\"\n              :years=\"yearArray\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n    <oxd-divider />\n  </div>\n</template>\n\n<script>\nimport QualificationDropdown from '@/orangehrmPimPlugin/components/QualificationDropdown';\nimport {\n  required,\n  validDateFormat,\n  shouldNotExceedCharLength,\n  endDateShouldBeAfterStartDate,\n} from '@ohrm/core/util/validation/rules';\nimport {yearRange} from '@ohrm/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst licenseModel = {\n  licenseId: null,\n  licenseNo: '',\n  issuedDate: '',\n  expiryDate: '',\n};\n\nexport default {\n  name: 'SaveLicense',\n\n  components: {\n    'qualification-dropdown': QualificationDropdown,\n  },\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    api: {\n      type: String,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup() {\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      license: {...licenseModel},\n      yearArray: [...yearRange()],\n      rules: {\n        licenseId: [required],\n        licenseNo: [shouldNotExceedCharLength(50)],\n        issuedDate: [validDateFormat(this.userDateFormat)],\n        expiryDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.license.issuedDate,\n            this.$t('pim.expiry_date_should_be_after_issued_date'),\n          ),\n        ],\n      },\n    };\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.license,\n          licenseId: this.license.licenseId?.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}