{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, validSelection, validDateFormat, endDateShouldBeAfterStartDate, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { computed, ref } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { truncate } from '@ohrm/core/util/helper/truncate';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useLeaveActions from '@/orangehrmLeavePlugin/util/composable/useLeaveActions';\nimport LeaveCommentsModal from '@/orangehrmLeavePlugin/components/LeaveCommentsModal';\nimport LeaveBulkActionModal from '@/orangehrmLeavePlugin/components/LeaveBulkActionModal';\nimport LeaveListTableHeader from '@/orangehrmLeavePlugin/components/LeaveListTableHeader';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nconst defaultFilters = {\n  employee: null,\n  fromDate: null,\n  toDate: null,\n  statuses: [],\n  subunit: null,\n  includePastEmps: false,\n  leaveType: null\n};\nexport default {\n  name: 'LeaveListTable',\n  components: {\n    'leave-list-table-header': LeaveListTableHeader,\n    'leave-comment-modal': LeaveCommentsModal,\n    'leave-bulk-action-modal': LeaveBulkActionModal\n  },\n  props: {\n    myLeaveList: {\n      type: Boolean,\n      default: false\n    },\n    leaveStatuses: {\n      type: Array,\n      default: () => []\n    },\n    employee: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    leaveType: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    fromDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    leaveStatus: {\n      type: Object,\n      required: false,\n      default: () => null\n    }\n  },\n  setup(props) {\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.leaveType && {\n        leaveType: props.leaveType\n      }),\n      ...(props.fromDate && {\n        fromDate: props.fromDate\n      }),\n      ...(props.toDate && {\n        toDate: props.toDate\n      }),\n      ...(props.leaveStatus && {\n        statuses: [props.leaveStatus]\n      }),\n      ...(props.employee && {\n        employee: {\n          id: props.employee.empNumber,\n          label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n          isPastEmployee: props.employee.terminationId\n        }\n      })\n    });\n    const checkedItems = ref([]);\n    const {\n      $t\n    } = usei18n();\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const rules = {\n      fromDate: [required, validDateFormat(userDateFormat)],\n      toDate: [required, validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => filters.value.fromDate, $t('general.to_date_should_be_after_from_date'), {\n        allowSameDate: true\n      })],\n      statuses: [required],\n      employee: [shouldNotExceedCharLength(100), validSelection]\n    };\n    const serializedFilters = computed(() => {\n      const statuses = Array.isArray(filters.value.statuses) ? filters.value.statuses : [];\n      return {\n        empNumber: filters.value.employee?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        subunitId: filters.value.subunit?.id,\n        includeEmployees: filters.value.includePastEmps ? 'currentAndPast' : 'onlyCurrent',\n        statuses: statuses.map(item => item.id),\n        leaveTypeId: filters.value.leaveType?.id\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/leave/${props.myLeaveList ? 'leave-requests' : 'employees/leave-requests'}`);\n    const leavelistNormalizer = data => {\n      return data.map(item => {\n        let leaveDatePeriod,\n          leaveStatuses,\n          leaveBalances = '';\n        const duration = item.dates.durationType?.type;\n        if (item.dates.fromDate) {\n          leaveDatePeriod = formatDate(parseDate(item.dates.fromDate), jsDateFormat, {\n            locale\n          });\n        }\n        if (item.dates.toDate) {\n          leaveDatePeriod += ` to ${formatDate(parseDate(item.dates.toDate), jsDateFormat, {\n            locale\n          })}`;\n        }\n        if (item.dates.startTime && item.dates.endTime) {\n          leaveDatePeriod += ` (${item.dates.startTime} - ${item.dates.endTime})`;\n        }\n        if (duration === 'half_day_morning' || duration === 'half_day_afternoon') {\n          leaveDatePeriod += ` ${$t('leave.half_day')}`;\n        }\n        if (Array.isArray(item.leaveBreakdown)) {\n          leaveStatuses = item.leaveBreakdown.map(status => `${status.name} (${parseFloat(status.lengthDays).toFixed(2)})`).join(', ');\n        }\n        if (Array.isArray(item.leaveBalances)) {\n          if (item.leaveBalances.length > 1) {\n            leaveBalances = item.leaveBalances.map(({\n              period,\n              balance\n            }) => {\n              const _balance = parseFloat(balance.balance).toFixed(2);\n              const startDate = formatDate(parseDate(period.startDate), jsDateFormat, {\n                locale\n              });\n              const endDate = formatDate(parseDate(period.endDate), jsDateFormat, {\n                locale\n              });\n              return `${_balance} (${startDate} - ${endDate})`;\n            }).join(', ');\n          } else {\n            const balance = item.leaveBalances[0]?.balance.balance;\n            leaveBalances = balance ? parseFloat(balance).toFixed(2) : '0.00';\n          }\n        }\n        const empName = `${item.employee?.firstName} ${item.employee?.middleName} ${item.employee?.lastName}`;\n        const leaveTypeName = item.leaveType?.name;\n        if (item.employee?.terminationId) {\n          empName + ` (${$t('general.past_employee')})`;\n        }\n        if (item.leaveType?.deleted) {\n          leaveTypeName + ` (${$t('general.deleted')})`;\n        }\n        return {\n          id: item.id,\n          empNumber: item.employee?.empNumber,\n          date: leaveDatePeriod,\n          employeeName: empName,\n          leaveType: leaveTypeName,\n          leaveBalance: leaveBalances,\n          days: parseFloat(item.noOfDays).toFixed(2),\n          status: leaveStatuses,\n          comment: truncate(item.lastComment?.comment),\n          actions: item.allowedActions\n        };\n      });\n    };\n    const {\n      leaveActions,\n      processLeaveRequestAction,\n      processLeaveRequestBulkAction\n    } = useLeaveActions(http);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: leavelistNormalizer\n    });\n    const leaveBulkActions = computed(() => {\n      if (checkedItems.value.length > 0 && response.value.data) {\n        const allActions = checkedItems.value.map(item => {\n          return response.value.data[item].actions;\n        });\n        return {\n          APPROVE: allActions.reduce((approvable, actions) => approvable && actions.find(i => i.action === 'APPROVE'), true),\n          REJECT: allActions.reduce((rejectable, actions) => rejectable && actions.find(i => i.action === 'REJECT'), true),\n          CANCEL: allActions.reduce((cancelable, actions) => cancelable && actions.find(i => i.action === 'CANCEL'), true)\n        };\n      }\n      return null;\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      rules,\n      filters,\n      checkedItems,\n      leaveActions,\n      leaveBulkActions,\n      processLeaveRequestAction,\n      processLeaveRequestBulkAction\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'date',\n        title: this.$t('general.date'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'employeeName',\n        title: this.$t('general.employee_name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'leaveType',\n        title: this.$t('leave.leave_type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'leaveBalance',\n        title: this.$t('leave.leave_balance_days'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'days',\n        title: this.$t('leave.number_of_days'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'comment',\n        title: this.$t('general.comments'),\n        style: {\n          flex: '5%'\n        }\n      }, {\n        name: 'action',\n        slot: 'footer',\n        title: this.$t('general.actions'),\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer,\n        style: {\n          flex: this.myLeaveList ? '10%' : '20%'\n        }\n      }],\n      showCommentModal: false,\n      commentModalState: null,\n      bulkActionModalState: null\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    if (this.filters.statuses.length === 0) {\n      this.filters.statuses = this.myLeaveList ? this.leaveStatuses : this.leaveStatuses.filter(status => status.id === 1);\n    }\n    this.http.request({\n      method: 'GET',\n      url: '/api/v2/leave/leave-periods'\n    }).then(response => {\n      const {\n        data,\n        meta\n      } = response.data;\n      if (meta.leavePeriodDefined) {\n        this.filters.fromDate = this.filters.fromDate ?? meta?.currentLeavePeriod.startDate;\n        this.filters.toDate = this.filters.toDate ?? meta?.currentLeavePeriod.endDate;\n      } else {\n        this.filters.fromDate = this.filters.fromDate ?? data[0]?.startDate;\n        this.filters.toDate = this.filters.toDate ?? data[0]?.endDate;\n      }\n    }).finally(() => {\n      this.isLoading = false;\n      Object.assign(defaultFilters, this.filters);\n    });\n  },\n  methods: {\n    cellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      const {\n        approve,\n        reject,\n        cancel,\n        more\n      } = this.leaveActions;\n      const dropdownActions = [{\n        label: this.$t('general.add_comment'),\n        context: 'add_comment'\n      }, {\n        label: this.$t('leave.view_leave_details'),\n        context: 'leave_details'\n      }, {\n        label: this.$t('leave.view_pim_info'),\n        context: 'pim_details'\n      }];\n      row.actions.map(item => {\n        if (item.action === 'APPROVE') {\n          approve.props.label = this.$t('general.approve');\n          approve.props.onClick = () => this.onLeaveAction(row.id, 'APPROVE');\n          cellConfig.approve = approve;\n        }\n        if (item.action === 'REJECT') {\n          reject.props.label = this.$t('general.reject');\n          reject.props.onClick = () => this.onLeaveAction(row.id, 'REJECT');\n          cellConfig.reject = reject;\n        }\n        if (item.action === 'CANCEL') {\n          if (this.myLeaveList) {\n            cancel.props.label = this.$t('general.cancel');\n            cancel.props.onClick = () => this.onLeaveAction(row.id, 'CANCEL');\n            cellConfig.reject = cancel;\n          } else {\n            dropdownActions.push({\n              label: this.$t('leave.cancel_leave'),\n              context: 'cancel_leave'\n            });\n          }\n        }\n      });\n      more.props.options = dropdownActions;\n      more.props.onClick = $event => this.onLeaveDropdownAction($event, row);\n      cellConfig.more = more;\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    onLeaveDropdownAction(event, item) {\n      switch (event.context) {\n        case 'add_comment':\n          this.commentModalState = item.id;\n          this.showCommentModal = true;\n          break;\n        case 'cancel_leave':\n          this.onLeaveAction(item.id, 'CANCEL');\n          break;\n        case 'pim_details':\n          navigate('/pim/viewPersonalDetails/empNumber/{id}', {\n            id: item.empNumber\n          });\n          break;\n        default:\n          navigate('/leave/viewLeaveRequest/{id}', {\n            id: item.id\n          }, this.myLeaveList && {\n            mode: 'my-leave'\n          });\n      }\n    },\n    onLeaveAction(id, actionType) {\n      this.isLoading = true;\n      this.processLeaveRequestAction(id, actionType).then(() => {\n        this.$toast.updateSuccess();\n      }).finally(this.resetDataTable);\n    },\n    async onLeaveActionBulk(actionType) {\n      this.isLoading = true;\n      this.bulkActionModalState = {\n        count: this.checkedItems.length,\n        action: actionType\n      };\n      const ids = this.checkedItems.map(index => {\n        return this.items.data[index].id;\n      });\n      const confirmation = await this.$refs.bulkActionModal.showDialog();\n      if (confirmation !== 'ok') {\n        this.isLoading = false;\n        return;\n      }\n      this.processLeaveRequestBulkAction(ids, actionType).then(response => {\n        const {\n          data\n        } = response.data;\n        if (Array.isArray(data)) this.$toast.success({\n          title: this.$t('general.success'),\n          message: this.$t('leave.leave_requests_action', {\n            action: actionType,\n            count: data.length\n          })\n        });\n      }).finally(() => {\n        this.bulkActionModalState = null;\n        this.resetDataTable();\n      });\n    },\n    onCommentModalClose() {\n      this.commentModalState = null;\n      this.showCommentModal = false;\n      this.resetDataTable();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onReset() {\n      this.filters = {\n        ...defaultFilters\n      };\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":";AAoEA,SACEA,QAAQ,EACRC,cAAc,EACdC,eAAe,EACfC,6BAA6B,EAC7BC,yBAAyB,QACpB,8BAA8B;AACrC,SAAQC,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,QAAQ,QAAO,iCAAiC;AACxD,OAAOC,WAAU,MAAO,wCAAwC;AAChE,OAAOC,eAAc,MAAO,wDAAwD;AACpF,OAAOC,kBAAiB,MAAO,sDAAsD;AACrF,OAAOC,oBAAmB,MAAO,wDAAwD;AACzF,OAAOC,oBAAmB,MAAO,wDAAwD;AACzF,OAAOC,OAAM,MAAO,gCAAgC;AACpD,OAAOC,aAAY,MAAO,sCAAsC;AAChE,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAChE,OAAOC,SAAQ,MAAO,kCAAkC;AAExD,MAAMC,cAAa,GAAI;EACrBC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,IAAI;EACbC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE;AACb,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,gBAAgB;EAEtBC,UAAU,EAAE;IACV,yBAAyB,EAAEf,oBAAoB;IAC/C,qBAAqB,EAAEF,kBAAkB;IACzC,yBAAyB,EAAEC;EAC7B,CAAC;EAEDiB,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACDC,aAAa,EAAE;MACbH,IAAI,EAAEI,KAAK;MACXF,OAAO,EAAE,MAAM;IACjB,CAAC;IACDb,QAAQ,EAAE;MACRW,IAAI,EAAEK,MAAM;MACZrC,QAAQ,EAAE,KAAK;MACfkC,OAAO,EAAE,MAAM;IACjB,CAAC;IACDP,SAAS,EAAE;MACTK,IAAI,EAAEK,MAAM;MACZrC,QAAQ,EAAE,KAAK;MACfkC,OAAO,EAAE,MAAM;IACjB,CAAC;IACDZ,QAAQ,EAAE;MACRU,IAAI,EAAEM,MAAM;MACZtC,QAAQ,EAAE,KAAK;MACfkC,OAAO,EAAE;IACX,CAAC;IACDX,MAAM,EAAE;MACNS,IAAI,EAAEM,MAAM;MACZtC,QAAQ,EAAE,KAAK;MACfkC,OAAO,EAAE;IACX,CAAC;IACDK,WAAW,EAAE;MACXP,IAAI,EAAEK,MAAM;MACZrC,QAAQ,EAAE,KAAK;MACfkC,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EAEDM,KAAK,CAACV,KAAK,EAAE;IACX,MAAMW,OAAM,GAAInC,GAAG,CAAC;MAClB,GAAGc,cAAc;MACjB,IAAIU,KAAK,CAACH,SAAQ,IAAK;QAACA,SAAS,EAAEG,KAAK,CAACH;MAAS,CAAC,CAAC;MACpD,IAAIG,KAAK,CAACR,QAAO,IAAK;QAACA,QAAQ,EAAEQ,KAAK,CAACR;MAAQ,CAAC,CAAC;MACjD,IAAIQ,KAAK,CAACP,MAAK,IAAK;QAACA,MAAM,EAAEO,KAAK,CAACP;MAAM,CAAC,CAAC;MAC3C,IAAIO,KAAK,CAACS,WAAU,IAAK;QAACf,QAAQ,EAAE,CAACM,KAAK,CAACS,WAAW;MAAC,CAAC,CAAC;MACzD,IAAIT,KAAK,CAACT,QAAO,IAAK;QACpBA,QAAQ,EAAE;UACRqB,EAAE,EAAEZ,KAAK,CAACT,QAAQ,CAACsB,SAAS;UAC5BC,KAAK,EAAG,GAAEd,KAAK,CAACT,QAAQ,CAACwB,SAAS,IAAIf,KAAK,CAACT,QAAQ,CAACyB,UAAU,IAAIhB,KAAK,CAACT,QAAQ,CAAC0B,QAAS,EAAC;UAC5FC,cAAc,EAAElB,KAAK,CAACT,QAAQ,CAAC4B;QACjC;MACF,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,YAAW,GAAI5C,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAM;MAAC6C;IAAE,IAAIpC,OAAO,EAAE;IACtB,MAAM;MAACqC;IAAM,IAAIjC,SAAS,EAAE;IAC5B,MAAM;MAACkC,YAAY;MAAEC;IAAc,IAAItC,aAAa,EAAE;IAEtD,MAAMuC,KAAI,GAAI;MACZjC,QAAQ,EAAE,CAACtB,QAAQ,EAAEE,eAAe,CAACoD,cAAc,CAAC,CAAC;MACrD/B,MAAM,EAAE,CACNvB,QAAQ,EACRE,eAAe,CAACoD,cAAc,CAAC,EAC/BnD,6BAA6B,CAC3B,MAAMsC,OAAO,CAACe,KAAK,CAAClC,QAAQ,EAC5B6B,EAAE,CAAC,2CAA2C,CAAC,EAC/C;QAACM,aAAa,EAAE;MAAI,CAAC,CACtB,CACF;MACDjC,QAAQ,EAAE,CAACxB,QAAQ,CAAC;MACpBqB,QAAQ,EAAE,CAACjB,yBAAyB,CAAC,GAAG,CAAC,EAAEH,cAAc;IAC3D,CAAC;IAED,MAAMyD,iBAAgB,GAAIrD,QAAQ,CAAC,MAAM;MACvC,MAAMmB,QAAO,GAAIY,KAAK,CAACuB,OAAO,CAAClB,OAAO,CAACe,KAAK,CAAChC,QAAQ,IACjDiB,OAAO,CAACe,KAAK,CAAChC,QAAO,GACrB,EAAE;MAEN,OAAO;QACLmB,SAAS,EAAEF,OAAO,CAACe,KAAK,CAACnC,QAAQ,EAAEqB,EAAE;QACrCpB,QAAQ,EAAEmB,OAAO,CAACe,KAAK,CAAClC,QAAQ;QAChCC,MAAM,EAAEkB,OAAO,CAACe,KAAK,CAACjC,MAAM;QAC5BqC,SAAS,EAAEnB,OAAO,CAACe,KAAK,CAAC/B,OAAO,EAAEiB,EAAE;QACpCmB,gBAAgB,EAAEpB,OAAO,CAACe,KAAK,CAAC9B,eAAc,GAC1C,gBAAe,GACf,aAAa;QACjBF,QAAQ,EAAEA,QAAQ,CAACsC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,CAAC;QACzCsB,WAAW,EAAEvB,OAAO,CAACe,KAAK,CAAC7B,SAAS,EAAEe;MACxC,CAAC;IACH,CAAC,CAAC;IAEF,MAAMuB,IAAG,GAAI,IAAI1D,UAAU,CACzB2D,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,iBACCtC,KAAK,CAACC,WAAU,GAAI,gBAAe,GAAI,0BACxC,EAAC,CACH;IAED,MAAMsC,mBAAkB,GAAKC,IAAI,IAAK;MACpC,OAAOA,IAAI,CAACR,GAAG,CAAEC,IAAI,IAAK;QACxB,IAAIQ,eAAe;UACjBpC,aAAa;UACbqC,aAAY,GAAI,EAAE;QACpB,MAAMC,QAAO,GAAIV,IAAI,CAACW,KAAK,CAACC,YAAY,EAAE3C,IAAI;QAE9C,IAAI+B,IAAI,CAACW,KAAK,CAACpD,QAAQ,EAAE;UACvBiD,eAAc,GAAItD,UAAU,CAC1BC,SAAS,CAAC6C,IAAI,CAACW,KAAK,CAACpD,QAAQ,CAAC,EAC9B+B,YAAY,EACZ;YAACD;UAAM,CAAC,CACT;QACH;QACA,IAAIW,IAAI,CAACW,KAAK,CAACnD,MAAM,EAAE;UACrBgD,eAAc,IAAK,OAAOtD,UAAU,CAClCC,SAAS,CAAC6C,IAAI,CAACW,KAAK,CAACnD,MAAM,CAAC,EAC5B8B,YAAY,EACZ;YAACD;UAAM,CAAC,CACR,EAAC;QACL;QACA,IAAIW,IAAI,CAACW,KAAK,CAACE,SAAQ,IAAKb,IAAI,CAACW,KAAK,CAACG,OAAO,EAAE;UAC9CN,eAAc,IAAK,KAAKR,IAAI,CAACW,KAAK,CAACE,SAAS,MAAMb,IAAI,CAACW,KAAK,CAACG,OAAQ,GAAE;QACzE;QACA,IACEJ,QAAO,KAAM,kBAAiB,IAC9BA,QAAO,KAAM,oBAAmB,EAChC;UACAF,eAAc,IAAK,IAAIpB,EAAE,CAAC,gBAAgB,CAAE,EAAC;QAC/C;QACA,IAAIf,KAAK,CAACuB,OAAO,CAACI,IAAI,CAACe,cAAc,CAAC,EAAE;UACtC3C,aAAY,GAAI4B,IAAI,CAACe,cAAa,CAC/BhB,GAAG,CACDiB,MAAM,IACJ,GAAEA,MAAM,CAACnD,IAAI,KAAKoD,UAAU,CAACD,MAAM,CAACE,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,CAAE,GAAE,CAClE,CACCC,IAAI,CAAC,IAAI,CAAC;QACf;QACA,IAAI/C,KAAK,CAACuB,OAAO,CAACI,IAAI,CAACS,aAAa,CAAC,EAAE;UACrC,IAAIT,IAAI,CAACS,aAAa,CAACY,MAAK,GAAI,CAAC,EAAE;YACjCZ,aAAY,GAAIT,IAAI,CAACS,aAAY,CAC9BV,GAAG,CAAC,CAAC;cAACuB,MAAM;cAAEC;YAAO,CAAC,KAAK;cAC1B,MAAMC,QAAO,GAAIP,UAAU,CAACM,OAAO,CAACA,OAAO,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC;cACvD,MAAMM,SAAQ,GAAIvE,UAAU,CAC1BC,SAAS,CAACmE,MAAM,CAACG,SAAS,CAAC,EAC3BnC,YAAY,EACZ;gBAACD;cAAM,CAAC,CACT;cACD,MAAMqC,OAAM,GAAIxE,UAAU,CACxBC,SAAS,CAACmE,MAAM,CAACI,OAAO,CAAC,EACzBpC,YAAY,EACZ;gBAACD;cAAM,CAAC,CACT;cACD,OAAQ,GAAEmC,QAAQ,KAAKC,SAAS,MAAMC,OAAQ,GAAE;YAClD,CAAC,EACAN,IAAI,CAAC,IAAI,CAAC;UACf,OAAO;YACL,MAAMG,OAAM,GAAIvB,IAAI,CAACS,aAAa,CAAC,CAAC,CAAC,EAAEc,OAAO,CAACA,OAAO;YACtDd,aAAY,GAAIc,OAAM,GAAIN,UAAU,CAACM,OAAO,CAAC,CAACJ,OAAO,CAAC,CAAC,IAAI,MAAM;UACnE;QACF;QAEA,MAAMQ,OAAM,GAAK,GAAE3B,IAAI,CAAC1C,QAAQ,EAAEwB,SAAS,IAAIkB,IAAI,CAAC1C,QAAQ,EAAEyB,UAAU,IAAIiB,IAAI,CAAC1C,QAAQ,EAAE0B,QAAS,EAAC;QACrG,MAAM4C,aAAY,GAAI5B,IAAI,CAACpC,SAAS,EAAEC,IAAI;QAE1C,IAAImC,IAAI,CAAC1C,QAAQ,EAAE4B,aAAa,EAAE;UAChCyC,OAAM,GAAI,KAAKvC,EAAE,CAAC,uBAAuB,CAAE,GAAE;QAC/C;QACA,IAAIY,IAAI,CAACpC,SAAS,EAAEiE,OAAO,EAAE;UAC3BD,aAAY,GAAI,KAAKxC,EAAE,CAAC,iBAAiB,CAAE,GAAE;QAC/C;QAEA,OAAO;UACLT,EAAE,EAAEqB,IAAI,CAACrB,EAAE;UACXC,SAAS,EAAEoB,IAAI,CAAC1C,QAAQ,EAAEsB,SAAS;UACnCkD,IAAI,EAAEtB,eAAe;UACrBuB,YAAY,EAAEJ,OAAO;UACrB/D,SAAS,EAAEgE,aAAa;UACxBI,YAAY,EAAEvB,aAAa;UAC3BwB,IAAI,EAAEhB,UAAU,CAACjB,IAAI,CAACkC,QAAQ,CAAC,CAACf,OAAO,CAAC,CAAC,CAAC;UAC1CH,MAAM,EAAE5C,aAAa;UACrB+D,OAAO,EAAEzF,QAAQ,CAACsD,IAAI,CAACoC,WAAW,EAAED,OAAO,CAAC;UAC5CE,OAAO,EAAErC,IAAI,CAACsC;QAChB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;MACJC,YAAY;MACZC,yBAAyB;MACzBC;IACF,IAAI7F,eAAe,CAACsD,IAAI,CAAC;IAEzB,MAAM;MACJwC,aAAa;MACbC,WAAW;MACXC,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC;IACF,IAAItG,WAAW,CAACuD,IAAI,EAAE;MACpBgD,KAAK,EAAEvD,iBAAiB;MACxBwD,UAAU,EAAE7C;IACd,CAAC,CAAC;IAEF,MAAM8C,gBAAe,GAAI9G,QAAQ,CAAC,MAAM;MACtC,IAAI6C,YAAY,CAACM,KAAK,CAAC4B,MAAK,GAAI,KAAK0B,QAAQ,CAACtD,KAAK,CAACc,IAAI,EAAE;QACxD,MAAM8C,UAAS,GAAIlE,YAAY,CAACM,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;UAClD,OAAO+C,QAAQ,CAACtD,KAAK,CAACc,IAAI,CAACP,IAAI,CAAC,CAACqC,OAAO;QAC1C,CAAC,CAAC;QACF,OAAO;UACLiB,OAAO,EAAED,UAAU,CAACE,MAAM,CACxB,CAACC,UAAU,EAAEnB,OAAO,KAClBmB,UAAS,IAAKnB,OAAO,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,SAAS,CAAC,EAC3D,IAAI,CACL;UACDC,MAAM,EAAEP,UAAU,CAACE,MAAM,CACvB,CAACM,UAAU,EAAExB,OAAO,KAClBwB,UAAS,IAAKxB,OAAO,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,QAAQ,CAAC,EAC1D,IAAI,CACL;UACDG,MAAM,EAAET,UAAU,CAACE,MAAM,CACvB,CAACQ,UAAU,EAAE1B,OAAO,KAClB0B,UAAS,IAAK1B,OAAO,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,QAAQ,CAAC,EAC1D,IAAI;QAER,CAAC;MACH;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IAEF,OAAO;MACLzD,IAAI;MACJwC,aAAa;MACbC,WAAW;MACXK,SAAS;MACTJ,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRG,SAAS;MACTe,KAAK,EAAEjB,QAAQ;MACfvD,KAAK;MACLd,OAAO;MACPS,YAAY;MACZoD,YAAY;MACZa,gBAAgB;MAChBZ,yBAAyB;MACzBC;IACF,CAAC;EACH,CAAC;EAEDlC,IAAI,GAAG;IACL,OAAO;MACL0D,OAAO,EAAE,CACP;QAACpG,IAAI,EAAE,MAAM;QAAEqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,cAAc,CAAC;QAAE+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MAAC,CAAC,EAChE;QACEvG,IAAI,EAAE,cAAc;QACpBqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,uBAAuB,CAAC;QACvC+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEvG,IAAI,EAAE,WAAW;QACjBqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,kBAAkB,CAAC;QAClC+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEvG,IAAI,EAAE,cAAc;QACpBqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,0BAA0B,CAAC;QAC1C+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEvG,IAAI,EAAE,MAAM;QACZqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,sBAAsB,CAAC;QACtC+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QAACvG,IAAI,EAAE,QAAQ;QAAEqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,gBAAgB,CAAC;QAAE+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MAAC,CAAC,EACpE;QACEvG,IAAI,EAAE,SAAS;QACfqG,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,kBAAkB,CAAC;QAClC+E,KAAK,EAAE;UAACC,IAAI,EAAE;QAAI;MACpB,CAAC,EACD;QACEvG,IAAI,EAAE,QAAQ;QACdwG,IAAI,EAAE,QAAQ;QACdH,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,iBAAiB,CAAC;QACjCkF,QAAQ,EAAE,wBAAwB;QAClCC,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BJ,KAAK,EAAE;UACLC,IAAI,EAAE,IAAI,CAACpG,WAAU,GAAI,KAAI,GAAI;QACnC;MACF,CAAC,CACF;MACDwG,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EAEDC,WAAW,GAAG;IACZ,IAAI,CAAC3B,SAAQ,GAAI,IAAI;IACrB,IAAI,IAAI,CAACtE,OAAO,CAACjB,QAAQ,CAAC4D,MAAK,KAAM,CAAC,EAAE;MACtC,IAAI,CAAC3C,OAAO,CAACjB,QAAO,GAAI,IAAI,CAACO,WAAU,GACnC,IAAI,CAACI,aAAY,GACjB,IAAI,CAACA,aAAa,CAACwG,MAAM,CAAE5D,MAAM,IAAKA,MAAM,CAACrC,EAAC,KAAM,CAAC,CAAC;IAC5D;IACA,IAAI,CAACuB,IAAG,CACL2E,OAAO,CAAC;MAACC,MAAM,EAAE,KAAK;MAAEC,GAAG,EAAE;IAA6B,CAAC,EAC3DC,IAAI,CAAEjC,QAAQ,IAAK;MAClB,MAAM;QAACxC,IAAI;QAAE0E;MAAI,IAAIlC,QAAQ,CAACxC,IAAI;MAClC,IAAI0E,IAAI,CAACC,kBAAkB,EAAE;QAC3B,IAAI,CAACxG,OAAO,CAACnB,QAAO,GAClB,IAAI,CAACmB,OAAO,CAACnB,QAAO,IAAK0H,IAAI,EAAEE,kBAAkB,CAAC1D,SAAS;QAC7D,IAAI,CAAC/C,OAAO,CAAClB,MAAK,GAChB,IAAI,CAACkB,OAAO,CAAClB,MAAK,IAAKyH,IAAI,EAAEE,kBAAkB,CAACzD,OAAO;MAC3D,OAAO;QACL,IAAI,CAAChD,OAAO,CAACnB,QAAO,GAAI,IAAI,CAACmB,OAAO,CAACnB,QAAO,IAAKgD,IAAI,CAAC,CAAC,CAAC,EAAEkB,SAAS;QACnE,IAAI,CAAC/C,OAAO,CAAClB,MAAK,GAAI,IAAI,CAACkB,OAAO,CAAClB,MAAK,IAAK+C,IAAI,CAAC,CAAC,CAAC,EAAEmB,OAAO;MAC/D;IACF,CAAC,EACA0D,OAAO,CAAC,MAAM;MACb,IAAI,CAACpC,SAAQ,GAAI,KAAK;MACtB1E,MAAM,CAAC+G,MAAM,CAAChI,cAAc,EAAE,IAAI,CAACqB,OAAO,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC;EAED4G,OAAO,EAAE;IACPf,YAAY,CAAC,GAAG,KAAOgB,GAAG,CAAC,EAAE;MAC3B,MAAMC,UAAS,GAAI,CAAC,CAAC;MACrB,MAAM;QAACC,OAAO;QAAEC,MAAM;QAAEC,MAAM;QAAEC;MAAI,IAAI,IAAI,CAACrD,YAAY;MACzD,MAAMsD,eAAc,GAAI,CACtB;QAAChH,KAAK,EAAE,IAAI,CAACO,EAAE,CAAC,qBAAqB,CAAC;QAAE0G,OAAO,EAAE;MAAa,CAAC,EAC/D;QAACjH,KAAK,EAAE,IAAI,CAACO,EAAE,CAAC,0BAA0B,CAAC;QAAE0G,OAAO,EAAE;MAAe,CAAC,EACtE;QAACjH,KAAK,EAAE,IAAI,CAACO,EAAE,CAAC,qBAAqB,CAAC;QAAE0G,OAAO,EAAE;MAAa,CAAC,CAChE;MAEDP,GAAG,CAAClD,OAAO,CAACtC,GAAG,CAAEC,IAAI,IAAK;QACxB,IAAIA,IAAI,CAAC2D,MAAK,KAAM,SAAS,EAAE;UAC7B8B,OAAO,CAAC1H,KAAK,CAACc,KAAI,GAAI,IAAI,CAACO,EAAE,CAAC,iBAAiB,CAAC;UAChDqG,OAAO,CAAC1H,KAAK,CAACgI,OAAM,GAAI,MAAM,IAAI,CAACC,aAAa,CAACT,GAAG,CAAC5G,EAAE,EAAE,SAAS,CAAC;UACnE6G,UAAU,CAACC,OAAM,GAAIA,OAAO;QAC9B;QACA,IAAIzF,IAAI,CAAC2D,MAAK,KAAM,QAAQ,EAAE;UAC5B+B,MAAM,CAAC3H,KAAK,CAACc,KAAI,GAAI,IAAI,CAACO,EAAE,CAAC,gBAAgB,CAAC;UAC9CsG,MAAM,CAAC3H,KAAK,CAACgI,OAAM,GAAI,MAAM,IAAI,CAACC,aAAa,CAACT,GAAG,CAAC5G,EAAE,EAAE,QAAQ,CAAC;UACjE6G,UAAU,CAACE,MAAK,GAAIA,MAAM;QAC5B;QACA,IAAI1F,IAAI,CAAC2D,MAAK,KAAM,QAAQ,EAAE;UAC5B,IAAI,IAAI,CAAC3F,WAAW,EAAE;YACpB2H,MAAM,CAAC5H,KAAK,CAACc,KAAI,GAAI,IAAI,CAACO,EAAE,CAAC,gBAAgB,CAAC;YAC9CuG,MAAM,CAAC5H,KAAK,CAACgI,OAAM,GAAI,MAAM,IAAI,CAACC,aAAa,CAACT,GAAG,CAAC5G,EAAE,EAAE,QAAQ,CAAC;YACjE6G,UAAU,CAACE,MAAK,GAAIC,MAAM;UAC5B,OAAO;YACLE,eAAe,CAACI,IAAI,CAAC;cACnBpH,KAAK,EAAE,IAAI,CAACO,EAAE,CAAC,oBAAoB,CAAC;cACpC0G,OAAO,EAAE;YACX,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;MAEFF,IAAI,CAAC7H,KAAK,CAACmI,OAAM,GAAIL,eAAe;MACpCD,IAAI,CAAC7H,KAAK,CAACgI,OAAM,GAAKI,MAAM,IAAK,IAAI,CAACC,qBAAqB,CAACD,MAAM,EAAEZ,GAAG,CAAC;MACxEC,UAAU,CAACI,IAAG,GAAIA,IAAI;MAEtB,OAAO;QACL7H,KAAK,EAAE;UACLsI,MAAM,EAAE;YACNb;UACF;QACF;MACF,CAAC;IACH,CAAC;IACDY,qBAAqB,CAACE,KAAK,EAAEtG,IAAI,EAAE;MACjC,QAAQsG,KAAK,CAACR,OAAO;QACnB,KAAK,aAAa;UAChB,IAAI,CAACrB,iBAAgB,GAAIzE,IAAI,CAACrB,EAAE;UAChC,IAAI,CAAC6F,gBAAe,GAAI,IAAI;UAC5B;QACF,KAAK,cAAc;UACjB,IAAI,CAACwB,aAAa,CAAChG,IAAI,CAACrB,EAAE,EAAE,QAAQ,CAAC;UACrC;QACF,KAAK,aAAa;UAChBlC,QAAQ,CAAC,yCAAyC,EAAE;YAClDkC,EAAE,EAAEqB,IAAI,CAACpB;UACX,CAAC,CAAC;UACF;QACF;UACEnC,QAAQ,CACN,8BAA8B,EAC9B;YAACkC,EAAE,EAAEqB,IAAI,CAACrB;UAAE,CAAC,EACb,IAAI,CAACX,WAAU,IAAK;YAACuI,IAAI,EAAE;UAAU,CAAC,CACvC;MAAA;IAEP,CAAC;IACDP,aAAa,CAACrH,EAAE,EAAE6H,UAAU,EAAE;MAC5B,IAAI,CAACxD,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACR,yBAAyB,CAAC7D,EAAE,EAAE6H,UAAU,EAC1CxB,IAAI,CAAC,MAAM;QACV,IAAI,CAACyB,MAAM,CAACC,aAAa,EAAE;MAC7B,CAAC,EACAtB,OAAO,CAAC,IAAI,CAACuB,cAAc,CAAC;IACjC,CAAC;IACD,MAAMC,iBAAiB,CAACJ,UAAU,EAAE;MAClC,IAAI,CAACxD,SAAQ,GAAI,IAAI;MACrB,IAAI,CAAC0B,oBAAmB,GAAI;QAC1BmC,KAAK,EAAE,IAAI,CAAC1H,YAAY,CAACkC,MAAM;QAC/BsC,MAAM,EAAE6C;MACV,CAAC;MAED,MAAMM,GAAE,GAAI,IAAI,CAAC3H,YAAY,CAACY,GAAG,CAAEgH,KAAK,IAAK;QAC3C,OAAO,IAAI,CAAC/C,KAAK,CAACzD,IAAI,CAACwG,KAAK,CAAC,CAACpI,EAAE;MAClC,CAAC,CAAC;MACF,MAAMqI,YAAW,GAAI,MAAM,IAAI,CAACC,KAAK,CAACC,eAAe,CAACC,UAAU,EAAE;MAElE,IAAIH,YAAW,KAAM,IAAI,EAAE;QACzB,IAAI,CAAChE,SAAQ,GAAI,KAAK;QACtB;MACF;MAEA,IAAI,CAACP,6BAA6B,CAACqE,GAAG,EAAEN,UAAU,EAC/CxB,IAAI,CAAEjC,QAAQ,IAAK;QAClB,MAAM;UAACxC;QAAI,IAAIwC,QAAQ,CAACxC,IAAI;QAC5B,IAAIlC,KAAK,CAACuB,OAAO,CAACW,IAAI,CAAC,EACrB,IAAI,CAACkG,MAAM,CAACW,OAAO,CAAC;UAClBlD,KAAK,EAAE,IAAI,CAAC9E,EAAE,CAAC,iBAAiB,CAAC;UACjCiI,OAAO,EAAE,IAAI,CAACjI,EAAE,CAAC,6BAA6B,EAAE;YAC9CuE,MAAM,EAAE6C,UAAU;YAClBK,KAAK,EAAEtG,IAAI,CAACc;UACd,CAAC;QACH,CAAC,CAAC;MACN,CAAC,EACA+D,OAAO,CAAC,MAAM;QACb,IAAI,CAACV,oBAAmB,GAAI,IAAI;QAChC,IAAI,CAACiC,cAAc,EAAE;MACvB,CAAC,CAAC;IACN,CAAC;IACDW,mBAAmB,GAAG;MACpB,IAAI,CAAC7C,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACD,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACmC,cAAc,EAAE;IACvB,CAAC;IACD,MAAMA,cAAc,GAAG;MACrB,IAAI,CAACxH,YAAW,GAAI,EAAE;MACtB,MAAM,IAAI,CAAC8D,SAAS,EAAE;IACxB,CAAC;IACD,MAAMsE,WAAW,GAAG;MAClB,MAAM,IAAI,CAACtE,SAAS,EAAE;IACxB,CAAC;IACDuE,OAAO,GAAG;MACR,IAAI,CAAC9I,OAAM,GAAI;QAAC,GAAGrB;MAAc,CAAC;MAClC,IAAI,CAACsJ,cAAc,EAAE;IACvB;EACF;AACF,CAAC","names":["required","validSelection","validDateFormat","endDateShouldBeAfterStartDate","shouldNotExceedCharLength","computed","ref","APIService","navigate","truncate","usePaginate","useLeaveActions","LeaveCommentsModal","LeaveBulkActionModal","LeaveListTableHeader","usei18n","useDateFormat","formatDate","parseDate","useLocale","defaultFilters","employee","fromDate","toDate","statuses","subunit","includePastEmps","leaveType","name","components","props","myLeaveList","type","Boolean","default","leaveStatuses","Array","Object","String","leaveStatus","setup","filters","id","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId","checkedItems","$t","locale","jsDateFormat","userDateFormat","rules","value","allowSameDate","serializedFilters","isArray","subunitId","includeEmployees","map","item","leaveTypeId","http","window","appGlobal","baseUrl","leavelistNormalizer","data","leaveDatePeriod","leaveBalances","duration","dates","durationType","startTime","endTime","leaveBreakdown","status","parseFloat","lengthDays","toFixed","join","length","period","balance","_balance","startDate","endDate","empName","leaveTypeName","deleted","date","employeeName","leaveBalance","days","noOfDays","comment","lastComment","actions","allowedActions","leaveActions","processLeaveRequestAction","processLeaveRequestBulkAction","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","leaveBulkActions","allActions","APPROVE","reduce","approvable","find","i","action","REJECT","rejectable","CANCEL","cancelable","items","headers","title","style","flex","slot","cellType","cellRenderer","showCommentModal","commentModalState","bulkActionModalState","beforeMount","filter","request","method","url","then","meta","leavePeriodDefined","currentLeavePeriod","finally","assign","methods","row","cellConfig","approve","reject","cancel","more","dropdownActions","context","onClick","onLeaveAction","push","options","$event","onLeaveDropdownAction","header","event","mode","actionType","$toast","updateSuccess","resetDataTable","onLeaveActionBulk","count","ids","index","confirmation","$refs","bulkActionModal","showDialog","success","message","onCommentModalClose","filterItems","onReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveListTable.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <slot\n      :filters=\"filters\"\n      :rules=\"rules\"\n      :filter-items=\"filterItems\"\n      :on-reset=\"onReset\"\n    ></slot>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <leave-list-table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        :bulk-actions=\"leaveBulkActions\"\n        @on-action-click=\"onLeaveActionBulk\"\n      >\n      </leave-list-table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n  <leave-comment-modal\n    v-if=\"showCommentModal\"\n    :id=\"commentModalState\"\n    @close=\"onCommentModalClose\"\n  >\n  </leave-comment-modal>\n  <leave-bulk-action-modal ref=\"bulkActionModal\" :data=\"bulkActionModalState\">\n  </leave-bulk-action-modal>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {computed, ref} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {truncate} from '@ohrm/core/util/helper/truncate';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useLeaveActions from '@/orangehrmLeavePlugin/util/composable/useLeaveActions';\nimport LeaveCommentsModal from '@/orangehrmLeavePlugin/components/LeaveCommentsModal';\nimport LeaveBulkActionModal from '@/orangehrmLeavePlugin/components/LeaveBulkActionModal';\nimport LeaveListTableHeader from '@/orangehrmLeavePlugin/components/LeaveListTableHeader';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nconst defaultFilters = {\n  employee: null,\n  fromDate: null,\n  toDate: null,\n  statuses: [],\n  subunit: null,\n  includePastEmps: false,\n  leaveType: null,\n};\n\nexport default {\n  name: 'LeaveListTable',\n\n  components: {\n    'leave-list-table-header': LeaveListTableHeader,\n    'leave-comment-modal': LeaveCommentsModal,\n    'leave-bulk-action-modal': LeaveBulkActionModal,\n  },\n\n  props: {\n    myLeaveList: {\n      type: Boolean,\n      default: false,\n    },\n    leaveStatuses: {\n      type: Array,\n      default: () => [],\n    },\n    employee: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    leaveType: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    leaveStatus: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.leaveType && {leaveType: props.leaveType}),\n      ...(props.fromDate && {fromDate: props.fromDate}),\n      ...(props.toDate && {toDate: props.toDate}),\n      ...(props.leaveStatus && {statuses: [props.leaveStatus]}),\n      ...(props.employee && {\n        employee: {\n          id: props.employee.empNumber,\n          label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n          isPastEmployee: props.employee.terminationId,\n        },\n      }),\n    });\n    const checkedItems = ref([]);\n    const {$t} = usei18n();\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n\n    const rules = {\n      fromDate: [required, validDateFormat(userDateFormat)],\n      toDate: [\n        required,\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('general.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      statuses: [required],\n      employee: [shouldNotExceedCharLength(100), validSelection],\n    };\n\n    const serializedFilters = computed(() => {\n      const statuses = Array.isArray(filters.value.statuses)\n        ? filters.value.statuses\n        : [];\n\n      return {\n        empNumber: filters.value.employee?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        subunitId: filters.value.subunit?.id,\n        includeEmployees: filters.value.includePastEmps\n          ? 'currentAndPast'\n          : 'onlyCurrent',\n        statuses: statuses.map((item) => item.id),\n        leaveTypeId: filters.value.leaveType?.id,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/leave/${\n        props.myLeaveList ? 'leave-requests' : 'employees/leave-requests'\n      }`,\n    );\n\n    const leavelistNormalizer = (data) => {\n      return data.map((item) => {\n        let leaveDatePeriod,\n          leaveStatuses,\n          leaveBalances = '';\n        const duration = item.dates.durationType?.type;\n\n        if (item.dates.fromDate) {\n          leaveDatePeriod = formatDate(\n            parseDate(item.dates.fromDate),\n            jsDateFormat,\n            {locale},\n          );\n        }\n        if (item.dates.toDate) {\n          leaveDatePeriod += ` to ${formatDate(\n            parseDate(item.dates.toDate),\n            jsDateFormat,\n            {locale},\n          )}`;\n        }\n        if (item.dates.startTime && item.dates.endTime) {\n          leaveDatePeriod += ` (${item.dates.startTime} - ${item.dates.endTime})`;\n        }\n        if (\n          duration === 'half_day_morning' ||\n          duration === 'half_day_afternoon'\n        ) {\n          leaveDatePeriod += ` ${$t('leave.half_day')}`;\n        }\n        if (Array.isArray(item.leaveBreakdown)) {\n          leaveStatuses = item.leaveBreakdown\n            .map(\n              (status) =>\n                `${status.name} (${parseFloat(status.lengthDays).toFixed(2)})`,\n            )\n            .join(', ');\n        }\n        if (Array.isArray(item.leaveBalances)) {\n          if (item.leaveBalances.length > 1) {\n            leaveBalances = item.leaveBalances\n              .map(({period, balance}) => {\n                const _balance = parseFloat(balance.balance).toFixed(2);\n                const startDate = formatDate(\n                  parseDate(period.startDate),\n                  jsDateFormat,\n                  {locale},\n                );\n                const endDate = formatDate(\n                  parseDate(period.endDate),\n                  jsDateFormat,\n                  {locale},\n                );\n                return `${_balance} (${startDate} - ${endDate})`;\n              })\n              .join(', ');\n          } else {\n            const balance = item.leaveBalances[0]?.balance.balance;\n            leaveBalances = balance ? parseFloat(balance).toFixed(2) : '0.00';\n          }\n        }\n\n        const empName = `${item.employee?.firstName} ${item.employee?.middleName} ${item.employee?.lastName}`;\n        const leaveTypeName = item.leaveType?.name;\n\n        if (item.employee?.terminationId) {\n          empName + ` (${$t('general.past_employee')})`;\n        }\n        if (item.leaveType?.deleted) {\n          leaveTypeName + ` (${$t('general.deleted')})`;\n        }\n\n        return {\n          id: item.id,\n          empNumber: item.employee?.empNumber,\n          date: leaveDatePeriod,\n          employeeName: empName,\n          leaveType: leaveTypeName,\n          leaveBalance: leaveBalances,\n          days: parseFloat(item.noOfDays).toFixed(2),\n          status: leaveStatuses,\n          comment: truncate(item.lastComment?.comment),\n          actions: item.allowedActions,\n        };\n      });\n    };\n\n    const {\n      leaveActions,\n      processLeaveRequestAction,\n      processLeaveRequestBulkAction,\n    } = useLeaveActions(http);\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: leavelistNormalizer,\n    });\n\n    const leaveBulkActions = computed(() => {\n      if (checkedItems.value.length > 0 && response.value.data) {\n        const allActions = checkedItems.value.map((item) => {\n          return response.value.data[item].actions;\n        });\n        return {\n          APPROVE: allActions.reduce(\n            (approvable, actions) =>\n              approvable && actions.find((i) => i.action === 'APPROVE'),\n            true,\n          ),\n          REJECT: allActions.reduce(\n            (rejectable, actions) =>\n              rejectable && actions.find((i) => i.action === 'REJECT'),\n            true,\n          ),\n          CANCEL: allActions.reduce(\n            (cancelable, actions) =>\n              cancelable && actions.find((i) => i.action === 'CANCEL'),\n            true,\n          ),\n        };\n      }\n      return null;\n    });\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      rules,\n      filters,\n      checkedItems,\n      leaveActions,\n      leaveBulkActions,\n      processLeaveRequestAction,\n      processLeaveRequestBulkAction,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {name: 'date', title: this.$t('general.date'), style: {flex: 1}},\n        {\n          name: 'employeeName',\n          title: this.$t('general.employee_name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'leaveType',\n          title: this.$t('leave.leave_type'),\n          style: {flex: 1},\n        },\n        {\n          name: 'leaveBalance',\n          title: this.$t('leave.leave_balance_days'),\n          style: {flex: 1},\n        },\n        {\n          name: 'days',\n          title: this.$t('leave.number_of_days'),\n          style: {flex: 1},\n        },\n        {name: 'status', title: this.$t('general.status'), style: {flex: 1}},\n        {\n          name: 'comment',\n          title: this.$t('general.comments'),\n          style: {flex: '5%'},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n          style: {\n            flex: this.myLeaveList ? '10%' : '20%',\n          },\n        },\n      ],\n      showCommentModal: false,\n      commentModalState: null,\n      bulkActionModalState: null,\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    if (this.filters.statuses.length === 0) {\n      this.filters.statuses = this.myLeaveList\n        ? this.leaveStatuses\n        : this.leaveStatuses.filter((status) => status.id === 1);\n    }\n    this.http\n      .request({method: 'GET', url: '/api/v2/leave/leave-periods'})\n      .then((response) => {\n        const {data, meta} = response.data;\n        if (meta.leavePeriodDefined) {\n          this.filters.fromDate =\n            this.filters.fromDate ?? meta?.currentLeavePeriod.startDate;\n          this.filters.toDate =\n            this.filters.toDate ?? meta?.currentLeavePeriod.endDate;\n        } else {\n          this.filters.fromDate = this.filters.fromDate ?? data[0]?.startDate;\n          this.filters.toDate = this.filters.toDate ?? data[0]?.endDate;\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n        Object.assign(defaultFilters, this.filters);\n      });\n  },\n\n  methods: {\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const {approve, reject, cancel, more} = this.leaveActions;\n      const dropdownActions = [\n        {label: this.$t('general.add_comment'), context: 'add_comment'},\n        {label: this.$t('leave.view_leave_details'), context: 'leave_details'},\n        {label: this.$t('leave.view_pim_info'), context: 'pim_details'},\n      ];\n\n      row.actions.map((item) => {\n        if (item.action === 'APPROVE') {\n          approve.props.label = this.$t('general.approve');\n          approve.props.onClick = () => this.onLeaveAction(row.id, 'APPROVE');\n          cellConfig.approve = approve;\n        }\n        if (item.action === 'REJECT') {\n          reject.props.label = this.$t('general.reject');\n          reject.props.onClick = () => this.onLeaveAction(row.id, 'REJECT');\n          cellConfig.reject = reject;\n        }\n        if (item.action === 'CANCEL') {\n          if (this.myLeaveList) {\n            cancel.props.label = this.$t('general.cancel');\n            cancel.props.onClick = () => this.onLeaveAction(row.id, 'CANCEL');\n            cellConfig.reject = cancel;\n          } else {\n            dropdownActions.push({\n              label: this.$t('leave.cancel_leave'),\n              context: 'cancel_leave',\n            });\n          }\n        }\n      });\n\n      more.props.options = dropdownActions;\n      more.props.onClick = ($event) => this.onLeaveDropdownAction($event, row);\n      cellConfig.more = more;\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    onLeaveDropdownAction(event, item) {\n      switch (event.context) {\n        case 'add_comment':\n          this.commentModalState = item.id;\n          this.showCommentModal = true;\n          break;\n        case 'cancel_leave':\n          this.onLeaveAction(item.id, 'CANCEL');\n          break;\n        case 'pim_details':\n          navigate('/pim/viewPersonalDetails/empNumber/{id}', {\n            id: item.empNumber,\n          });\n          break;\n        default:\n          navigate(\n            '/leave/viewLeaveRequest/{id}',\n            {id: item.id},\n            this.myLeaveList && {mode: 'my-leave'},\n          );\n      }\n    },\n    onLeaveAction(id, actionType) {\n      this.isLoading = true;\n      this.processLeaveRequestAction(id, actionType)\n        .then(() => {\n          this.$toast.updateSuccess();\n        })\n        .finally(this.resetDataTable);\n    },\n    async onLeaveActionBulk(actionType) {\n      this.isLoading = true;\n      this.bulkActionModalState = {\n        count: this.checkedItems.length,\n        action: actionType,\n      };\n\n      const ids = this.checkedItems.map((index) => {\n        return this.items.data[index].id;\n      });\n      const confirmation = await this.$refs.bulkActionModal.showDialog();\n\n      if (confirmation !== 'ok') {\n        this.isLoading = false;\n        return;\n      }\n\n      this.processLeaveRequestBulkAction(ids, actionType)\n        .then((response) => {\n          const {data} = response.data;\n          if (Array.isArray(data))\n            this.$toast.success({\n              title: this.$t('general.success'),\n              message: this.$t('leave.leave_requests_action', {\n                action: actionType,\n                count: data.length,\n              }),\n            });\n        })\n        .finally(() => {\n          this.bulkActionModalState = null;\n          this.resetDataTable();\n        });\n    },\n    onCommentModalClose() {\n      this.commentModalState = null;\n      this.showCommentModal = false;\n      this.resetDataTable();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onReset() {\n      this.filters = {...defaultFilters};\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n  .oxd-table-cell-actions > * {\n    margin: 0 !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}