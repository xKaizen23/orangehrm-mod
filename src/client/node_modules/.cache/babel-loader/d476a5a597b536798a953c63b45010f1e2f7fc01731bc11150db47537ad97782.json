{"ast":null,"code":"import { computed, ref } from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { endDateShouldBeAfterStartDate, required, validDateFormat } from '@/core/util/validation/rules';\nimport { yearRange } from '@ohrm/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    leavePeriod: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const filters = ref({\n      fromDate: props.leavePeriod.startDate,\n      toDate: props.leavePeriod.endDate\n    });\n    const serializedFilters = computed(() => {\n      return {\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate\n      };\n    });\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const dataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          name: item.name,\n          date: formatDate(parseDate(item.date), jsDateFormat, {\n            locale\n          }),\n          recurring: item.recurring ? 'Yes' : 'No',\n          length: item.lengthName\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/holidays');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: dataNormalizer\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      yearArray: [...yearRange(201)],\n      rules: {\n        fromDate: [required, validDateFormat(this.userDateFormat)],\n        toDate: [required, validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.filters.fromDate, this.$t('general.to_date_should_be_after_from_date'), {\n          allowSameDate: true\n        })]\n      },\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'date',\n        title: this.$t('general.date'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'length',\n        title: this.$t('leave.full_day_half_day'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'recurring',\n        title: this.$t('leave.repeats_annually'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/leave/saveHolidays');\n    },\n    onClickEdit(item) {\n      navigate('/leave/saveHolidays/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","DeleteConfirmationDialog","usePaginate","navigate","APIService","endDateShouldBeAfterStartDate","required","validDateFormat","yearRange","useDateFormat","formatDate","parseDate","useLocale","components","props","leavePeriod","type","Object","setup","filters","fromDate","startDate","toDate","endDate","serializedFilters","value","jsDateFormat","userDateFormat","locale","dataNormalizer","data","map","item","id","name","date","recurring","length","lengthName","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","yearArray","rules","$t","allowSameDate","headers","slot","title","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","methods","onClickAdd","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess","resetDataTable","filterItems"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\configure\\holiday\\Holiday.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('leave.holidays')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.fromDate\"\n                :label=\"$t('general.from')\"\n                :rules=\"rules.fromDate\"\n                :years=\"yearArray\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.toDate\"\n                :label=\"$t('general.to')\"\n                :rules=\"rules.toDate\"\n                :years=\"yearArray\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  endDateShouldBeAfterStartDate,\n  required,\n  validDateFormat,\n} from '@/core/util/validation/rules';\nimport {yearRange} from '@ohrm/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    leavePeriod: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      fromDate: props.leavePeriod.startDate,\n      toDate: props.leavePeriod.endDate,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n      };\n    });\n\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const dataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          name: item.name,\n          date: formatDate(parseDate(item.date), jsDateFormat, {locale}),\n          recurring: item.recurring ? 'Yes' : 'No',\n          length: item.lengthName,\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/holidays',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: dataNormalizer,\n    });\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      yearArray: [...yearRange(201)],\n      rules: {\n        fromDate: [required, validDateFormat(this.userDateFormat)],\n        toDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.filters.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n      },\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: 2},\n        },\n        {name: 'date', title: this.$t('general.date'), style: {flex: 2}},\n        {\n          name: 'length',\n          title: this.$t('leave.full_day_half_day'),\n          style: {flex: 2},\n        },\n        {\n          name: 'recurring',\n          title: this.$t('leave.repeats_annually'),\n          style: {flex: 2},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/leave/saveHolidays');\n    },\n    onClickEdit(item) {\n      navigate('/leave/saveHolidays/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}