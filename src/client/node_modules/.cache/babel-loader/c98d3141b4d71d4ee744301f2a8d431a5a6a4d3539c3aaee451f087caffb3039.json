{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e74c83c4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-buzz-post-body\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_video_frame = _resolveComponent(\"video-frame\");\n  const _component_oxd_icon = _resolveComponent(\"oxd-icon\");\n  const _component_photo_frame = _resolveComponent(\"photo-frame\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.post.text ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    tag: \"p\",\n    class: _normalizeClass($setup.postClasses)\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($props.post.text), 1)]),\n    _: 1\n  }, 8, [\"class\"])) : _createCommentVNode(\"\", true), _withDirectives(_createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-buzz-post-body-readmore\",\n    onClick: $setup.onClickReadMore\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('buzz.read_more')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"]), [[_vShow, !_ctx.readMore]]), $props.post.text && ($props.post.type === 'video' || $props.post.type === 'photo') ? (_openBlock(), _createElementBlock(\"br\", _hoisted_2)) : _createCommentVNode(\"\", true), $props.post.type === 'video' ? (_openBlock(), _createBlock(_component_video_frame, {\n    key: 2,\n    \"video-src\": $props.post.video.link\n  }, null, 8, [\"video-src\"])) : _createCommentVNode(\"\", true), $props.post.type === 'photo' ? (_openBlock(), _createBlock(_component_photo_frame, {\n    key: 3,\n    media: $props.post.photoIds\n  }, {\n    content: _withCtx(({\n      index\n    }) => [index === 3 && $props.post.photoIds.length === 5 ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"orangehrm-buzz-post-body-picture --more\",\n      onClick: $event => $setup.onClickPicture(index)\n    }, [_createVNode(_component_oxd_text, {\n      tag: \"p\",\n      class: \"orangehrm-buzz-post-body-more\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"+1\")]),\n      _: 1\n    }), _createVNode(_component_oxd_icon, {\n      class: \"orangehrm-buzz-post-body-more\",\n      name: \"images\"\n    })], 8, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"orangehrm-buzz-post-body-picture\",\n      onClick: $event => $setup.onClickPicture(index)\n    }, null, 8, _hoisted_4))]),\n    _: 1\n  }, 8, [\"media\"])) : _createCommentVNode(\"\", true), $setup.originalPost ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 4\n  }, [$props.post.text || $props.post.type === 'video' || $props.post.type === 'photo' ? (_openBlock(), _createElementBlock(\"br\", _hoisted_5)) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-buzz-post-body-employee\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.employee), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-buzz-post-body-date\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.dateTime), 1)]),\n    _: 1\n  }), $setup.originalPost.text ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    tag: \"p\",\n    class: \"orangehrm-buzz-post-body-original-text\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.text), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)], 64)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;uBAArCC,oBAgDM,OAhDNC,UAgDM,GA/CYC,WAAI,CAACC,IAAI,kBAAzBC,aAEWC;;IAFgBC,GAAG,EAAC,GAAG;IAAEP,KAAK,kBAAEQ,kBAAW;;sBACpD,MAAe,mCAAZL,WAAI,CAACC,IAAI;;qEAEdK,aAOWH;IALTC,GAAG,EAAC,GAAG;IACPP,KAAK,EAAC,mCAAmC;IACxCU,OAAK,EAAEF;;sBAER,MAA0B,mCAAvBG,OAAE;;iCALIA,aAAQ,KAOTR,WAAI,CAACC,IAAI,KAAKD,WAAI,CAACS,IAAI,gBAAgBT,WAAI,CAACS,IAAI,+BAA1DX,oBAA2E,oDACxDE,WAAI,CAACS,IAAI,8BAA5BP,aACcQ;;IAD6B,WAAS,EAAEV,WAAI,CAACW,KAAK,CAACC;+DAE9CZ,WAAI,CAACS,IAAI,8BAA5BP,aAgBcW;;IAhB6BC,KAAK,EAAEd,WAAI,CAACe;;IAC1CC,OAAO,WAChB,CAOM;MARaC;IAAK,OAEhBA,KAAK,UAAUjB,WAAI,CAACe,QAAQ,CAACG,MAAM,wBAD3CpB,oBAOM;;MALJD,KAAK,EAAC,yCAAyC;MAC9CU,OAAK,YAAEF,qBAAc,CAACY,KAAK;QAE5BX,aAAqEH;MAA3DC,GAAG,EAAC,GAAG;MAACP,KAAK,EAAC;;wBAAgC,MAAE,kBAAF,IAAE;;QAC1DS,aAAgEa;MAAtDtB,KAAK,EAAC,+BAA+B;MAACuB,IAAI,EAAC;0CAEvDtB,oBAIO;;MAFLD,KAAK,EAAC,kCAAkC;MACvCU,OAAK,YAAEF,qBAAc,CAACY,KAAK;;;qDAIlBZ,mBAAY,kBAA5BP,oBAeWuB;IAAAC;EAAA,IAdCtB,WAAI,CAACC,IAAI,IAAID,WAAI,CAACS,IAAI,gBAAgBT,WAAI,CAACS,IAAI,8BAAzDX,oBAAyE,oDACzEQ,aAEWH;IAFDC,GAAG,EAAC,GAAG;IAACP,KAAK,EAAC;;sBACtB,MAA2B,mCAAxBQ,mBAAY,CAACkB,QAAQ;;MAE1BjB,aAEWH;IAFDC,GAAG,EAAC,GAAG;IAACP,KAAK,EAAC;;sBACtB,MAA2B,mCAAxBQ,mBAAY,CAACmB,QAAQ;;MAGlBnB,mBAAY,CAACJ,IAAI,kBADzBC,aAMWC;;IAJTC,GAAG,EAAC,GAAG;IACPP,KAAK,EAAC;;sBAEN,MAAuB,mCAApBQ,mBAAY,CAACJ,IAAI","names":["class","_createElementBlock","_hoisted_1","$props","text","_createBlock","_component_oxd_text","tag","$setup","_createVNode","onClick","_ctx","type","_component_video_frame","video","link","_component_photo_frame","media","photoIds","content","index","length","_component_oxd_icon","name","_Fragment","key","employee","dateTime"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostBody.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-post-body\">\n    <oxd-text v-if=\"post.text\" tag=\"p\" :class=\"postClasses\">\n      {{ post.text }}\n    </oxd-text>\n    <oxd-text\n      v-show=\"!readMore\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-post-body-readmore\"\n      @click=\"onClickReadMore\"\n    >\n      {{ $t('buzz.read_more') }}\n    </oxd-text>\n    <br v-if=\"post.text && (post.type === 'video' || post.type === 'photo')\" />\n    <video-frame v-if=\"post.type === 'video'\" :video-src=\"post.video.link\">\n    </video-frame>\n    <photo-frame v-if=\"post.type === 'photo'\" :media=\"post.photoIds\">\n      <template #content=\"{index}\">\n        <div\n          v-if=\"index === 3 && post.photoIds.length === 5\"\n          class=\"orangehrm-buzz-post-body-picture --more\"\n          @click=\"onClickPicture(index)\"\n        >\n          <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-more\">+1</oxd-text>\n          <oxd-icon class=\"orangehrm-buzz-post-body-more\" name=\"images\" />\n        </div>\n        <div\n          v-else\n          class=\"orangehrm-buzz-post-body-picture\"\n          @click=\"onClickPicture(index)\"\n        ></div>\n      </template>\n    </photo-frame>\n    <template v-if=\"originalPost\">\n      <br v-if=\"post.text || post.type === 'video' || post.type === 'photo'\" />\n      <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-employee\">\n        {{ originalPost.employee }}\n      </oxd-text>\n      <oxd-text tag=\"p\" class=\"orangehrm-buzz-post-body-date\">\n        {{ originalPost.dateTime }}\n      </oxd-text>\n      <oxd-text\n        v-if=\"originalPost.text\"\n        tag=\"p\"\n        class=\"orangehrm-buzz-post-body-original-text\"\n      >\n        {{ originalPost.text }}\n      </oxd-text>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'PostBody',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close', 'selectPhoto'],\n\n  setup(props, context) {\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const state = reactive({\n      readMore: new String(props.post?.text).length < 500,\n    });\n\n    const postClasses = computed(() => ({\n      'orangehrm-buzz-post-body-text': true,\n      '--truncate': state.readMore === false,\n    }));\n\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n\n    const onClickPicture = (index) => {\n      context.emit('selectPhoto', index);\n    };\n\n    const originalPost = computed(() => {\n      if (props.post.originalPost === null) return null;\n      const {createdDate, createdTime} = props.post.originalPost;\n\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return {\n        text: props.post.originalPost.text,\n        employee: $tEmpName(props.post.originalPost.employee, {\n          includeMiddle: true,\n          excludePastEmpTag: false,\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale,\n        }),\n      };\n    });\n\n    return {\n      postClasses,\n      originalPost,\n      onClickPicture,\n      onClickReadMore,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style src=\"./post-body.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}