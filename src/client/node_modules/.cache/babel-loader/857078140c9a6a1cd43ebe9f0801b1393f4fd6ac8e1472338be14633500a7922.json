{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nexport default {\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/employment-statuses');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const employmentStatusValidation = createUniqueValidator('EmploymentStatus', 'name');\n    return {\n      http,\n      employmentStatusValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      employmentStatus: {\n        id: '',\n        name: ''\n      },\n      rules: {\n        name: [required, this.employmentStatusValidation, shouldNotExceedCharLength(50)]\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        name: this.employmentStatus.name\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/admin/employmentStatus');\n    }\n  }\n};","map":{"version":3,"mappings":"AAwDA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AACzC,OAAOC,mBAAkB,MAAO,4CAA4C;AAE5E,eAAe;EACbC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIL,UAAU,CACzBM,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,mCAAmC,CACpC;IACD,MAAM;MAACC;IAAqB,IAAIN,mBAAmB,CAACE,IAAI,CAAC;IACzD,MAAMK,0BAAyB,GAAID,qBAAqB,CACtD,kBAAkB,EAClB,MAAM,CACP;IAED,OAAO;MACLJ,IAAI;MACJK;IACF,CAAC;EACH,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,gBAAgB,EAAE;QAChBC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLD,IAAI,EAAE,CACJd,QAAQ,EACR,IAAI,CAACS,0BAA0B,EAC/BR,yBAAyB,CAAC,EAAE,CAAC;MAEjC;IACF,CAAC;EACH,CAAC;EAEDe,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACN,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACP,IAAG,CACLc,MAAM,CAAC;QACNJ,IAAI,EAAE,IAAI,CAACF,gBAAgB,CAACE;MAC9B,CAAC,EACAK,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAF,IAAI,CAAC,MAAM;QACV,IAAI,CAACG,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACTxB,QAAQ,CAAC,yBAAyB,CAAC;IACrC;EACF;AACF,CAAC","names":["navigate","APIService","required","shouldNotExceedCharLength","useServerValidation","setup","http","window","appGlobal","baseUrl","createUniqueValidator","employmentStatusValidation","data","isLoading","employmentStatus","id","name","rules","methods","onSave","create","then","$toast","saveSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\employmentStatus\\SaveEmploymentStatus.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.add_employment_status') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"employmentStatus.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nexport default {\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/employment-statuses',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const employmentStatusValidation = createUniqueValidator(\n      'EmploymentStatus',\n      'name',\n    );\n\n    return {\n      http,\n      employmentStatusValidation,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      employmentStatus: {\n        id: '',\n        name: '',\n      },\n      rules: {\n        name: [\n          required,\n          this.employmentStatusValidation,\n          shouldNotExceedCharLength(50),\n        ],\n      },\n    };\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          name: this.employmentStatus.name,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/admin/employmentStatus');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}