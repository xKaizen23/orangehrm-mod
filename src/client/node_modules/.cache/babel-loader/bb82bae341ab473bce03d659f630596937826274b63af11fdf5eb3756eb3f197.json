{"ast":null,"code":"import { required, digitsOnly, validPortRange, validHostnameFormat, shouldNotExceedCharLength, numberShouldBeBetweenMinAndMaxValue } from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport { reloadPage } from '@/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport LdapSyncConnection from '@/orangehrmAdminPlugin/components/LdapSyncConnection';\nimport LdapTestConnectionModal from '@/orangehrmAdminPlugin/components/LdapTestConnectionModal';\nimport { OxdAlert, OxdIcon, OxdSwitchInput } from '@ohrm/oxd';\nconst configurationModel = {\n  enable: false,\n  hostname: 'localhost',\n  port: 389,\n  encryption: null,\n  ldapImplementation: null,\n  bindAnonymously: true,\n  bindUserDN: null,\n  bindUserPassword: null,\n  baseDistinguishedName: null,\n  searchScope: null,\n  userNameAttribute: 'cn',\n  userSearchFilter: 'objectClass=person',\n  userUniqueIdAttribute: null,\n  mergeLDAPUsersWithExistingSystemUsers: false,\n  syncInterval: 1,\n  employeeSelectorMapping: '',\n  hasBindUserPassword: false\n};\nconst dataMappingModel = {\n  firstName: 'givenName',\n  lastName: 'sn',\n  middleName: null,\n  userStatus: null,\n  workEmail: null,\n  employeeId: null\n};\nexport default {\n  components: {\n    'oxd-icon': OxdIcon,\n    'oxd-alert': OxdAlert,\n    'oxd-switch-input': OxdSwitchInput,\n    'ldap-sync-connection': LdapSyncConnection,\n    'ldap-test-connection-modal': LdapTestConnectionModal\n  },\n  props: {\n    showSync: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/ldap-config');\n    const {\n      formRef,\n      invalid,\n      validate\n    } = useForm();\n    return {\n      http,\n      formRef,\n      invalid,\n      validate\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      configuration: {\n        ...configurationModel,\n        dataMapping: {\n          ...dataMappingModel\n        }\n      },\n      encryptionOptions: [{\n        id: 'tls',\n        label: this.$t('admin.tls')\n      }, {\n        id: 'ssl',\n        label: this.$t('admin.ssl')\n      }],\n      searchScopeOptions: [{\n        id: 'sub',\n        label: this.$t('admin.subtree')\n      }, {\n        id: 'one',\n        label: this.$t('admin.one_level')\n      }],\n      ldapImplementationOptions: [{\n        id: 'OpenLDAP',\n        label: this.$t('admin.open_ldap_v3')\n      }, {\n        id: 'ActiveDirectory',\n        label: this.$t('admin.ms_active_directory')\n      }],\n      rules: {\n        hostname: [required, validHostnameFormat, shouldNotExceedCharLength(255)],\n        port: [required, validPortRange(5, 0, 65535)],\n        bindUserDN: [required, shouldNotExceedCharLength(255)],\n        bindUserPassword: [v => this.configuration.hasBindUserPassword || required(v), shouldNotExceedCharLength(255)],\n        baseDistinguishedName: [required, shouldNotExceedCharLength(255)],\n        userNameAttribute: [required, shouldNotExceedCharLength(100)],\n        userSearchFilter: [required, shouldNotExceedCharLength(100)],\n        userUniqueIdAttribute: [shouldNotExceedCharLength(100)],\n        firstNameAttribute: [required, shouldNotExceedCharLength(100)],\n        lastNameAttribute: [required, shouldNotExceedCharLength(100)],\n        syncInterval: [required, digitsOnly, numberShouldBeBetweenMinAndMaxValue(1, 23)],\n        middleNameAttribute: [shouldNotExceedCharLength(100)],\n        userStatusAttribute: [shouldNotExceedCharLength(100)],\n        workEmailAttribute: [v => this.configuration.employeeSelectorMapping === 'workEmail' ? required(v) : true, shouldNotExceedCharLength(100)],\n        employeeIdAttribute: [v => this.configuration.employeeSelectorMapping === 'employeeId' ? required(v) : true, shouldNotExceedCharLength(100)]\n      },\n      testModalState: null\n    };\n  },\n  computed: {\n    passwordPlaceHolder() {\n      return this.configuration.hasBindUserPassword ? '********' : null;\n    },\n    workEmailLabelClasses() {\n      return {\n        'oxd-input-field-required': this.configuration.employeeSelectorMapping === 'workEmail'\n      };\n    },\n    employeeIdLabelClasses() {\n      return {\n        'oxd-input-field-required': this.configuration.employeeSelectorMapping === 'employeeId'\n      };\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      const {\n        userLookupSettings\n      } = data;\n      const userLookupSetting = userLookupSettings[0];\n      this.configuration.enable = data.enable;\n      this.configuration.hostname = data.hostname;\n      this.configuration.port = data.port;\n      this.configuration.encryption = this.encryptionOptions.find(option => option.id === data.encryption);\n      this.configuration.ldapImplementation = this.ldapImplementationOptions.find(option => option.id === data.ldapImplementation) || this.ldapImplementationOptions[0];\n      this.configuration.bindAnonymously = data.bindAnonymously;\n      this.configuration.bindUserDN = data.bindUserDN;\n      this.configuration.hasBindUserPassword = data.hasBindUserPassword;\n      if (userLookupSetting) {\n        this.configuration.baseDistinguishedName = userLookupSetting?.baseDN;\n        this.configuration.userNameAttribute = userLookupSetting?.userNameAttribute;\n        this.configuration.userSearchFilter = userLookupSetting?.userSearchFilter;\n        this.configuration.userUniqueIdAttribute = userLookupSetting?.userUniqueIdAttribute;\n        if (Array.isArray(userLookupSetting?.employeeSelectorMapping)) {\n          if (userLookupSetting.employeeSelectorMapping.length === 0) {\n            this.configuration.employeeSelectorMapping = '';\n          } else {\n            this.configuration.employeeSelectorMapping = userLookupSetting.employeeSelectorMapping[0]['field'];\n          }\n        }\n      }\n      this.configuration.searchScope = this.searchScopeOptions.find(option => option.id === userLookupSetting?.searchScope) || this.searchScopeOptions[0];\n      this.configuration.dataMapping = data.dataMapping;\n      this.configuration.mergeLDAPUsersWithExistingSystemUsers = data.mergeLDAPUsersWithExistingSystemUsers;\n      this.configuration.syncInterval = data.syncInterval;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onClickTest() {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        this.isLoading = true;\n        const data = this.getRequestBody();\n        delete data.enable;\n        delete data.syncInterval;\n        this.http.request({\n          method: 'POST',\n          url: '/api/v2/admin/ldap-test-connection',\n          data\n        }).then(response => {\n          const {\n            data\n          } = response.data;\n          this.testModalState = data;\n        }).finally(() => this.isLoading = false);\n      });\n    },\n    getRequestBody() {\n      let employeeSelectorMapping;\n      if (this.configuration.employeeSelectorMapping) {\n        employeeSelectorMapping = [{\n          field: this.configuration.employeeSelectorMapping,\n          attributeName: this.configuration.dataMapping[this.configuration.employeeSelectorMapping]\n        }];\n      }\n      return {\n        enable: this.configuration.enable,\n        hostname: this.configuration.hostname,\n        port: parseInt(this.configuration.port),\n        encryption: this.configuration.encryption?.id || 'none',\n        ldapImplementation: this.configuration.ldapImplementation?.id,\n        bindAnonymously: this.configuration.bindAnonymously,\n        bindUserDN: this.configuration.bindUserDN,\n        bindUserPassword: this.configuration.bindUserPassword,\n        userLookupSettings: [{\n          baseDN: this.configuration.baseDistinguishedName,\n          searchScope: this.configuration.searchScope?.id,\n          userNameAttribute: this.configuration.userNameAttribute,\n          userSearchFilter: this.configuration.userSearchFilter,\n          userUniqueIdAttribute: this.configuration.userUniqueIdAttribute,\n          employeeSelectorMapping: employeeSelectorMapping || []\n        }],\n        dataMapping: this.configuration.dataMapping,\n        mergeLDAPUsersWithExistingSystemUsers: this.configuration.mergeLDAPUsersWithExistingSystemUsers,\n        syncInterval: parseInt(this.configuration.syncInterval)\n      };\n    },\n    onClickSave() {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        this.isLoading = true;\n        this.http.request({\n          method: 'PUT',\n          data: this.getRequestBody()\n        }).then(() => {\n          return this.$toast.updateSuccess();\n        }).finally(() => reloadPage());\n      });\n    },\n    onCloseTestModal() {\n      this.testModalState = null;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","digitsOnly","validPortRange","validHostnameFormat","shouldNotExceedCharLength","numberShouldBeBetweenMinAndMaxValue","useForm","reloadPage","APIService","LdapSyncConnection","LdapTestConnectionModal","OxdAlert","OxdIcon","OxdSwitchInput","configurationModel","enable","hostname","port","encryption","ldapImplementation","bindAnonymously","bindUserDN","bindUserPassword","baseDistinguishedName","searchScope","userNameAttribute","userSearchFilter","userUniqueIdAttribute","mergeLDAPUsersWithExistingSystemUsers","syncInterval","employeeSelectorMapping","hasBindUserPassword","dataMappingModel","firstName","lastName","middleName","userStatus","workEmail","employeeId","components","props","showSync","type","Boolean","default","setup","http","window","appGlobal","baseUrl","formRef","invalid","validate","data","isLoading","configuration","dataMapping","encryptionOptions","id","label","$t","searchScopeOptions","ldapImplementationOptions","rules","v","firstNameAttribute","lastNameAttribute","middleNameAttribute","userStatusAttribute","workEmailAttribute","employeeIdAttribute","testModalState","computed","passwordPlaceHolder","workEmailLabelClasses","employeeIdLabelClasses","beforeMount","getAll","then","response","userLookupSettings","userLookupSetting","find","option","baseDN","Array","isArray","length","finally","methods","onClickTest","getRequestBody","request","method","url","field","attributeName","parseInt","onClickSave","$toast","updateSuccess","onCloseTestModal"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\ldap\\LdapConfiguration.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.ldap_configuration') }}\n        </oxd-text>\n        <oxd-switch-input\n          v-model=\"configuration.enable\"\n          label-position=\"left\"\n          :option-label=\"$t('general.enable')\"\n        />\n      </div>\n      <oxd-divider />\n\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\">\n        <oxd-text tag=\"p\" class=\"orangehrm-subtitle\">\n          {{ $t('admin.server_settings') }}\n        </oxd-text>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.hostname\"\n                :label=\"$t('admin.host')\"\n                :rules=\"rules.hostname\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.ldap_host_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-column-half\">\n              <oxd-input-field\n                v-model=\"configuration.port\"\n                :label=\"$t('admin.port')\"\n                :rules=\"rules.port\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.port_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <oxd-input-field\n                v-model=\"configuration.encryption\"\n                type=\"select\"\n                :options=\"encryptionOptions\"\n                :label=\"$t('admin.encryption')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-3\">\n              <oxd-input-field\n                v-model=\"configuration.ldapImplementation\"\n                type=\"select\"\n                :show-empty-selector=\"false\"\n                :options=\"ldapImplementationOptions\"\n                :label=\"$t('admin.ldap_implementation')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider class=\"orangehrm-form-divider\" />\n\n        <oxd-text tag=\"p\" class=\"orangehrm-subtitle\">\n          {{ $t('admin.bind_settings') }}\n        </oxd-text>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"orangehrm-ldap-switch\">\n              <oxd-text tag=\"p\" class=\"orangehrm-ldap-switch-text\">\n                {{ $t('admin.bind_anonymously') }}\n              </oxd-text>\n              <oxd-switch-input v-model=\"configuration.bindAnonymously\" />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row v-if=\"!configuration.bindAnonymously\">\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.bindUserDN\"\n                :label=\"$t('admin.distinguished_name')\"\n                :rules=\"rules.bindUserDN\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.bindUserPassword\"\n                type=\"password\"\n                :label=\"$t('general.password')\"\n                :placeholder=\"passwordPlaceHolder\"\n                :rules=\"rules.bindUserPassword\"\n                :required=\"!configuration.hasBindUserPassword\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider class=\"orangehrm-form-divider\" />\n\n        <oxd-text tag=\"p\" class=\"orangehrm-subtitle\">\n          {{ $t('admin.user_lookup_settings') }}\n        </oxd-text>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.baseDistinguishedName\"\n                :label=\"$t('admin.base_distinguished_name')\"\n                :rules=\"rules.baseDistinguishedName\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <oxd-input-field\n                v-model=\"configuration.searchScope\"\n                type=\"select\"\n                :show-empty-selector=\"false\"\n                :options=\"searchScopeOptions\"\n                :label=\"$t('admin.search_scope')\"\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.search_scope_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-3\">\n              <oxd-input-field\n                v-model=\"configuration.userNameAttribute\"\n                :label=\"$t('admin.user_name_attribute')\"\n                :rules=\"rules.userNameAttribute\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.user_name_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-4\">\n              <oxd-input-field\n                v-model=\"configuration.userSearchFilter\"\n                :label=\"$t('admin.user_search_filter')\"\n                :rules=\"rules.userSearchFilter\"\n                required\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.user_search_filter_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-5\">\n              <oxd-input-field\n                v-model=\"configuration.userUniqueIdAttribute\"\n                :label=\"$t('admin.user_unique_id_attribute')\"\n                :rules=\"rules.userUniqueIdAttribute\"\n              />\n              <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n                {{ $t('admin.user_unique_attribute_input_hint') }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider class=\"orangehrm-form-divider\" />\n\n        <oxd-text tag=\"p\" class=\"orangehrm-subtitle\">\n          {{ $t('admin.data_mapping') }}\n        </oxd-text>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-ldap-grid\">\n            <oxd-grid-item class=\"orangehrm-ldap-grid-header\">\n              <oxd-text tag=\"p\">\n                {{ $t('admin.field_in_orangehrm') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-ldap-grid-header\">\n              <oxd-text tag=\"p\">\n                {{ $t('admin.field_in_ldap_directory') }}\n              </oxd-text>\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-ldap-grid-header\">\n              <oxd-text tag=\"p\">\n                {{\n                  $t('admin.use_this_field_as_the_employee_user_mapping_field')\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\" class=\"oxd-input-field-required\">\n                {{ $t('general.first_name') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.dataMapping.firstName\"\n                :rules=\"rules.firstNameAttribute\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item></oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\">\n                {{ $t('general.middle_name') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.dataMapping.middleName\"\n                :rules=\"rules.middleNameAttribute\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item></oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\" class=\"oxd-input-field-required\">\n                {{ $t('general.last_name') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.dataMapping.lastName\"\n                :rules=\"rules.lastNameAttribute\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item></oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\">\n                {{ $t('general.user_status') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"configuration.dataMapping.userStatus\"\n                :rules=\"rules.userStatusAttribute\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item></oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\" :class=\"workEmailLabelClasses\">\n                {{ $t('general.work_email') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                :key=\"configuration.employeeSelectorMapping\"\n                v-model=\"configuration.dataMapping.workEmail\"\n                :rules=\"rules.workEmailAttribute\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-switch-input\n                v-model=\"configuration.employeeSelectorMapping\"\n                true-value=\"workEmail\"\n              />\n            </oxd-grid-item>\n\n            <oxd-grid-item class=\"orangehrm-ldap-grid-content\">\n              <oxd-text tag=\"p\" :class=\"employeeIdLabelClasses\">\n                {{ $t('general.employee_id') }}\n              </oxd-text>\n              <oxd-icon class=\"orangehrm-ldap-grid-icon\" name=\"arrow-left\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                :key=\"configuration.employeeSelectorMapping\"\n                v-model=\"configuration.dataMapping.employeeId\"\n                :rules=\"rules.employeeIdAttribute\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-switch-input\n                v-model=\"configuration.employeeSelectorMapping\"\n                true-value=\"employeeId\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider class=\"orangehrm-form-divider\" />\n\n        <oxd-text tag=\"p\" class=\"orangehrm-subtitle\">\n          {{ $t('admin.additional_settings') }}\n        </oxd-text>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"orangehrm-ldap-switch --offset-row-1\">\n              <oxd-text tag=\"p\" class=\"orangehrm-ldap-switch-text\">\n                {{ $t('admin.merge_ldap_users_with_existing_system_users') }}\n              </oxd-text>\n              <oxd-switch-input\n                v-model=\"configuration.mergeLDAPUsersWithExistingSystemUsers\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <oxd-input-field\n                v-model=\"configuration.syncInterval\"\n                :label=\"$t('admin.sync_interval')\"\n                :rules=\"rules.syncInterval\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-alert\n          type=\"warn\"\n          :show=\"true\"\n          :message=\"$t('admin.ldap_configuration_warning_message')\"\n        ></oxd-alert>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('admin.test_connection')\"\n            @click=\"onClickTest\"\n          />\n          <oxd-button\n            type=\"button\"\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.save')\"\n            @click=\"onClickSave\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n\n    <ldap-test-connection-modal\n      v-if=\"testModalState\"\n      :data=\"testModalState\"\n      @close=\"onCloseTestModal\"\n    ></ldap-test-connection-modal>\n\n    <br />\n\n    <ldap-sync-connection v-if=\"showSync\"></ldap-sync-connection>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  digitsOnly,\n  validPortRange,\n  validHostnameFormat,\n  shouldNotExceedCharLength,\n  numberShouldBeBetweenMinAndMaxValue,\n} from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport {reloadPage} from '@/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport LdapSyncConnection from '@/orangehrmAdminPlugin/components/LdapSyncConnection';\nimport LdapTestConnectionModal from '@/orangehrmAdminPlugin/components/LdapTestConnectionModal';\nimport {OxdAlert, OxdIcon, OxdSwitchInput} from '@ohrm/oxd';\n\nconst configurationModel = {\n  enable: false,\n  hostname: 'localhost',\n  port: 389,\n  encryption: null,\n  ldapImplementation: null,\n  bindAnonymously: true,\n  bindUserDN: null,\n  bindUserPassword: null,\n  baseDistinguishedName: null,\n  searchScope: null,\n  userNameAttribute: 'cn',\n  userSearchFilter: 'objectClass=person',\n  userUniqueIdAttribute: null,\n  mergeLDAPUsersWithExistingSystemUsers: false,\n  syncInterval: 1,\n  employeeSelectorMapping: '',\n  hasBindUserPassword: false,\n};\n\nconst dataMappingModel = {\n  firstName: 'givenName',\n  lastName: 'sn',\n  middleName: null,\n  userStatus: null,\n  workEmail: null,\n  employeeId: null,\n};\n\nexport default {\n  components: {\n    'oxd-icon': OxdIcon,\n    'oxd-alert': OxdAlert,\n    'oxd-switch-input': OxdSwitchInput,\n    'ldap-sync-connection': LdapSyncConnection,\n    'ldap-test-connection-modal': LdapTestConnectionModal,\n  },\n\n  props: {\n    showSync: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/ldap-config',\n    );\n    const {formRef, invalid, validate} = useForm();\n\n    return {\n      http,\n      formRef,\n      invalid,\n      validate,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      configuration: {\n        ...configurationModel,\n        dataMapping: {...dataMappingModel},\n      },\n      encryptionOptions: [\n        {\n          id: 'tls',\n          label: this.$t('admin.tls'),\n        },\n        {\n          id: 'ssl',\n          label: this.$t('admin.ssl'),\n        },\n      ],\n      searchScopeOptions: [\n        {\n          id: 'sub',\n          label: this.$t('admin.subtree'),\n        },\n        {\n          id: 'one',\n          label: this.$t('admin.one_level'),\n        },\n      ],\n      ldapImplementationOptions: [\n        {\n          id: 'OpenLDAP',\n          label: this.$t('admin.open_ldap_v3'),\n        },\n        {\n          id: 'ActiveDirectory',\n          label: this.$t('admin.ms_active_directory'),\n        },\n      ],\n      rules: {\n        hostname: [\n          required,\n          validHostnameFormat,\n          shouldNotExceedCharLength(255),\n        ],\n        port: [required, validPortRange(5, 0, 65535)],\n        bindUserDN: [required, shouldNotExceedCharLength(255)],\n        bindUserPassword: [\n          (v) => this.configuration.hasBindUserPassword || required(v),\n          shouldNotExceedCharLength(255),\n        ],\n        baseDistinguishedName: [required, shouldNotExceedCharLength(255)],\n        userNameAttribute: [required, shouldNotExceedCharLength(100)],\n        userSearchFilter: [required, shouldNotExceedCharLength(100)],\n        userUniqueIdAttribute: [shouldNotExceedCharLength(100)],\n        firstNameAttribute: [required, shouldNotExceedCharLength(100)],\n        lastNameAttribute: [required, shouldNotExceedCharLength(100)],\n        syncInterval: [\n          required,\n          digitsOnly,\n          numberShouldBeBetweenMinAndMaxValue(1, 23),\n        ],\n        middleNameAttribute: [shouldNotExceedCharLength(100)],\n        userStatusAttribute: [shouldNotExceedCharLength(100)],\n        workEmailAttribute: [\n          (v) =>\n            this.configuration.employeeSelectorMapping === 'workEmail'\n              ? required(v)\n              : true,\n          shouldNotExceedCharLength(100),\n        ],\n        employeeIdAttribute: [\n          (v) =>\n            this.configuration.employeeSelectorMapping === 'employeeId'\n              ? required(v)\n              : true,\n          shouldNotExceedCharLength(100),\n        ],\n      },\n      testModalState: null,\n    };\n  },\n  computed: {\n    passwordPlaceHolder() {\n      return this.configuration.hasBindUserPassword ? '********' : null;\n    },\n    workEmailLabelClasses() {\n      return {\n        'oxd-input-field-required':\n          this.configuration.employeeSelectorMapping === 'workEmail',\n      };\n    },\n    employeeIdLabelClasses() {\n      return {\n        'oxd-input-field-required':\n          this.configuration.employeeSelectorMapping === 'employeeId',\n      };\n    },\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        const {userLookupSettings} = data;\n        const userLookupSetting = userLookupSettings[0];\n        this.configuration.enable = data.enable;\n        this.configuration.hostname = data.hostname;\n        this.configuration.port = data.port;\n        this.configuration.encryption = this.encryptionOptions.find(\n          (option) => option.id === data.encryption,\n        );\n        this.configuration.ldapImplementation =\n          this.ldapImplementationOptions.find(\n            (option) => option.id === data.ldapImplementation,\n          ) || this.ldapImplementationOptions[0];\n\n        this.configuration.bindAnonymously = data.bindAnonymously;\n        this.configuration.bindUserDN = data.bindUserDN;\n        this.configuration.hasBindUserPassword = data.hasBindUserPassword;\n\n        if (userLookupSetting) {\n          this.configuration.baseDistinguishedName = userLookupSetting?.baseDN;\n          this.configuration.userNameAttribute =\n            userLookupSetting?.userNameAttribute;\n          this.configuration.userSearchFilter =\n            userLookupSetting?.userSearchFilter;\n          this.configuration.userUniqueIdAttribute =\n            userLookupSetting?.userUniqueIdAttribute;\n\n          if (Array.isArray(userLookupSetting?.employeeSelectorMapping)) {\n            if (userLookupSetting.employeeSelectorMapping.length === 0) {\n              this.configuration.employeeSelectorMapping = '';\n            } else {\n              this.configuration.employeeSelectorMapping =\n                userLookupSetting.employeeSelectorMapping[0]['field'];\n            }\n          }\n        }\n        this.configuration.searchScope =\n          this.searchScopeOptions.find(\n            (option) => option.id === userLookupSetting?.searchScope,\n          ) || this.searchScopeOptions[0];\n\n        this.configuration.dataMapping = data.dataMapping;\n        this.configuration.mergeLDAPUsersWithExistingSystemUsers =\n          data.mergeLDAPUsersWithExistingSystemUsers;\n        this.configuration.syncInterval = data.syncInterval;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onClickTest() {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        this.isLoading = true;\n        const data = this.getRequestBody();\n        delete data.enable;\n        delete data.syncInterval;\n        this.http\n          .request({\n            method: 'POST',\n            url: '/api/v2/admin/ldap-test-connection',\n            data,\n          })\n          .then((response) => {\n            const {data} = response.data;\n            this.testModalState = data;\n          })\n          .finally(() => (this.isLoading = false));\n      });\n    },\n    getRequestBody() {\n      let employeeSelectorMapping;\n      if (this.configuration.employeeSelectorMapping) {\n        employeeSelectorMapping = [\n          {\n            field: this.configuration.employeeSelectorMapping,\n            attributeName:\n              this.configuration.dataMapping[\n                this.configuration.employeeSelectorMapping\n              ],\n          },\n        ];\n      }\n\n      return {\n        enable: this.configuration.enable,\n        hostname: this.configuration.hostname,\n        port: parseInt(this.configuration.port),\n        encryption: this.configuration.encryption?.id || 'none',\n        ldapImplementation: this.configuration.ldapImplementation?.id,\n        bindAnonymously: this.configuration.bindAnonymously,\n        bindUserDN: this.configuration.bindUserDN,\n        bindUserPassword: this.configuration.bindUserPassword,\n        userLookupSettings: [\n          {\n            baseDN: this.configuration.baseDistinguishedName,\n            searchScope: this.configuration.searchScope?.id,\n            userNameAttribute: this.configuration.userNameAttribute,\n            userSearchFilter: this.configuration.userSearchFilter,\n            userUniqueIdAttribute: this.configuration.userUniqueIdAttribute,\n            employeeSelectorMapping: employeeSelectorMapping || [],\n          },\n        ],\n        dataMapping: this.configuration.dataMapping,\n        mergeLDAPUsersWithExistingSystemUsers:\n          this.configuration.mergeLDAPUsersWithExistingSystemUsers,\n        syncInterval: parseInt(this.configuration.syncInterval),\n      };\n    },\n    onClickSave() {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        this.isLoading = true;\n        this.http\n          .request({\n            method: 'PUT',\n            data: this.getRequestBody(),\n          })\n          .then(() => {\n            return this.$toast.updateSuccess();\n          })\n          .finally(() => reloadPage());\n      });\n    },\n    onCloseTestModal() {\n      this.testModalState = null;\n    },\n  },\n};\n</script>\n\n<style src=\"./ldap-configuration.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}