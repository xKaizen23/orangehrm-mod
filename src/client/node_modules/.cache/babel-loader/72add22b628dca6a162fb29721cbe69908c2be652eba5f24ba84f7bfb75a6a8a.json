{"ast":null,"code":"import { OxdDialog } from '@ohrm/oxd';\nimport { required, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport TrackerLogRatingButton from '@/orangehrmPerformancePlugin/components/TrackerLogRatingButton';\nconst trackerLogModel = {\n  log: '',\n  comment: ''\n};\nexport default {\n  name: 'AddTrackerLogModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'tracker-log-rating-button': TrackerLogRatingButton\n  },\n  props: {\n    trackerId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/performance/trackers/${props.trackerId}/logs`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rating: true,\n      trackerLog: {\n        ...trackerLogModel\n      },\n      rules: {\n        log: [required, shouldNotExceedCharLength(150)],\n        comment: [required, shouldNotExceedCharLength(3000)]\n      }\n    };\n  },\n  methods: {\n    onClickPositive() {\n      this.rating = true;\n    },\n    onClickNegative() {\n      this.rating = false;\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        log: this.trackerLog.log,\n        comment: this.trackerLog.comment,\n        achievement: this.rating ? 1 : 2\n      }).then(() => {\n        this.$toast.saveSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"mappings":"AAqFA,SAAQA,SAAS,QAAO,WAAW;AACnC,SACEC,QAAQ,EACRC,yBAAyB,QACpB,8BAA8B;AACrC,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,sBAAqB,MAAO,gEAAgE;AAEnG,MAAMC,eAAc,GAAI;EACtBC,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE;AACX,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE;IACV,YAAY,EAAET,SAAS;IACvB,2BAA2B,EAAEI;EAC/B,CAAC;EACDM,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZZ,QAAQ,EAAE;IACZ;EACF,CAAC;EACDa,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,KAAK,CAACL,KAAK,EAAE;IACX,MAAMM,IAAG,GAAI,IAAIb,UAAU,CACzBc,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,gCAA+BT,KAAK,CAACC,SAAU,OAAM,CACvD;IAED,OAAO;MACLK;IACF,CAAC;EACH,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;QAAC,GAAGlB;MAAe,CAAC;MAChCmB,KAAK,EAAE;QACLlB,GAAG,EAAE,CAACL,QAAQ,EAAEC,yBAAyB,CAAC,GAAG,CAAC,CAAC;QAC/CK,OAAO,EAAE,CAACN,QAAQ,EAAEC,yBAAyB,CAAC,IAAI,CAAC;MACrD;IACF,CAAC;EACH,CAAC;EACDuB,OAAO,EAAE;IACPC,eAAe,GAAG;MAChB,IAAI,CAACJ,MAAK,GAAI,IAAI;IACpB,CAAC;IACDK,eAAe,GAAG;MAChB,IAAI,CAACL,MAAK,GAAI,KAAK;IACrB,CAAC;IACDM,MAAM,GAAG;MACP,IAAI,CAACP,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLa,MAAM,CAAC;QACNvB,GAAG,EAAE,IAAI,CAACiB,UAAU,CAACjB,GAAG;QACxBC,OAAO,EAAE,IAAI,CAACgB,UAAU,CAAChB,OAAO;QAChCuB,WAAW,EAAE,IAAI,CAACR,MAAK,GAAI,IAAI;MACjC,CAAC,EACAS,IAAI,CAAC,MAAM;QACV,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;QACzB,IAAI,CAACC,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACT,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","names":["OxdDialog","required","shouldNotExceedCharLength","APIService","TrackerLogRatingButton","trackerLogModel","log","comment","name","components","props","trackerId","type","Number","emits","setup","http","window","appGlobal","baseUrl","data","isLoading","rating","trackerLog","rules","methods","onClickPositive","onClickNegative","onSave","create","achievement","then","$toast","saveSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\components\\AddTrackerLogModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog\n    :style=\"{width: '90%', maxWidth: '650px'}\"\n    @update:show=\"onCancel\"\n  >\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('performance.add_tracker_log') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"trackerLog.log\"\n          :label=\"$t('performance.log')\"\n          :placeholder=\"$t('general.type_here')\"\n          :rules=\"rules.log\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <div class=\"orangehrm-add-tracker-log-ratings-container\">\n          <tracker-log-rating-button\n            :label=\"$t('performance.positive')\"\n            :selected=\"rating\"\n            type=\"positive\"\n            @click=\"onClickPositive\"\n          />\n          <tracker-log-rating-button\n            :label=\"$t('performance.negative')\"\n            :selected=\"!rating\"\n            type=\"negative\"\n            @click=\"onClickNegative\"\n          />\n        </div>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"trackerLog.comment\"\n          type=\"textarea\"\n          :label=\"$t('general.comment')\"\n          :placeholder=\"$t('general.type_here')\"\n          :rules=\"rules.comment\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions class=\"orangehrm-form-action\">\n        <required-text />\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.save')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {OxdDialog} from '@ohrm/oxd';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport TrackerLogRatingButton from '@/orangehrmPerformancePlugin/components/TrackerLogRatingButton';\n\nconst trackerLogModel = {\n  log: '',\n  comment: '',\n};\n\nexport default {\n  name: 'AddTrackerLogModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'tracker-log-rating-button': TrackerLogRatingButton,\n  },\n  props: {\n    trackerId: {\n      type: Number,\n      required: true,\n    },\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/performance/trackers/${props.trackerId}/logs`,\n    );\n\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rating: true,\n      trackerLog: {...trackerLogModel},\n      rules: {\n        log: [required, shouldNotExceedCharLength(150)],\n        comment: [required, shouldNotExceedCharLength(3000)],\n      },\n    };\n  },\n  methods: {\n    onClickPositive() {\n      this.rating = true;\n    },\n    onClickNegative() {\n      this.rating = false;\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          log: this.trackerLog.log,\n          comment: this.trackerLog.comment,\n          achievement: this.rating ? 1 : 2,\n        })\n        .then(() => {\n          this.$toast.saveSuccess();\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close');\n    },\n  },\n};\n</script>\n\n<style src=\"./tracker-log-modal.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}