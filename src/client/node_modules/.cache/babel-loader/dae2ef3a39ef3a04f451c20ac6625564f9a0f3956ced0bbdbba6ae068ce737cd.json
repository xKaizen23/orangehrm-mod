{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, resolveDynamicComponent as _resolveDynamicComponent, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-642bc4ee\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-leave-balance\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_label = _resolveComponent(\"oxd-label\");\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_input_group, null, {\n    label: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_label, {\n      label: _ctx.$t('leave.leave_balance')\n    }, null, 8, [\"label\"]), $props.leaveData.type ? (_openBlock(), _createBlock(_component_oxd_icon_button, {\n      key: 0,\n      class: \"--help\",\n      name: \"question-circle\",\n      \"with-container\": false,\n      onClick: $setup.onModalOpen\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])]),\n    default: _withCtx(() => [_ctx.balance >= 0 ? (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 0,\n      class: \"orangehrm-leave-balance-text\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.leaveBalance), 1)]),\n      _: 1\n    })) : (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 1,\n      class: \"orangehrm-leave-balance-text --error\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.balance_not_sufficient')), 1)]),\n      _: 1\n    }))]),\n    _: 1\n  }), _ctx.showModal ? (_openBlock(), _createBlock(_resolveDynamicComponent($setup.leaveBalanceModal), {\n    key: 0,\n    data: _ctx.data,\n    meta: _ctx.meta,\n    onClose: $setup.onModalClose\n  }, null, 40, [\"data\", \"meta\", \"onClose\"])) : _createCommentVNode(\"\", true)], 64);\n}","map":{"version":3,"mappings":";;;EAsBWA,KAAK,EAAC;AAAyB;;;;;;6DAFxCC,aAmBkBC;IAlBLC,KAAK,WACd,MASM,CATNC,oBASM,OATNC,UASM,GARJJ,aAAgDK;MAApCH,KAAK,EAAEI,OAAE;4BAEbC,gBAAS,CAACC,IAAI,kBADtBC,aAMEC;;MAJAX,KAAK,EAAC,QAAQ;MACdY,IAAI,EAAC,iBAAiB;MACrB,gBAAc,EAAE,KAAK;MACrBC,OAAK,EAAEC;;sBAId,MAEW,CAFKP,YAAO,uBAAvBG,aAEWK;;MAFmBf,KAAK,EAAC,8BAA8B;MAACgB,GAAG,EAAC;;wBACrE,MAAkB,mCAAfF,mBAAY;;yBAEjBJ,aAEWK;;MAFMf,KAAK,EAAC,sCAAsC;MAACgB,GAAG,EAAC;;wBAChE,MAAwC,mCAArCT,OAAE;;;;MAKDA,cAAS,kBAFjBG,aAMaO,yBALNH,wBAAiB;;IAErBI,IAAI,EAAEX,SAAI;IACVY,IAAI,EAAEZ,SAAI;IACVa,OAAK,EAAEN","names":["class","_createVNode","_component_oxd_input_group","label","_createElementVNode","_hoisted_1","_component_oxd_label","_ctx","$props","type","_createBlock","_component_oxd_icon_button","name","onClick","$setup","_component_oxd_text","tag","_resolveDynamicComponent","data","meta","onClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveBalance.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-group>\n    <template #label>\n      <div class=\"orangehrm-leave-balance\">\n        <oxd-label :label=\"$t('leave.leave_balance')\" />\n        <oxd-icon-button\n          v-if=\"leaveData.type\"\n          class=\"--help\"\n          name=\"question-circle\"\n          :with-container=\"false\"\n          @click=\"onModalOpen\"\n        />\n      </div>\n    </template>\n    <oxd-text v-if=\"balance >= 0\" class=\"orangehrm-leave-balance-text\" tag=\"p\">\n      {{ leaveBalance }}\n    </oxd-text>\n    <oxd-text v-else class=\"orangehrm-leave-balance-text --error\" tag=\"p\">\n      {{ $t('leave.balance_not_sufficient') }}\n    </oxd-text>\n  </oxd-input-group>\n  <component\n    :is=\"leaveBalanceModal\"\n    v-if=\"showModal\"\n    :data=\"data\"\n    :meta=\"meta\"\n    @close=\"onModalClose\"\n  ></component>\n</template>\n\n<script>\nimport {toRefs, reactive, computed, watchPostEffect} from 'vue';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport LeaveBalanceModal from '@/orangehrmLeavePlugin/components/LeaveBalanceModal';\nimport LeaveBalanceInsufficientModal from '@/orangehrmLeavePlugin/components/LeaveBalanceInsufficientModal';\nimport useLeaveValidators from '@/orangehrmLeavePlugin/util/composable/useLeaveValidators';\nimport {OxdLabel} from '@ohrm/oxd';\n\nexport default {\n  name: 'LeaveBalance',\n  components: {\n    'oxd-label': OxdLabel,\n    'leave-balance-modal': LeaveBalanceModal,\n    'leave-balance-insufficient-modal': LeaveBalanceInsufficientModal,\n  },\n  inheritAttrs: false,\n  props: {\n    leaveData: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props) {\n    const state = reactive({\n      data: null,\n      meta: null,\n      balance: 0,\n      showModal: false,\n    });\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-balance/leave-type',\n    );\n    http.setIgnorePath('/api/v2/leave/leave-balance/leave-type');\n    const {validateLeaveBalance} = useLeaveValidators(http);\n\n    const leaveBalance = computed(() => {\n      return props.leaveData.type?.id\n        ? `${state.balance.toFixed(2)} Day(s)`\n        : '0.00 Day(s)';\n    });\n\n    const onModalOpen = () => {\n      state.showModal = true;\n    };\n\n    const onModalClose = () => {\n      state.showModal = false;\n    };\n\n    const leaveBalanceModal = computed(() => {\n      return Array.isArray(state.data)\n        ? 'leave-balance-insufficient-modal'\n        : 'leave-balance-modal';\n    });\n\n    watchPostEffect(async () => {\n      if (props.leaveData.type?.id) {\n        validateLeaveBalance(props.leaveData)\n          .then(({balance, breakdown, metaData}) => {\n            state.balance = balance;\n            if (breakdown) state.data = breakdown;\n            if (metaData) state.meta = metaData;\n          })\n          .catch(() => {\n            state.data = null;\n            state.meta = null;\n            state.balance = 0;\n          });\n      }\n    });\n\n    return {\n      ...toRefs(state),\n      leaveBalance,\n      onModalOpen,\n      onModalClose,\n      leaveBalanceModal,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-leave-balance {\n  display: flex;\n  align-items: center;\n  & .--help {\n    margin-left: 5px;\n  }\n}\n.orangehrm-leave-balance-text {\n  padding: $oxd-input-control-vertical-padding 0rem;\n  &.--error {\n    color: $oxd-feedback-danger-color;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}