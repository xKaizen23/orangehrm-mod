{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { required, numericOnly, validSelection, shouldNotExceedCharLength, numberShouldBeBetweenMinAndMaxValue } from '@ohrm/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyLinkCard from '../components/VacancyLinkCard.vue';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst vacancyModel = {\n  jobTitle: null,\n  name: '',\n  hiringManager: null,\n  numOfPositions: '',\n  description: '',\n  status: true,\n  isPublished: true\n};\nconst basePath = `${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`;\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-link-card': VacancyLinkCard\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/vacancies');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const vacancyNameUniqueValidation = createUniqueValidator('Vacancy', 'name');\n    return {\n      http,\n      vacancyNameUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      vacancy: {\n        ...vacancyModel\n      },\n      rules: {\n        jobTitle: [required],\n        name: [required, this.vacancyNameUniqueValidation, shouldNotExceedCharLength(50)],\n        hiringManager: [required, validSelection],\n        numOfPositions: [value => {\n          if (value === null || value === '') return true;\n          return typeof numericOnly(value) === 'string' ? numericOnly(value) : numberShouldBeBetweenMinAndMaxValue(1, 99)(value);\n        }],\n        description: [],\n        status: [required],\n        isPublished: [required]\n      },\n      rssFeedUrl: `${basePath}/recruitmentApply/jobs.rss`,\n      webUrl: `${basePath}/recruitmentApply/jobs.html`\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/recruitment/viewJobVacancy');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.vacancy = {\n        name: this.vacancy.name,\n        jobTitleId: this.vacancy.jobTitle.id,\n        employeeId: this.vacancy.hiringManager.id,\n        numOfPositions: this.vacancy.numOfPositions ? parseInt(this.vacancy.numOfPositions) : null,\n        description: this.vacancy.description,\n        status: this.vacancy.status,\n        isPublished: this.vacancy.isPublished\n      };\n      this.http.create({\n        ...this.vacancy\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.$toast.saveSuccess();\n        navigate('/recruitment/addJobVacancy/{id}', {\n          id: data.id\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","navigate","required","numericOnly","validSelection","shouldNotExceedCharLength","numberShouldBeBetweenMinAndMaxValue","EmployeeAutocomplete","JobtitleDropdown","VacancyLinkCard","OxdSwitchInput","useServerValidation","vacancyModel","jobTitle","name","hiringManager","numOfPositions","description","status","isPublished","basePath","window","location","protocol","host","appGlobal","baseUrl","components","setup","http","createUniqueValidator","vacancyNameUniqueValidation","data","isLoading","vacancy","rules","value","rssFeedUrl","webUrl","methods","onCancel","onSave","jobTitleId","id","employeeId","parseInt","create","then","response","$toast","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\AddJobVacancy.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('recruitment.add_vacancy') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"vacancy.name\"\n              :label=\"$t('recruitment.vacancy_name')\"\n              required\n              :rules=\"rules.name\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <jobtitle-dropdown\n              v-model=\"vacancy.jobTitle\"\n              :rules=\"rules.jobTitle\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangehrm-grid-item-span-2\">\n            <oxd-input-field\n              v-model=\"vacancy.description\"\n              type=\"textarea\"\n              :label=\"$t('general.description')\"\n              :placeholder=\"$t('general.type_description_here')\"\n              :rules=\"rules.description\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"vacancy.hiringManager\"\n              :params=\"{\n                includeEmployees: 'onlyCurrent',\n              }\"\n              required\n              :rules=\"rules.hiringManager\"\n              :label=\"$t('recruitment.hiring_manager')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"vacancy.numOfPositions\"\n                  :label=\"$t('recruitment.num_of_positions')\"\n                  :rules=\"rules.numOfPositions\"\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangerhrm-switch-wrapper\">\n            <oxd-text class=\"orangehrm-text\" tag=\"p\">\n              {{ $t('general.active') }}\n            </oxd-text>\n            <oxd-switch-input v-model=\"vacancy.status\" />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangerhrm-switch-wrapper\">\n            <oxd-text class=\"orangehrm-text\" tag=\"p\">\n              {{ $t('recruitment.publish_in_rss_feed_and_web_page') }}\n            </oxd-text>\n            <oxd-switch-input v-model=\"vacancy.isPublished\" />\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"orangehrm-grid-item-span-2\">\n            <div class=\"orangehrm-vacancy-links\">\n              <vacancy-link-card\n                :label=\"$t('recruitment.rss_feed_url')\"\n                :url=\"rssFeedUrl\"\n              />\n              <vacancy-link-card\n                :label=\"$t('recruitment.web_page_url')\"\n                :url=\"webUrl\"\n              />\n            </div>\n          </oxd-grid-item>\n        </oxd-grid>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {\n  required,\n  numericOnly,\n  validSelection,\n  shouldNotExceedCharLength,\n  numberShouldBeBetweenMinAndMaxValue,\n} from '@ohrm/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyLinkCard from '../components/VacancyLinkCard.vue';\nimport {OxdSwitchInput} from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst vacancyModel = {\n  jobTitle: null,\n  name: '',\n  hiringManager: null,\n  numOfPositions: '',\n  description: '',\n  status: true,\n  isPublished: true,\n};\n\nconst basePath = `${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`;\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'vacancy-link-card': VacancyLinkCard,\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/vacancies',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const vacancyNameUniqueValidation = createUniqueValidator(\n      'Vacancy',\n      'name',\n    );\n    return {\n      http,\n      vacancyNameUniqueValidation,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      vacancy: {...vacancyModel},\n      rules: {\n        jobTitle: [required],\n        name: [\n          required,\n          this.vacancyNameUniqueValidation,\n          shouldNotExceedCharLength(50),\n        ],\n        hiringManager: [required, validSelection],\n        numOfPositions: [\n          (value) => {\n            if (value === null || value === '') return true;\n            return typeof numericOnly(value) === 'string'\n              ? numericOnly(value)\n              : numberShouldBeBetweenMinAndMaxValue(1, 99)(value);\n          },\n        ],\n        description: [],\n        status: [required],\n        isPublished: [required],\n      },\n      rssFeedUrl: `${basePath}/recruitmentApply/jobs.rss`,\n      webUrl: `${basePath}/recruitmentApply/jobs.html`,\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/recruitment/viewJobVacancy');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.vacancy = {\n        name: this.vacancy.name,\n        jobTitleId: this.vacancy.jobTitle.id,\n        employeeId: this.vacancy.hiringManager.id,\n        numOfPositions: this.vacancy.numOfPositions\n          ? parseInt(this.vacancy.numOfPositions)\n          : null,\n        description: this.vacancy.description,\n        status: this.vacancy.status,\n        isPublished: this.vacancy.isPublished,\n      };\n      this.http.create({...this.vacancy}).then((response) => {\n        const {data} = response.data;\n        this.$toast.saveSuccess();\n        navigate('/recruitment/addJobVacancy/{id}', {id: data.id});\n      });\n    },\n  },\n};\n</script>\n\n<style src=\"./vacancy.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}