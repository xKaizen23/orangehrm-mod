{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength, validPhoneNumberFormat } from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst initialLocation = {\n  name: '',\n  countryCode: null,\n  province: '',\n  city: '',\n  address: '',\n  zipCode: '',\n  phone: '',\n  fax: '',\n  note: ''\n};\nexport default {\n  props: {\n    countries: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/locations');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const locationUniqueValidation = createUniqueValidator('Location', 'name');\n    return {\n      http,\n      locationUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      location: {\n        ...initialLocation\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100), this.locationUniqueValidation],\n        countryCode: [required],\n        province: [shouldNotExceedCharLength(50)],\n        city: [shouldNotExceedCharLength(50)],\n        address: [shouldNotExceedCharLength(250)],\n        zipCode: [shouldNotExceedCharLength(30)],\n        phone: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        fax: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        note: [shouldNotExceedCharLength(250)]\n      }\n    };\n  },\n  computed: {\n    hasCreatePermissions() {\n      return this.$can.create(`locations`);\n    }\n  },\n  methods: {\n    onCancel() {\n      navigate('/admin/viewLocations');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.location,\n        countryCode: this.location.countryCode.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA6IA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,SACEC,QAAQ,EACRC,yBAAyB,EACzBC,sBAAsB,QACjB,kCAAkC;AACzC,OAAOC,mBAAkB,MAAO,4CAA4C;AAE5E,MAAMC,eAAc,GAAI;EACtBC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,EAAE;EACTC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE;AACR,CAAC;AAED,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EAEDC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIrB,UAAU,CACzBsB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,yBAAyB,CAC1B;IACD,MAAM;MAACC;IAAqB,IAAIrB,mBAAmB,CAACiB,IAAI,CAAC;IACzD,MAAMK,wBAAuB,GAAID,qBAAqB,CAAC,UAAU,EAAE,MAAM,CAAC;IAE1E,OAAO;MACLJ,IAAI;MACJK;IACF,CAAC;EACH,CAAC;EAEDC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE;QAAC,GAAGxB;MAAe,CAAC;MAC9ByB,KAAK,EAAE;QACLxB,IAAI,EAAE,CACJL,QAAQ,EACRC,yBAAyB,CAAC,GAAG,CAAC,EAC9B,IAAI,CAACwB,wBAAwB,CAC9B;QACDnB,WAAW,EAAE,CAACN,QAAQ,CAAC;QACvBO,QAAQ,EAAE,CAACN,yBAAyB,CAAC,EAAE,CAAC,CAAC;QACzCO,IAAI,EAAE,CAACP,yBAAyB,CAAC,EAAE,CAAC,CAAC;QACrCQ,OAAO,EAAE,CAACR,yBAAyB,CAAC,GAAG,CAAC,CAAC;QACzCS,OAAO,EAAE,CAACT,yBAAyB,CAAC,EAAE,CAAC,CAAC;QACxCU,KAAK,EAAE,CAACV,yBAAyB,CAAC,EAAE,CAAC,EAAEC,sBAAsB,CAAC;QAC9DU,GAAG,EAAE,CAACX,yBAAyB,CAAC,EAAE,CAAC,EAAEC,sBAAsB,CAAC;QAC5DW,IAAI,EAAE,CAACZ,yBAAyB,CAAC,GAAG,CAAC;MACvC;IACF,CAAC;EACH,CAAC;EAED6B,QAAQ,EAAE;IACRC,oBAAoB,GAAG;MACrB,OAAO,IAAI,CAACC,IAAI,CAACC,MAAM,CAAE,WAAU,CAAC;IACtC;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTrC,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC;IACDsC,MAAM,GAAG;MACP,IAAI,CAACT,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACP,IAAG,CACLa,MAAM,CAAC;QACN,GAAG,IAAI,CAACL,QAAQ;QAChBtB,WAAW,EAAE,IAAI,CAACsB,QAAQ,CAACtB,WAAW,CAAC+B;MACzC,CAAC,EACAC,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAF,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["navigate","APIService","required","shouldNotExceedCharLength","validPhoneNumberFormat","useServerValidation","initialLocation","name","countryCode","province","city","address","zipCode","phone","fax","note","props","countries","type","Array","default","setup","http","window","appGlobal","baseUrl","createUniqueValidator","locationUniqueValidation","data","isLoading","location","rules","computed","hasCreatePermissions","$can","create","methods","onCancel","onSave","id","then","$toast","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\location\\SaveLocation.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.add_location') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.name\"\n                :label=\"$t('general.name')\"\n                :rules=\"rules.name\"\n                required\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.city\"\n                :label=\"$t('general.city')\"\n                :rules=\"rules.city\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.province\"\n                :label=\"$t('general.state_province')\"\n                :rules=\"rules.province\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.zipCode\"\n                :label=\"$t('general.zip_postal_code')\"\n                :rules=\"rules.zipCode\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.countryCode\"\n                type=\"select\"\n                :label=\"$t('general.country')\"\n                :rules=\"rules.countryCode\"\n                :clear=\"false\"\n                :options=\"countries\"\n                required\n                :disabled=\"!hasCreatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model.trim=\"location.phone\"\n                :label=\"$t('general.phone')\"\n                :rules=\"rules.phone\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.fax\"\n                :label=\"$t('general.fax')\"\n                :rules=\"rules.fax\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.address\"\n                type=\"textarea\"\n                :label=\"$t('admin.address')\"\n                :rules=\"rules.address\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"location.note\"\n                type=\"textarea\"\n                :label=\"$t('general.notes')\"\n                :rules=\"rules.note\"\n                :disabled=\"!hasCreatePermissions\"\n                :placeholder=\"$t('general.type_here_message')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button v-if=\"hasCreatePermissions\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validPhoneNumberFormat,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialLocation = {\n  name: '',\n  countryCode: null,\n  province: '',\n  city: '',\n  address: '',\n  zipCode: '',\n  phone: '',\n  fax: '',\n  note: '',\n};\n\nexport default {\n  props: {\n    countries: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/locations',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const locationUniqueValidation = createUniqueValidator('Location', 'name');\n\n    return {\n      http,\n      locationUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      location: {...initialLocation},\n      rules: {\n        name: [\n          required,\n          shouldNotExceedCharLength(100),\n          this.locationUniqueValidation,\n        ],\n        countryCode: [required],\n        province: [shouldNotExceedCharLength(50)],\n        city: [shouldNotExceedCharLength(50)],\n        address: [shouldNotExceedCharLength(250)],\n        zipCode: [shouldNotExceedCharLength(30)],\n        phone: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        fax: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        note: [shouldNotExceedCharLength(250)],\n      },\n    };\n  },\n\n  computed: {\n    hasCreatePermissions() {\n      return this.$can.create(`locations`);\n    },\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/admin/viewLocations');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.location,\n          countryCode: this.location.countryCode.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}