{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport ReportCriterion from '@/orangehrmPimPlugin/components/ReportCriterion';\nimport ReportDisplayField from '@/orangehrmPimPlugin/components/ReportDisplayField';\nimport useEmployeeReport from '@/orangehrmPimPlugin/util/composable/useEmployeeReport';\nexport default {\n  components: {\n    'report-criterion': ReportCriterion,\n    'report-display-field': ReportDisplayField\n  },\n  props: {\n    selectionCriteria: {\n      type: Array,\n      required: true\n    },\n    displayFieldGroups: {\n      type: Array,\n      required: true\n    },\n    displayFields: {\n      type: Array,\n      required: true\n    },\n    reportId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/reports/defined');\n    const {\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields\n    } = useEmployeeReport(props.selectionCriteria, props.displayFields, props.displayFieldGroups);\n    return {\n      http,\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rules: {\n        name: [required, shouldNotExceedCharLength(250)],\n        includeEmployees: [required]\n      },\n      includeOpts: [{\n        id: 1,\n        key: 'onlyCurrent',\n        label: this.$t('general.current_employees_only')\n      }, {\n        id: 2,\n        key: 'currentAndPast',\n        label: this.$t('general.current_and_past_employees')\n      }, {\n        id: 3,\n        key: 'onlyPast',\n        label: this.$t('general.past_employees_only')\n      }]\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.reportId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.report.name = data.name;\n      this.report.includeEmployees = this.includeOpts.find(opt => opt.key === data.include);\n      const operators = [{\n        id: 'eq',\n        label: 'Equal'\n      }, {\n        id: 'lt',\n        label: 'Less Than'\n      }, {\n        id: 'gt',\n        label: 'Greater Than'\n      }, {\n        id: 'between',\n        label: 'Range'\n      }];\n      for (const key in data.fieldGroup) {\n        const fieldGroup = this.displayFields.find(group => group.field_group_id == key);\n        this.report.fieldGroupSelected.push(this.displayFieldGroups.find(group => group.id == key));\n        this.report.displayFieldSelected[key] = {\n          fields: data.fieldGroup[key].fields.map(id => fieldGroup.fields.find(field => field.id === id)),\n          includeHeader: data.fieldGroup[key].includeHeader\n        };\n      }\n      for (const key in data.criteria) {\n        const criterion = this.selectionCriteria.find(criterion => criterion.id == key);\n        this.report.criteriaSelected.push(criterion);\n        this.report.criteriaFieldValues[key] = {\n          valueX: data.criteria[key].x,\n          valueY: data.criteria[key].y === 'undefined' ? null : data.criteria[key].y,\n          operator: operators.find(o => o.id === data.criteria[key].operator)\n        };\n      }\n      // Fetch list data for unique test\n      return this.http.getAll({\n        limit: 0\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => item.name == v);\n        if (index > -1) {\n          const {\n            id\n          } = data[index];\n          return id != this.reportId ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/pim/viewDefinedPredefinedReports');\n    },\n    onSave() {\n      if (Object.keys(this.report.displayFieldSelected).length === 0) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('pim.at_least_one_display_field_should_be_added')\n        });\n      }\n      this.isLoading = true;\n      const payload = this.serializeBody(this.report);\n      this.http.update(this.reportId, payload).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        navigate('/pim/displayPredefinedReport/{id}', {\n          id: this.reportId\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","required","shouldNotExceedCharLength","APIService","ReportCriterion","ReportDisplayField","useEmployeeReport","components","props","selectionCriteria","type","Array","displayFieldGroups","displayFields","reportId","Number","setup","http","window","appGlobal","baseUrl","report","addCriterion","serializeBody","addDisplayField","removeCriterion","removeDisplayField","removeDisplayFieldGroup","availableCriteria","availableFieldGroups","availableDisplyFields","data","isLoading","rules","name","includeEmployees","includeOpts","id","key","label","$t","beforeMount","get","then","response","find","opt","include","operators","fieldGroup","group","field_group_id","fieldGroupSelected","push","displayFieldSelected","fields","map","field","includeHeader","criteria","criterion","criteriaSelected","criteriaFieldValues","valueX","x","valueY","y","operator","o","getAll","limit","v","index","findIndex","item","finally","methods","onCancel","onSave","Object","keys","length","$toast","warn","title","message","payload","update","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\reports\\EditEmployeeReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n        $t('pim.edit_report')\n      }}</oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.name\"\n                :label=\"$t('general.report_name')\"\n                :placeholder=\"$t('general.type_here_message')\"\n                :rules=\"rules.name\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n            {{ $t('pim.selection_criteria') }}\n          </oxd-text>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"orangehrm-report-criteria --span-column-2\">\n              <oxd-input-field\n                v-model=\"report.criterion\"\n                type=\"select\"\n                :label=\"$t('pim.selection_criteria')\"\n                :options=\"availableCriteria\"\n              />\n              <oxd-input-group>\n                <oxd-icon-button\n                  class=\"orangehrm-report-icon\"\n                  name=\"plus\"\n                  @click=\"addCriterion\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.includeEmployees\"\n                type=\"select\"\n                :label=\"$t('pim.include')\"\n                :options=\"includeOpts\"\n                :show-empty-selector=\"false\"\n              />\n            </oxd-grid-item>\n            <!-- start selected criteria fields -->\n            <report-criterion\n              v-for=\"(criterion, index) in report.criteriaSelected\"\n              :key=\"criterion\"\n              v-model:operator=\"\n                report.criteriaFieldValues[criterion.id].operator\n              \"\n              v-model:valueX=\"report.criteriaFieldValues[criterion.id].valueX\"\n              v-model:valueY=\"report.criteriaFieldValues[criterion.id].valueY\"\n              :criterion=\"criterion\"\n              @delete=\"removeCriterion(index)\"\n            >\n            </report-criterion>\n            <!-- end selected criteria fields -->\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n            {{ $t('pim.display_fields') }}\n          </oxd-text>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"report.fieldGroup\"\n                type=\"select\"\n                :label=\"$t('pim.select_display_field_group')\"\n                :options=\"availableFieldGroups\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-report-criteria --span-column-2\">\n              <oxd-input-field\n                v-model=\"report.displayField\"\n                type=\"select\"\n                :label=\"$t('pim.select_display_field')\"\n                :options=\"availableDisplyFields\"\n              />\n              <oxd-input-group>\n                <oxd-icon-button\n                  class=\"orangehrm-report-icon\"\n                  name=\"plus\"\n                  @click=\"addDisplayField\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n            <!-- start display group fields -->\n            <report-display-field\n              v-for=\"(fieldGroup, index) in report.fieldGroupSelected\"\n              :key=\"fieldGroup\"\n              v-model:includeHeader=\"\n                report.displayFieldSelected[fieldGroup.id].includeHeader\n              \"\n              :field-group=\"fieldGroup\"\n              :selected-fields=\"\n                report.displayFieldSelected[fieldGroup.id].fields\n              \"\n              @delete=\"removeDisplayFieldGroup(index)\"\n              @delete-chip=\"removeDisplayField($event, index)\"\n            >\n            </report-display-field>\n            <!-- end display group fields -->\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ReportCriterion from '@/orangehrmPimPlugin/components/ReportCriterion';\nimport ReportDisplayField from '@/orangehrmPimPlugin/components/ReportDisplayField';\nimport useEmployeeReport from '@/orangehrmPimPlugin/util/composable/useEmployeeReport';\n\nexport default {\n  components: {\n    'report-criterion': ReportCriterion,\n    'report-display-field': ReportDisplayField,\n  },\n\n  props: {\n    selectionCriteria: {\n      type: Array,\n      required: true,\n    },\n    displayFieldGroups: {\n      type: Array,\n      required: true,\n    },\n    displayFields: {\n      type: Array,\n      required: true,\n    },\n    reportId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/reports/defined',\n    );\n    const {\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields,\n    } = useEmployeeReport(\n      props.selectionCriteria,\n      props.displayFields,\n      props.displayFieldGroups,\n    );\n\n    return {\n      http,\n      report,\n      addCriterion,\n      serializeBody,\n      addDisplayField,\n      removeCriterion,\n      removeDisplayField,\n      removeDisplayFieldGroup,\n      availableCriteria,\n      availableFieldGroups,\n      availableDisplyFields,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      rules: {\n        name: [required, shouldNotExceedCharLength(250)],\n        includeEmployees: [required],\n      },\n      includeOpts: [\n        {\n          id: 1,\n          key: 'onlyCurrent',\n          label: this.$t('general.current_employees_only'),\n        },\n        {\n          id: 2,\n          key: 'currentAndPast',\n          label: this.$t('general.current_and_past_employees'),\n        },\n        {id: 3, key: 'onlyPast', label: this.$t('general.past_employees_only')},\n      ],\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.reportId)\n      .then((response) => {\n        const {data} = response.data;\n        this.report.name = data.name;\n        this.report.includeEmployees = this.includeOpts.find(\n          (opt) => opt.key === data.include,\n        );\n        const operators = [\n          {id: 'eq', label: 'Equal'},\n          {id: 'lt', label: 'Less Than'},\n          {id: 'gt', label: 'Greater Than'},\n          {id: 'between', label: 'Range'},\n        ];\n        for (const key in data.fieldGroup) {\n          const fieldGroup = this.displayFields.find(\n            (group) => group.field_group_id == key,\n          );\n          this.report.fieldGroupSelected.push(\n            this.displayFieldGroups.find((group) => group.id == key),\n          );\n          this.report.displayFieldSelected[key] = {\n            fields: data.fieldGroup[key].fields.map((id) =>\n              fieldGroup.fields.find((field) => field.id === id),\n            ),\n            includeHeader: data.fieldGroup[key].includeHeader,\n          };\n        }\n        for (const key in data.criteria) {\n          const criterion = this.selectionCriteria.find(\n            (criterion) => criterion.id == key,\n          );\n          this.report.criteriaSelected.push(criterion);\n          this.report.criteriaFieldValues[key] = {\n            valueX: data.criteria[key].x,\n            valueY:\n              data.criteria[key].y === 'undefined'\n                ? null\n                : data.criteria[key].y,\n            operator: operators.find(\n              (o) => o.id === data.criteria[key].operator,\n            ),\n          };\n        }\n        // Fetch list data for unique test\n        return this.http.getAll({limit: 0});\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.name.push((v) => {\n          const index = data.findIndex((item) => item.name == v);\n          if (index > -1) {\n            const {id} = data[index];\n            return id != this.reportId\n              ? this.$t('general.already_exists')\n              : true;\n          } else {\n            return true;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/pim/viewDefinedPredefinedReports');\n    },\n    onSave() {\n      if (Object.keys(this.report.displayFieldSelected).length === 0) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('pim.at_least_one_display_field_should_be_added'),\n        });\n      }\n\n      this.isLoading = true;\n      const payload = this.serializeBody(this.report);\n      this.http\n        .update(this.reportId, payload)\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          navigate('/pim/displayPredefinedReport/{id}', {id: this.reportId});\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee-report.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}