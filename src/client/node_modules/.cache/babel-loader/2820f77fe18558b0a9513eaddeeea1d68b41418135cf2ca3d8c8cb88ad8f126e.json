{"ast":null,"code":"import { shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nexport default {\n  name: 'TimesheetCommentModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    },\n    editable: {\n      type: Boolean,\n      required: true\n    },\n    timesheetId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/timesheets`);\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      locale,\n      jsDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      comment: null,\n      rules: {\n        comment: [shouldNotExceedCharLength(2000)]\n      }\n    };\n  },\n  computed: {\n    projectName() {\n      const {\n        project,\n        customer\n      } = this.data;\n      return project?.label ? project.label : `${customer?.name} - ${project?.name}`;\n    },\n    commentDate() {\n      const {\n        date\n      } = this.data;\n      return date ? formatDate(parseDate(date), this.jsDateFormat, {\n        locale: this.locale\n      }) : null;\n    }\n  },\n  beforeMount() {\n    if (this.data?.id) {\n      this.isLoading = true;\n      this.http.request({\n        method: 'GET',\n        url: `/api/v2/time/timesheets/${this.timesheetId}/entries/${this.data.id}/comment`\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.comment = data?.comment;\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        url: `/api/v2/time/timesheets/${this.timesheetId}/entries/comment`,\n        data: {\n          date: this.data.date,\n          comment: this.comment,\n          projectId: this.data.project.id,\n          activityId: this.data.activity.id\n        }\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.$toast.saveSuccess();\n        this.$emit('close', data);\n      });\n    },\n    onCancel() {\n      this.comment = null;\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["shouldNotExceedCharLength","APIService","OxdDialog","useLocale","useDateFormat","formatDate","parseDate","name","components","props","data","type","Object","required","editable","Boolean","timesheetId","Number","emits","setup","http","window","appGlobal","baseUrl","locale","jsDateFormat","isLoading","comment","rules","computed","projectName","project","customer","label","commentDate","date","beforeMount","id","request","method","url","then","response","finally","methods","onSave","projectId","activityId","activity","$toast","saveSuccess","$emit","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\components\\TimesheetCommentModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog\n    :style=\"{width: '90%', maxWidth: '450px'}\"\n    @update:show=\"onCancel\"\n  >\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('general.comment') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-timesheet-grid\">\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-title\">\n            {{ $t('time.project') }}:\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-text\">\n            {{ projectName }}\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-title\">\n            {{ $t('time.activity') }}:\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-text\">\n            {{ data.activity.name }}\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-title\">\n            {{ $t('general.date') }}:\n          </oxd-text>\n          <oxd-text tag=\"p\" class=\"orangehrm-timesheet-text\">\n            {{ commentDate }}\n          </oxd-text>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"comment\"\n          type=\"textarea\"\n          :placeholder=\"$t('general.comment_here')\"\n          :rules=\"rules.comment\"\n          :disabled=\"!editable\"\n        />\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions>\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button v-show=\"editable\" />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {shouldNotExceedCharLength} from '@ohrm/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport {OxdDialog} from '@ohrm/oxd';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\n\nexport default {\n  name: 'TimesheetCommentModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n    editable: {\n      type: Boolean,\n      required: true,\n    },\n    timesheetId: {\n      type: Number,\n      required: true,\n    },\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/time/timesheets`,\n    );\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    return {\n      http,\n      locale,\n      jsDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      comment: null,\n      rules: {\n        comment: [shouldNotExceedCharLength(2000)],\n      },\n    };\n  },\n  computed: {\n    projectName() {\n      const {project, customer} = this.data;\n      return project?.label\n        ? project.label\n        : `${customer?.name} - ${project?.name}`;\n    },\n    commentDate() {\n      const {date} = this.data;\n      return date\n        ? formatDate(parseDate(date), this.jsDateFormat, {\n            locale: this.locale,\n          })\n        : null;\n    },\n  },\n  beforeMount() {\n    if (this.data?.id) {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'GET',\n          url: `/api/v2/time/timesheets/${this.timesheetId}/entries/${this.data.id}/comment`,\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.comment = data?.comment;\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: `/api/v2/time/timesheets/${this.timesheetId}/entries/comment`,\n          data: {\n            date: this.data.date,\n            comment: this.comment,\n            projectId: this.data.project.id,\n            activityId: this.data.activity.id,\n          },\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.$toast.saveSuccess();\n          this.$emit('close', data);\n        });\n    },\n    onCancel() {\n      this.comment = null;\n      this.$emit('close');\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-timesheet {\n  &-grid {\n    width: 100%;\n    padding: 0 0.625rem;\n    grid-template-columns: 100px 1fr;\n    margin-bottom: 1rem;\n  }\n  &-title,\n  &-text {\n    word-break: break-word;\n    font-size: $oxd-input-control-font-size;\n  }\n  &-title {\n    font-weight: 700;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}