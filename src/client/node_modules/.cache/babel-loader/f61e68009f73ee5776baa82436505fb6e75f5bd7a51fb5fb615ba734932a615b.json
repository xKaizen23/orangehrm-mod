{"ast":null,"code":"import { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  name: 'RecruitmentStatus',\n  props: {\n    candidate: {\n      type: Object,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/candidates');\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    return {\n      http,\n      translateEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      statuses: [{\n        id: 1,\n        label: this.$t('recruitment.application_initiated')\n      }, {\n        id: 2,\n        label: this.$t('recruitment.shortlisted')\n      }, {\n        id: 3,\n        label: this.$t('leave.rejected')\n      }, {\n        id: 4,\n        label: this.$t('recruitment.interview_scheduled')\n      }, {\n        id: 5,\n        label: this.$t('recruitment.interview_passed')\n      }, {\n        id: 6,\n        label: this.$t('recruitment.interview_failed')\n      }, {\n        id: 7,\n        label: this.$t('recruitment.job_offered')\n      }, {\n        id: 8,\n        label: this.$t('recruitment.offer_declined')\n      }, {\n        id: 9,\n        label: this.$t('recruitment.hired')\n      }],\n      actions: []\n    };\n  },\n  computed: {\n    recruitmentStatus() {\n      return this.statuses.find(item => item.id === this.candidate.status?.id)?.label || null;\n    },\n    candidateName() {\n      return `${this.candidate.firstName} ${this.candidate?.middleName || ''} ${this.candidate.lastName}`;\n    },\n    vacancyName() {\n      const {\n        vacancy\n      } = this.candidate;\n      if (!vacancy) return null;\n      return vacancy.status === false ? vacancy.name + ` (${this.$t('general.closed')})` : vacancy.name;\n    },\n    hiringManagerName() {\n      return this.candidate.vacancy?.hiringManager ? this.translateEmpName(this.candidate.vacancy.hiringManager, {\n        includeMiddle: true,\n        excludePastEmpTag: false\n      }) : undefined;\n    }\n  },\n  watch: {\n    candidate() {\n      this.getAllowedActions();\n    }\n  },\n  beforeMount() {\n    this.getAllowedActions();\n  },\n  methods: {\n    hasWorkflow(actionId) {\n      return this.actions.findIndex(actions => actions.id == actionId) > -1;\n    },\n    doWorkflow(actionId) {\n      navigate('/recruitment/changeCandidateVacancyStatus', {}, {\n        candidateId: this.candidate?.id,\n        selectedAction: actionId\n      });\n    },\n    getAllowedActions() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'GET',\n        url: `/api/v2/recruitment/candidates/${this.candidate?.id}/actions/allowed`\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.actions = [...data];\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","useEmployeeNameTranslate","name","props","candidate","type","Object","required","setup","http","window","appGlobal","baseUrl","$tEmpName","translateEmpName","data","isLoading","statuses","id","label","$t","actions","computed","recruitmentStatus","find","item","status","candidateName","firstName","middleName","lastName","vacancyName","vacancy","hiringManagerName","hiringManager","includeMiddle","excludePastEmpTag","undefined","watch","getAllowedActions","beforeMount","methods","hasWorkflow","actionId","findIndex","doWorkflow","candidateId","selectedAction","request","method","url","then","response","finally"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\components\\RecruitmentStatus.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-form :loading=\"isLoading\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('recruitment.application_stage') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('general.name')\">\n            <oxd-text tag=\"p\">\n              {{ candidateName }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('recruitment.vacancy')\">\n            <oxd-text tag=\"p\">\n              {{ vacancyName ? vacancyName : 'N/A' }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n        <oxd-grid-item>\n          <oxd-input-group :label=\"$t('recruitment.hiring_manager')\">\n            <oxd-text tag=\"p\">\n              {{ hiringManagerName ? hiringManagerName : 'N/A' }}\n            </oxd-text>\n          </oxd-input-group>\n        </oxd-grid-item>\n      </oxd-grid>\n      <oxd-divider />\n      <div class=\"orangehrm-recruitment\">\n        <div v-if=\"recruitmentStatus\" class=\"orangehrm-recruitment-status\">\n          <oxd-text type=\"subtitle-2\">\n            {{ $t('general.status') }}: {{ recruitmentStatus }}\n          </oxd-text>\n        </div>\n        <div class=\"orangehrm-recruitment-actions\">\n          <oxd-button\n            v-if=\"hasWorkflow(3)\"\n            :label=\"$t('general.reject')\"\n            display-type=\"danger\"\n            @click=\"doWorkflow(3)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(8)\"\n            :label=\"$t('recruitment.offer_declined')\"\n            display-type=\"danger\"\n            @click=\"doWorkflow(8)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(6)\"\n            :label=\"$t('recruitment.mark_interview_failed')\"\n            display-type=\"danger\"\n            @click=\"doWorkflow(6)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(2)\"\n            :label=\"$t('recruitment.shortlist')\"\n            display-type=\"success\"\n            @click=\"doWorkflow(2)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(4)\"\n            :label=\"$t('recruitment.schedule_interview')\"\n            display-type=\"success\"\n            @click=\"doWorkflow(4)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(5)\"\n            :label=\"$t('recruitment.mark_interview_passed')\"\n            display-type=\"success\"\n            @click=\"doWorkflow(5)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(7)\"\n            :label=\"$t('recruitment.offer_job')\"\n            display-type=\"success\"\n            @click=\"doWorkflow(7)\"\n          />\n          <oxd-button\n            v-if=\"hasWorkflow(9)\"\n            :label=\"$t('recruitment.hire')\"\n            display-type=\"success\"\n            @click=\"doWorkflow(9)\"\n          />\n        </div>\n      </div>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  name: 'RecruitmentStatus',\n  props: {\n    candidate: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/candidates',\n    );\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    return {\n      http,\n      translateEmpName: $tEmpName,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      statuses: [\n        {id: 1, label: this.$t('recruitment.application_initiated')},\n        {id: 2, label: this.$t('recruitment.shortlisted')},\n        {id: 3, label: this.$t('leave.rejected')},\n        {id: 4, label: this.$t('recruitment.interview_scheduled')},\n        {id: 5, label: this.$t('recruitment.interview_passed')},\n        {id: 6, label: this.$t('recruitment.interview_failed')},\n        {id: 7, label: this.$t('recruitment.job_offered')},\n        {id: 8, label: this.$t('recruitment.offer_declined')},\n        {id: 9, label: this.$t('recruitment.hired')},\n      ],\n      actions: [],\n    };\n  },\n  computed: {\n    recruitmentStatus() {\n      return (\n        this.statuses.find((item) => item.id === this.candidate.status?.id)\n          ?.label || null\n      );\n    },\n    candidateName() {\n      return `${this.candidate.firstName} ${this.candidate?.middleName || ''} ${\n        this.candidate.lastName\n      }`;\n    },\n    vacancyName() {\n      const {vacancy} = this.candidate;\n      if (!vacancy) return null;\n      return vacancy.status === false\n        ? vacancy.name + ` (${this.$t('general.closed')})`\n        : vacancy.name;\n    },\n    hiringManagerName() {\n      return this.candidate.vacancy?.hiringManager\n        ? this.translateEmpName(this.candidate.vacancy.hiringManager, {\n            includeMiddle: true,\n            excludePastEmpTag: false,\n          })\n        : undefined;\n    },\n  },\n  watch: {\n    candidate() {\n      this.getAllowedActions();\n    },\n  },\n  beforeMount() {\n    this.getAllowedActions();\n  },\n  methods: {\n    hasWorkflow(actionId) {\n      return this.actions.findIndex((actions) => actions.id == actionId) > -1;\n    },\n    doWorkflow(actionId) {\n      navigate(\n        '/recruitment/changeCandidateVacancyStatus',\n        {},\n        {\n          candidateId: this.candidate?.id,\n          selectedAction: actionId,\n        },\n      );\n    },\n    getAllowedActions() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'GET',\n          url: `/api/v2/recruitment/candidates/${this.candidate?.id}/actions/allowed`,\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.actions = [...data];\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-recruitment {\n  display: flex;\n  justify-content: space-between;\n  &-actions {\n    gap: 0.4rem;\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 120px;\n    margin-left: 60px;\n    justify-content: flex-end;\n    ::v-deep(.oxd-button--medium) {\n      width: 100%;\n    }\n    @include oxd-respond-to('md') {\n      margin-left: unset;\n      max-width: unset;\n      ::v-deep(.oxd-button--medium) {\n        width: unset;\n      }\n    }\n  }\n}\n::v-deep(.oxd-input-group) {\n  margin-bottom: 1rem;\n  @include oxd-respond-to('md') {\n    margin-bottom: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}