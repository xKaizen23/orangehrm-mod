{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1eee2e9c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-text-center-align\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-modal-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_Teleport, {\n    to: \"#app\"\n  }, [$data.show ? (_openBlock(), _createBlock(_component_oxd_dialog, {\n    key: 0,\n    style: {\n      maxWidth: '450px'\n    },\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.updating_entitlement')), 1)]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n      type: \"card-body\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.entitlement_value_confirmation_message', {\n        oldvalue: $data.current,\n        newvalue: $data.updateAs\n      })), 1)]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_button, {\n      \"display-type\": \"ghost\",\n      class: \"orangehrm-button-margin\",\n      label: _ctx.$t('general.cancel'),\n      onClick: $options.onCancel\n    }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n      \"display-type\": \"secondary\",\n      class: \"orangehrm-button-margin\",\n      label: _ctx.$t('general.confirm'),\n      onClick: $options.onConfirm\n    }, null, 8, [\"label\", \"onClick\"])])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;;EA0BWA,KAAK,EAAC;AAAwB;;EAK9BA,KAAK,EAAC;AAA6B;;EAUnCA,KAAK,EAAC;AAAwB;;;;;uBArBvCC,aAoCWC;IApCDC,EAAE,EAAC;EAAM,IAETC,UAAI,kBADZH,aAkCaI;;IAhCVC,KAAK,EAAE;MAAAC;IAAA,CAAmB;IAC1B,eAAW,EAAEC;;sBAEd,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAAsC,mCAAnCC,OAAE;;UAGTL,oBASM,OATNM,UASM,GARJJ,aAOWC;MAPDC,IAAI,EAAC;IAAW;wBACxB,MAKE,mCAJAC,OAAE;kBAA2EV,aAAO;kBAA0BA;;;UAOpHK,oBAaM,OAbNO,UAaM,GAZJL,aAKEM;MAJA,cAAY,EAAC,OAAO;MACpBjB,KAAK,EAAC,yBAAyB;MAC9BkB,KAAK,EAAEJ,OAAE;MACTK,OAAK,EAAEX;uCAEVG,aAKEM;MAJA,cAAY,EAAC,WAAW;MACxBjB,KAAK,EAAC,yBAAyB;MAC9BkB,KAAK,EAAEJ,OAAE;MACTK,OAAK,EAAEX","names":["class","_createBlock","_Teleport","to","$data","_component_oxd_dialog","style","maxWidth","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_hoisted_2","_hoisted_3","_component_oxd_button","label","onClick"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\EntitlementUpdateModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <teleport to=\"#app\">\n    <oxd-dialog\n      v-if=\"show\"\n      :style=\"{maxWidth: '450px'}\"\n      @update:show=\"onCancel\"\n    >\n      <div class=\"orangehrm-modal-header\">\n        <oxd-text type=\"card-title\">\n          {{ $t('leave.updating_entitlement') }}\n        </oxd-text>\n      </div>\n      <div class=\"orangehrm-text-center-align\">\n        <oxd-text type=\"card-body\">\n          {{\n            $t('leave.entitlement_value_confirmation_message', {\n              oldvalue: current,\n              newvalue: updateAs,\n            })\n          }}\n        </oxd-text>\n      </div>\n      <div class=\"orangehrm-modal-footer\">\n        <oxd-button\n          display-type=\"ghost\"\n          class=\"orangehrm-button-margin\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <oxd-button\n          display-type=\"secondary\"\n          class=\"orangehrm-button-margin\"\n          :label=\"$t('general.confirm')\"\n          @click=\"onConfirm\"\n        />\n      </div>\n    </oxd-dialog>\n  </teleport>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {OxdDialog} from '@ohrm/oxd';\n\nexport default {\n  name: 'EntitlementUpdateModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      show: false,\n      reject: null,\n      resolve: null,\n      current: '0.00',\n      updateAs: '0.00',\n    };\n  },\n  methods: {\n    showDialog() {\n      return this.http\n        .request({\n          method: 'GET',\n          url: `/api/v2/leave/employees/${this.data.employee?.id}/leave-entitlements`,\n          params: {\n            leaveTypeId: this.data.leaveType?.id,\n            fromDate: this.data.leavePeriod?.startDate,\n            toDate: this.data.leavePeriod?.endDate,\n            entitlement: this.data.entitlement,\n          },\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.current = data.entitlement?.current\n            ? parseFloat(data.entitlement.current).toFixed(2)\n            : '0.00';\n          this.updateAs = data.entitlement?.updateAs\n            ? parseFloat(data.entitlement.updateAs).toFixed(2)\n            : '0.00';\n          return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n            this.show = true;\n          });\n        });\n    },\n    onConfirm() {\n      this.show = false;\n      this.resolve && this.resolve('ok');\n    },\n    onCancel() {\n      this.show = false;\n      this.resolve && this.resolve('cancel');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.orangehrm-modal-header {\n  margin-bottom: 1.2rem;\n  display: flex;\n  justify-content: center;\n}\n.orangehrm-modal-footer {\n  margin-top: 1.2rem;\n  display: flex;\n  justify-content: center;\n}\n.orangehrm-button-margin {\n  margin: 0.25rem;\n}\n.orangehrm-text-center-align {\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}