{"ast":null,"code":"import { navigate } from '@/core/util/helper/navigation';\nimport ReviewerAutoComplete from '@/orangehrmPerformancePlugin/components/ReviewerAutoComplete';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, validSelection, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nconst trackerModel = {\n  name: null,\n  employee: null,\n  reviewers: []\n};\nexport default {\n  components: {\n    'reviewer-autocomplete': ReviewerAutoComplete,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/config/trackers');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      tracker: {\n        ...trackerModel\n      },\n      rules: {\n        tracker: [required, shouldNotExceedCharLength(200)],\n        employee: [required, validSelection, value => {\n          if (value === null) {\n            return true;\n          }\n          const valid = this.tracker.reviewers.findIndex(reviewer => {\n            return reviewer.id === value.id;\n          });\n          if (valid == -1) {\n            return true;\n          }\n          return this.$t('performance.employee_cannot_be_assigned_as_his_own_reviewer');\n        }],\n        reviewers: [required, validSelection]\n      }\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/viewPerformanceTracker');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        trackerName: this.tracker.name.trim(),\n        empNumber: this.tracker.employee.id,\n        reviewerEmpNumbers: this.tracker.reviewers.map(employee => employee.id)\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        // go back\n        this.onCancel();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2EA,SAAQA,QAAQ,QAAO,+BAA+B;AACtD,OAAOC,oBAAmB,MAAO,8DAA8D;AAC/F,OAAOC,oBAAmB,MAAO,+CAA+C;AAChF,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,SACEC,QAAQ,EACRC,cAAc,EACdC,yBAAyB,QACpB,8BAA8B;AAErC,MAAMC,YAAW,GAAI;EACnBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE;AACb,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,uBAAuB,EAAEV,oBAAoB;IAC7C,uBAAuB,EAAEC;EAC3B,CAAC;EACDU,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIV,UAAU,CACzBW,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,qCAAqC,CACtC;IACD,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;QAAC,GAAGZ;MAAY,CAAC;MAC1Ba,KAAK,EAAE;QACLD,OAAO,EAAE,CAACf,QAAQ,EAAEE,yBAAyB,CAAC,GAAG,CAAC,CAAC;QACnDG,QAAQ,EAAE,CACRL,QAAQ,EACRC,cAAc,EACbgB,KAAK,IAAK;UACT,IAAIA,KAAI,KAAM,IAAI,EAAE;YAClB,OAAO,IAAI;UACb;UACA,MAAMC,KAAI,GAAI,IAAI,CAACH,OAAO,CAACT,SAAS,CAACa,SAAS,CAAEC,QAAQ,IAAK;YAC3D,OAAOA,QAAQ,CAACC,EAAC,KAAMJ,KAAK,CAACI,EAAE;UACjC,CAAC,CAAC;UACF,IAAIH,KAAI,IAAK,CAAC,CAAC,EAAE;YACf,OAAO,IAAI;UACb;UACA,OAAO,IAAI,CAACI,EAAE,CACZ,6DAA6D,CAC9D;QACH,CAAC,CACF;QACDhB,SAAS,EAAE,CAACN,QAAQ,EAAEC,cAAc;MACtC;IACF,CAAC;EACH,CAAC;EACDsB,OAAO,EAAE;IACPC,QAAQ,GAAG;MACT5B,QAAQ,CAAC,qCAAqC,CAAC;IACjD,CAAC;IACD6B,MAAM,GAAG;MACP,IAAI,CAACX,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLiB,MAAM,CAAC;QACNC,WAAW,EAAE,IAAI,CAACZ,OAAO,CAACX,IAAI,CAACwB,IAAI,EAAE;QACrCC,SAAS,EAAE,IAAI,CAACd,OAAO,CAACV,QAAQ,CAACgB,EAAE;QACnCS,kBAAkB,EAAE,IAAI,CAACf,OAAO,CAACT,SAAS,CAACyB,GAAG,CAC3C1B,QAAQ,IAAKA,QAAQ,CAACgB,EAAE;MAE7B,CAAC,EACAW,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAF,IAAI,CAAC,MAAM;QACV;QACA,IAAI,CAACR,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["navigate","ReviewerAutoComplete","EmployeeAutocomplete","APIService","required","validSelection","shouldNotExceedCharLength","trackerModel","name","employee","reviewers","components","setup","http","window","appGlobal","baseUrl","data","isLoading","tracker","rules","value","valid","findIndex","reviewer","id","$t","methods","onCancel","onSave","create","trackerName","trim","empNumber","reviewerEmpNumbers","map","then","$toast","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\SavePerformanceTracker.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\" tag=\"h6\">\n        {{ $t('performance.add_performance_tracker') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"tracker.name\"\n                :rules=\"rules.tracker\"\n                :label=\"$t('performance.tracker_name')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"tracker.employee\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <reviewer-autocomplete\n                v-model=\"tracker.reviewers\"\n                :rules=\"rules.reviewers\"\n                :exclude-employee=\"tracker.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            type=\"button\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport ReviewerAutoComplete from '@/orangehrmPerformancePlugin/components/ReviewerAutoComplete';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  validSelection,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\n\nconst trackerModel = {\n  name: null,\n  employee: null,\n  reviewers: [],\n};\n\nexport default {\n  components: {\n    'reviewer-autocomplete': ReviewerAutoComplete,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/config/trackers',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      tracker: {...trackerModel},\n      rules: {\n        tracker: [required, shouldNotExceedCharLength(200)],\n        employee: [\n          required,\n          validSelection,\n          (value) => {\n            if (value === null) {\n              return true;\n            }\n            const valid = this.tracker.reviewers.findIndex((reviewer) => {\n              return reviewer.id === value.id;\n            });\n            if (valid == -1) {\n              return true;\n            }\n            return this.$t(\n              'performance.employee_cannot_be_assigned_as_his_own_reviewer',\n            );\n          },\n        ],\n        reviewers: [required, validSelection],\n      },\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/viewPerformanceTracker');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          trackerName: this.tracker.name.trim(),\n          empNumber: this.tracker.employee.id,\n          reviewerEmpNumbers: this.tracker.reviewers.map(\n            (employee) => employee.id,\n          ),\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          // go back\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}