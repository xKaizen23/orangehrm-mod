{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { OxdDialog } from '@ohrm/oxd';\nconst orgUnitModel = {\n  unitId: '',\n  name: '',\n  description: ''\n};\nexport default {\n  name: 'SaveOrgUnit',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/subunits');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      orgUnit: {\n        ...orgUnitModel\n      },\n      rules: {\n        unitId: [shouldNotExceedCharLength(100)],\n        name: [required, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      if (data) {\n        this.rules.name.push(v => {\n          const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n          if (index > -1) {\n            return this.$t('admin.organization_unit_name_should_be_unique');\n          } else {\n            return true;\n          }\n        });\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.orgUnit,\n        parentId: this.data?.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.orgUnit = {\n        ...orgUnitModel\n      };\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":";AA2EA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AACzC,SAAQC,SAAS,QAAO,WAAW;AAEnC,MAAMC,YAAW,GAAI;EACnBC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,eAAe;EACbD,IAAI,EAAE,aAAa;EACnBE,UAAU,EAAE;IACV,YAAY,EAAEL;EAChB,CAAC;EACDM,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIhB,UAAU,CACzBiB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,wBAAwB,CACzB;IACD,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EACDN,IAAI,GAAG;IACL,OAAO;MACLU,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;QAAC,GAAGjB;MAAY,CAAC;MAC1BkB,KAAK,EAAE;QACLjB,MAAM,EAAE,CAACH,yBAAyB,CAAC,GAAG,CAAC,CAAC;QACxCI,IAAI,EAAE,CAACL,QAAQ,EAAEC,yBAAyB,CAAC,GAAG,CAAC,CAAC;QAChDK,WAAW,EAAE,CAACL,yBAAyB,CAAC,GAAG,CAAC;MAC9C;IACF,CAAC;EACH,CAAC;EACDqB,WAAW,GAAG;IACZ,IAAI,CAACH,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACJ,IAAG,CACLQ,MAAM,EAAC,CACPC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAAChB;MAAI,IAAIgB,QAAQ,CAAChB,IAAI;MAC5B,IAAIA,IAAI,EAAE;QACR,IAAI,CAACY,KAAK,CAAChB,IAAI,CAACqB,IAAI,CAAEC,CAAC,IAAK;UAC1B,MAAMC,KAAI,GAAInB,IAAI,CAACoB,SAAS,CACzBC,IAAI,IACHC,MAAM,CAACD,IAAI,CAACzB,IAAI,CAAC,CAAC2B,WAAW,EAAC,IAAKD,MAAM,CAACJ,CAAC,CAAC,CAACK,WAAW,EAAE,CAC7D;UACD,IAAIJ,KAAI,GAAI,CAAC,CAAC,EAAE;YACd,OAAO,IAAI,CAACK,EAAE,CAAC,+CAA+C,CAAC;UACjE,OAAO;YACL,OAAO,IAAI;UACb;QACF,CAAC,CAAC;MACJ;IACF,CAAC,EACAC,OAAO,CAAC,MAAM;MACb,IAAI,CAACf,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EACDgB,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACjB,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACJ,IAAG,CACLsB,MAAM,CAAC;QACN,GAAG,IAAI,CAACjB,OAAO;QACfkB,QAAQ,EAAE,IAAI,CAAC7B,IAAI,EAAE8B;MACvB,CAAC,EACAf,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACgB,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAjB,IAAI,CAAC,MAAM;QACV,IAAI,CAACkB,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACT,IAAI,CAACtB,OAAM,GAAI;QAAC,GAAGjB;MAAY,CAAC;MAChC,IAAI,CAACwC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;IAC3B;EACF;AACF,CAAC","names":["APIService","required","shouldNotExceedCharLength","OxdDialog","orgUnitModel","unitId","name","description","components","props","data","type","Object","default","emits","setup","http","window","appGlobal","baseUrl","isLoading","orgUnit","rules","beforeMount","getAll","then","response","push","v","index","findIndex","item","String","toLowerCase","$t","finally","methods","onSave","create","parentId","id","$toast","saveSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\orgStructure\\SaveOrgUnit.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog class=\"orangehrm-dialog-modal\" @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('admin.add_organization_unit') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.unitId\"\n          :label=\"$t('admin.unit_id')\"\n          :rules=\"rules.unitId\"\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.name\"\n          :label=\"$t('general.name')\"\n          :rules=\"rules.name\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.description\"\n          type=\"textarea\"\n          :label=\"$t('general.description')\"\n          :placeholder=\"$t('general.type_description_here')\"\n          :rules=\"rules.description\"\n        />\n      </oxd-form-row>\n      <oxd-text tag=\"p\" class=\"level-label\">\n        {{ $t('admin.this_unit_will_be_added_under') }}\n        <b>\n          {{ data?.unitId ? `${data.unitId}: ${data?.name}` : `${data?.name}` }}\n        </b>\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdDialog} from '@ohrm/oxd';\n\nconst orgUnitModel = {\n  unitId: '',\n  name: '',\n  description: '',\n};\n\nexport default {\n  name: 'SaveOrgUnit',\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/subunits',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      orgUnit: {...orgUnitModel},\n      rules: {\n        unitId: [shouldNotExceedCharLength(100)],\n        name: [required, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        if (data) {\n          this.rules.name.push((v) => {\n            const index = data.findIndex(\n              (item) =>\n                String(item.name).toLowerCase() == String(v).toLowerCase(),\n            );\n            if (index > -1) {\n              return this.$t('admin.organization_unit_name_should_be_unique');\n            } else {\n              return true;\n            }\n          });\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.orgUnit,\n          parentId: this.data?.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.orgUnit = {...orgUnitModel};\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.level-label {\n  font-size: 0.75rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}