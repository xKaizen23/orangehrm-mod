{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2b81b03f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-buzz-post-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_like = _resolveComponent(\"post-like\");\n  const _component_post_comment = _resolveComponent(\"post-comment\");\n  const _component_post_share = _resolveComponent(\"post-share\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_post_like, {\n    like: $props.post.liked,\n    onClick: _cache[0] || (_cache[0] = $event => $setup.onClickAction('like'))\n  }, null, 8, [\"like\"]), _createVNode(_component_post_comment, {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.onClickAction('comment'))\n  }), _createVNode(_component_post_share, {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.onClickAction('share'))\n  })]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAA6B;;;;;uBAAxCC,oBAIM,OAJNC,UAIM,GAHJC,aAAyEC;IAA7DC,IAAI,EAAEC,WAAI,CAACC,KAAK;IAAGC,OAAK,sCAAEC,oBAAa;yBACnDN,aAA+DO;IAAhDF,OAAK,sCAAEC,oBAAa;MACnCN,aAAyDQ;IAA5CH,OAAK,sCAAEC,oBAAa","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_post_like","like","$props","liked","onClick","$setup","_component_post_comment","_component_post_share"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostActions.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-post-actions\">\n    <post-like :like=\"post.liked\" @click=\"onClickAction('like')\"></post-like>\n    <post-comment @click=\"onClickAction('comment')\"></post-comment>\n    <post-share @click=\"onClickAction('share')\"></post-share>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton.vue';\nimport PostShareButton from '@/orangehrmBuzzPlugin/components/PostShareButton.vue';\nimport PostCommentButton from '@/orangehrmBuzzPlugin/components/PostCommentButton.vue';\n\nexport default {\n  name: 'PostActions',\n\n  components: {\n    'post-like': PostLikeButton,\n    'post-share': PostShareButton,\n    'post-comment': PostCommentButton,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['like', 'comment', 'share'],\n\n  setup(props, context) {\n    let loading = false;\n    const {updatePostLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const onClickAction = (actionType) => {\n      switch (actionType) {\n        case 'comment':\n          context.emit('comment');\n          break;\n\n        case 'share':\n          context.emit('share');\n          break;\n\n        case 'like':\n          if (!loading) {\n            loading = true;\n            updatePostLike(props.post.id, props.post.liked).then(() => {\n              loading = false;\n              context.emit('like');\n            });\n          }\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return {\n      onClickAction,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-post-actions {\n  gap: 5px;\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: space-between;\n  ::v-deep(.oxd-icon-button) {\n    width: 36px;\n    height: 36px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}