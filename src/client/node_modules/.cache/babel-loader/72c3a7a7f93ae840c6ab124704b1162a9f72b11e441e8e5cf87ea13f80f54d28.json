{"ast":null,"code":"import { validSelection } from '@/core/util/validation/rules';\nimport { parseDate, parseTimeInSeconds } from '@ohrm/core/util/helper/datefns';\nimport ActivityDropdown from '@/orangehrmTimePlugin/components/ActivityDropdown.vue';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nimport TimesheetCommentModal from '@/orangehrmTimePlugin/components/TimesheetCommentModal.vue';\nimport { OxdAlert, OxdSpinner } from '@ohrm/oxd';\nexport default {\n  name: 'Timesheet',\n  components: {\n    'oxd-alert': OxdAlert,\n    'oxd-loading-spinner': OxdSpinner,\n    'activity-dropdown': ActivityDropdown,\n    'project-autocomplete': ProjectAutocomplete,\n    'timesheet-comment-modal': TimesheetCommentModal\n  },\n  props: {\n    records: {\n      type: Array,\n      default: () => []\n    },\n    columns: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    subtotal: {\n      type: String,\n      required: false,\n      default: null\n    },\n    editable: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    timesheetId: {\n      type: Number,\n      default: null\n    }\n  },\n  emits: ['update:records'],\n  data() {\n    return {\n      focusedField: null,\n      showCommentModal: false,\n      commentModalState: null,\n      rules: {\n        project: [validSelection, v => v !== null || this.$t('time.select_a_project')],\n        activity: [v => v !== null || this.$t('time.select_an_activity'), v => this.records.filter(record => record.activity?.id === v?.id).length < 2 || this.$t('time.duplicate_record')]\n      }\n    };\n  },\n  computed: {\n    days() {\n      return this.columns ? Object.keys(this.columns) : [];\n    },\n    dailyTotals() {\n      const totals = {};\n      for (const date in this.columns) {\n        totals[date] = this.records.reduce((acc, record) => {\n          const duration = parseTimeInSeconds(record.dates[date]?.duration);\n          return duration > 0 ? acc + duration : acc;\n        }, 0);\n      }\n      return totals;\n    },\n    daysOfWeek() {\n      const days = [this.$t('general.sun'), this.$t('general.mon'), this.$t('general.tue'), this.$t('general.wed'), this.$t('general.thu'), this.$t('general.fri'), this.$t('general.sat')];\n      return this.days.map(day => {\n        const date = parseDate(day, 'yyyy-MM-dd');\n        return {\n          id: date.valueOf(),\n          day: date.getDate(),\n          title: days[date.getDay()]\n        };\n      });\n    },\n    tableClasses() {\n      return {\n        'orangehrm-timesheet-table': true,\n        '--editable': this.editable\n      };\n    },\n    fixedColumnClasses() {\n      return {\n        'orangehrm-timesheet-table-header-cell': true,\n        '--freeze-left': !this.editable\n      };\n    },\n    fixedCellClasses() {\n      return {\n        'orangehrm-timesheet-table-body-cell': true,\n        '--freeze-left': !this.editable\n      };\n    }\n  },\n  methods: {\n    deleteRow(index) {\n      const updated = this.records.filter((_, i) => i !== index);\n      this.syncRecords(updated);\n      this.$nextTick().then(() => {\n        if (updated.length === 0) this.addRow();\n      });\n    },\n    addRow() {\n      const updated = [...this.records, {\n        project: null,\n        activity: null,\n        dates: {}\n      }];\n      this.syncRecords(updated);\n    },\n    updateTime($value, index, date) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          const _date = {\n            [date]: {\n              date: date,\n              duration: $value,\n              id: record.dates[date]?.id,\n              comment: record.dates[date]?.comment\n            }\n          };\n          record.dates = {\n            ...record.dates,\n            ..._date\n          };\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    updateComment(id, comment, index, date) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          const _date = {\n            [date]: {\n              id: id,\n              date: date,\n              comment: comment,\n              duration: record.dates[date]?.duration\n            }\n          };\n          record.dates = {\n            ...record.dates,\n            ..._date\n          };\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    updateProject($value, index) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          record.project = $value ? $value : null;\n          record.customer = $value?._customer ? $value._customer : null;\n        }\n        return record;\n      });\n      this.updateActivity(null, index);\n      this.syncRecords(updated);\n    },\n    updateActivity($value, index) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          record.activity = $value ? {\n            id: $value.id,\n            name: $value.label\n          } : null;\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    syncRecords(updated) {\n      if (!this.editable) return;\n      this.$emit('update:records', updated);\n    },\n    viewComment(record, entry, index, date) {\n      if (record.project?.id && record.activity?.id) {\n        this.commentModalState = {\n          date,\n          index,\n          id: entry?.id,\n          project: record.project,\n          activity: record.activity,\n          customer: record.customer\n        };\n        this.showCommentModal = true;\n      } else {\n        this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('time.select_a_project_and_an_activity')\n        });\n      }\n    },\n    onCommentModalClose($event) {\n      if ($event) {\n        const {\n          id,\n          comment\n        } = $event;\n        const {\n          index,\n          date\n        } = this.commentModalState;\n        this.updateComment(id, comment, index, date);\n      }\n      this.showCommentModal = false;\n      this.commentModalState = null;\n    },\n    getProject(record) {\n      const {\n        project,\n        customer\n      } = record;\n      if (project && project.label) {\n        return project;\n      }\n      if (project && customer) {\n        return {\n          id: project.id,\n          label: `${customer.name} - ${project.name}`\n        };\n      }\n      return null;\n    },\n    getActivity(activity) {\n      return activity ? {\n        id: activity.id,\n        label: activity.name\n      } : null;\n    },\n    getDuration(entry) {\n      // TODO: convert to format from user config\n      return entry?.duration ? entry.duration : null;\n    },\n    getCommentIcon(entry) {\n      return entry?.comment ? 'chat-dots-fill' : 'chat-dots';\n    },\n    isCommentVisible(entry, index, date) {\n      if (entry?.comment) return true;\n      if (this.editable) {\n        return this.focusedField && this.focusedField.index === index && this.focusedField.date === date;\n      }\n      return false;\n    },\n    onDurationFocus(index, date) {\n      this.focusedField = {\n        index,\n        date\n      };\n    },\n    onDurationBlur() {\n      this.focusedField = null;\n    },\n    validateDuration(date) {\n      const validateFormat = v => {\n        return v === '' || v === null || parseTimeInSeconds(v) >= 0 || this.$t('time.should_be_less_than_24_and_in_hh_mm_or_decimal_format');\n      };\n      const validateTotal = () => {\n        return this.dailyTotals[date] > 86400 ? this.$t('time.total_should_be_less_than_24_hours') : true;\n      };\n      return [validateFormat, validateTotal];\n    }\n  }\n};","map":{"version":3,"mappings":"AA4OA,SAAQA,cAAc,QAAO,8BAA8B;AAC3D,SAAQC,SAAS,EAAEC,kBAAkB,QAAO,gCAAgC;AAC5E,OAAOC,gBAAe,MAAO,uDAAuD;AACpF,OAAOC,mBAAkB,MAAO,0DAA0D;AAC1F,OAAOC,qBAAoB,MAAO,4DAA4D;AAC9F,SAAQC,QAAQ,EAAEC,UAAU,QAAO,WAAW;AAE9C,eAAe;EACbC,IAAI,EAAE,WAAW;EAEjBC,UAAU,EAAE;IACV,WAAW,EAAEH,QAAQ;IACrB,qBAAqB,EAAEC,UAAU;IACjC,mBAAmB,EAAEJ,gBAAgB;IACrC,sBAAsB,EAAEC,mBAAmB;IAC3C,yBAAyB,EAAEC;EAC7B,CAAC;EAEDK,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfH,OAAO,EAAE,MAAM;IACjB,CAAC;IACDI,QAAQ,EAAE;MACRN,IAAI,EAAEO,MAAM;MACZF,QAAQ,EAAE,KAAK;MACfH,OAAO,EAAE;IACX,CAAC;IACDM,QAAQ,EAAE;MACRR,IAAI,EAAES,OAAO;MACbP,OAAO,EAAE;IACX,CAAC;IACDQ,OAAO,EAAE;MACPV,IAAI,EAAES,OAAO;MACbP,OAAO,EAAE;IACX,CAAC;IACDS,WAAW,EAAE;MACXX,IAAI,EAAEY,MAAM;MACZV,OAAO,EAAE;IACX;EACF,CAAC;EAEDW,KAAK,EAAE,CAAC,gBAAgB,CAAC;EAEzBC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAE;QACLC,OAAO,EAAE,CACP/B,cAAc,EACbgC,CAAC,IAAKA,MAAM,IAAG,IAAK,IAAI,CAACC,EAAE,CAAC,uBAAuB,CAAC,CACtD;QACDC,QAAQ,EAAE,CACPF,CAAC,IAAKA,MAAM,IAAG,IAAK,IAAI,CAACC,EAAE,CAAC,yBAAyB,CAAC,EACtDD,CAAC,IACA,IAAI,CAACrB,OAAO,CAACwB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACF,QAAQ,EAAEG,EAAC,KAAML,CAAC,EAAEK,EAAE,EAC1DC,MAAK,GAAI,KAAK,IAAI,CAACL,EAAE,CAAC,uBAAuB,CAAC;MAEvD;IACF,CAAC;EACH,CAAC;EAEDM,QAAQ,EAAE;IACRC,IAAI,GAAG;MACL,OAAO,IAAI,CAACzB,OAAM,GAAIC,MAAM,CAACyB,IAAI,CAAC,IAAI,CAAC1B,OAAO,IAAI,EAAE;IACtD,CAAC;IACD2B,WAAW,GAAG;MACZ,MAAMC,MAAK,GAAI,CAAC,CAAC;MACjB,KAAK,MAAMC,IAAG,IAAK,IAAI,CAAC7B,OAAO,EAAE;QAC/B4B,MAAM,CAACC,IAAI,IAAI,IAAI,CAACjC,OAAO,CAACkC,MAAM,CAAC,CAACC,GAAG,EAAEV,MAAM,KAAK;UAClD,MAAMW,QAAO,GAAI7C,kBAAkB,CAACkC,MAAM,CAACY,KAAK,CAACJ,IAAI,CAAC,EAAEG,QAAQ,CAAC;UACjE,OAAOA,QAAO,GAAI,IAAID,GAAE,GAAIC,QAAO,GAAID,GAAG;QAC5C,CAAC,EAAE,CAAC,CAAC;MACP;MACA,OAAOH,MAAM;IACf,CAAC;IACDM,UAAU,GAAG;MACX,MAAMT,IAAG,GAAI,CACX,IAAI,CAACP,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,EACtB,IAAI,CAACA,EAAE,CAAC,aAAa,CAAC,CACvB;MACD,OAAO,IAAI,CAACO,IAAI,CAACU,GAAG,CAAEC,GAAG,IAAK;QAC5B,MAAMP,IAAG,GAAI3C,SAAS,CAACkD,GAAG,EAAE,YAAY,CAAC;QACzC,OAAO;UACLd,EAAE,EAAEO,IAAI,CAACQ,OAAO,EAAE;UAClBD,GAAG,EAAEP,IAAI,CAACS,OAAO,EAAE;UACnBC,KAAK,EAAEd,IAAI,CAACI,IAAI,CAACW,MAAM,EAAE;QAC3B,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IACDC,YAAY,GAAG;MACb,OAAO;QACL,2BAA2B,EAAE,IAAI;QACjC,YAAY,EAAE,IAAI,CAACpC;MACrB,CAAC;IACH,CAAC;IACDqC,kBAAkB,GAAG;MACnB,OAAO;QACL,uCAAuC,EAAE,IAAI;QAC7C,eAAe,EAAE,CAAC,IAAI,CAACrC;MACzB,CAAC;IACH,CAAC;IACDsC,gBAAgB,GAAG;MACjB,OAAO;QACL,qCAAqC,EAAE,IAAI;QAC3C,eAAe,EAAE,CAAC,IAAI,CAACtC;MACzB,CAAC;IACH;EACF,CAAC;EAEDuC,OAAO,EAAE;IACPC,SAAS,CAACC,KAAK,EAAE;MACf,MAAMC,OAAM,GAAI,IAAI,CAACnD,OAAO,CAACwB,MAAM,CAAC,CAAC4B,CAAC,EAAEC,CAAC,KAAKA,MAAMH,KAAK,CAAC;MAC1D,IAAI,CAACI,WAAW,CAACH,OAAO,CAAC;MACzB,IAAI,CAACI,SAAS,EAAE,CAACC,IAAI,CAAC,MAAM;QAC1B,IAAIL,OAAO,CAACxB,MAAK,KAAM,CAAC,EAAE,IAAI,CAAC8B,MAAM,EAAE;MACzC,CAAC,CAAC;IACJ,CAAC;IACDA,MAAM,GAAG;MACP,MAAMN,OAAM,GAAI,CACd,GAAG,IAAI,CAACnD,OAAO,EACf;QACEoB,OAAO,EAAE,IAAI;QACbG,QAAQ,EAAE,IAAI;QACdc,KAAK,EAAE,CAAC;MACV,CAAC,CACF;MACD,IAAI,CAACiB,WAAW,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDO,UAAU,CAACC,MAAM,EAAET,KAAK,EAAEjB,IAAI,EAAE;MAC9B,MAAMkB,OAAM,GAAI,IAAI,CAACnD,OAAO,CAACuC,GAAG,CAAC,CAACd,MAAM,EAAE4B,CAAC,KAAK;QAC9C,IAAIA,MAAMH,KAAK,EAAE;UACf,MAAMU,KAAI,GAAI;YACZ,CAAC3B,IAAI,GAAG;cACNA,IAAI,EAAEA,IAAI;cACVG,QAAQ,EAAEuB,MAAM;cAChBjC,EAAE,EAAED,MAAM,CAACY,KAAK,CAACJ,IAAI,CAAC,EAAEP,EAAE;cAC1BmC,OAAO,EAAEpC,MAAM,CAACY,KAAK,CAACJ,IAAI,CAAC,EAAE4B;YAC/B;UACF,CAAC;UACDpC,MAAM,CAACY,KAAI,GAAI;YAAC,GAAGZ,MAAM,CAACY,KAAK;YAAE,GAAGuB;UAAK,CAAC;QAC5C;QACA,OAAOnC,MAAM;MACf,CAAC,CAAC;MACF,IAAI,CAAC6B,WAAW,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDW,aAAa,CAACpC,EAAE,EAAEmC,OAAO,EAAEX,KAAK,EAAEjB,IAAI,EAAE;MACtC,MAAMkB,OAAM,GAAI,IAAI,CAACnD,OAAO,CAACuC,GAAG,CAAC,CAACd,MAAM,EAAE4B,CAAC,KAAK;QAC9C,IAAIA,MAAMH,KAAK,EAAE;UACf,MAAMU,KAAI,GAAI;YACZ,CAAC3B,IAAI,GAAG;cACNP,EAAE,EAAEA,EAAE;cACNO,IAAI,EAAEA,IAAI;cACV4B,OAAO,EAAEA,OAAO;cAChBzB,QAAQ,EAAEX,MAAM,CAACY,KAAK,CAACJ,IAAI,CAAC,EAAEG;YAChC;UACF,CAAC;UACDX,MAAM,CAACY,KAAI,GAAI;YAAC,GAAGZ,MAAM,CAACY,KAAK;YAAE,GAAGuB;UAAK,CAAC;QAC5C;QACA,OAAOnC,MAAM;MACf,CAAC,CAAC;MACF,IAAI,CAAC6B,WAAW,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDY,aAAa,CAACJ,MAAM,EAAET,KAAK,EAAE;MAC3B,MAAMC,OAAM,GAAI,IAAI,CAACnD,OAAO,CAACuC,GAAG,CAAC,CAACd,MAAM,EAAE4B,CAAC,KAAK;QAC9C,IAAIA,MAAMH,KAAK,EAAE;UACfzB,MAAM,CAACL,OAAM,GAAIuC,MAAK,GAAIA,MAAK,GAAI,IAAI;UACvClC,MAAM,CAACuC,QAAO,GAAIL,MAAM,EAAEM,SAAQ,GAAIN,MAAM,CAACM,SAAQ,GAAI,IAAI;QAC/D;QACA,OAAOxC,MAAM;MACf,CAAC,CAAC;MACF,IAAI,CAACyC,cAAc,CAAC,IAAI,EAAEhB,KAAK,CAAC;MAChC,IAAI,CAACI,WAAW,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDe,cAAc,CAACP,MAAM,EAAET,KAAK,EAAE;MAC5B,MAAMC,OAAM,GAAI,IAAI,CAACnD,OAAO,CAACuC,GAAG,CAAC,CAACd,MAAM,EAAE4B,CAAC,KAAK;QAC9C,IAAIA,MAAMH,KAAK,EAAE;UACfzB,MAAM,CAACF,QAAO,GAAIoC,MAAK,GAAI;YAACjC,EAAE,EAAEiC,MAAM,CAACjC,EAAE;YAAE7B,IAAI,EAAE8D,MAAM,CAACQ;UAAK,IAAI,IAAI;QACvE;QACA,OAAO1C,MAAM;MACf,CAAC,CAAC;MACF,IAAI,CAAC6B,WAAW,CAACH,OAAO,CAAC;IAC3B,CAAC;IACDG,WAAW,CAACH,OAAO,EAAE;MACnB,IAAI,CAAC,IAAI,CAAC1C,QAAQ,EAAE;MACpB,IAAI,CAAC2D,KAAK,CAAC,gBAAgB,EAAEjB,OAAO,CAAC;IACvC,CAAC;IACDkB,WAAW,CAAC5C,MAAM,EAAE6C,KAAK,EAAEpB,KAAK,EAAEjB,IAAI,EAAE;MACtC,IAAIR,MAAM,CAACL,OAAO,EAAEM,EAAC,IAAKD,MAAM,CAACF,QAAQ,EAAEG,EAAE,EAAE;QAC7C,IAAI,CAACR,iBAAgB,GAAI;UACvBe,IAAI;UACJiB,KAAK;UACLxB,EAAE,EAAE4C,KAAK,EAAE5C,EAAE;UACbN,OAAO,EAAEK,MAAM,CAACL,OAAO;UACvBG,QAAQ,EAAEE,MAAM,CAACF,QAAQ;UACzByC,QAAQ,EAAEvC,MAAM,CAACuC;QACnB,CAAC;QACD,IAAI,CAAC/C,gBAAe,GAAI,IAAI;MAC9B,OAAO;QACL,IAAI,CAACsD,MAAM,CAACC,IAAI,CAAC;UACf7B,KAAK,EAAE,IAAI,CAACrB,EAAE,CAAC,iBAAiB,CAAC;UACjCmD,OAAO,EAAE,IAAI,CAACnD,EAAE,CAAC,uCAAuC;QAC1D,CAAC,CAAC;MACJ;IACF,CAAC;IACDoD,mBAAmB,CAACC,MAAM,EAAE;MAC1B,IAAIA,MAAM,EAAE;QACV,MAAM;UAACjD,EAAE;UAAEmC;QAAO,IAAIc,MAAM;QAC5B,MAAM;UAACzB,KAAK;UAAEjB;QAAI,IAAI,IAAI,CAACf,iBAAiB;QAC5C,IAAI,CAAC4C,aAAa,CAACpC,EAAE,EAAEmC,OAAO,EAAEX,KAAK,EAAEjB,IAAI,CAAC;MAC9C;MACA,IAAI,CAAChB,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACC,iBAAgB,GAAI,IAAI;IAC/B,CAAC;IACD0D,UAAU,CAACnD,MAAM,EAAE;MACjB,MAAM;QAACL,OAAO;QAAE4C;MAAQ,IAAIvC,MAAM;MAClC,IAAIL,OAAM,IAAKA,OAAO,CAAC+C,KAAK,EAAE;QAC5B,OAAO/C,OAAO;MAChB;MACA,IAAIA,OAAM,IAAK4C,QAAQ,EAAE;QACvB,OAAO;UACLtC,EAAE,EAAEN,OAAO,CAACM,EAAE;UACdyC,KAAK,EAAG,GAAEH,QAAQ,CAACnE,IAAI,MAAMuB,OAAO,CAACvB,IAAK;QAC5C,CAAC;MACH;MACA,OAAO,IAAI;IACb,CAAC;IACDgF,WAAW,CAACtD,QAAQ,EAAE;MACpB,OAAOA,QAAO,GAAI;QAACG,EAAE,EAAEH,QAAQ,CAACG,EAAE;QAAEyC,KAAK,EAAE5C,QAAQ,CAAC1B;MAAI,IAAI,IAAI;IAClE,CAAC;IACDiF,WAAW,CAACR,KAAK,EAAE;MACjB;MACA,OAAOA,KAAK,EAAElC,QAAO,GAAIkC,KAAK,CAAClC,QAAO,GAAI,IAAI;IAChD,CAAC;IACD2C,cAAc,CAACT,KAAK,EAAE;MACpB,OAAOA,KAAK,EAAET,OAAM,GAAI,gBAAe,GAAI,WAAW;IACxD,CAAC;IACDmB,gBAAgB,CAACV,KAAK,EAAEpB,KAAK,EAAEjB,IAAI,EAAE;MACnC,IAAIqC,KAAK,EAAET,OAAO,EAAE,OAAO,IAAI;MAC/B,IAAI,IAAI,CAACpD,QAAQ,EAAE;QACjB,OACE,IAAI,CAACO,YAAW,IAChB,IAAI,CAACA,YAAY,CAACkC,KAAI,KAAMA,KAAI,IAChC,IAAI,CAAClC,YAAY,CAACiB,IAAG,KAAMA,IAAG;MAElC;MACA,OAAO,KAAK;IACd,CAAC;IACDgD,eAAe,CAAC/B,KAAK,EAAEjB,IAAI,EAAE;MAC3B,IAAI,CAACjB,YAAW,GAAI;QAACkC,KAAK;QAAEjB;MAAI,CAAC;IACnC,CAAC;IACDiD,cAAc,GAAG;MACf,IAAI,CAAClE,YAAW,GAAI,IAAI;IAC1B,CAAC;IACDmE,gBAAgB,CAAClD,IAAI,EAAE;MACrB,MAAMmD,cAAa,GAAK/D,CAAC,IAAK;QAC5B,OACEA,MAAM,EAAC,IACPA,MAAM,IAAG,IACT9B,kBAAkB,CAAC8B,CAAC,KAAK,KACzB,IAAI,CAACC,EAAE,CAAC,4DAA4D;MAExE,CAAC;MAED,MAAM+D,aAAY,GAAI,MAAM;QAC1B,OAAO,IAAI,CAACtD,WAAW,CAACE,IAAI,IAAI,KAAI,GAChC,IAAI,CAACX,EAAE,CAAC,yCAAyC,IACjD,IAAI;MACV,CAAC;MAED,OAAO,CAAC8D,cAAc,EAAEC,aAAa,CAAC;IACxC;EACF;AACF,CAAC","names":["validSelection","parseDate","parseTimeInSeconds","ActivityDropdown","ProjectAutocomplete","TimesheetCommentModal","OxdAlert","OxdSpinner","name","components","props","records","type","Array","default","columns","Object","required","subtotal","String","editable","Boolean","loading","timesheetId","Number","emits","data","focusedField","showCommentModal","commentModalState","rules","project","v","$t","activity","filter","record","id","length","computed","days","keys","dailyTotals","totals","date","reduce","acc","duration","dates","daysOfWeek","map","day","valueOf","getDate","title","getDay","tableClasses","fixedColumnClasses","fixedCellClasses","methods","deleteRow","index","updated","_","i","syncRecords","$nextTick","then","addRow","updateTime","$value","_date","comment","updateComment","updateProject","customer","_customer","updateActivity","label","$emit","viewComment","entry","$toast","warn","message","onCommentModalClose","$event","getProject","getActivity","getDuration","getCommentIcon","isCommentVisible","onDurationFocus","onDurationBlur","validateDuration","validateFormat","validateTotal"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\components\\Timesheet.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-form class=\"orangehrm-paper-container\">\n    <div class=\"orangehrm-timesheet-header\">\n      <div class=\"orangehrm-timesheet-header--title\">\n        <slot name=\"header-title\"></slot>\n      </div>\n      <div class=\"orangehrm-timesheet-header--options\">\n        <slot name=\"header-options\"></slot>\n      </div>\n    </div>\n\n    <div v-if=\"loading\" class=\"orangehrm-timesheet-loader\">\n      <oxd-loading-spinner />\n    </div>\n    <div\n      v-else-if=\"!loading && !columns\"\n      class=\"orangehrm-timesheet-body-message\"\n    >\n      <oxd-alert\n        type=\"warn\"\n        :show=\"true\"\n        :message=\"$t('time.no_timesheets_found')\"\n      ></oxd-alert>\n    </div>\n\n    <div v-else class=\"orangehrm-timesheet-body\">\n      <table :class=\"tableClasses\">\n        <thead class=\"orangehrm-timesheet-table-header\">\n          <tr class=\"orangehrm-timesheet-table-header-row\">\n            <th :class=\"fixedColumnClasses\">\n              {{ $t('time.project') }}\n            </th>\n            <th class=\"orangehrm-timesheet-table-header-cell\">\n              {{ $t('time.activity') }}\n            </th>\n\n            <!-- timesheet days of week -->\n            <th\n              v-for=\"day in daysOfWeek\"\n              :key=\"day.id\"\n              class=\"orangehrm-timesheet-table-header-cell --center\"\n            >\n              <span class=\"--day\">\n                {{ day.day }}\n              </span>\n              <span>\n                {{ day.title }}\n              </span>\n            </th>\n            <!-- timesheet days of week -->\n\n            <th\n              v-if=\"!editable\"\n              class=\"orangehrm-timesheet-table-header-cell --center --freeze-right\"\n            >\n              {{ $t('general.total') }}\n            </th>\n          </tr>\n        </thead>\n\n        <tbody class=\"orangehrm-timesheet-table-body\">\n          <!-- timesheet activities -->\n          <tr\n            v-for=\"(record, i) in records\"\n            :key=\"record\"\n            class=\"orangehrm-timesheet-table-body-row\"\n          >\n            <td :class=\"fixedCellClasses\">\n              <project-autocomplete\n                v-if=\"editable\"\n                :only-allowed=\"false\"\n                :rules=\"rules.project\"\n                :model-value=\"getProject(record)\"\n                @update:model-value=\"updateProject($event, i)\"\n              />\n              <span v-else>\n                {{\n                  record.project\n                    ? `${record.customer.name} - ${record.project.name}`\n                    : ''\n                }}\n              </span>\n            </td>\n            <td class=\"orangehrm-timesheet-table-body-cell\">\n              <activity-dropdown\n                v-if=\"editable\"\n                :rules=\"rules.activity\"\n                :project-id=\"record.project && record.project.id\"\n                :model-value=\"getActivity(record.activity)\"\n                @update:model-value=\"updateActivity($event, i)\"\n              />\n              <span v-else>{{ record.activity && record.activity.name }}</span>\n            </td>\n            <td\n              v-for=\"(column, date) in columns\"\n              :key=\"`${record.project}_${record.activity}_${date}`\"\n              :class=\"{\n                'orangehrm-timesheet-table-body-cell': true,\n                '--center': true,\n                '--duration-input': editable,\n                '--highlight-3': !editable && column.workday,\n              }\"\n            >\n              <oxd-icon-button\n                v-show=\"isCommentVisible(record.dates[date], i, date)\"\n                display-type=\"secondary\"\n                class=\"orangehrm-timesheet-icon-comment\"\n                :name=\"getCommentIcon(record.dates[date])\"\n                @mousedown=\"viewComment(record, record.dates[date], i, date)\"\n              />\n              <oxd-input-field\n                v-if=\"editable\"\n                autocomplete=\"off\"\n                :rules=\"validateDuration(date)\"\n                :model-value=\"getDuration(record.dates[date])\"\n                @blur=\"onDurationBlur\"\n                @focus=\"onDurationFocus(i, date)\"\n                @update:model-value=\"updateTime($event, i, date)\"\n              />\n              <span v-else>\n                {{ getDuration(record.dates[date]) ?? '00:00' }}\n              </span>\n            </td>\n            <td\n              v-if=\"!editable\"\n              class=\"orangehrm-timesheet-table-body-cell --center --freeze-right --highlight\"\n            >\n              {{ record.total.label }}\n            </td>\n            <td\n              v-if=\"editable\"\n              class=\"orangehrm-timesheet-table-body-cell --flex\"\n            >\n              <oxd-icon-button\n                name=\"trash\"\n                class=\"orangehrm-timesheet-icon\"\n                @click=\"deleteRow(i)\"\n              />\n            </td>\n          </tr>\n          <!-- timesheet activities -->\n\n          <!-- totals -->\n          <tr\n            v-if=\"!editable && records.length > 0\"\n            class=\"orangehrm-timesheet-table-body-row --total\"\n          >\n            <td\n              class=\"orangehrm-timesheet-table-body-cell --freeze-left --highlight\"\n            >\n              {{ $t('general.total') }}\n            </td>\n            <td></td>\n            <!-- total per day -->\n            <td\n              v-for=\"date in columns\"\n              :key=\"`total-${date}`\"\n              class=\"orangehrm-timesheet-table-body-cell --center\"\n            >\n              {{ date.total.label }}\n            </td>\n            <!-- total per day -->\n            <td\n              class=\"orangehrm-timesheet-table-body-cell --center --freeze-right --highlight-2\"\n            >\n              {{ subtotal }}\n            </td>\n          </tr>\n          <!-- totals -->\n\n          <!-- add row -->\n          <tr v-if=\"editable\" class=\"orangehrm-timesheet-table-body-row\">\n            <td class=\"orangehrm-timesheet-table-body-cell --flex\">\n              <oxd-icon-button\n                name=\"plus\"\n                class=\"orangehrm-timesheet-icon\"\n                @click=\"addRow\"\n              />\n              <oxd-text type=\"subtitle-2\">\n                {{ $t('time.add_row') }}\n              </oxd-text>\n            </td>\n          </tr>\n          <!-- add row -->\n\n          <tr\n            v-if=\"records.length === 0\"\n            class=\"orangehrm-timesheet-table-body-row\"\n          >\n            <td colspan=\"9\" class=\"orangehrm-timesheet-table-body-cell\">\n              {{ $t('general.no_records_found') }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"orangehrm-timesheet-footer\">\n      <div class=\"orangehrm-timesheet-footer--title\">\n        <slot name=\"footer-title\"></slot>\n      </div>\n      <div class=\"orangehrm-timesheet-footer--options\">\n        <slot name=\"footer-options\"></slot>\n      </div>\n    </div>\n\n    <timesheet-comment-modal\n      v-if=\"showCommentModal\"\n      :editable=\"editable\"\n      :data=\"commentModalState\"\n      :timesheet-id=\"timesheetId\"\n      @close=\"onCommentModalClose\"\n    ></timesheet-comment-modal>\n  </oxd-form>\n</template>\n\n<script>\nimport {validSelection} from '@/core/util/validation/rules';\nimport {parseDate, parseTimeInSeconds} from '@ohrm/core/util/helper/datefns';\nimport ActivityDropdown from '@/orangehrmTimePlugin/components/ActivityDropdown.vue';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nimport TimesheetCommentModal from '@/orangehrmTimePlugin/components/TimesheetCommentModal.vue';\nimport {OxdAlert, OxdSpinner} from '@ohrm/oxd';\n\nexport default {\n  name: 'Timesheet',\n\n  components: {\n    'oxd-alert': OxdAlert,\n    'oxd-loading-spinner': OxdSpinner,\n    'activity-dropdown': ActivityDropdown,\n    'project-autocomplete': ProjectAutocomplete,\n    'timesheet-comment-modal': TimesheetCommentModal,\n  },\n\n  props: {\n    records: {\n      type: Array,\n      default: () => [],\n    },\n    columns: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    subtotal: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    editable: {\n      type: Boolean,\n      default: false,\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    timesheetId: {\n      type: Number,\n      default: null,\n    },\n  },\n\n  emits: ['update:records'],\n\n  data() {\n    return {\n      focusedField: null,\n      showCommentModal: false,\n      commentModalState: null,\n      rules: {\n        project: [\n          validSelection,\n          (v) => v !== null || this.$t('time.select_a_project'),\n        ],\n        activity: [\n          (v) => v !== null || this.$t('time.select_an_activity'),\n          (v) =>\n            this.records.filter((record) => record.activity?.id === v?.id)\n              .length < 2 || this.$t('time.duplicate_record'),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    days() {\n      return this.columns ? Object.keys(this.columns) : [];\n    },\n    dailyTotals() {\n      const totals = {};\n      for (const date in this.columns) {\n        totals[date] = this.records.reduce((acc, record) => {\n          const duration = parseTimeInSeconds(record.dates[date]?.duration);\n          return duration > 0 ? acc + duration : acc;\n        }, 0);\n      }\n      return totals;\n    },\n    daysOfWeek() {\n      const days = [\n        this.$t('general.sun'),\n        this.$t('general.mon'),\n        this.$t('general.tue'),\n        this.$t('general.wed'),\n        this.$t('general.thu'),\n        this.$t('general.fri'),\n        this.$t('general.sat'),\n      ];\n      return this.days.map((day) => {\n        const date = parseDate(day, 'yyyy-MM-dd');\n        return {\n          id: date.valueOf(),\n          day: date.getDate(),\n          title: days[date.getDay()],\n        };\n      });\n    },\n    tableClasses() {\n      return {\n        'orangehrm-timesheet-table': true,\n        '--editable': this.editable,\n      };\n    },\n    fixedColumnClasses() {\n      return {\n        'orangehrm-timesheet-table-header-cell': true,\n        '--freeze-left': !this.editable,\n      };\n    },\n    fixedCellClasses() {\n      return {\n        'orangehrm-timesheet-table-body-cell': true,\n        '--freeze-left': !this.editable,\n      };\n    },\n  },\n\n  methods: {\n    deleteRow(index) {\n      const updated = this.records.filter((_, i) => i !== index);\n      this.syncRecords(updated);\n      this.$nextTick().then(() => {\n        if (updated.length === 0) this.addRow();\n      });\n    },\n    addRow() {\n      const updated = [\n        ...this.records,\n        {\n          project: null,\n          activity: null,\n          dates: {},\n        },\n      ];\n      this.syncRecords(updated);\n    },\n    updateTime($value, index, date) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          const _date = {\n            [date]: {\n              date: date,\n              duration: $value,\n              id: record.dates[date]?.id,\n              comment: record.dates[date]?.comment,\n            },\n          };\n          record.dates = {...record.dates, ..._date};\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    updateComment(id, comment, index, date) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          const _date = {\n            [date]: {\n              id: id,\n              date: date,\n              comment: comment,\n              duration: record.dates[date]?.duration,\n            },\n          };\n          record.dates = {...record.dates, ..._date};\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    updateProject($value, index) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          record.project = $value ? $value : null;\n          record.customer = $value?._customer ? $value._customer : null;\n        }\n        return record;\n      });\n      this.updateActivity(null, index);\n      this.syncRecords(updated);\n    },\n    updateActivity($value, index) {\n      const updated = this.records.map((record, i) => {\n        if (i === index) {\n          record.activity = $value ? {id: $value.id, name: $value.label} : null;\n        }\n        return record;\n      });\n      this.syncRecords(updated);\n    },\n    syncRecords(updated) {\n      if (!this.editable) return;\n      this.$emit('update:records', updated);\n    },\n    viewComment(record, entry, index, date) {\n      if (record.project?.id && record.activity?.id) {\n        this.commentModalState = {\n          date,\n          index,\n          id: entry?.id,\n          project: record.project,\n          activity: record.activity,\n          customer: record.customer,\n        };\n        this.showCommentModal = true;\n      } else {\n        this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('time.select_a_project_and_an_activity'),\n        });\n      }\n    },\n    onCommentModalClose($event) {\n      if ($event) {\n        const {id, comment} = $event;\n        const {index, date} = this.commentModalState;\n        this.updateComment(id, comment, index, date);\n      }\n      this.showCommentModal = false;\n      this.commentModalState = null;\n    },\n    getProject(record) {\n      const {project, customer} = record;\n      if (project && project.label) {\n        return project;\n      }\n      if (project && customer) {\n        return {\n          id: project.id,\n          label: `${customer.name} - ${project.name}`,\n        };\n      }\n      return null;\n    },\n    getActivity(activity) {\n      return activity ? {id: activity.id, label: activity.name} : null;\n    },\n    getDuration(entry) {\n      // TODO: convert to format from user config\n      return entry?.duration ? entry.duration : null;\n    },\n    getCommentIcon(entry) {\n      return entry?.comment ? 'chat-dots-fill' : 'chat-dots';\n    },\n    isCommentVisible(entry, index, date) {\n      if (entry?.comment) return true;\n      if (this.editable) {\n        return (\n          this.focusedField &&\n          this.focusedField.index === index &&\n          this.focusedField.date === date\n        );\n      }\n      return false;\n    },\n    onDurationFocus(index, date) {\n      this.focusedField = {index, date};\n    },\n    onDurationBlur() {\n      this.focusedField = null;\n    },\n    validateDuration(date) {\n      const validateFormat = (v) => {\n        return (\n          v === '' ||\n          v === null ||\n          parseTimeInSeconds(v) >= 0 ||\n          this.$t('time.should_be_less_than_24_and_in_hh_mm_or_decimal_format')\n        );\n      };\n\n      const validateTotal = () => {\n        return this.dailyTotals[date] > 86400\n          ? this.$t('time.total_should_be_less_than_24_hours')\n          : true;\n      };\n\n      return [validateFormat, validateTotal];\n    },\n  },\n};\n</script>\n\n<style src=\"./timesheet.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}