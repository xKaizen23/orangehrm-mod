{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1755a182\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('attendance.employee_attendance_records')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.employee,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n              rules: $setup.rules.employee,\n              params: {\n                includeEmployees: 'currentAndPast'\n              }\n            }, null, 8, [\"modelValue\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.date,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.date = $event),\n              rules: $setup.rules.date,\n              years: $data.yearArray,\n              label: _ctx.$t('general.date'),\n              required: \"\"\n            }, null, 8, [\"modelValue\", \"rules\", \"years\", \"label\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.view'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_table_header, {\n    total: $setup.total,\n    selected: 0,\n    loading: $setup.isLoading,\n    \"show-divider\": false\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_card_table, {\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: false,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_4, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[2] || (_cache[2] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])])], 64);\n}","map":{"version":3,"mappings":";;gEA2DEA,oBAAM;;EACDC,KAAK,EAAC;AAA2B;;EAO/BA,KAAK,EAAC;AAAqB;;EAU3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;;6DAzDzCC,aAsCmBC;IArChB,cAAY,EAAEC,OAAE;;sBAEjB,MAkCW,CAlCXF,aAkCWG;MAlCAC,aAAY,EAAEC;IAAW;wBAClC,MAqBe,CArBfL,aAqBeM;0BApBb,MAmBW,CAnBXN,aAmBWO;UAnBAC,IAAI,EAAE,CAAC;UAAET,KAAK,EAAC;;4BACxB,MAQgB,CARhBC,aAQgBS;8BAPd,MAME,CANFT,aAMEU;0BALSC,cAAO,CAACC,QAAQ;yEAAhBD,cAAO,CAACC,QAAQ;cACxBC,KAAK,EAAEF,YAAK,CAACC,QAAQ;cACrBE,MAAM,EAAE;;;;;cAKbd,aAQgBS;8BAPd,MAME,CANFT,aAMEe;0BALSJ,cAAO,CAACK,IAAI;yEAAZL,cAAO,CAACK,IAAI;cACpBH,KAAK,EAAEF,YAAK,CAACK,IAAI;cACjBC,KAAK,EAAEC,eAAS;cAChBC,KAAK,EAAEjB,OAAE;cACVkB,QAAQ,EAAR;;;;;;;UAMRpB,aAAeqB,yBAEfrB,aAOmBsB;0BANjB,MAAiB,CAAjBtB,aAAiBuB,2BACjBvB,aAIEwB;UAHA,cAAY,EAAC,WAAW;UACvBL,KAAK,EAAEjB,OAAE;UACVuB,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACN5B,oBAwBM,OAxBN6B,UAwBM,GAvBJ3B,aAKgB4B;IAJbC,KAAK,EAAElB,YAAK;IACZmB,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAEpB,gBAAS;IAClB,cAAY,EAAE;qCAEjBb,oBASM,OATNkC,UASM,GARJhC,aAOEiC;IANCC,OAAO,EAAEhB,aAAO;IAChBiB,KAAK,EAAExB,YAAK,EAAEyB,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBP,OAAO,EAAEpB,gBAAS;IACnB,eAAa,EAAC;kDAGlBb,oBAMM,OANNyC,UAMM,GAJI5B,oBAAa,kBADrB6B,aAIEC;;IAFQC,OAAO,EAAE/B,kBAAW;4DAAXA,kBAAW;IAC3BgC,MAAM,EAAEhC","names":["_createElementVNode","class","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","employee","rules","params","_component_date_input","date","years","$data","label","required","_component_oxd_divider","_component_oxd_form_actions","_component_required_text","_component_oxd_button","type","_hoisted_1","_hoisted_2","_component_table_header","total","selected","loading","_hoisted_3","_component_oxd_card_table","headers","items","data","selectable","clickable","_hoisted_4","_createBlock","_component_oxd_pagination","current","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\ViewEmployeeAttendanceSummary.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-table-filter\n    :filter-title=\"$t('attendance.employee_attendance_records')\"\n  >\n    <oxd-form @submit-valid=\"filterItems\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: 'currentAndPast',\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"filters.date\"\n              :rules=\"rules.date\"\n              :years=\"yearArray\"\n              :label=\"$t('general.date')\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.view')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-table-filter>\n  <br />\n  <div class=\"orangehrm-paper-container\">\n    <table-header\n      :total=\"total\"\n      :selected=\"0\"\n      :loading=\"isLoading\"\n      :show-divider=\"false\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"false\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validDateFormat,\n} from '@/core/util/validation/rules';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {freshDate, formatDate} from '@ohrm/core/util/helper/datefns';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport {yearRange} from '@/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n\n  props: {\n    date: {\n      type: String,\n      default: null,\n    },\n  },\n\n  setup(props) {\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const {userDateFormat} = useDateFormat();\n\n    const rules = {\n      date: [required, validDateFormat(userDateFormat)],\n      employee: [shouldNotExceedCharLength(100)],\n    };\n\n    const filters = ref({\n      date: props.date ? props.date : formatDate(freshDate(), 'yyyy-MM-dd'),\n      employee: null,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        date: filters.value.date,\n        empNumber: filters.value.employee?.id,\n      };\n    });\n\n    const attendanceRecordNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.empNumber,\n          empName: $tEmpName(item, {\n            includeMiddle: false,\n            excludePastEmpTag: false,\n          }),\n          duration: item.sum?.label,\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/attendance/employees/summary',\n    );\n    const {\n      total,\n      pages,\n      response,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: attendanceRecordNormalizer,\n    });\n\n    return {\n      http,\n      rules,\n      total,\n      pages,\n      filters,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      yearArray: [...yearRange()],\n      headers: [\n        {\n          name: 'empName',\n          slot: 'title',\n          title: this.$t('general.employee_name'),\n          style: {flex: '40%'},\n        },\n        {\n          name: 'duration',\n          title: this.$t('time.total_duration'),\n          style: {flex: '40%'},\n        },\n        {\n          name: 'actions',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          style: {flex: '20%'},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            view: {\n              onClick: this.onClickView,\n              component: 'oxd-button',\n              props: {\n                label: this.$t('general.view'),\n                displayType: 'text',\n                size: 'medium',\n              },\n            },\n          },\n        },\n      ],\n    };\n  },\n\n  methods: {\n    async resetDataTable() {\n      await this.execQuery();\n    },\n    async filterItems() {\n      if (this.filters.employee && this.filters.date) {\n        return navigate('/attendance/viewAttendanceRecord', undefined, {\n          employeeId: this.filters.employee.id,\n          date: this.filters.date,\n        });\n      }\n      await this.execQuery();\n    },\n    onClickView(item) {\n      navigate('/attendance/viewAttendanceRecord', undefined, {\n        employeeId: item.id,\n        date: this.filters.date,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n  .oxd-table-cell-actions > * {\n    margin: 0 !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}