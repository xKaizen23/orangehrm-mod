{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { convertFilesizeToString } from '@ohrm/core/util/helper/filesize';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport SaveInterviewAttachment from '@/orangehrmRecruitmentPlugin/components/SaveInterviewAttachment.vue';\nimport EditInterviewAttachment from '@/orangehrmRecruitmentPlugin/components/EditInterviewAttachment.vue';\nconst attachmentDataNormalizer = data => {\n  return data.map(item => {\n    return {\n      id: item.id,\n      interviewId: item.interviewId,\n      filename: item.attachment?.fileName,\n      size: convertFilesizeToString(item.attachment?.fileSize || 0, 2),\n      fileType: item.attachment?.fileType,\n      comment: item.comment\n    };\n  });\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'save-interview-attachment': SaveInterviewAttachment,\n    'edit-interview-attachment': EditInterviewAttachment\n  },\n  props: {\n    interviewId: {\n      type: Number,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/recruitment/interviews/${props.interviewId}/attachments`);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'filename',\n        slot: 'title',\n        title: this.$t('general.file_name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'size',\n        title: this.$t('general.size'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'fileType',\n        title: this.$t('general.type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'comment',\n        title: this.$t('general.comment'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          },\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          download: {\n            onClick: this.onClickDownload,\n            props: {\n              name: 'download'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showSaveModal = true;\n      this.showEditModal = false;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.showEditModal = true;\n      this.editModalState = item;\n    },\n    closeModel() {\n      this.showSaveModal = false;\n      this.showEditModal = false;\n      this.resetDataTable();\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/recruitment/viewInterviewAttachment/interview/${this.interviewId}/attachment/${item.id}`;\n      window.open(downUrl, '_blank');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","convertFilesizeToString","DeleteConfirmationDialog","SaveInterviewAttachment","EditInterviewAttachment","attachmentDataNormalizer","data","map","item","id","interviewId","filename","attachment","fileName","size","fileSize","fileType","comment","components","props","type","Number","required","maxFileSize","allowedFileTypes","Array","setup","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","name","slot","title","$t","style","flex","cellType","cellConfig","edit","onClick","onClickEdit","delete","onClickDelete","component","download","onClickDownload","checkedItems","showSaveModal","showEditModal","editModalState","methods","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","onClickAdd","closeModel","downUrl","open"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewInterviewAttachments.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-attachment\">\n    <save-interview-attachment\n      v-if=\"showSaveModal\"\n      :http=\"http\"\n      :max-file-size=\"maxFileSize\"\n      :allowed-file-types=\"allowedFileTypes\"\n      @close=\"closeModel\"\n    ></save-interview-attachment>\n    <edit-interview-attachment\n      v-else-if=\"showEditModal\"\n      :http=\"http\"\n      :data=\"editModalState\"\n      :max-file-size=\"maxFileSize\"\n      :allowed-file-types=\"allowedFileTypes\"\n      @close=\"closeModel\"\n    ></edit-interview-attachment>\n    <template v-else>\n      <div class=\"orangehrm-attachment-header\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.attachments') }}\n        </oxd-text>\n        <oxd-button\n          icon-name=\"plus\"\n          display-type=\"text\"\n          :label=\"$t('general.add')\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :clickable=\"false\"\n          :selectable=\"true\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </template>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {convertFilesizeToString} from '@ohrm/core/util/helper/filesize';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport SaveInterviewAttachment from '@/orangehrmRecruitmentPlugin/components/SaveInterviewAttachment.vue';\nimport EditInterviewAttachment from '@/orangehrmRecruitmentPlugin/components/EditInterviewAttachment.vue';\n\nconst attachmentDataNormalizer = (data) => {\n  return data.map((item) => {\n    return {\n      id: item.id,\n      interviewId: item.interviewId,\n      filename: item.attachment?.fileName,\n      size: convertFilesizeToString(item.attachment?.fileSize || 0, 2),\n      fileType: item.attachment?.fileType,\n      comment: item.comment,\n    };\n  });\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'save-interview-attachment': SaveInterviewAttachment,\n    'edit-interview-attachment': EditInterviewAttachment,\n  },\n  props: {\n    interviewId: {\n      type: Number,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/recruitment/interviews/${props.interviewId}/attachments`,\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'filename',\n          slot: 'title',\n          title: this.$t('general.file_name'),\n          style: {flex: 1},\n        },\n        {name: 'size', title: this.$t('general.size'), style: {flex: 1}},\n        {name: 'fileType', title: this.$t('general.type'), style: {flex: 1}},\n        {name: 'comment', title: this.$t('general.comment'), style: {flex: 1}},\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            download: {\n              onClick: this.onClickDownload,\n              props: {\n                name: 'download',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showSaveModal = true;\n      this.showEditModal = false;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.showEditModal = true;\n      this.editModalState = item;\n    },\n    closeModel() {\n      this.showSaveModal = false;\n      this.showEditModal = false;\n      this.resetDataTable();\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/recruitment/viewInterviewAttachment/interview/${this.interviewId}/attachment/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.orangehrm-attachment {\n  border-radius: 1.2rem;\n  background-color: $oxd-white-color;\n  &-header {\n    display: flex;\n    overflow-wrap: break-word;\n    align-items: center;\n    padding: 25px;\n    button {\n      margin-left: 1rem;\n      white-space: nowrap;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}