{"ast":null,"code":"import { computed, ref } from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { OxdDivider } from '@ohrm/oxd';\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\nexport default {\n  components: {\n    'oxd-divider': OxdDivider\n  },\n  props: {\n    kpis: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    editable: {\n      type: Boolean,\n      required: true\n    },\n    collapsible: {\n      type: Boolean,\n      required: true\n    },\n    employee: {\n      type: Object,\n      required: true\n    },\n    jobTitle: {\n      type: String,\n      required: true\n    },\n    rules: {\n      type: Array,\n      required: true\n    },\n    modelValue: {\n      type: Object,\n      required: true,\n      validator: value => Object.hasOwn(value, 'kpis') && Object.hasOwn(value, 'generalComment')\n    },\n    collapsed: {\n      type: Boolean,\n      default: false\n    },\n    status: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const isCollapsed = ref(props.collapsed);\n    const commentValidators = [shouldNotExceedCharLength(2000)];\n    const profileImgSrc = computed(() => {\n      return props.employee.empNumber ? `${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${props.employee.empNumber}` : defaultPic;\n    });\n    const employeeName = computed(() => {\n      return $tEmpName(props.employee);\n    });\n    const toggleForm = () => {\n      isCollapsed.value = !isCollapsed.value;\n    };\n    const onUpdateRating = (value, index) => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis.map((item, _index) => {\n          if (_index === index) {\n            return {\n              ...item,\n              rating: value\n            };\n          }\n          return item;\n        }),\n        generalComment: props.modelValue.generalComment\n      });\n    };\n    const onUpdateComment = (value, index) => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis.map((item, _index) => {\n          if (_index === index) {\n            return {\n              ...item,\n              comment: value\n            };\n          }\n          return item;\n        }),\n        generalComment: props.modelValue.generalComment\n      });\n    };\n    const onUpdateGeneralComment = value => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis,\n        generalComment: value\n      });\n    };\n    const statusOpts = [{\n      id: 1,\n      label: $t('performance.evaluation_activated')\n    }, {\n      id: 2,\n      label: $t('performance.evaluation_in_progress')\n    }, {\n      id: 3,\n      label: $t('performance.evaluation_completed')\n    }];\n    const evaluationLabel = computed(() => statusOpts.find(el => el.id === props.status).label);\n    return {\n      toggleForm,\n      isCollapsed,\n      employeeName,\n      profileImgSrc,\n      onUpdateRating,\n      onUpdateComment,\n      onUpdateGeneralComment,\n      commentValidators,\n      evaluationLabel\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","usei18n","shouldNotExceedCharLength","useEmployeeNameTranslate","OxdDivider","defaultPic","window","appGlobal","publicPath","components","props","kpis","type","Array","required","title","String","editable","Boolean","collapsible","employee","Object","jobTitle","rules","modelValue","validator","value","hasOwn","collapsed","default","status","Number","emits","setup","context","$t","$tEmpName","isCollapsed","commentValidators","profileImgSrc","empNumber","baseUrl","employeeName","toggleForm","onUpdateRating","index","emit","map","item","_index","rating","generalComment","onUpdateComment","comment","onUpdateGeneralComment","statusOpts","id","label","evaluationLabel","find","el"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\components\\EvaluationForm.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-evaluation orangehrm-card-container\">\n    <oxd-text class=\"orangehrm-main-title\">\n      {{ title }}\n    </oxd-text>\n\n    <div class=\"orangehrm-evaluation-header\">\n      <oxd-grid :cols=\"3\" class=\"orangehrm-evaluation-header-grid\">\n        <oxd-grid-item class=\"orangehrm-evaluation-title\">\n          <img\n            class=\"orangehrm-evaluation-title-profile-image\"\n            alt=\"profile picture\"\n            :src=\"profileImgSrc\"\n          />\n          <div class=\"orangehrm-evaluation-title-name\">\n            <oxd-text type=\"card-title\">\n              {{ employeeName }}\n            </oxd-text>\n            <oxd-text type=\"card-body\">\n              {{ jobTitle }}\n            </oxd-text>\n          </div>\n        </oxd-grid-item>\n        <oxd-grid-item>\n          <oxd-text type=\"card-body\">\n            {{ $t('general.status') }}\n          </oxd-text>\n          <oxd-text type=\"card-title\">\n            {{ evaluationLabel }}\n          </oxd-text>\n        </oxd-grid-item>\n      </oxd-grid>\n      <oxd-icon-button\n        v-if=\"collapsible\"\n        :with-container=\"false\"\n        :name=\"isCollapsed ? 'chevron-down' : 'chevron-up'\"\n        @click=\"toggleForm\"\n      />\n    </div>\n\n    <template v-if=\"!isCollapsed\">\n      <oxd-divider />\n      <oxd-grid :cols=\"4\" class=\"orangehrm-evaluation-grid\">\n        <oxd-grid-item class=\"orangehrm-evaluation-grid-header\">\n          <oxd-text type=\"subtitle-2\">{{ $t('general.kpis') }}</oxd-text>\n        </oxd-grid-item>\n        <oxd-grid-item class=\"orangehrm-evaluation-grid-header\">\n          <oxd-text type=\"subtitle-2\">{{ $t('performance.rating') }}</oxd-text>\n        </oxd-grid-item>\n        <oxd-grid-item class=\"orangehrm-evaluation-grid-header\">\n          <oxd-text type=\"subtitle-2\">{{ $t('general.comments') }}</oxd-text>\n        </oxd-grid-item>\n        <oxd-grid-item\n          class=\"orangehrm-evaluation-grid-spacer-md\"\n        ></oxd-grid-item>\n\n        <template v-for=\"(kpi, index) in kpis\" :key=\"kpi.id\">\n          <oxd-grid-item class=\"orangehrm-evaluation-grid-kpi\">\n            <oxd-text\n              class=\"orangehrm-evaluation-grid-kpi-header\"\n              type=\"subtitle-2\"\n            >\n              {{ $t('performance.kpi') }}\n            </oxd-text>\n            <oxd-text\n              :title=\"kpi.title\"\n              tag=\"p\"\n              class=\"orangehrm-evaluation-grid-kpi-label\"\n            >\n              {{ kpi.title }}\n            </oxd-text>\n            <oxd-text class=\"orangehrm-evaluation-grid-kpi-minmax\" tag=\"p\">\n              {{ $t('performance.min') }}: {{ kpi.minRating }}\n            </oxd-text>\n            <oxd-text class=\"orangehrm-evaluation-grid-kpi-minmax\" tag=\"p\">\n              {{ $t('performance.max') }}: {{ kpi.maxRating }}\n            </oxd-text>\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-text\n              class=\"orangehrm-evaluation-grid-kpi-header\"\n              type=\"subtitle-2\"\n            >\n              {{ $t('performance.rating') }}\n            </oxd-text>\n            <oxd-input-field\n              type=\"input\"\n              :disabled=\"!editable\"\n              :rules=\"rules[index]\"\n              :model-value=\"modelValue.kpis[index].rating\"\n              @update:model-value=\"onUpdateRating($event, index)\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-text\n              class=\"orangehrm-evaluation-grid-kpi-header\"\n              type=\"subtitle-2\"\n            >\n              {{ $t('general.comment') }}\n            </oxd-text>\n            <oxd-input-field\n              class=\"orangehrm-evaluation-grid-comment\"\n              rows=\"2\"\n              type=\"textarea\"\n              :disabled=\"!editable\"\n              :rules=\"commentValidators\"\n              :model-value=\"modelValue.kpis[index].comment\"\n              @update:model-value=\"onUpdateComment($event, index)\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item\n            class=\"orangehrm-evaluation-grid-spacer-md\"\n          ></oxd-grid-item>\n        </template>\n      </oxd-grid>\n\n      <oxd-divider />\n      <oxd-grid :cols=\"3\" class=\"orangehrm-evaluation-grid\">\n        <oxd-grid-item class=\"orangehrm-evaluation-grid-general\">\n          <oxd-text tag=\"p\" class=\"orangehrm-evaluation-grid-general-label\">\n            {{ $t('performance.general_comment') }}\n          </oxd-text>\n        </oxd-grid-item>\n        <oxd-grid-item class=\"--span-column-2\">\n          <oxd-input-field\n            class=\"orangehrm-evaluation-grid-comment\"\n            rows=\"2\"\n            type=\"textarea\"\n            :disabled=\"!editable\"\n            :rules=\"commentValidators\"\n            :model-value=\"modelValue.generalComment\"\n            @update:model-value=\"onUpdateGeneralComment($event)\"\n          />\n        </oxd-grid-item>\n      </oxd-grid>\n      <slot></slot>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdDivider} from '@ohrm/oxd';\n\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\n\nexport default {\n  components: {\n    'oxd-divider': OxdDivider,\n  },\n  props: {\n    kpis: {\n      type: Array,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    editable: {\n      type: Boolean,\n      required: true,\n    },\n    collapsible: {\n      type: Boolean,\n      required: true,\n    },\n    employee: {\n      type: Object,\n      required: true,\n    },\n    jobTitle: {\n      type: String,\n      required: true,\n    },\n    rules: {\n      type: Array,\n      required: true,\n    },\n    modelValue: {\n      type: Object,\n      required: true,\n      validator: (value) =>\n        Object.hasOwn(value, 'kpis') && Object.hasOwn(value, 'generalComment'),\n    },\n    collapsed: {\n      type: Boolean,\n      default: false,\n    },\n    status: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup(props, context) {\n    const {$t} = usei18n();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const isCollapsed = ref(props.collapsed);\n    const commentValidators = [shouldNotExceedCharLength(2000)];\n\n    const profileImgSrc = computed(() => {\n      return props.employee.empNumber\n        ? `${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${props.employee.empNumber}`\n        : defaultPic;\n    });\n\n    const employeeName = computed(() => {\n      return $tEmpName(props.employee);\n    });\n\n    const toggleForm = () => {\n      isCollapsed.value = !isCollapsed.value;\n    };\n\n    const onUpdateRating = (value, index) => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis.map((item, _index) => {\n          if (_index === index) {\n            return {...item, rating: value};\n          }\n          return item;\n        }),\n        generalComment: props.modelValue.generalComment,\n      });\n    };\n\n    const onUpdateComment = (value, index) => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis.map((item, _index) => {\n          if (_index === index) {\n            return {...item, comment: value};\n          }\n          return item;\n        }),\n        generalComment: props.modelValue.generalComment,\n      });\n    };\n\n    const onUpdateGeneralComment = (value) => {\n      context.emit('update:modelValue', {\n        kpis: props.modelValue.kpis,\n        generalComment: value,\n      });\n    };\n\n    const statusOpts = [\n      {id: 1, label: $t('performance.evaluation_activated')},\n      {id: 2, label: $t('performance.evaluation_in_progress')},\n      {id: 3, label: $t('performance.evaluation_completed')},\n    ];\n\n    const evaluationLabel = computed(\n      () => statusOpts.find((el) => el.id === props.status).label,\n    );\n\n    return {\n      toggleForm,\n      isCollapsed,\n      employeeName,\n      profileImgSrc,\n      onUpdateRating,\n      onUpdateComment,\n      onUpdateGeneralComment,\n      commentValidators,\n      evaluationLabel,\n    };\n  },\n};\n</script>\n\n<style src=\"./evaluation-form.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}