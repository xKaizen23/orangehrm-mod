{"ast":null,"code":"import { navigate, reloadPage } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport ReviewSummary from '../components/ReviewSummary';\nimport FinalEvaluation from '../components/FinalEvaluation';\nimport EvaluationForm from '../components/EvaluationForm';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport useReviewEvaluation from '@/orangehrmPerformancePlugin/util/composable/useReviewEvaluation';\nimport ReviewConfirmModal from '@/orangehrmPerformancePlugin/components/ReviewConfirmModal';\nconst reviewerModel = {\n  details: {\n    empNumber: null,\n    firstName: '',\n    lastName: '',\n    terminationId: null\n  },\n  jobTitle: '',\n  status: 1,\n  actions: new Map()\n};\nexport default {\n  name: 'SelfEvaluation',\n  components: {\n    'review-summary': ReviewSummary,\n    'final-evaluation': FinalEvaluation,\n    'evaluation-form': EvaluationForm,\n    'review-confirm-modal': ReviewConfirmModal\n  },\n  props: {\n    reviewId: {\n      type: Number,\n      required: true\n    },\n    status: {\n      type: Number,\n      required: true\n    },\n    reviewPeriodStart: {\n      type: String,\n      required: true\n    },\n    reviewPeriodEnd: {\n      type: String,\n      required: true\n    },\n    dueDate: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      formRef,\n      invalid,\n      validate\n    } = useForm();\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    const {\n      getAllKpis,\n      getEmployeeReview,\n      getSupervisorReview,\n      getFinalReview,\n      generateRules,\n      generateModel,\n      generateReviewerData,\n      generateAllowedActions,\n      generateEvaluationFormData,\n      finalizeReview,\n      saveEmployeeReview\n    } = useReviewEvaluation(http);\n    return {\n      http,\n      invalid,\n      formRef,\n      validate,\n      getAllKpis,\n      generateRules,\n      generateModel,\n      generateReviewerData,\n      generateAllowedActions,\n      generateEvaluationFormData,\n      getEmployeeReview,\n      getSupervisorReview,\n      getFinalReview,\n      finalizeReview,\n      saveEmployeeReview\n    };\n  },\n  data() {\n    return {\n      kpis: [],\n      rules: [],\n      employee: {\n        ...reviewerModel\n      },\n      employeeReview: {},\n      supervisor: {\n        ...reviewerModel\n      },\n      supervisorReview: {},\n      isLoading: false,\n      finalRating: null,\n      finalComment: null,\n      completedDate: null\n    };\n  },\n  computed: {\n    hasSaveAction() {\n      return this.employee.actions.has('save');\n    },\n    hasCompleteAction() {\n      return this.employee.actions.has('complete');\n    },\n    hasCancelAction() {\n      return !(this.status === 4 || this.employee?.status === 3);\n    },\n    hasActions() {\n      return this.hasSaveAction || this.hasCancelAction || this.hasCompleteAction;\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.getAllKpis(this.reviewId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.kpis = [...data];\n      this.rules = this.generateRules(data);\n      this.employeeReview = this.generateModel(data);\n      this.supervisorReview = this.generateModel(data);\n      return this.getEmployeeReview(this.reviewId);\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      const {\n        meta\n      } = response.data;\n      this.employee = this.generateReviewerData(meta.reviewer);\n      this.employee.actions = this.generateAllowedActions(meta.allowedActions);\n      this.employeeReview = this.generateEvaluationFormData(data, meta.generalComment, this.employeeReview.kpis);\n      return this.getSupervisorReview(this.reviewId);\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      const {\n        meta\n      } = response.data;\n      this.supervisor = this.generateReviewerData(meta.reviewer);\n      this.supervisor.actions = this.generateAllowedActions(meta.allowedActions);\n      this.supervisorReview = this.generateEvaluationFormData(data, meta.generalComment, this.supervisorReview.kpis);\n      return this.status === 4 ? this.getFinalReview(this.reviewId) : {};\n    }).then(response => {\n      if (Object.keys(response).length !== 0) {\n        const {\n          data\n        } = response.data;\n        this.finalRating = data.finalRating;\n        this.finalComment = data.finalComment;\n        this.completedDate = data.completedDate;\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSubmit(complete = false) {\n      this.$nextTick().then(() => this.validate()).then(async () => {\n        if (this.invalid === true) return;\n        if (complete) {\n          this.$refs.confirmDialog.showDialog().then(confirmation => {\n            if (confirmation === 'ok') {\n              this.submitReview(true);\n            }\n          });\n        } else {\n          this.submitReview(false);\n        }\n      });\n    },\n    submitReview(complete = false) {\n      this.isLoading = true;\n      this.saveEmployeeReview(this.reviewId, complete, this.employeeReview).then(() => {\n        return this.$toast.saveSuccess();\n      }).finally(() => {\n        reloadPage();\n      });\n    },\n    onClickCancel() {\n      navigate('/performance/myPerformanceReview');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","reloadPage","APIService","ReviewSummary","FinalEvaluation","EvaluationForm","useForm","useReviewEvaluation","ReviewConfirmModal","reviewerModel","details","empNumber","firstName","lastName","terminationId","jobTitle","status","actions","Map","name","components","props","reviewId","type","Number","required","reviewPeriodStart","String","reviewPeriodEnd","dueDate","setup","formRef","invalid","validate","http","window","appGlobal","baseUrl","getAllKpis","getEmployeeReview","getSupervisorReview","getFinalReview","generateRules","generateModel","generateReviewerData","generateAllowedActions","generateEvaluationFormData","finalizeReview","saveEmployeeReview","data","kpis","rules","employee","employeeReview","supervisor","supervisorReview","isLoading","finalRating","finalComment","completedDate","computed","hasSaveAction","has","hasCompleteAction","hasCancelAction","hasActions","beforeMount","then","response","meta","reviewer","allowedActions","generalComment","Object","keys","length","finally","methods","onSubmit","complete","$nextTick","$refs","confirmDialog","showDialog","confirmation","submitReview","$toast","saveSuccess","onClickCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\SelfEvaluation.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <review-confirm-modal ref=\"confirmDialog\"> </review-confirm-modal>\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h5\" class=\"orangehrm-performance-review-title\">\n        {{ $t('performance.performance_review') }}\n      </oxd-text>\n    </div>\n    <br />\n    <review-summary\n      :loading=\"isLoading\"\n      :status=\"status\"\n      :due-date=\"dueDate\"\n      :employee=\"employee.details\"\n      :job-title=\"employee.jobTitle\"\n      :review-period-end=\"reviewPeriodEnd\"\n      :review-period-start=\"reviewPeriodStart\"\n      :final-rating=\"finalRating\"\n    />\n    <br />\n    <oxd-form ref=\"formRef\" :loading=\"isLoading\">\n      <div v-if=\"status < 4\">\n        <evaluation-form\n          v-model=\"supervisorReview\"\n          :kpis=\"kpis\"\n          :rules=\"rules\"\n          :editable=\"false\"\n          :collapsible=\"false\"\n          :collapsed=\"true\"\n          :employee=\"supervisor.details\"\n          :job-title=\"supervisor.jobTitle\"\n          :status=\"supervisor.status\"\n          :title=\"$t('performance.supervisor_evaluation_by')\"\n        ></evaluation-form>\n        <br />\n        <evaluation-form\n          v-model=\"employeeReview\"\n          :kpis=\"kpis\"\n          :rules=\"rules\"\n          :editable=\"employee.status < 3\"\n          :collapsed=\"false\"\n          :collapsible=\"true\"\n          :employee=\"employee.details\"\n          :job-title=\"employee.jobTitle\"\n          :status=\"employee.status\"\n          :title=\"$t('performance.self_evaluation_by')\"\n        >\n          <oxd-form-actions v-show=\"hasActions\">\n            <oxd-divider />\n            <div class=\"orangehrm-performance-review-actions\">\n              <oxd-button\n                v-if=\"hasCancelAction\"\n                display-type=\"ghost\"\n                :label=\"$t('general.cancel')\"\n                @click=\"onClickCancel\"\n              />\n              <oxd-button\n                v-if=\"hasSaveAction\"\n                display-type=\"ghost\"\n                type=\"button\"\n                :label=\"$t('general.save')\"\n                @click=\"onSubmit(false)\"\n              />\n              <oxd-button\n                v-if=\"hasCompleteAction\"\n                type=\"button\"\n                display-type=\"secondary\"\n                :label=\"$t('performance.complete')\"\n                @click=\"onSubmit(true)\"\n              />\n            </div>\n          </oxd-form-actions>\n        </evaluation-form>\n      </div>\n      <div v-if=\"status === 4\">\n        <evaluation-form\n          v-model=\"employeeReview\"\n          :kpis=\"kpis\"\n          :rules=\"rules\"\n          :editable=\"false\"\n          :collapsed=\"false\"\n          :collapsible=\"true\"\n          :employee=\"employee.details\"\n          :job-title=\"employee.jobTitle\"\n          :status=\"employee.status\"\n          :title=\"$t('performance.self_evaluation_by')\"\n        ></evaluation-form>\n        <br />\n        <evaluation-form\n          v-model=\"supervisorReview\"\n          :kpis=\"kpis\"\n          :rules=\"rules\"\n          :editable=\"false\"\n          :collapsible=\"true\"\n          :collapsed=\"false\"\n          :employee=\"supervisor.details\"\n          :job-title=\"supervisor.jobTitle\"\n          :status=\"supervisor.status\"\n          :title=\"$t('performance.supervisor_evaluation_by')\"\n        >\n          <oxd-divider />\n          <final-evaluation\n            v-model:final-rating=\"finalRating\"\n            v-model:final-comment=\"finalComment\"\n            v-model:completed-date=\"completedDate\"\n            :status=\"status\"\n            :is-required=\"false\"\n          />\n        </evaluation-form>\n      </div>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {navigate, reloadPage} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport ReviewSummary from '../components/ReviewSummary';\nimport FinalEvaluation from '../components/FinalEvaluation';\nimport EvaluationForm from '../components/EvaluationForm';\nimport useForm from '@ohrm/core/util/composable/useForm';\nimport useReviewEvaluation from '@/orangehrmPerformancePlugin/util/composable/useReviewEvaluation';\nimport ReviewConfirmModal from '@/orangehrmPerformancePlugin/components/ReviewConfirmModal';\n\nconst reviewerModel = {\n  details: {\n    empNumber: null,\n    firstName: '',\n    lastName: '',\n    terminationId: null,\n  },\n  jobTitle: '',\n  status: 1,\n  actions: new Map(),\n};\n\nexport default {\n  name: 'SelfEvaluation',\n  components: {\n    'review-summary': ReviewSummary,\n    'final-evaluation': FinalEvaluation,\n    'evaluation-form': EvaluationForm,\n    'review-confirm-modal': ReviewConfirmModal,\n  },\n  props: {\n    reviewId: {\n      type: Number,\n      required: true,\n    },\n    status: {\n      type: Number,\n      required: true,\n    },\n    reviewPeriodStart: {\n      type: String,\n      required: true,\n    },\n    reviewPeriodEnd: {\n      type: String,\n      required: true,\n    },\n    dueDate: {\n      type: String,\n      required: true,\n    },\n  },\n  setup() {\n    const {formRef, invalid, validate} = useForm();\n    const http = new APIService(window.appGlobal.baseUrl, '');\n\n    const {\n      getAllKpis,\n      getEmployeeReview,\n      getSupervisorReview,\n      getFinalReview,\n      generateRules,\n      generateModel,\n      generateReviewerData,\n      generateAllowedActions,\n      generateEvaluationFormData,\n      finalizeReview,\n      saveEmployeeReview,\n    } = useReviewEvaluation(http);\n\n    return {\n      http,\n      invalid,\n      formRef,\n      validate,\n      getAllKpis,\n      generateRules,\n      generateModel,\n      generateReviewerData,\n      generateAllowedActions,\n      generateEvaluationFormData,\n      getEmployeeReview,\n      getSupervisorReview,\n      getFinalReview,\n      finalizeReview,\n      saveEmployeeReview,\n    };\n  },\n  data() {\n    return {\n      kpis: [],\n      rules: [],\n      employee: {...reviewerModel},\n      employeeReview: {},\n      supervisor: {...reviewerModel},\n      supervisorReview: {},\n      isLoading: false,\n      finalRating: null,\n      finalComment: null,\n      completedDate: null,\n    };\n  },\n  computed: {\n    hasSaveAction() {\n      return this.employee.actions.has('save');\n    },\n    hasCompleteAction() {\n      return this.employee.actions.has('complete');\n    },\n    hasCancelAction() {\n      return !(this.status === 4 || this.employee?.status === 3);\n    },\n    hasActions() {\n      return (\n        this.hasSaveAction || this.hasCancelAction || this.hasCompleteAction\n      );\n    },\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.getAllKpis(this.reviewId)\n      .then((response) => {\n        const {data} = response.data;\n        this.kpis = [...data];\n        this.rules = this.generateRules(data);\n        this.employeeReview = this.generateModel(data);\n        this.supervisorReview = this.generateModel(data);\n        return this.getEmployeeReview(this.reviewId);\n      })\n      .then((response) => {\n        const {data} = response.data;\n        const {meta} = response.data;\n        this.employee = this.generateReviewerData(meta.reviewer);\n        this.employee.actions = this.generateAllowedActions(\n          meta.allowedActions,\n        );\n        this.employeeReview = this.generateEvaluationFormData(\n          data,\n          meta.generalComment,\n          this.employeeReview.kpis,\n        );\n        return this.getSupervisorReview(this.reviewId);\n      })\n      .then((response) => {\n        const {data} = response.data;\n        const {meta} = response.data;\n        this.supervisor = this.generateReviewerData(meta.reviewer);\n        this.supervisor.actions = this.generateAllowedActions(\n          meta.allowedActions,\n        );\n        this.supervisorReview = this.generateEvaluationFormData(\n          data,\n          meta.generalComment,\n          this.supervisorReview.kpis,\n        );\n        return this.status === 4 ? this.getFinalReview(this.reviewId) : {};\n      })\n      .then((response) => {\n        if (Object.keys(response).length !== 0) {\n          const {data} = response.data;\n          this.finalRating = data.finalRating;\n          this.finalComment = data.finalComment;\n          this.completedDate = data.completedDate;\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSubmit(complete = false) {\n      this.$nextTick()\n        .then(() => this.validate())\n        .then(async () => {\n          if (this.invalid === true) return;\n          if (complete) {\n            this.$refs.confirmDialog.showDialog().then((confirmation) => {\n              if (confirmation === 'ok') {\n                this.submitReview(true);\n              }\n            });\n          } else {\n            this.submitReview(false);\n          }\n        });\n    },\n    submitReview(complete = false) {\n      this.isLoading = true;\n      this.saveEmployeeReview(this.reviewId, complete, this.employeeReview)\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .finally(() => {\n          reloadPage();\n        });\n    },\n    onClickCancel() {\n      navigate('/performance/myPerformanceReview');\n    },\n  },\n};\n</script>\n\n<style src=\"./review-evaluate.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}