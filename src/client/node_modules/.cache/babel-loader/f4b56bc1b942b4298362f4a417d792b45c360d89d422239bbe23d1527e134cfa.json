{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nconst candidateModel = {\n  candidateName: '',\n  vacancyName: '',\n  hiringManagerName: '',\n  status: null\n};\nexport default {\n  name: 'CandidateActionLayout',\n  inheritAttrs: false,\n  props: {\n    candidateId: {\n      type: Number,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    loading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:loading'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/recruitment/candidates`);\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    return {\n      http,\n      translateEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      candidate: {\n        ...candidateModel\n      },\n      statuses: [{\n        id: 1,\n        label: this.$t('recruitment.application_initiated')\n      }, {\n        id: 2,\n        label: this.$t('recruitment.shortlisted')\n      }, {\n        id: 3,\n        label: this.$t('leave.rejected')\n      }, {\n        id: 4,\n        label: this.$t('recruitment.interview_scheduled')\n      }, {\n        id: 5,\n        label: this.$t('recruitment.interview_passed')\n      }, {\n        id: 6,\n        label: this.$t('recruitment.interview_failed')\n      }, {\n        id: 7,\n        label: this.$t('recruitment.job_offered')\n      }, {\n        id: 8,\n        label: this.$t('recruitment.offer_declined')\n      }, {\n        id: 9,\n        label: this.$t('recruitment.hired')\n      }]\n    };\n  },\n  computed: {\n    recruitmentStatus() {\n      return this.statuses.find(item => item.id === this.candidate.status?.id)?.label || null;\n    }\n  },\n  beforeMount() {\n    this.$emit('update:loading', true);\n    this.http.get(this.candidateId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.candidate.status = data.status;\n      this.candidate.candidateName = `${data?.firstName} ${data?.middleName || ''} ${data?.lastName}`;\n      if (data?.vacancy) {\n        this.candidate.vacancyName = data?.vacancy.name;\n      }\n      if (data?.vacancy?.hiringManager) {\n        this.candidate.hiringManagerName = this.translateEmpName(data.vacancy.hiringManager, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        });\n      }\n    }).finally(() => {\n      this.$emit('update:loading', false);\n    });\n  }\n};","map":{"version":3,"mappings":"AAiEA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,wBAAuB,MAAO,iDAAiD;AAEtF,MAAMC,cAAa,GAAI;EACrBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,iBAAiB,EAAE,EAAE;EACrBC,MAAM,EAAE;AACV,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,uBAAuB;EAC7BC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDG,OAAO,EAAE;MACPL,IAAI,EAAEM,OAAO;MACbJ,QAAQ,EAAE;IACZ;EACF,CAAC;EACDK,KAAK,EAAE,CAAC,gBAAgB,CAAC;EACzBC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIpB,UAAU,CACzBqB,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,gCAA+B,CACjC;IACD,MAAM;MAACC;IAAS,IAAIvB,wBAAwB,EAAE;IAE9C,OAAO;MACLmB,IAAI;MACJK,gBAAgB,EAAED;IACpB,CAAC;EACH,CAAC;EACDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE;QAAC,GAAGzB;MAAc,CAAC;MAC9B0B,QAAQ,EAAE,CACR;QAACC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,mCAAmC;MAAC,CAAC,EAC5D;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,yBAAyB;MAAC,CAAC,EAClD;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,gBAAgB;MAAC,CAAC,EACzC;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,iCAAiC;MAAC,CAAC,EAC1D;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,8BAA8B;MAAC,CAAC,EACvD;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,8BAA8B;MAAC,CAAC,EACvD;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,yBAAyB;MAAC,CAAC,EAClD;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,4BAA4B;MAAC,CAAC,EACrD;QAACF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,mBAAmB;MAAC,CAAC;IAEhD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,GAAG;MAClB,OACE,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAC,KAAM,IAAI,CAACF,SAAS,CAACrB,MAAM,EAAEuB,EAAE,GAC9DC,KAAI,IAAK,IAAG;IAEpB;EACF,CAAC;EACDM,WAAW,GAAG;IACZ,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC;IAClC,IAAI,CAACjB,IAAG,CACLkB,GAAG,CAAC,IAAI,CAAC5B,WAAW,EACpB6B,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACd;MAAI,IAAIc,QAAQ,CAACd,IAAI;MAC5B,IAAI,CAACC,SAAS,CAACrB,MAAK,GAAIoB,IAAI,CAACpB,MAAM;MACnC,IAAI,CAACqB,SAAS,CAACxB,aAAY,GAAK,GAAEuB,IAAI,EAAEe,SAAS,IAC/Cf,IAAI,EAAEgB,UAAS,IAAK,EACtB,IAAIhB,IAAI,EAAEiB,QAAS,EAAC;MACpB,IAAIjB,IAAI,EAAEkB,OAAO,EAAE;QACjB,IAAI,CAACjB,SAAS,CAACvB,WAAU,GAAIsB,IAAI,EAAEkB,OAAO,CAACrC,IAAI;MACjD;MACA,IAAImB,IAAI,EAAEkB,OAAO,EAAEC,aAAa,EAAE;QAChC,IAAI,CAAClB,SAAS,CAACtB,iBAAgB,GAAI,IAAI,CAACoB,gBAAgB,CACtDC,IAAI,CAACkB,OAAO,CAACC,aAAa,EAC1B;UACEC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE;QACrB,CAAC,CACF;MACH;IACF,CAAC,EACAC,OAAO,CAAC,MAAM;MACb,IAAI,CAACX,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC;IACrC,CAAC,CAAC;EACN;AACF,CAAC","names":["APIService","useEmployeeNameTranslate","candidateModel","candidateName","vacancyName","hiringManagerName","status","name","inheritAttrs","props","candidateId","type","Number","required","title","String","loading","Boolean","emits","setup","http","window","appGlobal","baseUrl","$tEmpName","translateEmpName","data","candidate","statuses","id","label","$t","computed","recruitmentStatus","find","item","beforeMount","$emit","get","then","response","firstName","middleName","lastName","vacancy","hiringManager","includeMiddle","excludePastEmpTag","finally"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\components\\CandidateActionLayout.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ title }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"loading\" v-bind=\"$attrs\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"candidate.candidateName\"\n              :label=\"$t('recruitment.candidate')\"\n              readonly\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <oxd-input-field\n              v-model=\"candidate.vacancyName\"\n              :label=\"$t('recruitment.vacancy')\"\n              readonly\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <oxd-input-field\n              v-model=\"candidate.hiringManagerName\"\n              :label=\"$t('recruitment.hiring_manager')\"\n              readonly\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <oxd-input-field\n              v-model=\"recruitmentStatus\"\n              :label=\"$t('recruitment.current_status')\"\n              readonly\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <slot></slot>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nconst candidateModel = {\n  candidateName: '',\n  vacancyName: '',\n  hiringManagerName: '',\n  status: null,\n};\n\nexport default {\n  name: 'CandidateActionLayout',\n  inheritAttrs: false,\n  props: {\n    candidateId: {\n      type: Number,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    loading: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  emits: ['update:loading'],\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/recruitment/candidates`,\n    );\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    return {\n      http,\n      translateEmpName: $tEmpName,\n    };\n  },\n  data() {\n    return {\n      candidate: {...candidateModel},\n      statuses: [\n        {id: 1, label: this.$t('recruitment.application_initiated')},\n        {id: 2, label: this.$t('recruitment.shortlisted')},\n        {id: 3, label: this.$t('leave.rejected')},\n        {id: 4, label: this.$t('recruitment.interview_scheduled')},\n        {id: 5, label: this.$t('recruitment.interview_passed')},\n        {id: 6, label: this.$t('recruitment.interview_failed')},\n        {id: 7, label: this.$t('recruitment.job_offered')},\n        {id: 8, label: this.$t('recruitment.offer_declined')},\n        {id: 9, label: this.$t('recruitment.hired')},\n      ],\n    };\n  },\n  computed: {\n    recruitmentStatus() {\n      return (\n        this.statuses.find((item) => item.id === this.candidate.status?.id)\n          ?.label || null\n      );\n    },\n  },\n  beforeMount() {\n    this.$emit('update:loading', true);\n    this.http\n      .get(this.candidateId)\n      .then((response) => {\n        const {data} = response.data;\n        this.candidate.status = data.status;\n        this.candidate.candidateName = `${data?.firstName} ${\n          data?.middleName || ''\n        } ${data?.lastName}`;\n        if (data?.vacancy) {\n          this.candidate.vacancyName = data?.vacancy.name;\n        }\n        if (data?.vacancy?.hiringManager) {\n          this.candidate.hiringManagerName = this.translateEmpName(\n            data.vacancy.hiringManager,\n            {\n              includeMiddle: true,\n              excludePastEmpTag: false,\n            },\n          );\n        }\n      })\n      .finally(() => {\n        this.$emit('update:loading', false);\n      });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}