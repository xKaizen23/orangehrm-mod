{"ast":null,"code":"import { required, shouldNotExceedCharLength, validDateFormat } from '@/core/util/validation/rules';\nimport { diffInTime, parseDate, secondsTohhmm } from '@/core/util/helper/datefns';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { promiseDebounce } from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport TimezoneDropdown from '@/orangehrmAttendancePlugin/components/TimezoneDropdown.vue';\nconst attendanceRecordModal = {\n  userDate: null,\n  userTime: null,\n  utcDate: null,\n  utcTime: null,\n  note: null,\n  timezone: null,\n  timezoneOffset: null\n};\nexport default {\n  components: {\n    'timezone-dropdown': TimezoneDropdown\n  },\n  props: {\n    attendanceId: {\n      type: Number,\n      required: true\n    },\n    isEmployeeEdit: {\n      type: Boolean,\n      default: false\n    },\n    isTimezoneEditable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/attendance/records`);\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attendance: {\n        employee: null,\n        punchIn: {\n          ...attendanceRecordModal\n        },\n        punchOut: {\n          ...attendanceRecordModal\n        }\n      },\n      rules: {\n        punchIn: {\n          userDate: [required, validDateFormat(this.userDateFormat), promiseDebounce(() => this.validateRecord('punch-in-overlaps'), 500)],\n          userTime: [required, promiseDebounce(() => this.validateRecord('punch-in-overlaps'), 500)],\n          note: [shouldNotExceedCharLength(250)]\n        },\n        punchOut: {\n          userDate: [required, validDateFormat(this.userDateFormat), promiseDebounce(() => this.validateRecord('punch-out-overlaps'), 500)],\n          userTime: [required, promiseDebounce(() => this.validateRecord('punch-out-overlaps'), 500)],\n          note: [shouldNotExceedCharLength(250)]\n        }\n      }\n    };\n  },\n  computed: {\n    totalDuration() {\n      if (!this.attendance.punchOut?.userDate) return null;\n      if (parseDate(this.attendance.punchIn.userDate) === null || parseDate(this.attendance.punchOut.userDate) === null) {\n        return null;\n      }\n      const startTime = `${this.attendance.punchIn.userDate} ${this.attendance.punchIn.userTime}`;\n      const punchInTz = this.attendance.punchIn.timezone?._offset ?? parseFloat(this.attendance.punchIn.timezoneOffset);\n      const startTimezone = (punchInTz > 0 ? ' +' : ' -') + secondsTohhmm(Math.abs(punchInTz) * 3600);\n      const endTime = `${this.attendance.punchOut.userDate} ${this.attendance.punchOut.userTime}`;\n      const punchOutTz = this.attendance.punchOut.timezone?._offset ?? parseFloat(this.attendance.punchOut.timezoneOffset);\n      const endTimezone = (punchOutTz > 0 ? ' +' : ' -') + secondsTohhmm(Math.abs(punchOutTz) * 3600);\n\n      // yyyy-MM-dd HH:mm xxx <=> 2022-03-07 14:26 +05:30\n      return parseFloat(diffInTime(startTime + startTimezone, endTime + endTimezone, 'yyyy-MM-dd HH:mm xxx') / 3600).toFixed(2);\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.attendanceId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.attendance.employee = data.employee;\n      this.attendance.punchIn = {\n        ...data.punchIn,\n        timezone: {\n          id: data.punchIn.timezone.name,\n          label: data.punchIn.timezone.label,\n          _offset: data.punchIn.timezoneOffset\n        }\n      };\n      this.attendance.punchOut = data.punchOut?.userDate ? {\n        ...data.punchOut,\n        timezone: {\n          id: data.punchOut.timezone.name,\n          label: data.punchOut.timezone.label,\n          _offset: data.punchOut.timezoneOffset\n        }\n      } : null;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      if (this.isEmployeeEdit) {\n        navigate('/attendance/viewAttendanceRecord', undefined, {\n          employeeId: this.attendance.employee?.empNumber,\n          date: this.attendance.punchIn?.userDate\n        });\n      } else {\n        navigate('/attendance/viewMyAttendanceRecord', undefined, {\n          date: this.attendance.punchIn?.userDate\n        });\n      }\n    },\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        punchInDate: this.attendance.punchIn.userDate,\n        punchInTime: this.attendance.punchIn.userTime,\n        punchInNote: this.attendance.punchIn.note,\n        ...(this.isTimezoneEditable && {\n          punchInOffset: this.attendance.punchIn.timezone ? this.attendance.punchIn.timezone._offset : this.attendance.punchIn.timezoneOffset,\n          punchInTimezoneName: this.attendance.punchIn.timezone ? this.attendance.punchIn.timezone.id : this.attendance.punchIn.timezone.name\n        })\n      };\n      if (this.attendance.punchOut) {\n        payload.punchOutDate = this.attendance.punchOut.userDate;\n        payload.punchOutTime = this.attendance.punchOut.userTime;\n        payload.punchOutNote = this.attendance.punchOut.note;\n        if (this.isTimezoneEditable) {\n          payload.punchOutOffset = this.attendance.punchOut.timezone ? this.attendance.punchOut.timezone._offset : this.attendance.punchOut.timezoneOffset;\n          payload.punchOutTimezoneName = this.attendance.punchOut.timezone ? this.attendance.punchOut.timezone.id : this.attendance.punchOut.timezone.name;\n        }\n      }\n      this.http.update(this.attendanceId, payload).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    validateRecord(apiPath) {\n      if (parseDate(this.attendance.punchIn.userDate) === null) {\n        return true;\n      }\n      if (this.attendance.punchOut && parseDate(this.attendance.punchOut.userDate) === null) {\n        return true;\n      }\n      return new Promise(resolve => {\n        this.http.request({\n          method: 'GET',\n          url: `/api/v2/attendance/records/${apiPath}`,\n          params: {\n            recordId: this.attendanceId,\n            punchInTimezoneOffset: this.attendance.punchIn.timezone ? this.attendance.punchIn.timezone._offset : this.attendance.punchIn.timezoneOffset,\n            punchInDate: this.attendance.punchIn.userDate,\n            punchInTime: this.attendance.punchIn.userTime,\n            punchOutTimezoneOffset: this.attendance.punchOut?.timezone ? this.attendance.punchOut.timezone._offset : this.attendance.punchOut?.timezoneOffset,\n            punchOutDate: this.attendance.punchOut?.userDate,\n            punchOutTime: this.attendance.punchOut?.userTime\n          },\n          // Prevent triggering response interceptor on 400\n          validateStatus: status => {\n            return status >= 200 && status < 300 || status == 400;\n          }\n        }).then(res => {\n          const {\n            data,\n            error\n          } = res.data;\n          if (error) {\n            return resolve(error.message);\n          }\n          return data.valid === true ? resolve(true) : resolve(this.$t('attendance.overlapping_records_found'));\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","shouldNotExceedCharLength","validDateFormat","diffInTime","parseDate","secondsTohhmm","navigate","APIService","promiseDebounce","useDateFormat","TimezoneDropdown","attendanceRecordModal","userDate","userTime","utcDate","utcTime","note","timezone","timezoneOffset","components","props","attendanceId","type","Number","isEmployeeEdit","Boolean","default","isTimezoneEditable","setup","http","window","appGlobal","baseUrl","userDateFormat","data","isLoading","attendance","employee","punchIn","punchOut","rules","validateRecord","computed","totalDuration","startTime","punchInTz","_offset","parseFloat","startTimezone","Math","abs","endTime","punchOutTz","endTimezone","toFixed","beforeMount","get","then","response","id","name","label","finally","methods","onCancel","undefined","employeeId","empNumber","date","onSave","payload","punchInDate","punchInTime","punchInNote","punchInOffset","punchInTimezoneName","punchOutDate","punchOutTime","punchOutNote","punchOutOffset","punchOutTimezoneName","update","$toast","updateSuccess","apiPath","Promise","resolve","request","method","url","params","recordId","punchInTimezoneOffset","punchOutTimezoneOffset","validateStatus","status","res","error","message","valid","$t"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\EditAttendance.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <div class=\"orangehrm-header\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('attendance.edit_attendance_records') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"totalDuration\"\n          tag=\"span\"\n          class=\"orangehrm-header-total\"\n        >\n          {{ $t('time.total_duration') }}: {{ totalDuration }}\n        </oxd-text>\n      </div>\n      <oxd-divider />\n\n      <div class=\"orangehrm-paper-container\">\n        <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid no-gap\">\n            <oxd-grid-item>\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <oxd-text type=\"subtitle-2\">\n                    {{ $t('attendance.punch_in') }}\n                  </oxd-text>\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <date-input\n                    v-model=\"attendance.punchIn.userDate\"\n                    :label=\"$t('general.date')\"\n                    :rules=\"rules.punchIn.userDate\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchIn.userTime\"\n                    :label=\"$t('general.time')\"\n                    :rules=\"rules.punchIn.userTime\"\n                    type=\"time\"\n                    :placeholder=\"$t('attendance.hh_mm')\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item\n                  v-if=\"isTimezoneEditable\"\n                  class=\"--offset-row-3 --span-column-2\"\n                >\n                  <timezone-dropdown\n                    v-model=\"attendance.punchIn.timezone\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--span-column-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchIn.note\"\n                    :rules=\"rules.punchIn.note\"\n                    :label=\"$t('general.note')\"\n                    :placeholder=\"$t('general.type_here')\"\n                    type=\"textarea\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n\n            <oxd-grid-item\n              v-if=\"attendance.punchOut\"\n              class=\"orangehrm-punch-out-record\"\n            >\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item>\n                  <oxd-text type=\"subtitle-2\">\n                    {{ $t('attendance.punch_out') }}\n                  </oxd-text>\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <date-input\n                    v-model=\"attendance.punchOut.userDate\"\n                    :label=\"$t('general.date')\"\n                    :rules=\"rules.punchOut.userDate\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--offset-row-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchOut.userTime\"\n                    :label=\"$t('general.time')\"\n                    :rules=\"rules.punchOut.userTime\"\n                    type=\"time\"\n                    :placeholder=\"$t('attendance.hh_mm')\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item\n                  v-if=\"isTimezoneEditable\"\n                  class=\"--offset-row-3 --span-column-2\"\n                >\n                  <timezone-dropdown\n                    v-model=\"attendance.punchOut.timezone\"\n                    required\n                  />\n                </oxd-grid-item>\n\n                <oxd-grid-item class=\"--span-column-2\">\n                  <oxd-input-field\n                    v-model=\"attendance.punchOut.note\"\n                    :rules=\"rules.punchOut.note\"\n                    :label=\"$t('general.note')\"\n                    :placeholder=\"$t('general.type_here')\"\n                    type=\"textarea\"\n                  />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n          </oxd-grid>\n\n          <oxd-divider />\n          <oxd-form-actions>\n            <required-text />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.cancel')\"\n              @click=\"onCancel\"\n            />\n            <submit-button />\n          </oxd-form-actions>\n        </oxd-form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validDateFormat,\n} from '@/core/util/validation/rules';\nimport {diffInTime, parseDate, secondsTohhmm} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport TimezoneDropdown from '@/orangehrmAttendancePlugin/components/TimezoneDropdown.vue';\n\nconst attendanceRecordModal = {\n  userDate: null,\n  userTime: null,\n  utcDate: null,\n  utcTime: null,\n  note: null,\n  timezone: null,\n  timezoneOffset: null,\n};\n\nexport default {\n  components: {\n    'timezone-dropdown': TimezoneDropdown,\n  },\n  props: {\n    attendanceId: {\n      type: Number,\n      required: true,\n    },\n    isEmployeeEdit: {\n      type: Boolean,\n      default: false,\n    },\n    isTimezoneEditable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/attendance/records`,\n    );\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attendance: {\n        employee: null,\n        punchIn: {...attendanceRecordModal},\n        punchOut: {...attendanceRecordModal},\n      },\n      rules: {\n        punchIn: {\n          userDate: [\n            required,\n            validDateFormat(this.userDateFormat),\n            promiseDebounce(\n              () => this.validateRecord('punch-in-overlaps'),\n              500,\n            ),\n          ],\n          userTime: [\n            required,\n            promiseDebounce(\n              () => this.validateRecord('punch-in-overlaps'),\n              500,\n            ),\n          ],\n          note: [shouldNotExceedCharLength(250)],\n        },\n        punchOut: {\n          userDate: [\n            required,\n            validDateFormat(this.userDateFormat),\n            promiseDebounce(\n              () => this.validateRecord('punch-out-overlaps'),\n              500,\n            ),\n          ],\n          userTime: [\n            required,\n            promiseDebounce(\n              () => this.validateRecord('punch-out-overlaps'),\n              500,\n            ),\n          ],\n          note: [shouldNotExceedCharLength(250)],\n        },\n      },\n    };\n  },\n  computed: {\n    totalDuration() {\n      if (!this.attendance.punchOut?.userDate) return null;\n      if (\n        parseDate(this.attendance.punchIn.userDate) === null ||\n        parseDate(this.attendance.punchOut.userDate) === null\n      ) {\n        return null;\n      }\n\n      const startTime = `${this.attendance.punchIn.userDate} ${this.attendance.punchIn.userTime}`;\n      const punchInTz =\n        this.attendance.punchIn.timezone?._offset ??\n        parseFloat(this.attendance.punchIn.timezoneOffset);\n      const startTimezone =\n        (punchInTz > 0 ? ' +' : ' -') +\n        secondsTohhmm(Math.abs(punchInTz) * 3600);\n\n      const endTime = `${this.attendance.punchOut.userDate} ${this.attendance.punchOut.userTime}`;\n      const punchOutTz =\n        this.attendance.punchOut.timezone?._offset ??\n        parseFloat(this.attendance.punchOut.timezoneOffset);\n      const endTimezone =\n        (punchOutTz > 0 ? ' +' : ' -') +\n        secondsTohhmm(Math.abs(punchOutTz) * 3600);\n\n      // yyyy-MM-dd HH:mm xxx <=> 2022-03-07 14:26 +05:30\n      return parseFloat(\n        diffInTime(\n          startTime + startTimezone,\n          endTime + endTimezone,\n          'yyyy-MM-dd HH:mm xxx',\n        ) / 3600,\n      ).toFixed(2);\n    },\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.attendanceId)\n      .then((response) => {\n        const {data} = response.data;\n        this.attendance.employee = data.employee;\n        this.attendance.punchIn = {\n          ...data.punchIn,\n          timezone: {\n            id: data.punchIn.timezone.name,\n            label: data.punchIn.timezone.label,\n            _offset: data.punchIn.timezoneOffset,\n          },\n        };\n        this.attendance.punchOut = data.punchOut?.userDate\n          ? {\n              ...data.punchOut,\n              timezone: {\n                id: data.punchOut.timezone.name,\n                label: data.punchOut.timezone.label,\n                _offset: data.punchOut.timezoneOffset,\n              },\n            }\n          : null;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onCancel() {\n      if (this.isEmployeeEdit) {\n        navigate('/attendance/viewAttendanceRecord', undefined, {\n          employeeId: this.attendance.employee?.empNumber,\n          date: this.attendance.punchIn?.userDate,\n        });\n      } else {\n        navigate('/attendance/viewMyAttendanceRecord', undefined, {\n          date: this.attendance.punchIn?.userDate,\n        });\n      }\n    },\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        punchInDate: this.attendance.punchIn.userDate,\n        punchInTime: this.attendance.punchIn.userTime,\n        punchInNote: this.attendance.punchIn.note,\n        ...(this.isTimezoneEditable && {\n          punchInOffset: this.attendance.punchIn.timezone\n            ? this.attendance.punchIn.timezone._offset\n            : this.attendance.punchIn.timezoneOffset,\n          punchInTimezoneName: this.attendance.punchIn.timezone\n            ? this.attendance.punchIn.timezone.id\n            : this.attendance.punchIn.timezone.name,\n        }),\n      };\n      if (this.attendance.punchOut) {\n        payload.punchOutDate = this.attendance.punchOut.userDate;\n        payload.punchOutTime = this.attendance.punchOut.userTime;\n        payload.punchOutNote = this.attendance.punchOut.note;\n        if (this.isTimezoneEditable) {\n          payload.punchOutOffset = this.attendance.punchOut.timezone\n            ? this.attendance.punchOut.timezone._offset\n            : this.attendance.punchOut.timezoneOffset;\n          payload.punchOutTimezoneName = this.attendance.punchOut.timezone\n            ? this.attendance.punchOut.timezone.id\n            : this.attendance.punchOut.timezone.name;\n        }\n      }\n      this.http\n        .update(this.attendanceId, payload)\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    validateRecord(apiPath) {\n      if (parseDate(this.attendance.punchIn.userDate) === null) {\n        return true;\n      }\n      if (\n        this.attendance.punchOut &&\n        parseDate(this.attendance.punchOut.userDate) === null\n      ) {\n        return true;\n      }\n      return new Promise((resolve) => {\n        this.http\n          .request({\n            method: 'GET',\n            url: `/api/v2/attendance/records/${apiPath}`,\n            params: {\n              recordId: this.attendanceId,\n              punchInTimezoneOffset: this.attendance.punchIn.timezone\n                ? this.attendance.punchIn.timezone._offset\n                : this.attendance.punchIn.timezoneOffset,\n              punchInDate: this.attendance.punchIn.userDate,\n              punchInTime: this.attendance.punchIn.userTime,\n              punchOutTimezoneOffset: this.attendance.punchOut?.timezone\n                ? this.attendance.punchOut.timezone._offset\n                : this.attendance.punchOut?.timezoneOffset,\n              punchOutDate: this.attendance.punchOut?.userDate,\n              punchOutTime: this.attendance.punchOut?.userTime,\n            },\n            // Prevent triggering response interceptor on 400\n            validateStatus: (status) => {\n              return (status >= 200 && status < 300) || status == 400;\n            },\n          })\n          .then((res) => {\n            const {data, error} = res.data;\n            if (error) {\n              return resolve(error.message);\n            }\n            return data.valid === true\n              ? resolve(true)\n              : resolve(this.$t('attendance.overlapping_records_found'));\n          });\n      });\n    },\n  },\n};\n</script>\n\n<style src=\"./edit-attendance.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}