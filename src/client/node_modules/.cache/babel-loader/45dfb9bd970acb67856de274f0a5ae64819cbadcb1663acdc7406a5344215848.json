{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength, validFileTypes, maxFileSize } from '@ohrm/core/util/validation/rules';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst initialJobTitle = {\n  title: '',\n  description: '',\n  oldSpecification: '',\n  newSpecification: null,\n  method: 'keepCurrent',\n  note: ''\n};\nexport default {\n  components: {\n    'file-upload-input': FileUploadInput\n  },\n  props: {\n    jobTitleId: {\n      type: String,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/job-titles');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const jobTitleUniqueValidation = createUniqueValidator('JobTitle', 'jobTitleName', {\n      entityId: props.jobTitleId,\n      matchByField: 'isDeleted',\n      matchByValue: 'false'\n    });\n    return {\n      http,\n      jobTitleUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      jobTitle: {\n        ...initialJobTitle\n      },\n      rules: {\n        title: [required, this.jobTitleUniqueValidation, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)],\n        specification: [v => {\n          if (this.jobTitle.method == 'replaceCurrent') {\n            return required(v);\n          } else {\n            return true;\n          }\n        }, validFileTypes(this.allowedFileTypes), maxFileSize(this.maxFileSize)],\n        note: [shouldNotExceedCharLength(400)]\n      }\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.jobTitleId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.jobTitle.title = data.title;\n      this.jobTitle.description = data.description;\n      this.jobTitle.note = data.note;\n      this.jobTitle.oldSpecification = data.jobSpecification?.id ? data.jobSpecification : null;\n      this.jobTitle.newSpecification = null;\n      this.jobTitle.method = 'keepCurrent';\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/admin/viewJobTitleList');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.jobTitleId, {\n        title: this.jobTitle.title,\n        description: this.jobTitle.description,\n        note: this.jobTitle.note,\n        currentJobSpecification: this.jobTitle.oldSpecification ? this.jobTitle.method : undefined,\n        specification: this.jobTitle.newSpecification ? this.jobTitle.newSpecification : undefined\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","shouldNotExceedCharLength","validFileTypes","maxFileSize","FileUploadInput","useServerValidation","initialJobTitle","title","description","oldSpecification","newSpecification","method","note","components","props","jobTitleId","type","String","allowedFileTypes","Array","Number","setup","http","window","appGlobal","baseUrl","createUniqueValidator","jobTitleUniqueValidation","entityId","matchByField","matchByValue","data","isLoading","jobTitle","rules","specification","v","computed","formattedFileSize","Math","round","created","get","then","response","jobSpecification","id","finally","methods","onCancel","onSave","update","currentJobSpecification","undefined","$toast","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\jobTitle\\EditJobTitle.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.edit_job_title') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.title\"\n            :label=\"$t('general.job_title')\"\n            :rules=\"rules.title\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.description\"\n            type=\"textarea\"\n            :label=\"$t('admin.job_description')\"\n            :placeholder=\"$t('general.type_description_here')\"\n            :rules=\"rules.description\"\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <file-upload-input\n            v-model:newFile=\"jobTitle.newSpecification\"\n            v-model:method=\"jobTitle.method\"\n            :label=\"$t('general.job_specification')\"\n            :button-label=\"$t('general.browse')\"\n            :file=\"jobTitle.oldSpecification\"\n            :rules=\"rules.specification\"\n            :url=\"`admin/viewJobSpecification/attachId`\"\n            :hint=\"$t('general.accepts_up_to_n_mb', {count: formattedFileSize})\"\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.note\"\n            type=\"textarea\"\n            :label=\"$t('general.note')\"\n            :placeholder=\"$t('general.add_note')\"\n            :rules=\"rules.note\"\n            label-icon=\"pencil-square\"\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validFileTypes,\n  maxFileSize,\n} from '@ohrm/core/util/validation/rules';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialJobTitle = {\n  title: '',\n  description: '',\n  oldSpecification: '',\n  newSpecification: null,\n  method: 'keepCurrent',\n  note: '',\n};\n\nexport default {\n  components: {\n    'file-upload-input': FileUploadInput,\n  },\n  props: {\n    jobTitleId: {\n      type: String,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/job-titles',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const jobTitleUniqueValidation = createUniqueValidator(\n      'JobTitle',\n      'jobTitleName',\n      {\n        entityId: props.jobTitleId,\n        matchByField: 'isDeleted',\n        matchByValue: 'false',\n      },\n    );\n\n    return {\n      http,\n      jobTitleUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      jobTitle: {...initialJobTitle},\n      rules: {\n        title: [\n          required,\n          this.jobTitleUniqueValidation,\n          shouldNotExceedCharLength(100),\n        ],\n        description: [shouldNotExceedCharLength(400)],\n        specification: [\n          (v) => {\n            if (this.jobTitle.method == 'replaceCurrent') {\n              return required(v);\n            } else {\n              return true;\n            }\n          },\n          validFileTypes(this.allowedFileTypes),\n          maxFileSize(this.maxFileSize),\n        ],\n        note: [shouldNotExceedCharLength(400)],\n      },\n    };\n  },\n\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.jobTitleId)\n      .then((response) => {\n        const {data} = response.data;\n        this.jobTitle.title = data.title;\n        this.jobTitle.description = data.description;\n        this.jobTitle.note = data.note;\n        this.jobTitle.oldSpecification = data.jobSpecification?.id\n          ? data.jobSpecification\n          : null;\n        this.jobTitle.newSpecification = null;\n        this.jobTitle.method = 'keepCurrent';\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/admin/viewJobTitleList');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.jobTitleId, {\n          title: this.jobTitle.title,\n          description: this.jobTitle.description,\n          note: this.jobTitle.note,\n          currentJobSpecification: this.jobTitle.oldSpecification\n            ? this.jobTitle.method\n            : undefined,\n          specification: this.jobTitle.newSpecification\n            ? this.jobTitle.newSpecification\n            : undefined,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}