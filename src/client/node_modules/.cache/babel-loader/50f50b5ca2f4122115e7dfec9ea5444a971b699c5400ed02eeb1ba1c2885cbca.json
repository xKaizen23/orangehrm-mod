{"ast":null,"code":"import useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport FixLanguageStringErrorTable from '@/orangehrmAdminPlugin/components/FixLanguageStringErrorTable.vue';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { ref } from 'vue';\nimport { OxdAlert } from '@ohrm/oxd';\nexport default {\n  name: 'FixLanguageStringErrors',\n  components: {\n    'oxd-alert': OxdAlert,\n    'edit-translations': FixLanguageStringErrorTable\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true\n    },\n    empNumber: {\n      type: Number,\n      required: true\n    },\n    languagePackage: {\n      type: String,\n      required: true\n    },\n    sourceLanguage: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      saveSuccess\n    } = useToast();\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/i18n/languages/${props.languageId}/translations/errors`);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      response: items,\n      isLoading,\n      execQuery\n    } = usePaginate(http);\n    const itemsModified = ref(false);\n    const onReset = () => {\n      currentPage.value = 1;\n      itemsModified.value = false;\n      execQuery();\n    };\n    const checkItemsModified = () => {\n      itemsModified.value = items.value.data.reduce((accumulator, item) => accumulator || item.target !== '' && item.modified === true, false);\n    };\n    const onSubmitLangString = () => {\n      isLoading.value = true;\n      http.request({\n        method: `PUT`,\n        url: `/api/v2/admin/i18n/languages/${props.languageId}/translations/bulk`,\n        data: {\n          data: items.value.data.filter(item => item.target !== null && item.modified === true).map(item => {\n            return {\n              langStringId: item.langStringId,\n              translatedValue: item.target\n            };\n          })\n        }\n      }).then(() => {\n        return saveSuccess();\n      }).then(() => {\n        currentPage.value = 1;\n        itemsModified.value = false;\n        execQuery();\n      });\n    };\n    return {\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      items,\n      onReset,\n      onSubmitLangString,\n      itemsModified,\n      checkItemsModified\n    };\n  },\n  watch: {\n    total(value) {\n      if (value === 0) {\n        navigate('/admin/languagePackage');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["useToast","APIService","FixLanguageStringErrorTable","usePaginate","navigate","ref","OxdAlert","name","components","props","languageId","type","Number","required","empNumber","languagePackage","String","sourceLanguage","setup","saveSuccess","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","response","items","isLoading","execQuery","itemsModified","onReset","value","checkItemsModified","data","reduce","accumulator","item","target","modified","onSubmitLangString","request","method","url","filter","map","langStringId","translatedValue","then","watch"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\languageImport\\FixLanguageStringErrors.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-alert\n      :show=\"!isLoading && showPaginator && itemsModified\"\n      type=\"info\"\n      :message=\"$t('admin.please_save_before_pagination')\"\n    ></oxd-alert>\n    <div class=\"orangehrm-paper-container\">\n      <oxd-form\n        v-if=\"total > 0\"\n        :loading=\"isLoading\"\n        @submit-valid=\"onSubmitLangString\"\n        @reset=\"onReset\"\n      >\n        <div class=\"orangehrm-header-container\">\n          <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n            {{ $t('admin.errors_in_import_language_packages') }}\n          </oxd-text>\n          <oxd-pagination\n            v-if=\"showPaginator && !itemsModified\"\n            :key=\"currentPage\"\n            v-model:current=\"currentPage\"\n            :length=\"pages\"\n          />\n        </div>\n        <table-header\n          :loading=\"isLoading\"\n          :total=\"total\"\n          :selected=\"0\"\n          records-found-lang-string=\"admin.n_errors_found\"\n        ></table-header>\n        <edit-translations\n          v-if=\"items?.data\"\n          v-model:langstrings=\"items.data\"\n          @update:langstrings=\"checkItemsModified\"\n        ></edit-translations>\n        <oxd-form-actions>\n          <div class=\"orangehrm-bottom-container\">\n            <div>\n              <oxd-button\n                display-type=\"ghost\"\n                :label=\"$t('general.reset')\"\n                type=\"reset\"\n              />\n              <oxd-button\n                class=\"orangehrm-left-space\"\n                display-type=\"secondary\"\n                :label=\"$t('general.save')\"\n                type=\"submit\"\n                :disabled=\"isLoading\"\n              />\n              <span v-if=\"isLoading\" class=\"loading-spinner\"></span>\n            </div>\n          </div>\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport useToast from '@/core/util/composable/useToast';\nimport {APIService} from '@/core/util/services/api.service';\nimport FixLanguageStringErrorTable from '@/orangehrmAdminPlugin/components/FixLanguageStringErrorTable.vue';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {ref} from 'vue';\nimport {OxdAlert} from '@ohrm/oxd';\n\nexport default {\n  name: 'FixLanguageStringErrors',\n  components: {\n    'oxd-alert': OxdAlert,\n    'edit-translations': FixLanguageStringErrorTable,\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true,\n    },\n    empNumber: {\n      type: Number,\n      required: true,\n    },\n    languagePackage: {\n      type: String,\n      required: true,\n    },\n    sourceLanguage: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const {saveSuccess} = useToast();\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/i18n/languages/${props.languageId}/translations/errors`,\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      response: items,\n      isLoading,\n      execQuery,\n    } = usePaginate(http);\n\n    const itemsModified = ref(false);\n\n    const onReset = () => {\n      currentPage.value = 1;\n      itemsModified.value = false;\n      execQuery();\n    };\n\n    const checkItemsModified = () => {\n      itemsModified.value = items.value.data.reduce(\n        (accumulator, item) =>\n          accumulator || (item.target !== '' && item.modified === true),\n        false,\n      );\n    };\n\n    const onSubmitLangString = () => {\n      isLoading.value = true;\n      http\n        .request({\n          method: `PUT`,\n          url: `/api/v2/admin/i18n/languages/${props.languageId}/translations/bulk`,\n          data: {\n            data: items.value.data\n              .filter((item) => item.target !== null && item.modified === true)\n              .map((item) => {\n                return {\n                  langStringId: item.langStringId,\n                  translatedValue: item.target,\n                };\n              }),\n          },\n        })\n        .then(() => {\n          return saveSuccess();\n        })\n        .then(() => {\n          currentPage.value = 1;\n          itemsModified.value = false;\n          execQuery();\n        });\n    };\n\n    return {\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      items,\n      onReset,\n      onSubmitLangString,\n      itemsModified,\n      checkItemsModified,\n    };\n  },\n\n  watch: {\n    total(value) {\n      if (value === 0) {\n        navigate('/admin/languagePackage');\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-header-container {\n  display: flex;\n  align-items: center;\n}\n\n.orangehrm-main-title {\n  text-align: left;\n}\n\n.pagination {\n  margin-left: auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}