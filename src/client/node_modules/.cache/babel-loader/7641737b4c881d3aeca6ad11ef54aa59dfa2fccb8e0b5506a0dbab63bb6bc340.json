{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport EmploymentStatusDropdown from '@/orangehrmPimPlugin/components/EmploymentStatusDropdown';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst defaultFilters = {\n  employee: null,\n  fromDate: null,\n  toDate: null,\n  jobTitle: null,\n  subunit: null,\n  empStatus: null\n};\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'employment-status-dropdown': EmploymentStatusDropdown\n  },\n  props: {\n    subunits: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      $t\n    } = usei18n();\n    const {\n      userDateFormat\n    } = useDateFormat();\n    const rules = {\n      fromDate: [validDateFormat(userDateFormat), startDateShouldBeBeforeEndDate(() => filters.value.toDate, $t('general.from_date_should_be_before_to_date'), {\n        allowSameDate: true\n      })],\n      toDate: [validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => filters.value.fromDate, $t('general.to_date_should_be_after_from_date'), {\n        allowSameDate: true\n      })],\n      employee: [shouldNotExceedCharLength(100), validSelection]\n    };\n    const serializedFilters = computed(() => {\n      return {\n        empNumber: filters.value.employee?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        jobTitleId: filters.value.jobTitle?.id,\n        subunitId: filters.value.subunit?.id,\n        employmentStatusId: filters.value.empStatus?.id\n      };\n    });\n    return {\n      rules,\n      filters,\n      serializedFilters\n    };\n  }\n};","map":{"version":3,"mappings":"AAmGA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,SACEC,cAAc,EACdC,eAAe,EACfC,6BAA6B,EAC7BC,8BAA8B,EAC9BC,yBAAyB,QACpB,8BAA8B;AACrC,OAAOC,YAAW,MAAO,sCAAsC;AAC/D,OAAOC,gBAAe,MAAO,kDAAkD;AAC/E,OAAOC,oBAAmB,MAAO,+CAA+C;AAChF,OAAOC,wBAAuB,MAAO,0DAA0D;AAC/F,OAAOC,OAAM,MAAO,gCAAgC;AACpD,OAAOC,aAAY,MAAO,sCAAsC;AAEhE,MAAMC,cAAa,GAAI;EACrBC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE;AACb,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,eAAe,EAAEb,YAAY;IAC7B,mBAAmB,EAAEC,gBAAgB;IACrC,uBAAuB,EAAEC,oBAAoB;IAC7C,4BAA4B,EAAEC;EAChC,CAAC;EAEDW,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EAEDC,KAAK,GAAG;IACN,MAAMC,OAAM,GAAI1B,GAAG,CAAC;MAClB,GAAGY;IACL,CAAC,CAAC;IACF,MAAM;MAACe;IAAE,IAAIjB,OAAO,EAAE;IACtB,MAAM;MAACkB;IAAc,IAAIjB,aAAa,EAAE;IAExC,MAAMkB,KAAI,GAAI;MACZf,QAAQ,EAAE,CACRZ,eAAe,CAAC0B,cAAc,CAAC,EAC/BxB,8BAA8B,CAC5B,MAAMsB,OAAO,CAACI,KAAK,CAACf,MAAM,EAC1BY,EAAE,CAAC,4CAA4C,CAAC,EAChD;QAACI,aAAa,EAAE;MAAI,CAAC,CACtB,CACF;MACDhB,MAAM,EAAE,CACNb,eAAe,CAAC0B,cAAc,CAAC,EAC/BzB,6BAA6B,CAC3B,MAAMuB,OAAO,CAACI,KAAK,CAAChB,QAAQ,EAC5Ba,EAAE,CAAC,2CAA2C,CAAC,EAC/C;QAACI,aAAa,EAAE;MAAI,CAAC,CACtB,CACF;MACDlB,QAAQ,EAAE,CAACR,yBAAyB,CAAC,GAAG,CAAC,EAAEJ,cAAc;IAC3D,CAAC;IAED,MAAM+B,iBAAgB,GAAIjC,QAAQ,CAAC,MAAM;MACvC,OAAO;QACLkC,SAAS,EAAEP,OAAO,CAACI,KAAK,CAACjB,QAAQ,EAAEqB,EAAE;QACrCpB,QAAQ,EAAEY,OAAO,CAACI,KAAK,CAAChB,QAAQ;QAChCC,MAAM,EAAEW,OAAO,CAACI,KAAK,CAACf,MAAM;QAC5BoB,UAAU,EAAET,OAAO,CAACI,KAAK,CAACd,QAAQ,EAAEkB,EAAE;QACtCE,SAAS,EAAEV,OAAO,CAACI,KAAK,CAACb,OAAO,EAAEiB,EAAE;QACpCG,kBAAkB,EAAEX,OAAO,CAACI,KAAK,CAACZ,SAAS,EAAEgB;MAC/C,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;MACLL,KAAK;MACLH,OAAO;MACPM;IACF,CAAC;EACH;AACF,CAAC","names":["computed","ref","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","shouldNotExceedCharLength","ReportsTable","JobtitleDropdown","EmployeeAutocomplete","EmploymentStatusDropdown","usei18n","useDateFormat","defaultFilters","employee","fromDate","toDate","jobTitle","subunit","empStatus","components","props","subunits","type","Array","default","setup","filters","$t","userDateFormat","rules","value","allowSameDate","serializedFilters","empNumber","id","jobTitleId","subunitId","employmentStatusId"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\AttendanceSummaryReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <reports-table\n    module=\"time\"\n    name=\"attendance\"\n    :prefetch=\"false\"\n    :filters=\"serializedFilters\"\n    :column-count=\"2\"\n  >\n    <template #default=\"{generateReport}\">\n      <oxd-table-filter\n        :filter-title=\"$t('attendance.attendance_total_summary_report')\"\n      >\n        <oxd-form @submit-valid=\"generateReport\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <employee-autocomplete\n                  v-model=\"filters.employee\"\n                  :rules=\"rules.employee\"\n                  :params=\"{\n                    includeEmployees: 'currentAndPast',\n                  }\"\n                />\n              </oxd-grid-item>\n\n              <oxd-grid-item>\n                <jobtitle-dropdown v-model=\"filters.jobTitle\" />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"filters.subunit\"\n                  type=\"select\"\n                  :label=\"$t('general.sub_unit')\"\n                  :options=\"subunits\"\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <employment-status-dropdown v-model=\"filters.empStatus\" />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.fromDate\"\n                  :placeholder=\"$t('general.from')\"\n                  :rules=\"rules.fromDate\"\n                  :label=\"$t('general.date_range')\"\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.toDate\"\n                  label=\"&nbsp\"\n                  :placeholder=\"$t('general.to')\"\n                  :rules=\"rules.toDate\"\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-divider />\n\n          <oxd-form-actions>\n            <oxd-button\n              type=\"submit\"\n              display-type=\"secondary\"\n              :label=\"$t('general.view')\"\n            />\n          </oxd-form-actions>\n        </oxd-form>\n      </oxd-table-filter>\n      <br />\n    </template>\n\n    <template #footer=\"{data}\">\n      {{ $t('time.total_duration') }}:\n      {{ data.meta ? data.meta.sum.label : '0.00' }}\n    </template>\n  </reports-table>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport EmploymentStatusDropdown from '@/orangehrmPimPlugin/components/EmploymentStatusDropdown';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst defaultFilters = {\n  employee: null,\n  fromDate: null,\n  toDate: null,\n  jobTitle: null,\n  subunit: null,\n  empStatus: null,\n};\n\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'employment-status-dropdown': EmploymentStatusDropdown,\n  },\n\n  props: {\n    subunits: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const filters = ref({\n      ...defaultFilters,\n    });\n    const {$t} = usei18n();\n    const {userDateFormat} = useDateFormat();\n\n    const rules = {\n      fromDate: [\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => filters.value.toDate,\n          $t('general.from_date_should_be_before_to_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      toDate: [\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('general.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      employee: [shouldNotExceedCharLength(100), validSelection],\n    };\n\n    const serializedFilters = computed(() => {\n      return {\n        empNumber: filters.value.employee?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        jobTitleId: filters.value.jobTitle?.id,\n        subunitId: filters.value.subunit?.id,\n        employmentStatusId: filters.value.empStatus?.id,\n      };\n    });\n\n    return {\n      rules,\n      filters,\n      serializedFilters,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}