{"ast":null,"code":"import usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport SaveLanguage from '@/orangehrmPimPlugin/components/SaveLanguage';\nimport EditLanguage from '@/orangehrmPimPlugin/components/EditLanguage';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nconst languageNormalizer = data => {\n  return data.map(item => {\n    return {\n      language: item.language.name,\n      languageId: item.language.id,\n      fluency: item.fluency.name,\n      fluencyId: item.fluency.id,\n      competency: item.competency.name,\n      comments: item.comment\n    };\n  });\n};\nexport default {\n  name: 'EmployeeLanguages',\n  components: {\n    'profile-action-header': ProfileActionHeader,\n    'save-language': SaveLanguage,\n    'edit-language': EditLanguage,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    employeeId: {\n      type: String,\n      required: true\n    },\n    fluencies: {\n      type: Array,\n      required: true\n    },\n    competencies: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.employeeId}/languages`);\n    const languagesEndpoint = `/api/v2/pim/employees/${props.employeeId}/languages/allowed`;\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: languageNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      languagesEndpoint\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'language',\n        slot: 'title',\n        title: this.$t('general.language'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'fluency',\n        title: this.$t('pim.fluency'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'competency',\n        title: this.$t('pim.competency'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'comments',\n        title: this.$t('general.comments'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          'flex-basis': '10em'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    }\n  },\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return {\n          languageId: this.items?.data[index].languageId,\n          fluencyId: this.items?.data[index].fluencyId\n        };\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([{\n            languageId: item.languageId,\n            fluencyId: item.fluencyId\n          }]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":"AAoEA,OAAOA,WAAU,MAAO,wCAAwC;AAChE,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,OAAOC,mBAAkB,MAAO,qDAAqD;AACrF,OAAOC,YAAW,MAAO,8CAA8C;AACvE,OAAOC,YAAW,MAAO,8CAA8C;AACvE,OAAOC,wBAAuB,MAAO,mDAAmD;AAExF,MAAMC,kBAAiB,GAAKC,IAAI,IAAK;EACnC,OAAOA,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;IACxB,OAAO;MACLC,QAAQ,EAAED,IAAI,CAACC,QAAQ,CAACC,IAAI;MAC5BC,UAAU,EAAEH,IAAI,CAACC,QAAQ,CAACG,EAAE;MAC5BC,OAAO,EAAEL,IAAI,CAACK,OAAO,CAACH,IAAI;MAC1BI,SAAS,EAAEN,IAAI,CAACK,OAAO,CAACD,EAAE;MAC1BG,UAAU,EAAEP,IAAI,CAACO,UAAU,CAACL,IAAI;MAChCM,QAAQ,EAAER,IAAI,CAACS;IACjB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,eAAe;EACbP,IAAI,EAAE,mBAAmB;EAEzBQ,UAAU,EAAE;IACV,uBAAuB,EAAEjB,mBAAmB;IAC5C,eAAe,EAAEC,YAAY;IAC7B,eAAe,EAAEC,YAAY;IAC7B,qBAAqB,EAAEC;EACzB,CAAC;EAEDe,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ,CAAC;IACDG,YAAY,EAAE;MACZL,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDI,KAAK,CAACR,KAAK,EAAE;IACX,MAAMS,IAAG,GAAI,IAAI5B,UAAU,CACzB6B,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,yBAAwBZ,KAAK,CAACC,UAAW,YAAW,CACtD;IAED,MAAMY,iBAAgB,GAAK,yBAAwBb,KAAK,CAACC,UAAW,oBAAmB;IAEvF,MAAM;MACJa,aAAa;MACbC,WAAW;MACXC,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC;IACF,IAAIzC,WAAW,CAAC6B,IAAI,EAAE;MACpBa,UAAU,EAAEpC,kBAAkB;MAC9BqC,cAAc,EAAE;IAClB,CAAC,CAAC;IACF,OAAO;MACLd,IAAI;MACJK,aAAa;MACbC,WAAW;MACXK,SAAS;MACTJ,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRG,SAAS;MACTG,KAAK,EAAEL,QAAQ;MACfN;IACF,CAAC;EACH,CAAC;EAED1B,IAAI,GAAG;IACL,OAAO;MACLsC,OAAO,EAAE,CACP;QACElC,IAAI,EAAE,UAAU;QAChBmC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,kBAAkB,CAAC;QAClCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QAACvC,IAAI,EAAE,SAAS;QAAEoC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,aAAa,CAAC;QAAEC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MAAC,CAAC,EAClE;QACEvC,IAAI,EAAE,YAAY;QAClBoC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,gBAAgB,CAAC;QAChCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEvC,IAAI,EAAE,UAAU;QAChBoC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,kBAAkB,CAAC;QAClCC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC;MACjB,CAAC,EACD;QACEvC,IAAI,EAAE,SAAS;QACfmC,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,iBAAiB,CAAC;QACjCC,KAAK,EAAE;UAAC,YAAY,EAAE;QAAM,CAAC;QAC7BE,QAAQ,EAAE,wBAAwB;QAClCC,UAAU,EAAE;UACVC,MAAM,EAAE;YACNC,OAAO,EAAE,IAAI,CAACC,aAAa;YAC3BC,SAAS,EAAE,iBAAiB;YAC5BpC,KAAK,EAAE;cACLT,IAAI,EAAE;YACR;UACF,CAAC;UACD8C,IAAI,EAAE;YACJH,OAAO,EAAE,IAAI,CAACI,WAAW;YACzBtC,KAAK,EAAE;cACLT,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC,CACF;MACDgD,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,UAAU,GAAG;MACX,OAAO,IAAI,CAACJ,aAAY,IAAK,IAAI,CAACC,aAAa;IACjD;EACF,CAAC;EAEDI,OAAO,EAAE;IACPC,qBAAqB,GAAG;MACtB,MAAMC,GAAE,GAAI,IAAI,CAACR,YAAY,CAACnD,GAAG,CAAE4D,KAAK,IAAK;QAC3C,OAAO;UACLxD,UAAU,EAAE,IAAI,CAACgC,KAAK,EAAErC,IAAI,CAAC6D,KAAK,CAAC,CAACxD,UAAU;UAC9CG,SAAS,EAAE,IAAI,CAAC6B,KAAK,EAAErC,IAAI,CAAC6D,KAAK,CAAC,CAACrD;QACrC,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACsD,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAACP,GAAG,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;IACDZ,aAAa,CAAC9C,IAAI,EAAE;MAClB,IAAI,CAAC4D,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAAC,CACf;YACE9D,UAAU,EAAEH,IAAI,CAACG,UAAU;YAC3BG,SAAS,EAAEN,IAAI,CAACM;UAClB,CAAC,CACF,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IACD2D,WAAW,CAAC9B,KAAK,EAAE;MACjB,IAAIA,KAAI,YAAalB,KAAK,EAAE;QAC1B,IAAI,CAACc,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACX,IAAG,CACL8C,SAAS,CAAC;UACTR,GAAG,EAAEvB;QACP,CAAC,EACA4B,IAAI,CAAC,MAAM;UACV,OAAO,IAAI,CAACI,MAAM,CAACC,aAAa,EAAE;QACpC,CAAC,EACAL,IAAI,CAAC,MAAM;UACV,IAAI,CAAChC,SAAQ,GAAI,KAAK;UACtB,IAAI,CAACsC,cAAc,EAAE;QACvB,CAAC,CAAC;MACN;IACF,CAAC;IACD,MAAMA,cAAc,GAAG;MACrB,IAAI,CAACnB,YAAW,GAAI,EAAE;MACtB,MAAM,IAAI,CAAClB,SAAS,EAAE;IACxB,CAAC;IACDsC,UAAU,GAAG;MACX,IAAI,CAAClB,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACF,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDF,WAAW,CAACjD,IAAI,EAAE;MAChB,IAAI,CAACmD,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACE,cAAa,GAAIrD,IAAI;MAC1B,IAAI,CAACoD,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDmB,gBAAgB,GAAG;MACjB,IAAI,CAACpB,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACkB,cAAc,EAAE;IACvB,CAAC;IACDG,gBAAgB,GAAG;MACjB,IAAI,CAACpB,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACgB,cAAc,EAAE;IACvB;EACF;AACF,CAAC","names":["usePaginate","APIService","ProfileActionHeader","SaveLanguage","EditLanguage","DeleteConfirmationDialog","languageNormalizer","data","map","item","language","name","languageId","id","fluency","fluencyId","competency","comments","comment","components","props","employeeId","type","String","required","fluencies","Array","competencies","setup","http","window","appGlobal","baseUrl","languagesEndpoint","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","slot","title","$t","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","showSaveModal","showEditModal","editModalState","computed","isDisabled","methods","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","onClickAdd","onSaveModalClose","onEditModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EmployeeLanguages.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div>\n    <save-language\n      v-if=\"showSaveModal\"\n      :http=\"http\"\n      :api=\"languagesEndpoint\"\n      :fluencies=\"fluencies\"\n      :competencies=\"competencies\"\n      @close=\"onSaveModalClose\"\n    ></save-language>\n    <edit-language\n      v-if=\"showEditModal\"\n      :http=\"http\"\n      :data=\"editModalState\"\n      :employee-id=\"employeeId\"\n      :competencies=\"competencies\"\n      @close=\"onEditModalClose\"\n    ></edit-language>\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <profile-action-header @click=\"onClickAdd\">\n        {{ $t('general.languages') }}\n      </profile-action-header>\n    </div>\n    <table-header\n      :selected=\"checkedItems.length\"\n      :total=\"total\"\n      :loading=\"isLoading\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"true\"\n        :clickable=\"false\"\n        :disabled=\"isDisabled\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div v-if=\"showPaginator\" class=\"orangehrm-bottom-container\">\n      <oxd-pagination v-model:current=\"currentPage\" :length=\"pages\" />\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport SaveLanguage from '@/orangehrmPimPlugin/components/SaveLanguage';\nimport EditLanguage from '@/orangehrmPimPlugin/components/EditLanguage';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nconst languageNormalizer = (data) => {\n  return data.map((item) => {\n    return {\n      language: item.language.name,\n      languageId: item.language.id,\n      fluency: item.fluency.name,\n      fluencyId: item.fluency.id,\n      competency: item.competency.name,\n      comments: item.comment,\n    };\n  });\n};\n\nexport default {\n  name: 'EmployeeLanguages',\n\n  components: {\n    'profile-action-header': ProfileActionHeader,\n    'save-language': SaveLanguage,\n    'edit-language': EditLanguage,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    employeeId: {\n      type: String,\n      required: true,\n    },\n    fluencies: {\n      type: Array,\n      required: true,\n    },\n    competencies: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.employeeId}/languages`,\n    );\n\n    const languagesEndpoint = `/api/v2/pim/employees/${props.employeeId}/languages/allowed`;\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: languageNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      languagesEndpoint,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'language',\n          slot: 'title',\n          title: this.$t('general.language'),\n          style: {flex: 1},\n        },\n        {name: 'fluency', title: this.$t('pim.fluency'), style: {flex: 1}},\n        {\n          name: 'competency',\n          title: this.$t('pim.competency'),\n          style: {flex: 1},\n        },\n        {\n          name: 'comments',\n          title: this.$t('general.comments'),\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {'flex-basis': '10em'},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    },\n  },\n\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return {\n          languageId: this.items?.data[index].languageId,\n          fluencyId: this.items?.data[index].fluencyId,\n        };\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([\n            {\n              languageId: item.languageId,\n              fluencyId: item.fluencyId,\n            },\n          ]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}