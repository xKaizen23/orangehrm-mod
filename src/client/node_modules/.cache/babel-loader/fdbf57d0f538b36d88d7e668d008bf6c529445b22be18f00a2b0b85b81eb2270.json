{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport { computed, ref } from 'vue';\nimport useSort from '@ohrm/core/util/composable/useSort';\nconst defaultFilters = {\n  name: '',\n  city: '',\n  countryCode: {}\n};\nconst defaultSortOrder = {\n  'location.name': 'ASC',\n  'location.city': 'DEFAULT',\n  'country.countryName': 'DEFAULT',\n  'location.phone': 'DEFAULT',\n  noOfEmployees: 'DEFAULT'\n};\nconst locationDataNormalizer = data => {\n  return data.map(location => {\n    return {\n      id: location.id,\n      name: location.name,\n      city: location.city,\n      country: location.country.countryName,\n      phone: location.phone,\n      noOfEmployees: location.noOfEmployees ? location.noOfEmployees : 0\n    };\n  });\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    countries: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const filters = ref({\n      ...defaultFilters\n    });\n    const serializedFilters = computed(() => {\n      return {\n        name: filters.value.name,\n        city: filters.value.city,\n        countryCode: filters.value.countryCode?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/locations');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: locationDataNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    const cellConfig = {\n      delete: {\n        onClick: this.onClickDelete,\n        component: 'oxd-icon-button',\n        props: {\n          name: 'trash'\n        }\n      },\n      edit: {\n        onClick: this.onClickEdit,\n        props: {\n          name: 'pencil-fill'\n        }\n      }\n    };\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: 1\n        },\n        sortField: 'location.name'\n      }, {\n        name: 'city',\n        title: this.$t('general.city'),\n        style: {\n          flex: 1\n        },\n        sortField: 'location.city'\n      }, {\n        name: 'country',\n        title: this.$t('general.country'),\n        style: {\n          flex: 1\n        },\n        sortField: 'country.countryName'\n      }, {\n        name: 'phone',\n        title: this.$t('general.phone'),\n        style: {\n          flex: 1\n        },\n        sortField: 'location.phone'\n      }, {\n        name: 'noOfEmployees',\n        title: this.$t('admin.number_of_employees'),\n        style: {\n          flex: 1\n        },\n        sortField: 'noOfEmployees'\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: cellConfig\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveLocation');\n    },\n    onClickEdit(item) {\n      navigate('/admin/saveLocation/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {\n        ...defaultFilters\n      };\n      this.filterItems();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["usePaginate","navigate","APIService","DeleteConfirmationDialog","computed","ref","useSort","defaultFilters","name","city","countryCode","defaultSortOrder","noOfEmployees","locationDataNormalizer","data","map","location","id","country","countryName","phone","components","props","countries","type","Array","default","setup","sortDefinition","sortField","sortOrder","onSort","filters","serializedFilters","value","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","headers","slot","title","$t","style","flex","cellType","checkedItems","methods","onClickAdd","item","onClickDeleteSelected","ids","forEach","index","push","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","filterItems","onClickReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\location\\LocationList.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('admin.locations')\">\n      <oxd-form @submit-valid=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.name\"\n                :label=\"$t('general.name')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.city\"\n                :label=\"$t('general.city')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.countryCode\"\n                type=\"select\"\n                :label=\"$t('general.country')\"\n                :clear=\"false\"\n                :options=\"countries\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n\n    <br />\n\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <div>\n          <oxd-button\n            v-if=\"$can.create(`locations`)\"\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAdd\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"$can.delete(`locations`)\"\n          :disabled=\"!($can.delete(`locations`) && $can.update('locations'))\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {computed, ref} from 'vue';\nimport useSort from '@ohrm/core/util/composable/useSort';\n\nconst defaultFilters = {\n  name: '',\n  city: '',\n  countryCode: {},\n};\n\nconst defaultSortOrder = {\n  'location.name': 'ASC',\n  'location.city': 'DEFAULT',\n  'country.countryName': 'DEFAULT',\n  'location.phone': 'DEFAULT',\n  noOfEmployees: 'DEFAULT',\n};\n\nconst locationDataNormalizer = (data) => {\n  return data.map((location) => {\n    return {\n      id: location.id,\n      name: location.name,\n      city: location.city,\n      country: location.country.countryName,\n      phone: location.phone,\n      noOfEmployees: location.noOfEmployees ? location.noOfEmployees : 0,\n    };\n  });\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    countries: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const filters = ref({...defaultFilters});\n    const serializedFilters = computed(() => {\n      return {\n        name: filters.value.name,\n        city: filters.value.city,\n        countryCode: filters.value.countryCode?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/locations',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: locationDataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n  data() {\n    const cellConfig = {\n      delete: {\n        onClick: this.onClickDelete,\n        component: 'oxd-icon-button',\n        props: {\n          name: 'trash',\n        },\n      },\n      edit: {\n        onClick: this.onClickEdit,\n        props: {\n          name: 'pencil-fill',\n        },\n      },\n    };\n\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: 1},\n          sortField: 'location.name',\n        },\n        {\n          name: 'city',\n          title: this.$t('general.city'),\n          style: {flex: 1},\n          sortField: 'location.city',\n        },\n        {\n          name: 'country',\n          title: this.$t('general.country'),\n          style: {flex: 1},\n          sortField: 'country.countryName',\n        },\n        {\n          name: 'phone',\n          title: this.$t('general.phone'),\n          style: {flex: 1},\n          sortField: 'location.phone',\n        },\n        {\n          name: 'noOfEmployees',\n          title: this.$t('admin.number_of_employees'),\n          style: {flex: 1},\n          sortField: 'noOfEmployees',\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: cellConfig,\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveLocation');\n    },\n    onClickEdit(item) {\n      navigate('/admin/saveLocation/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}