{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_edit_employee_layout = _resolveComponent(\"edit-employee-layout\");\n  return _openBlock(), _createBlock(_component_edit_employee_layout, {\n    \"employee-id\": $props.empNumber,\n    screen: \"contact\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      tag: \"h6\",\n      class: \"orangehrm-main-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.contact_details')), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"orangehrm-sub-title\",\n        tag: \"h6\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.address')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.street1,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.contact.street1 = $event),\n              label: _ctx.$t('pim.street1'),\n              rules: $data.rules.street1\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.street2,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.contact.street2 = $event),\n              label: _ctx.$t('pim.street2'),\n              rules: $data.rules.street2\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.city,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.contact.city = $event),\n              label: _ctx.$t('general.city'),\n              rules: $data.rules.city\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.province,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.contact.province = $event),\n              label: _ctx.$t('general.state_province'),\n              rules: $data.rules.province\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.zipCode,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.contact.zipCode = $event),\n              label: _ctx.$t('general.zip_postal_code'),\n              rules: $data.rules.zipCode\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.countryCode,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.contact.countryCode = $event),\n              type: \"select\",\n              label: _ctx.$t('general.country'),\n              options: $props.countries\n            }, null, 8, [\"modelValue\", \"label\", \"options\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_text, {\n        class: \"orangehrm-sub-title\",\n        tag: \"h6\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.telephone')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.homeTelephone,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.contact.homeTelephone = $event),\n              modelModifiers: {\n                trim: true\n              },\n              label: _ctx.$t('pim.home'),\n              rules: $data.rules.homeTelephone\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.mobile,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.contact.mobile = $event),\n              modelModifiers: {\n                trim: true\n              },\n              label: _ctx.$t('general.mobile'),\n              rules: $data.rules.mobile\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.workTelephone,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.contact.workTelephone = $event),\n              modelModifiers: {\n                trim: true\n              },\n              label: _ctx.$t('pim.work'),\n              rules: $data.rules.workTelephone\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_text, {\n        class: \"orangehrm-sub-title\",\n        tag: \"h6\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.email')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.workEmail,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.contact.workEmail = $event),\n              label: _ctx.$t('general.work_email'),\n              rules: $data.rules.workEmail\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.contact.otherEmail,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.contact.otherEmail = $event),\n              label: _ctx.$t('general.other_email'),\n              rules: $data.rules.otherEmail\n            }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])])]),\n    _: 1\n  }, 8, [\"employee-id\"]);\n}","map":{"version":3,"mappings":"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","names":["class","_createBlock","_component_edit_employee_layout","$props","screen","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","street1","label","rules","street2","city","province","zipCode","countryCode","type","options","homeTelephone","trim","mobile","workTelephone","workEmail","otherEmail","_component_oxd_form_actions","_component_required_text","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeContactDetails.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\" screen=\"contact\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n        $t('pim.contact_details')\n      }}</oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">{{\n          $t('admin.address')\n        }}</oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.street1\"\n                :label=\"$t('pim.street1')\"\n                :rules=\"rules.street1\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.street2\"\n                :label=\"$t('pim.street2')\"\n                :rules=\"rules.street2\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.city\"\n                :label=\"$t('general.city')\"\n                :rules=\"rules.city\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.province\"\n                :label=\"$t('general.state_province')\"\n                :rules=\"rules.province\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.zipCode\"\n                :label=\"$t('general.zip_postal_code')\"\n                :rules=\"rules.zipCode\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.countryCode\"\n                type=\"select\"\n                :label=\"$t('general.country')\"\n                :options=\"countries\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">{{\n          $t('pim.telephone')\n        }}</oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model.trim=\"contact.homeTelephone\"\n                :label=\"$t('pim.home')\"\n                :rules=\"rules.homeTelephone\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model.trim=\"contact.mobile\"\n                :label=\"$t('general.mobile')\"\n                :rules=\"rules.mobile\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model.trim=\"contact.workTelephone\"\n                :label=\"$t('pim.work')\"\n                :rules=\"rules.workTelephone\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">{{\n          $t('general.email')\n        }}</oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.workEmail\"\n                :label=\"$t('general.work_email')\"\n                :rules=\"rules.workEmail\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"contact.otherEmail\"\n                :label=\"$t('general.other_email')\"\n                :rules=\"rules.otherEmail\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport {\n  shouldNotExceedCharLength,\n  validPhoneNumberFormat,\n  validEmailFormat,\n} from '@ohrm/core/util/validation/rules';\nimport {promiseDebounce} from '@ohrm/oxd';\n\nconst contactDetailsModel = {\n  street1: '',\n  street2: '',\n  city: '',\n  province: '',\n  countryCode: [],\n  zipCode: '',\n  homeTelephone: '',\n  workTelephone: '',\n  mobile: '',\n  workEmail: '',\n  otherEmail: '',\n};\n\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    countries: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employee/${props.empNumber}/contact-details`,\n    );\n    http.setIgnorePath(\n      '/api/v2/pim/employees/[0-9]+/contact-details/validation/(work-emails|other-emails)',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      contact: {...contactDetailsModel},\n      rules: {\n        street1: [shouldNotExceedCharLength(70)],\n        street2: [shouldNotExceedCharLength(70)],\n        city: [shouldNotExceedCharLength(70)],\n        province: [shouldNotExceedCharLength(70)],\n        zipCode: [shouldNotExceedCharLength(10)],\n        homeTelephone: [shouldNotExceedCharLength(25), validPhoneNumberFormat],\n        mobile: [shouldNotExceedCharLength(25), validPhoneNumberFormat],\n        workTelephone: [shouldNotExceedCharLength(25), validPhoneNumberFormat],\n        workEmail: [\n          shouldNotExceedCharLength(50),\n          validEmailFormat,\n          promiseDebounce(this.validateWorkEmail, 500),\n        ],\n        otherEmail: [\n          shouldNotExceedCharLength(50),\n          validEmailFormat,\n          promiseDebounce(this.validateOtherEmail, 500),\n        ],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        this.updateModel(response);\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            ...this.contact,\n            countryCode: this.contact.countryCode?.id,\n          },\n        })\n        .then((response) => {\n          this.updateModel(response);\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n\n    validateWorkEmail(contact) {\n      return new Promise((resolve) => {\n        if (contact) {\n          const sameAsOtherEmail =\n            this.contact.workEmail === this.contact.otherEmail;\n          this.http\n            .request({\n              method: 'GET',\n              url: `/api/v2/pim/employees/${this.empNumber}/contact-details/validation/work-emails`,\n              params: {\n                workEmail: this.contact.workEmail,\n              },\n            })\n            .then((response) => {\n              const {data} = response.data;\n              if (data.valid === true) {\n                return sameAsOtherEmail\n                  ? resolve(\n                      this.$t(\n                        'pim.work_email_and_other_email_cannot_be_the_same',\n                      ),\n                    )\n                  : resolve(true);\n              }\n              return resolve(this.$t('general.already_exists'));\n            });\n        } else {\n          resolve(true);\n        }\n      });\n    },\n\n    validateOtherEmail(contact) {\n      return new Promise((resolve) => {\n        if (contact) {\n          const sameAsWorkEmail =\n            this.contact.otherEmail === this.contact.workEmail;\n          this.http\n            .request({\n              method: 'GET',\n              url: `/api/v2/pim/employees/${this.empNumber}/contact-details/validation/other-emails`,\n              params: {\n                otherEmail: this.contact.otherEmail,\n              },\n            })\n            .then((response) => {\n              const {data} = response.data;\n              if (data.valid === true) {\n                return sameAsWorkEmail\n                  ? resolve(\n                      this.$t(\n                        'pim.work_email_and_other_email_cannot_be_the_same',\n                      ),\n                    )\n                  : resolve(true);\n              }\n              return resolve(this.$t('general.already_exists'));\n            });\n        } else {\n          resolve(true);\n        }\n      });\n    },\n\n    validateEmailDifferent(email) {\n      return (v) => {\n        const resolvedEmail = email();\n        if (resolvedEmail === null || resolvedEmail === '') {\n          return true;\n        }\n        return (\n          v !== resolvedEmail ||\n          this.$t('pim.work_email_and_other_email_cannot_be_the_same')\n        );\n      };\n    },\n\n    updateModel(response) {\n      const {data} = response.data;\n      this.contact = {...contactDetailsModel, ...data};\n      this.contact.countryCode = this.countries.find(\n        (item) => item.id === data.countryCode,\n      );\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}