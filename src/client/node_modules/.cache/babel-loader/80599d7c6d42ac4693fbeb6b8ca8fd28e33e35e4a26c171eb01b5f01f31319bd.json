{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a56fe24\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    class: \"orangehrm-dialog-modal\",\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.add_organization_unit')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.orgUnit.unitId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.orgUnit.unitId = $event),\n          label: _ctx.$t('admin.unit_id'),\n          rules: $data.rules.unitId\n        }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.orgUnit.name,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.orgUnit.name = $event),\n          label: _ctx.$t('general.name'),\n          rules: $data.rules.name,\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.orgUnit.description,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.orgUnit.description = $event),\n          type: \"textarea\",\n          label: _ctx.$t('general.description'),\n          placeholder: _ctx.$t('general.type_description_here'),\n          rules: $data.rules.description\n        }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_text, {\n        tag: \"p\",\n        class: \"level-label\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.this_unit_will_be_added_under')) + \" \", 1), _createElementVNode(\"b\", null, _toDisplayString($props.data?.unitId ? `${$props.data.unitId}: ${$props.data?.name}` : `${$props.data?.name}`), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          type: \"button\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;;EAqBSA,KAAK,EAAC;AAAwB;;;;;;;;;;;;uBADrCC,aAmDaC;IAnDDF,KAAK,EAAC,wBAAwB;IAAE,eAAW,EAAEG;;sBACvD,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAAuC,mCAApCC,OAAE;;UAGTH,aAAeI,yBACfJ,aA2CWK;MA3CAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEX;;wBAC5C,MAMe,CANfG,aAMeS;0BALb,MAIE,CAJFT,aAIEU;sBAHSH,aAAO,CAACI,MAAM;qEAAdJ,aAAO,CAACI,MAAM;UACtBC,KAAK,EAAET,OAAE;UACTU,KAAK,EAAEN,WAAK,CAACI;;;UAGlBX,aAOeS;0BANb,MAKE,CALFT,aAKEU;sBAJSH,aAAO,CAACO,IAAI;qEAAZP,aAAO,CAACO,IAAI;UACpBF,KAAK,EAAET,OAAE;UACTU,KAAK,EAAEN,WAAK,CAACO,IAAI;UAClBC,QAAQ,EAAR;;;UAGJf,aAQeS;0BAPb,MAME,CANFT,aAMEU;sBALSH,aAAO,CAACS,WAAW;qEAAnBT,aAAO,CAACS,WAAW;UAC5Bd,IAAI,EAAC,UAAU;UACdU,KAAK,EAAET,OAAE;UACTc,WAAW,EAAEd,OAAE;UACfU,KAAK,EAAEN,WAAK,CAACS;;;UAGlBhB,aAKWC;QALDiB,GAAG,EAAC,GAAG;QAACxB,KAAK,EAAC;;0BACtB,MAA+C,mCAA5CS,OAAE,2CAA0C,GAC/C,0BAEI,4BADCgB,WAAI,EAAER,MAAM,MAAMQ,WAAI,CAACR,MAAM,KAAKQ,WAAI,EAAEL,IAAI,QAAQK,WAAI,EAAEL,IAAI;;UAGrEd,aAAeI,yBAEfJ,aASmBoB;0BARjB,MAAiB,CAAjBpB,aAAiBqB,2BACjBrB,aAKEsB;UAJApB,IAAI,EAAC,QAAQ;UACb,cAAY,EAAC,OAAO;UACnBU,KAAK,EAAET,OAAE;UACToB,OAAK,EAAE1B;2CAEVG,aAAiBwB","names":["class","_createBlock","_component_oxd_dialog","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_form_row","_component_oxd_input_field","unitId","label","rules","name","required","description","placeholder","tag","$props","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\orgStructure\\SaveOrgUnit.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog class=\"orangehrm-dialog-modal\" @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('admin.add_organization_unit') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.unitId\"\n          :label=\"$t('admin.unit_id')\"\n          :rules=\"rules.unitId\"\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.name\"\n          :label=\"$t('general.name')\"\n          :rules=\"rules.name\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"orgUnit.description\"\n          type=\"textarea\"\n          :label=\"$t('general.description')\"\n          :placeholder=\"$t('general.type_description_here')\"\n          :rules=\"rules.description\"\n        />\n      </oxd-form-row>\n      <oxd-text tag=\"p\" class=\"level-label\">\n        {{ $t('admin.this_unit_will_be_added_under') }}\n        <b>\n          {{ data?.unitId ? `${data.unitId}: ${data?.name}` : `${data?.name}` }}\n        </b>\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdDialog} from '@ohrm/oxd';\n\nconst orgUnitModel = {\n  unitId: '',\n  name: '',\n  description: '',\n};\n\nexport default {\n  name: 'SaveOrgUnit',\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/subunits',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      orgUnit: {...orgUnitModel},\n      rules: {\n        unitId: [shouldNotExceedCharLength(100)],\n        name: [required, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        if (data) {\n          this.rules.name.push((v) => {\n            const index = data.findIndex(\n              (item) =>\n                String(item.name).toLowerCase() == String(v).toLowerCase(),\n            );\n            if (index > -1) {\n              return this.$t('admin.organization_unit_name_should_be_unique');\n            } else {\n              return true;\n            }\n          });\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.orgUnit,\n          parentId: this.data?.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.orgUnit = {...orgUnitModel};\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.level-label {\n  font-size: 0.75rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}