{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b55d614\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"send-method-div\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-optional-field-row\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-optional-field-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.email_configuration')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.sentAs,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.emailConfiguration.sentAs = $event),\n            label: _ctx.$t('admin.mail_sent_as'),\n            rules: $data.rules.sentAs,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('admin.sending_method')\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.emailConfiguration.mailType,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.emailConfiguration.mailType = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('admin.secure_smtp'),\n              value: \"smtps\"\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.emailConfiguration.mailType,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.emailConfiguration.mailType = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('admin.smtp'),\n              value: \"smtp\"\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.emailConfiguration.mailType,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.emailConfiguration.mailType = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('admin.sendmail'),\n              value: \"sendmail\"\n            }, null, 8, [\"modelValue\", \"option-label\"])])]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $data.emailConfiguration.mailType === 'sendmail' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('admin.path_to_sendmail')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              tag: \"p\",\n              class: \"sendmail-path-value\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($data.emailConfiguration.pathToSendmail), 1)]),\n              _: 1\n            })]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $data.emailConfiguration.mailType !== 'sendmail' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.smtpHost,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.emailConfiguration.smtpHost = $event),\n            label: _ctx.$t('admin.smtp_host'),\n            rules: $data.rules.smtpHost,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.smtpPort,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.emailConfiguration.smtpPort = $event),\n            label: _ctx.$t('admin.smtp_port'),\n            rules: $data.rules.smtpPort\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $data.emailConfiguration.mailType !== 'sendmail' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 2\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('admin.use_smtp_authentication'),\n            classes: {\n              wrapper: '--status-grouped-field'\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.emailConfiguration.smtpAuthType,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.emailConfiguration.smtpAuthType = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.yes'),\n              value: \"login\"\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.emailConfiguration.smtpAuthType,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.emailConfiguration.smtpAuthType = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.no'),\n              value: \"none\"\n            }, null, 8, [\"modelValue\", \"option-label\"])]),\n            _: 1\n          }, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $data.emailConfiguration.mailType !== 'sendmail' && $data.emailConfiguration.smtpAuthType === 'login' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 3\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.smtpUsername,\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.emailConfiguration.smtpUsername = $event),\n            label: _ctx.$t('admin.smtp_user'),\n            rules: $data.rules.smtpUsername,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.smtpPassword,\n            \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.emailConfiguration.smtpPassword = $event),\n            label: _ctx.$t('admin.smtp_password'),\n            rules: $data.rules.smtpPassword,\n            type: \"password\",\n            placeholder: $data.passwordPlaceHolder,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"placeholder\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $data.emailConfiguration.mailType !== 'sendmail' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 4,\n      class: \"orangehrm-input-field-bottom-space\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"organization-name-container\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_text, {\n            tag: \"p\",\n            class: \"orangehrm-optional-field-label\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.tls')), 1)]),\n            _: 1\n          }), _createVNode(_component_oxd_switch_input, {\n            modelValue: $data.useTLSSecureConnection,\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.useTLSSecureConnection = $event)\n          }, null, 8, [\"modelValue\"])])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), $data.emailConfiguration.mailType !== 'sendmail' ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 5\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 1,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"organization-name-container\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_text, {\n            tag: \"p\",\n            class: \"tls-hint\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.optional_the_mail_server_requires_the_use_of_tls_security')), 1)]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"organization-name-container\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_text, {\n            tag: \"p\",\n            class: \"orangehrm-optional-field-label\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.send_test_email')), 1)]),\n            _: 1\n          }), _createVNode(_component_oxd_switch_input, {\n            modelValue: $data.sendTestMailEditable,\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.sendTestMailEditable = $event)\n          }, null, 8, [\"modelValue\"])])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), $data.sendTestMailEditable ? (_openBlock(), _createBlock(_component_oxd_form_row, {\n      key: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.emailConfiguration.testEmailAddress,\n            \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.emailConfiguration.testEmailAddress = $event),\n            label: _ctx.$t('admin.test_email_address'),\n            rules: $data.rules.testEmailAddress,\n            disabled: !$data.sendTestMailEditable,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"disabled\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.reset'),\n        onClick: $options.onReset\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","sentAs","label","rules","required","_component_oxd_input_group","_hoisted_3","mailType","type","value","_createBlock","key","tag","pathToSendmail","smtpHost","smtpPort","classes","wrapper","smtpAuthType","smtpUsername","smtpPassword","placeholder","_component_oxd_switch_input","testEmailAddress","disabled","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\emailConfiguration\\ViewEmailConfiguration.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('admin.email_configuration') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.sentAs\"\n                :label=\"$t('admin.mail_sent_as')\"\n                :rules=\"rules.sentAs\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-group :label=\"$t('admin.sending_method')\">\n                <div class=\"send-method-div\">\n                  <oxd-input-field\n                    v-model=\"emailConfiguration.mailType\"\n                    type=\"radio\"\n                    :option-label=\"$t('admin.secure_smtp')\"\n                    value=\"smtps\"\n                  />\n                  <oxd-input-field\n                    v-model=\"emailConfiguration.mailType\"\n                    type=\"radio\"\n                    :option-label=\"$t('admin.smtp')\"\n                    value=\"smtp\"\n                  />\n                  <oxd-input-field\n                    v-model=\"emailConfiguration.mailType\"\n                    type=\"radio\"\n                    :option-label=\"$t('admin.sendmail')\"\n                    value=\"sendmail\"\n                  />\n                </div>\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row v-if=\"emailConfiguration.mailType === 'sendmail'\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :label=\"$t('admin.path_to_sendmail')\">\n                <oxd-text tag=\"p\" class=\"sendmail-path-value\">\n                  {{ emailConfiguration.pathToSendmail }}\n                </oxd-text>\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row v-if=\"emailConfiguration.mailType !== 'sendmail'\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.smtpHost\"\n                :label=\"$t('admin.smtp_host')\"\n                :rules=\"rules.smtpHost\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.smtpPort\"\n                :label=\"$t('admin.smtp_port')\"\n                :rules=\"rules.smtpPort\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row v-if=\"emailConfiguration.mailType !== 'sendmail'\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group\n                :label=\"$t('admin.use_smtp_authentication')\"\n                :classes=\"{wrapper: '--status-grouped-field'}\"\n              >\n                <oxd-input-field\n                  v-model=\"emailConfiguration.smtpAuthType\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.yes')\"\n                  value=\"login\"\n                />\n                <oxd-input-field\n                  v-model=\"emailConfiguration.smtpAuthType\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.no')\"\n                  value=\"none\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row\n          v-if=\"\n            emailConfiguration.mailType !== 'sendmail' &&\n            emailConfiguration.smtpAuthType === 'login'\n          \"\n        >\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.smtpUsername\"\n                :label=\"$t('admin.smtp_user')\"\n                :rules=\"rules.smtpUsername\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.smtpPassword\"\n                :label=\"$t('admin.smtp_password')\"\n                :rules=\"rules.smtpPassword\"\n                type=\"password\"\n                :placeholder=\"passwordPlaceHolder\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row\n          v-if=\"emailConfiguration.mailType !== 'sendmail'\"\n          class=\"orangehrm-input-field-bottom-space\"\n        >\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <div class=\"orangehrm-optional-field-row\">\n                <oxd-text tag=\"p\" class=\"orangehrm-optional-field-label\">\n                  {{ $t('admin.tls') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"useTLSSecureConnection\" />\n              </div>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row v-if=\"emailConfiguration.mailType !== 'sendmail'\">\n          <oxd-grid :cols=\"1\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <oxd-text tag=\"p\" class=\"tls-hint\">\n                {{\n                  $t(\n                    'admin.optional_the_mail_server_requires_the_use_of_tls_security',\n                  )\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <div class=\"orangehrm-optional-field-row\">\n                <oxd-text tag=\"p\" class=\"orangehrm-optional-field-label\">\n                  {{ $t('admin.send_test_email') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"sendTestMailEditable\" />\n              </div>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row v-if=\"sendTestMailEditable\">\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"emailConfiguration.testEmailAddress\"\n                :label=\"$t('admin.test_email_address')\"\n                :rules=\"rules.testEmailAddress\"\n                :disabled=\"!sendTestMailEditable\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onReset\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  validEmailFormat,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n  },\n  props: {\n    pathToSendmail: {\n      type: String,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/email-configuration',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      passwordPlaceHolder: '',\n      defaultValues: {\n        smtpSecurityType: 'tls',\n      },\n      useTLSSecureConnection: true,\n      sendTestMailEditable: false,\n      isLoading: false,\n      emailConfiguration: {\n        mailType: '',\n        sentAs: '',\n        pathToSendmail: this.pathToSendmail,\n        smtpHost: '',\n        smtpPort: null,\n        smtpUsername: '',\n        smtpPassword: null,\n        smtpAuthType: '',\n        smtpSecurityType: '',\n        testEmailAddress: '',\n      },\n      initialEmailConfiguration: {\n        ...this.emailConfiguration,\n        useTLSSecureConnection: false,\n      },\n      rules: {\n        mailType: [required, shouldNotExceedCharLength(50)],\n        sentAs: [required, shouldNotExceedCharLength(100), validEmailFormat],\n        smtpHost: [required, shouldNotExceedCharLength(100)],\n        smtpPort: [shouldNotExceedCharLength(10)],\n        smtpUsername: [required, shouldNotExceedCharLength(100)],\n        smtpPassword: [shouldNotExceedCharLength(100)],\n        smtpAuthType: [shouldNotExceedCharLength(50)],\n        smtpSecurityType: [shouldNotExceedCharLength(50)],\n        testEmailAddress: [\n          required,\n          shouldNotExceedCharLength(250),\n          validEmailFormat,\n        ],\n      },\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n        url: '/api/v2/admin/email-configuration',\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.emailConfiguration.mailType = data.mailType;\n        this.emailConfiguration.sentAs = data.sentAs;\n        this.emailConfiguration.smtpHost = data.smtpHost;\n        this.emailConfiguration.smtpPort = data.smtpPort;\n        this.emailConfiguration.smtpUsername = data.smtpUsername;\n        this.passwordPlaceHolder = data.smtpUsername ? '******' : '';\n        this.emailConfiguration.smtpAuthType = data.smtpAuthType ?? 'none';\n        this.emailConfiguration.testEmailAddress = data.testEmailAddress;\n        this.useTLSSecureConnection = data.smtpSecurityType === 'tls';\n        this.initialEmailConfiguration = {\n          ...this.emailConfiguration,\n          useTLSSecureConnection: this.useTLSSecureConnection,\n        };\n        if (!data.smtpUsername) {\n          this.rules.smtpPassword.push(required);\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            mailType: this.emailConfiguration.mailType,\n            sentAs: this.emailConfiguration.sentAs,\n            smtpHost: this.emailConfiguration.smtpHost,\n            smtpPort: parseInt(this.emailConfiguration.smtpPort),\n            smtpUsername:\n              this.emailConfiguration.smtpAuthType === 'login'\n                ? this.emailConfiguration.smtpUsername\n                : '',\n            smtpPassword:\n              this.emailConfiguration.smtpPassword === ''\n                ? null\n                : this.emailConfiguration.smtpPassword,\n            smtpAuthType: this.emailConfiguration.smtpAuthType,\n            smtpSecurityType: this.useTLSSecureConnection ? 'tls' : 'none',\n            testEmailAddress: this.emailConfiguration.testEmailAddress,\n          },\n        })\n        .then((response) => {\n          const testEmailStatus = response.data.meta?.testEmailStatus;\n          if (testEmailStatus === 1 && this.sendTestMailEditable) {\n            this.$toast.success({\n              title: this.$t('general.success'),\n              message: this.$t('admin.test_email_sent'),\n            });\n          } else if (testEmailStatus === 0 && this.sendTestMailEditable) {\n            this.$toast.warn({\n              title: this.$t('general.failed'),\n              message: this.$t('admin.test_email_not_sent'),\n            });\n          }\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n    onReset() {\n      this.emailConfiguration = {...this.initialEmailConfiguration};\n      this.useTLSSecureConnection =\n        this.initialEmailConfiguration.useTLSSecureConnection;\n    },\n  },\n};\n</script>\n\n<style src=\"./email-configuration.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}