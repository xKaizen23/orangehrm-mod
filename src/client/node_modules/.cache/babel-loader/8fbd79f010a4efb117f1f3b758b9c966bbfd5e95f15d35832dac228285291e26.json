{"ast":null,"code":"import { required, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { computed, reactive, toRefs } from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { OxdIcon } from '@ohrm/oxd';\nexport default {\n  name: 'PostComment',\n  components: {\n    'oxd-icon': OxdIcon,\n    'profile-image': ProfileImage\n  },\n  directives: {\n    ...useAutoFocus()\n  },\n  props: {\n    postId: {\n      type: Number,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['edit', 'delete', 'like'],\n  setup(props, context) {\n    let loading = false;\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const rules = [required, shouldNotExceedCharLength(65530)];\n    const state = reactive({\n      edit: false,\n      comment: props.data.comment.text,\n      readMore: new String(props.data.comment.text).length < 500\n    });\n    const {\n      updatePostComment,\n      updateCommentLike\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const onSubmit = () => {\n      updatePostComment(props.postId, props.data.comment.id, state.comment).then(() => {\n        state.edit = false;\n        context.emit('edit', props.data.comment.id);\n      });\n    };\n    const onClickEdit = () => {\n      state.edit = true;\n    };\n    const onClickLike = () => {\n      if (loading) return;\n      loading = true;\n      updateCommentLike(props.data.comment.id, props.data.comment.liked).then(() => {\n        loading = false;\n        context.emit('like', props.data.comment.id);\n      });\n    };\n    const onClickDelete = () => {\n      context.emit('delete', props.data.comment.id);\n    };\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n    const onCancelComment = () => {\n      state.comment = props.data.comment.text;\n      state.edit = false;\n    };\n    const dateTime = computed(() => {\n      const {\n        createdDate,\n        createdTime\n      } = props.data.comment;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale\n      });\n    });\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.data.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false\n      });\n    });\n    return {\n      rules,\n      dateTime,\n      onSubmit,\n      onClickLike,\n      onClickEdit,\n      onClickDelete,\n      onClickReadMore,\n      onCancelComment,\n      employeeFullName,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["required","shouldNotExceedCharLength","computed","reactive","toRefs","useLocale","APIService","useAutoFocus","formatDate","parseDate","useDateFormat","ProfileImage","useBuzzAPIs","useEmployeeNameTranslate","OxdIcon","name","components","directives","props","postId","type","Number","data","Object","emits","setup","context","loading","locale","jsDateFormat","jsTimeFormat","$tEmpName","rules","state","edit","comment","text","readMore","String","length","updatePostComment","updateCommentLike","window","appGlobal","baseUrl","onSubmit","id","then","emit","onClickEdit","onClickLike","liked","onClickDelete","onClickReadMore","onCancelComment","dateTime","createdDate","createdTime","utcDate","employeeFullName","employee","includeMiddle","excludePastEmpTag"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostComment.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-comment-wrapper\">\n    <profile-image :employee=\"data.employee\"></profile-image>\n    <div class=\"orangehrm-post-comment\">\n      <oxd-form v-if=\"edit\" @submit-valid=\"onSubmit\">\n        <oxd-input-field\n          v-model=\"comment\"\n          v-autofocus\n          :rules=\"rules\"\n          @keydown.esc.stop=\"onCancelComment\"\n        />\n        <oxd-text tag=\"span\">{{ $t('buzz.press_esc_to') }}&nbsp;</oxd-text>\n        <oxd-text\n          tag=\"span\"\n          class=\"orangehrm-post-comment-action --cancel\"\n          @click=\"onCancelComment\"\n        >\n          {{ $t('general.cancel') }}\n        </oxd-text>\n      </oxd-form>\n      <div v-else class=\"orangehrm-post-comment-area\">\n        <oxd-text tag=\"p\" class=\"orangehrm-post-comment-employee\">\n          {{ employeeFullName }}\n        </oxd-text>\n        <oxd-text\n          tag=\"span\"\n          :class=\"{\n            'orangehrm-post-comment-text': true,\n            '--truncate': readMore === false,\n          }\"\n        >\n          {{ comment }}\n        </oxd-text>\n        <oxd-text\n          v-show=\"!readMore\"\n          tag=\"span\"\n          class=\"orangehrm-post-comment-readmore\"\n          @click=\"onClickReadMore\"\n        >\n          {{ $t('buzz.read_more') }}\n        </oxd-text>\n        <oxd-text tag=\"p\" class=\"orangehrm-post-comment-datetime\">\n          {{ dateTime }}\n        </oxd-text>\n        <div\n          v-if=\"data.comment.numOfLikes > 0\"\n          class=\"orangehrm-post-comment-stats\"\n        >\n          <oxd-icon\n            name=\"heart-fill\"\n            class=\"orangehrm-post-comment-stats-icon\"\n          />\n          <oxd-text tag=\"p\" class=\"orangehrm-post-comment-stats-text\">\n            {{ data.comment.numOfLikes }}\n          </oxd-text>\n        </div>\n      </div>\n      <div v-if=\"!edit\" class=\"orangehrm-post-comment-action-area\">\n        <oxd-text\n          tag=\"p\"\n          :class=\"{\n            'orangehrm-post-comment-action': true,\n            '--liked': data.comment.liked === true,\n          }\"\n          @click=\"onClickLike\"\n        >\n          {{ $t('buzz.like') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"data.permission.canUpdate\"\n          tag=\"p\"\n          class=\"orangehrm-post-comment-action\"\n          @click=\"onClickEdit\"\n        >\n          {{ $t('general.edit') }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"data.permission.canDelete\"\n          tag=\"p\"\n          class=\"orangehrm-post-comment-action\"\n          @click=\"onClickDelete\"\n        >\n          {{ $t('performance.delete') }}\n        </oxd-text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {computed, reactive, toRefs} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'PostComment',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'profile-image': ProfileImage,\n  },\n\n  directives: {...useAutoFocus()},\n\n  props: {\n    postId: {\n      type: Number,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['edit', 'delete', 'like'],\n\n  setup(props, context) {\n    let loading = false;\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const rules = [required, shouldNotExceedCharLength(65530)];\n    const state = reactive({\n      edit: false,\n      comment: props.data.comment.text,\n      readMore: new String(props.data.comment.text).length < 500,\n    });\n\n    const {updatePostComment, updateCommentLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const onSubmit = () => {\n      updatePostComment(\n        props.postId,\n        props.data.comment.id,\n        state.comment,\n      ).then(() => {\n        state.edit = false;\n        context.emit('edit', props.data.comment.id);\n      });\n    };\n\n    const onClickEdit = () => {\n      state.edit = true;\n    };\n\n    const onClickLike = () => {\n      if (loading) return;\n      loading = true;\n      updateCommentLike(props.data.comment.id, props.data.comment.liked).then(\n        () => {\n          loading = false;\n          context.emit('like', props.data.comment.id);\n        },\n      );\n    };\n\n    const onClickDelete = () => {\n      context.emit('delete', props.data.comment.id);\n    };\n\n    const onClickReadMore = () => {\n      state.readMore = !state.readMore;\n    };\n\n    const onCancelComment = () => {\n      state.comment = props.data.comment.text;\n      state.edit = false;\n    };\n\n    const dateTime = computed(() => {\n      const {createdDate, createdTime} = props.data.comment;\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale,\n      });\n    });\n\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.data.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false,\n      });\n    });\n\n    return {\n      rules,\n      dateTime,\n      onSubmit,\n      onClickLike,\n      onClickEdit,\n      onClickDelete,\n      onClickReadMore,\n      onCancelComment,\n      employeeFullName,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style src=\"./post-comment.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}