{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3b8e4fa2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-post-details\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-post-details-header\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-post-details-header-text\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-post-details-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_profile_image = _resolveComponent(\"profile-image\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_post_like = _resolveComponent(\"post-like\");\n  const _component_post_stats = _resolveComponent(\"post-stats\");\n  const _component_post_comment_container = _resolveComponent(\"post-comment-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_icon_button, {\n    class: \"orangehrm-post-details-close\",\n    name: \"x\",\n    \"with-container\": false,\n    onClick: $setup.onClickClose\n  }, null, 8, [\"onClick\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_profile_image, {\n    employee: $props.post.employee\n  }, null, 8, [\"employee\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-details-emp-name\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.employeeFullName), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-details-time\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.postDateTime), 1)]),\n    _: 1\n  })])]), $props.post.text ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    tag: \"p\",\n    class: _normalizeClass($setup.postClasses)\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($props.post.text), 1)]),\n    _: 1\n  }, 8, [\"class\"])) : _createCommentVNode(\"\", true), _withDirectives(_createVNode(_component_oxd_text, {\n    tag: \"p\",\n    class: \"orangehrm-post-details-readmore\",\n    onClick: $setup.onClickReadMore\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('buzz.read_more')), 1)]),\n    _: 1\n  }, 8, [\"onClick\"]), [[_vShow, !$setup.readMore]]), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_post_like, {\n    like: $props.post.liked,\n    onClick: $setup.onClickLike\n  }, null, 8, [\"like\", \"onClick\"]), _createVNode(_component_post_stats, {\n    post: $props.post,\n    mobile: $props.mobile\n  }, null, 8, [\"post\", \"mobile\"])]), _createVNode(_component_oxd_divider), _createVNode(_component_post_comment_container, {\n    \"post-id\": $props.post.id,\n    employee: $props.post.employee,\n    onCreate: _cache[0] || (_cache[0] = $event => _ctx.$emit('createComment', $event)),\n    onDelete: _cache[1] || (_cache[1] = $event => _ctx.$emit('deleteComment', $event))\n  }, null, 8, [\"post-id\", \"employee\"])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAwB;;EAO5BA,KAAK,EAAC;AAA+B;;EAEnCA,KAAK,EAAC;AAAoC;;EAqB5CA,KAAK,EAAC;AAAgC;;;;;;;;;uBA9B7CC,oBAyCM,OAzCNC,UAyCM,GAxCJC,aAKEC;IAJAJ,KAAK,EAAC,8BAA8B;IACpCK,IAAI,EAAC,GAAG;IACP,gBAAc,EAAE,KAAK;IACrBC,OAAK,EAAEC;4BAEVC,oBAUM,OAVNC,UAUM,GATJN,aAAyDO;IAAzCC,QAAQ,EAAEC,WAAI,CAACD;6BAC/BH,oBAOM,OAPNK,UAOM,GANJV,aAEWW;IAFDC,GAAG,EAAC,GAAG;IAACf,KAAK,EAAC;;sBACtB,MAAsB,mCAAnBO,uBAAgB;;MAErBJ,aAEWW;IAFDC,GAAG,EAAC,GAAG;IAACf,KAAK,EAAC;;sBACtB,MAAkB,mCAAfO,mBAAY;;UAILK,WAAI,CAACI,IAAI,kBAAzBC,aAEWH;;IAFgBC,GAAG,EAAC,GAAG;IAAEf,KAAK,kBAAEO,kBAAW;;sBACpD,MAAe,mCAAZK,WAAI,CAACI,IAAI;;qEAEdb,aAOWW;IALTC,GAAG,EAAC,GAAG;IACPf,KAAK,EAAC,iCAAiC;IACtCM,OAAK,EAAEC;;sBAER,MAA0B,mCAAvBW,OAAE;;iCALIX,eAAQ,KAOnBJ,aAA2BgB,yBAC3BX,oBAGM,OAHNY,UAGM,GAFJjB,aAA+DkB;IAAnDC,IAAI,EAAEV,WAAI,CAACW,KAAK;IAAGjB,OAAK,EAAEC;oCACtCJ,aAAuDqB;IAA1CC,IAAI,EAAEb,WAAI;IAAGc,MAAM,EAAEd;qCAEpCT,aAA2BgB,yBAC3BhB,aAK0BwB;IAJvB,SAAO,EAAEf,WAAI,CAACgB,EAAE;IAChBjB,QAAQ,EAAEC,WAAI,CAACD,QAAQ;IACvBkB,QAAM,sCAAEX,UAAK,kBAAkBY,MAAM;IACrCC,QAAM,sCAAEb,UAAK,kBAAkBY,MAAM","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_icon_button","name","onClick","$setup","_createElementVNode","_hoisted_2","_component_profile_image","employee","$props","_hoisted_3","_component_oxd_text","tag","text","_createBlock","_ctx","_component_oxd_divider","_hoisted_4","_component_post_like","like","liked","_component_post_stats","post","mobile","_component_post_comment_container","id","onCreate","$event","onDelete"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostDetails.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-post-details\">\n    <oxd-icon-button\n      class=\"orangehrm-post-details-close\"\n      name=\"x\"\n      :with-container=\"false\"\n      @click=\"onClickClose\"\n    />\n    <div class=\"orangehrm-post-details-header\">\n      <profile-image :employee=\"post.employee\"></profile-image>\n      <div class=\"orangehrm-post-details-header-text\">\n        <oxd-text tag=\"p\" class=\"orangehrm-post-details-emp-name\">\n          {{ employeeFullName }}\n        </oxd-text>\n        <oxd-text tag=\"p\" class=\"orangehrm-post-details-time\">\n          {{ postDateTime }}\n        </oxd-text>\n      </div>\n    </div>\n    <oxd-text v-if=\"post.text\" tag=\"p\" :class=\"postClasses\">\n      {{ post.text }}\n    </oxd-text>\n    <oxd-text\n      v-show=\"!readMore\"\n      tag=\"p\"\n      class=\"orangehrm-post-details-readmore\"\n      @click=\"onClickReadMore\"\n    >\n      {{ $t('buzz.read_more') }}\n    </oxd-text>\n    <oxd-divider></oxd-divider>\n    <div class=\"orangehrm-post-details-actions\">\n      <post-like :like=\"post.liked\" @click=\"onClickLike\"></post-like>\n      <post-stats :post=\"post\" :mobile=\"mobile\"></post-stats>\n    </div>\n    <oxd-divider></oxd-divider>\n    <post-comment-container\n      :post-id=\"post.id\"\n      :employee=\"post.employee\"\n      @create=\"$emit('createComment', $event)\"\n      @delete=\"$emit('deleteComment', $event)\"\n    ></post-comment-container>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer';\n\nexport default {\n  name: 'PostDetails',\n\n  components: {\n    'post-stats': PostStats,\n    'post-like': PostLikeButton,\n    'profile-image': ProfileImage,\n    'post-comment-container': PostCommentContainer,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n    mobile: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: ['like', 'close', 'createComment', 'deleteComment'],\n\n  setup(props, context) {\n    let loading = false;\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const readMore = ref(new String(props.post?.text).length < 500);\n    const {updatePostLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const postDateTime = computed(() => {\n      const {createdDate, createdTime} = props.post;\n\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale,\n      });\n    });\n\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.post.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false,\n      });\n    });\n\n    const onClickClose = () => context.emit('close');\n\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n\n    const postClasses = computed(() => ({\n      'orangehrm-post-details-text': true,\n      '--truncate': readMore.value === false,\n    }));\n\n    const onClickReadMore = () => {\n      readMore.value = !readMore.value;\n    };\n\n    return {\n      readMore,\n      postClasses,\n      onClickLike,\n      onClickClose,\n      postDateTime,\n      onClickReadMore,\n      employeeFullName,\n    };\n  },\n};\n</script>\n\n<style src=\"./post-details.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}