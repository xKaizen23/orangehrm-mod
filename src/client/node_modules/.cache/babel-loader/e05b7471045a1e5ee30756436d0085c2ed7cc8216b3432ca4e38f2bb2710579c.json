{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"orangehrm-bottom-container\"\n}, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.email_subscriptions')), 1)]),\n    _: 1\n  })]), _createVNode(_component_table_header, {\n    selected: 0,\n    total: $setup.total,\n    loading: $setup.isLoading\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    loading: $setup.isLoading,\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: false,\n    clickable: false,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"loading\", \"headers\", \"items\"])]), _hoisted_5])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EAUlCA,KAAK,EAAC;AAAqB;gCAUhCC,oBAA8C;EAAzCD,KAAK,EAAC;AAA4B;;;;;uBAtB3CE,oBAwBM,OAxBNC,UAwBM,GAvBJF,oBAsBM,OAtBNG,UAsBM,GArBJH,oBAIM,OAJNI,UAIM,GAHJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACR,KAAK,EAAC;;sBACvB,MAAqC,mCAAlCS,OAAE;;QAGTH,aAIgBI;IAHbC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAEC,YAAK;IACZC,OAAO,EAAED;qCAEZZ,oBASM,OATNc,UASM,GARJT,aAOEU;IANCF,OAAO,EAAED,gBAAS;IAClBI,OAAO,EAAEC,aAAO;IAChBC,KAAK,EAAEN,YAAK,EAAEO,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IACjB,eAAa,EAAC;kDAGlBC,UAA8C","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_text","tag","_ctx","_component_table_header","selected","total","$setup","loading","_hoisted_4","_component_oxd_card_table","headers","$data","items","data","selectable","clickable","_hoisted_5"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\emailSubscription\\EmailSubscription.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('admin.email_subscriptions') }}\n        </oxd-text>\n      </div>\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          :loading=\"isLoading\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"false\"\n          :clickable=\"false\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport usei18n from '@/core/util/composable/usei18n';\nimport {OxdSpinner, OxdSwitchInput} from '@ohrm/oxd';\n\nexport default {\n  setup() {\n    const {$t} = usei18n();\n    const subscribersNormalizer = (data) => {\n      return data.map((item) => {\n        const subscribers = Array.isArray(item.subscribers)\n          ? item.subscribers.slice(0, 10)\n          : [];\n        let _type = item.name;\n        switch (_type) {\n          case 'Leave Applications':\n            _type = $t('admin.leave_applications');\n            break;\n          case 'Leave Approvals':\n            _type = $t('admin.leave_approvals');\n            break;\n          case 'Leave Assignments':\n            _type = $t('admin.leave_assignments');\n            break;\n          case 'Leave Cancellations':\n            _type = $t('admin.leave_cancellation');\n            break;\n          case 'Leave Rejections':\n            _type = $t('admin.leave_rejections');\n            break;\n        }\n        return {\n          id: item.id,\n          type: _type,\n          subscribers: subscribers\n            .map((sub) => {\n              return `${sub.name} <${sub.email}>`;\n            })\n            .join(', '),\n          enabled: item.isEnabled,\n          _loading: false,\n        };\n      });\n    };\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/email-subscriptions',\n    );\n    const {total, response, isLoading} = usePaginate(http, {\n      normalizer: subscribersNormalizer,\n    });\n    return {\n      http,\n      isLoading,\n      total,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'type',\n          slot: 'title',\n          title: this.$t('admin.notification_type'),\n          style: {flex: '20%'},\n        },\n        {\n          name: 'subscribers',\n          title: this.$t('admin.subscribers'),\n          style: {flex: '65%'},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: '15%'},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ],\n    };\n  },\n\n  methods: {\n    cellRenderer(...args) {\n      const [index, , , row] = args;\n\n      const addSubscriber = {\n        component: 'oxd-icon-button',\n        props: {\n          name: 'person-plus-fill',\n          onClick: () => {\n            navigate('/admin/saveSubscriber/{id}', {id: row.id});\n          },\n        },\n      };\n\n      const switchSubscription = {\n        component: OxdSwitchInput,\n        props: {\n          modelValue: row.enabled,\n          'onUpdate:modelValue': ($event) => {\n            this.items.data[index]._loading = true;\n            this.http\n              .update(row.id, {\n                enabled: $event,\n              })\n              .then((response) => {\n                const {data} = response.data;\n                this.items.data[index].enabled = data.isEnabled;\n                this.$toast.updateSuccess();\n              })\n              .finally(() => {\n                this.items.data[index]._loading = false;\n              });\n          },\n          style: {\n            'margin-left': '1rem',\n            'text-align': 'left',\n          },\n        },\n      };\n\n      const loader = {\n        component: OxdSpinner,\n        props: {\n          withContainer: false,\n        },\n      };\n\n      return {\n        props: {\n          header: {\n            cellConfig: {\n              ...(row._loading\n                ? {loader}\n                : {addSubscriber, switchSubscription}),\n            },\n          },\n        },\n      };\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}