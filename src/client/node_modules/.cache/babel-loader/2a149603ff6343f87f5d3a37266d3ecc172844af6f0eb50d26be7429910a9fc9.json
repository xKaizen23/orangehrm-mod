{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, max, validSelection } from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeavePeriodDropdown from '@/orangehrmLeavePlugin/components/LeavePeriodDropdown';\nimport EntitlementUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementUpdateModal';\nimport EntitlementBulkUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementBulkUpdateModal';\nimport EntitlementNoMatchModal from '@/orangehrmLeavePlugin/components/EntitlementNoMatchModal';\nconst leaveEntitlementModel = {\n  bulkAssign: 0,\n  employee: null,\n  leaveType: null,\n  leavePeriod: null,\n  entitlement: '',\n  subunit: null,\n  location: null\n};\nexport default {\n  components: {\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-period-dropdown': LeavePeriodDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'entitlement-update-modal': EntitlementUpdateModal,\n    'entitlement-bulk-update-modal': EntitlementBulkUpdateModal,\n    'entitlement-no-match-modal': EntitlementNoMatchModal\n  },\n  props: {\n    locations: {\n      type: Array,\n      default: () => []\n    },\n    subunits: {\n      type: Array,\n      default: () => []\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-entitlements');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      leaveEntitlement: {\n        ...leaveEntitlementModel\n      },\n      leavePeriodDefined: false,\n      rules: {\n        employee: [required, validSelection],\n        leaveType: [required],\n        leavePeriod: [required],\n        entitlement: [required, v => {\n          return /^\\d+(\\.\\d{1,2})?$/.test(v) || this.$t('leave.should_be_a_number_with_2_decimal_places');\n        }, max(10000)]\n      },\n      empMatchCount: 0\n    };\n  },\n  watch: {\n    'leaveEntitlement.location': 'fetchEmployeeCount',\n    'leaveEntitlement.subunit': 'fetchEmployeeCount'\n  },\n  beforeMount() {\n    this.fetchEmployeeCount();\n    if (this.leavePeriod) {\n      this.leaveEntitlement.leavePeriod = this.leavePeriod;\n    }\n  },\n  methods: {\n    onCancel() {\n      navigate('/leave/viewLeaveEntitlements');\n    },\n    async onSave() {\n      let confirmation = null;\n      this.isLoading = true;\n      const isBulkAssign = this.leaveEntitlement.bulkAssign == 1;\n      if (isBulkAssign) {\n        if (this.empMatchCount === 0) {\n          this.isLoading = false;\n          return this.$refs.noMatchModal.showDialog();\n        }\n        confirmation = await this.$refs.bulkUpdateModal.showDialog();\n      } else {\n        confirmation = await this.$refs.updateModal.showDialog();\n      }\n      if (confirmation !== 'ok') {\n        this.isLoading = false;\n        return;\n      }\n      const payload = {\n        empNumber: undefined,\n        bulkAssign: undefined,\n        locationId: undefined,\n        subunitId: undefined,\n        leaveTypeId: this.leaveEntitlement.leaveType?.id,\n        fromDate: this.leaveEntitlement.leavePeriod?.startDate,\n        toDate: this.leaveEntitlement.leavePeriod?.endDate,\n        entitlement: this.leaveEntitlement.entitlement\n      };\n      if (isBulkAssign) {\n        payload.bulkAssign = true;\n        payload.locationId = this.leaveEntitlement.location?.id;\n        payload.subunitId = this.leaveEntitlement.subunit?.id;\n      } else {\n        payload.empNumber = this.leaveEntitlement.employee?.id;\n      }\n      this.http.create(payload).then(response => {\n        let toast = null;\n        let params = null;\n        const {\n          data\n        } = response.data;\n        if (Array.isArray(data)) {\n          toast = this.$toast.success({\n            title: this.$t('general.success'),\n            message: this.$t('leave.entitlement_added_to_n_employees', {\n              count: data.length\n            })\n          });\n        } else {\n          params = {\n            empNumber: data.employee.empNumber,\n            leaveTypeId: data.leaveType.id,\n            startDate: data.fromDate,\n            endDate: data.toDate\n          };\n          toast = this.$toast.saveSuccess();\n        }\n        return new Promise(resolve => {\n          toast.then(() => {\n            resolve(params);\n          });\n        });\n      }).then(params => {\n        if (params) {\n          navigate('/leave/viewLeaveEntitlements', undefined, params);\n        } else {\n          navigate('/leave/viewLeaveEntitlements');\n        }\n      });\n    },\n    async fetchEmployeeCount() {\n      this.http.request({\n        method: 'GET',\n        url: '/api/v2/pim/employees/count',\n        params: {\n          locationId: this.leaveEntitlement.location?.id,\n          subunitId: this.leaveEntitlement.subunit?.id\n        }\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.empMatchCount = parseInt(data.count);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","max","validSelection","EmployeeAutocomplete","LeaveTypeDropdown","LeavePeriodDropdown","EntitlementUpdateModal","EntitlementBulkUpdateModal","EntitlementNoMatchModal","leaveEntitlementModel","bulkAssign","employee","leaveType","leavePeriod","entitlement","subunit","location","components","props","locations","type","Array","default","subunits","Object","setup","http","window","appGlobal","baseUrl","data","isLoading","leaveEntitlement","leavePeriodDefined","rules","v","test","$t","empMatchCount","watch","beforeMount","fetchEmployeeCount","methods","onCancel","onSave","confirmation","isBulkAssign","$refs","noMatchModal","showDialog","bulkUpdateModal","updateModal","payload","empNumber","undefined","locationId","subunitId","leaveTypeId","id","fromDate","startDate","toDate","endDate","create","then","response","toast","params","isArray","$toast","success","title","message","count","length","saveSuccess","Promise","resolve","request","method","url","parseInt"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\entitlements\\AddEntitlement.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.add_leave_entitlement') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group\n                :label=\"$t('leave.add_to')\"\n                :classes=\"{wrapper: '--grouped-field'}\"\n              >\n                <oxd-input-field\n                  v-model=\"leaveEntitlement.bulkAssign\"\n                  type=\"radio\"\n                  :option-label=\"$t('leave.individual_employee')\"\n                  value=\"0\"\n                />\n                <oxd-input-field\n                  v-model=\"leaveEntitlement.bulkAssign\"\n                  type=\"radio\"\n                  :option-label=\"$t('leave.multiple_employees')\"\n                  value=\"1\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row v-if=\"leaveEntitlement.bulkAssign == 0\">\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"leaveEntitlement.employee\"\n                :params=\"{\n                  includeEmployees: 'currentAndPast',\n                }\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row v-else>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.location\"\n                type=\"select\"\n                :label=\"$t('general.location')\"\n                :options=\"locations\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.subunit\"\n                type=\"select\"\n                :label=\"$t('general.sub_unit')\"\n                :options=\"subunits\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"orangehrm-leave-entitled\">\n              <oxd-text class=\"orangehrm-leave-entitled-text\" type=\"subtitle-2\">\n                {{\n                  $t('leave.matches_emp_count_employees', {\n                    empMatchCount: empMatchCount,\n                  })\n                }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <leave-type-dropdown\n                v-model=\"leaveEntitlement.leaveType\"\n                :empty-text=\"$t('leave.no_leave_types_defined')\"\n                :rules=\"rules.leaveType\"\n                :eligible-only=\"false\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <leave-period-dropdown\n                v-model=\"leaveEntitlement.leavePeriod\"\n                :rules=\"rules.leavePeriod\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.entitlement\"\n                :rules=\"rules.entitlement\"\n                :label=\"$t('leave.entitlement')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n\n    <entitlement-update-modal\n      ref=\"updateModal\"\n      :data=\"leaveEntitlement\"\n    ></entitlement-update-modal>\n    <entitlement-bulk-update-modal\n      ref=\"bulkUpdateModal\"\n      :data=\"leaveEntitlement\"\n    ></entitlement-bulk-update-modal>\n    <entitlement-no-match-modal ref=\"noMatchModal\"></entitlement-no-match-modal>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {required, max, validSelection} from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeavePeriodDropdown from '@/orangehrmLeavePlugin/components/LeavePeriodDropdown';\nimport EntitlementUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementUpdateModal';\nimport EntitlementBulkUpdateModal from '@/orangehrmLeavePlugin/components/EntitlementBulkUpdateModal';\nimport EntitlementNoMatchModal from '@/orangehrmLeavePlugin/components/EntitlementNoMatchModal';\n\nconst leaveEntitlementModel = {\n  bulkAssign: 0,\n  employee: null,\n  leaveType: null,\n  leavePeriod: null,\n  entitlement: '',\n  subunit: null,\n  location: null,\n};\n\nexport default {\n  components: {\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-period-dropdown': LeavePeriodDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'entitlement-update-modal': EntitlementUpdateModal,\n    'entitlement-bulk-update-modal': EntitlementBulkUpdateModal,\n    'entitlement-no-match-modal': EntitlementNoMatchModal,\n  },\n\n  props: {\n    locations: {\n      type: Array,\n      default: () => [],\n    },\n    subunits: {\n      type: Array,\n      default: () => [],\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-entitlements',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leaveEntitlement: {...leaveEntitlementModel},\n      leavePeriodDefined: false,\n      rules: {\n        employee: [required, validSelection],\n        leaveType: [required],\n        leavePeriod: [required],\n        entitlement: [\n          required,\n          (v) => {\n            return (\n              /^\\d+(\\.\\d{1,2})?$/.test(v) ||\n              this.$t('leave.should_be_a_number_with_2_decimal_places')\n            );\n          },\n          max(10000),\n        ],\n      },\n      empMatchCount: 0,\n    };\n  },\n\n  watch: {\n    'leaveEntitlement.location': 'fetchEmployeeCount',\n    'leaveEntitlement.subunit': 'fetchEmployeeCount',\n  },\n\n  beforeMount() {\n    this.fetchEmployeeCount();\n    if (this.leavePeriod) {\n      this.leaveEntitlement.leavePeriod = this.leavePeriod;\n    }\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/leave/viewLeaveEntitlements');\n    },\n    async onSave() {\n      let confirmation = null;\n      this.isLoading = true;\n      const isBulkAssign = this.leaveEntitlement.bulkAssign == 1;\n\n      if (isBulkAssign) {\n        if (this.empMatchCount === 0) {\n          this.isLoading = false;\n          return this.$refs.noMatchModal.showDialog();\n        }\n        confirmation = await this.$refs.bulkUpdateModal.showDialog();\n      } else {\n        confirmation = await this.$refs.updateModal.showDialog();\n      }\n\n      if (confirmation !== 'ok') {\n        this.isLoading = false;\n        return;\n      }\n\n      const payload = {\n        empNumber: undefined,\n        bulkAssign: undefined,\n        locationId: undefined,\n        subunitId: undefined,\n        leaveTypeId: this.leaveEntitlement.leaveType?.id,\n        fromDate: this.leaveEntitlement.leavePeriod?.startDate,\n        toDate: this.leaveEntitlement.leavePeriod?.endDate,\n        entitlement: this.leaveEntitlement.entitlement,\n      };\n      if (isBulkAssign) {\n        payload.bulkAssign = true;\n        payload.locationId = this.leaveEntitlement.location?.id;\n        payload.subunitId = this.leaveEntitlement.subunit?.id;\n      } else {\n        payload.empNumber = this.leaveEntitlement.employee?.id;\n      }\n      this.http\n        .create(payload)\n        .then((response) => {\n          let toast = null;\n          let params = null;\n          const {data} = response.data;\n          if (Array.isArray(data)) {\n            toast = this.$toast.success({\n              title: this.$t('general.success'),\n              message: this.$t('leave.entitlement_added_to_n_employees', {\n                count: data.length,\n              }),\n            });\n          } else {\n            params = {\n              empNumber: data.employee.empNumber,\n              leaveTypeId: data.leaveType.id,\n              startDate: data.fromDate,\n              endDate: data.toDate,\n            };\n            toast = this.$toast.saveSuccess();\n          }\n          return new Promise((resolve) => {\n            toast.then(() => {\n              resolve(params);\n            });\n          });\n        })\n        .then((params) => {\n          if (params) {\n            navigate('/leave/viewLeaveEntitlements', undefined, params);\n          } else {\n            navigate('/leave/viewLeaveEntitlements');\n          }\n        });\n    },\n    async fetchEmployeeCount() {\n      this.http\n        .request({\n          method: 'GET',\n          url: '/api/v2/pim/employees/count',\n          params: {\n            locationId: this.leaveEntitlement.location?.id,\n            subunitId: this.leaveEntitlement.subunit?.id,\n          },\n        })\n        .then((response) => {\n          const {data} = response.data;\n          this.empMatchCount = parseInt(data.count);\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./add-entitlement.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}