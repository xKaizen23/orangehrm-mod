{"ast":null,"code":"import ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport SaveEmployeeReportTo from '@/orangehrmPimPlugin/components/SaveEmployeeReportTo';\nimport EditEmployeeReportTo from '@/orangehrmPimPlugin/components/EditEmployeeReportTo';\nimport usei18n from '@/core/util/composable/usei18n';\nexport default {\n  name: 'EmployeeSubordinates',\n  components: {\n    'edit-employee-report-to': EditEmployeeReportTo,\n    'save-employee-report-to': SaveEmployeeReportTo,\n    'profile-action-header': ProfileActionHeader,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    reportingMethods: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/subordinates`);\n    const {\n      $t\n    } = usei18n();\n    const defaultReportingMethods = ['Direct', 'Indirect'];\n    const subordinateNormalizer = data => {\n      return data.map(item => {\n        let reportingMethodName = item.reportingMethod.name;\n        return {\n          name: `${item.subordinate?.firstName} ${item.subordinate?.lastName} ${item.subordinate.terminationId ? $t('general.past_employee') : ''}`,\n          reportingMethod: defaultReportingMethods.includes(reportingMethodName) ? $t('pim.' + reportingMethodName.toLowerCase()) : reportingMethodName,\n          subordinateEmpNumber: item.subordinate.empNumber\n        };\n      });\n    };\n    const subordinateEndpoint = `/api/v2/pim/employees/${props.empNumber}/subordinates/`;\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: subordinateNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      subordinateEndpoint\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'reportingMethod',\n        title: this.$t('pim.reporting_method'),\n        style: {\n          flex: 1\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    },\n    tableHeaders() {\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {}\n      };\n      if (this.$can.delete(`subordinates`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      if (this.$can.update(`subordinates`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0 ? this.headers.concat([headerActions]) : this.headers;\n    }\n  },\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].subordinateEmpNumber;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.subordinateEmpNumber]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["ProfileActionHeader","DeleteConfirmationDialog","APIService","usePaginate","SaveEmployeeReportTo","EditEmployeeReportTo","usei18n","name","components","props","empNumber","type","String","required","reportingMethods","Array","setup","http","window","appGlobal","baseUrl","$t","defaultReportingMethods","subordinateNormalizer","data","map","item","reportingMethodName","reportingMethod","subordinate","firstName","lastName","terminationId","includes","toLowerCase","subordinateEmpNumber","subordinateEndpoint","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","slot","title","style","flex","checkedItems","showSaveModal","showEditModal","editModalState","computed","isDisabled","tableHeaders","headerActions","cellType","cellConfig","$can","delete","onClick","onClickDelete","component","update","edit","onClickEdit","Object","keys","length","concat","methods","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","onClickAdd","onSaveModalClose","onEditModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EmployeeSubordinates.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div>\n    <save-employee-report-to\n      v-if=\"showSaveModal\"\n      :http=\"http\"\n      :type=\"'Subordinate'\"\n      :emp-number=\"empNumber\"\n      :reporting-methods=\"reportingMethods\"\n      @close=\"onSaveModalClose\"\n    ></save-employee-report-to>\n    <edit-employee-report-to\n      v-if=\"showEditModal\"\n      :http=\"http\"\n      :emp-number=\"empNumber\"\n      :data=\"editModalState\"\n      :type=\"'Subordinate'\"\n      :api=\"subordinateEndpoint\"\n      :reporting-methods=\"reportingMethods\"\n      @close=\"onEditModalClose\"\n    ></edit-employee-report-to>\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <profile-action-header\n        :action-button-shown=\"$can.create(`subordinates`)\"\n        @click=\"onClickAdd\"\n      >\n        {{ $t('pim.assigned_subordinates') }}\n      </profile-action-header>\n    </div>\n    <table-header\n      :selected=\"checkedItems.length\"\n      :total=\"total\"\n      :loading=\"isLoading\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"tableHeaders\"\n        :items=\"items?.data\"\n        :selectable=\"$can.delete(`subordinates`)\"\n        :disabled=\"isDisabled\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div v-if=\"showPaginator\" class=\"orangehrm-bottom-container\">\n      <oxd-pagination v-model:current=\"currentPage\" :length=\"pages\" />\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport SaveEmployeeReportTo from '@/orangehrmPimPlugin/components/SaveEmployeeReportTo';\nimport EditEmployeeReportTo from '@/orangehrmPimPlugin/components/EditEmployeeReportTo';\nimport usei18n from '@/core/util/composable/usei18n';\n\nexport default {\n  name: 'EmployeeSubordinates',\n\n  components: {\n    'edit-employee-report-to': EditEmployeeReportTo,\n    'save-employee-report-to': SaveEmployeeReportTo,\n    'profile-action-header': ProfileActionHeader,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    reportingMethods: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/subordinates`,\n    );\n    const {$t} = usei18n();\n\n    const defaultReportingMethods = ['Direct', 'Indirect'];\n\n    const subordinateNormalizer = (data) => {\n      return data.map((item) => {\n        let reportingMethodName = item.reportingMethod.name;\n        return {\n          name: `${item.subordinate?.firstName} ${item.subordinate?.lastName} ${\n            item.subordinate.terminationId ? $t('general.past_employee') : ''\n          }`,\n          reportingMethod: defaultReportingMethods.includes(reportingMethodName)\n            ? $t('pim.' + reportingMethodName.toLowerCase())\n            : reportingMethodName,\n          subordinateEmpNumber: item.subordinate.empNumber,\n        };\n      });\n    };\n    const subordinateEndpoint = `/api/v2/pim/employees/${props.empNumber}/subordinates/`;\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: subordinateNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      subordinateEndpoint,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'reportingMethod',\n          title: this.$t('pim.reporting_method'),\n          style: {flex: 1},\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    isDisabled() {\n      return this.showSaveModal || this.showEditModal;\n    },\n    tableHeaders() {\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.$can.delete(`subordinates`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n      if (this.$can.update(`subordinates`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0\n        ? this.headers.concat([headerActions])\n        : this.headers;\n    },\n  },\n\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].subordinateEmpNumber;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.subordinateEmpNumber]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}