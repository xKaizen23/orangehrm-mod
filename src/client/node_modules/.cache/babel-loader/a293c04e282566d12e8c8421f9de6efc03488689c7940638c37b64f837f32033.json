{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { required, validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate } from '@/core/util/validation/rules';\nimport { navigate } from '@/core/util/helper/navigation';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport ActivityDropdown from '@/orangehrmTimePlugin/components/ActivityDropdown.vue';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst defaultFilters = {\n  project: null,\n  activity: null,\n  fromDate: null,\n  toDate: null,\n  includeTimesheet: false\n};\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'oxd-switch-input': OxdSwitchInput,\n    'activity-dropdown': ActivityDropdown,\n    'project-autocomplete': ProjectAutocomplete\n  },\n  props: {\n    project: {\n      type: Object,\n      required: true\n    },\n    activity: {\n      type: Object,\n      required: true\n    },\n    fromDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    includeTimesheet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const filters = ref({\n      ...defaultFilters,\n      fromDate: props.fromDate,\n      toDate: props.toDate,\n      includeTimesheet: props.includeTimesheet,\n      ...(props.project && {\n        project: props.project\n      }),\n      ...(props.activity && {\n        activity: props.activity\n      })\n    });\n    const {\n      userDateFormat\n    } = useDateFormat();\n    const rules = {\n      project: [required],\n      activity: [required, validSelection],\n      fromDate: [validDateFormat(userDateFormat), startDateShouldBeBeforeEndDate(() => filters.value.toDate, $t('attendance.from_date_should_be_before_to_date'), {\n        allowSameDate: true\n      })],\n      toDate: [validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => filters.value.fromDate, $t('attendance.to_date_should_be_after_from_date'), {\n        allowSameDate: true\n      })]\n    };\n    const serializedFilters = computed(() => {\n      return {\n        projectId: filters.value.project?.id,\n        activityId: filters.value.activity?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeTimesheet: filters.value.includeTimesheet ? 'onlyApproved' : 'all'\n      };\n    });\n    const onClickBack = () => {\n      navigate('/time/displayProjectReportCriteria', undefined, {\n        projectId: props.project.id,\n        fromDate: props.fromDate,\n        toDate: props.fromDate,\n        includeTimesheet: props.includeTimesheet ? 'onlyApproved' : 'all'\n      });\n    };\n    return {\n      rules,\n      filters,\n      onClickBack,\n      serializedFilters\n    };\n  }\n};","map":{"version":3,"mappings":"AA0GA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,SACEC,QAAQ,EACRC,cAAc,EACdC,eAAe,EACfC,6BAA6B,EAC7BC,8BAA8B,QACzB,8BAA8B;AACrC,SAAQC,QAAQ,QAAO,+BAA+B;AACtD,OAAOC,YAAW,MAAO,sCAAsC;AAC/D,OAAOC,gBAAe,MAAO,uDAAuD;AACpF,OAAOC,mBAAkB,MAAO,0DAA0D;AAC1F,OAAOC,OAAM,MAAO,gCAAgC;AACpD,OAAOC,aAAY,MAAO,sCAAsC;AAChE,SAAQC,cAAc,QAAO,WAAW;AAExC,MAAMC,cAAa,GAAI;EACrBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,gBAAgB,EAAE;AACpB,CAAC;AAED,eAAe;EACbC,UAAU,EAAE;IACV,eAAe,EAAEZ,YAAY;IAC7B,kBAAkB,EAAEK,cAAc;IAClC,mBAAmB,EAAEJ,gBAAgB;IACrC,sBAAsB,EAAEC;EAC1B,CAAC;EAEDW,KAAK,EAAE;IACLN,OAAO,EAAE;MACPO,IAAI,EAAEC,MAAM;MACZrB,QAAQ,EAAE;IACZ,CAAC;IACDc,QAAQ,EAAE;MACRM,IAAI,EAAEC,MAAM;MACZrB,QAAQ,EAAE;IACZ,CAAC;IACDe,QAAQ,EAAE;MACRK,IAAI,EAAEE,MAAM;MACZtB,QAAQ,EAAE,KAAK;MACfuB,OAAO,EAAE;IACX,CAAC;IACDP,MAAM,EAAE;MACNI,IAAI,EAAEE,MAAM;MACZtB,QAAQ,EAAE,KAAK;MACfuB,OAAO,EAAE;IACX,CAAC;IACDN,gBAAgB,EAAE;MAChBG,IAAI,EAAEI,OAAO;MACbD,OAAO,EAAE;IACX;EACF,CAAC;EAEDE,KAAK,CAACN,KAAK,EAAE;IACX,MAAM;MAACO;IAAE,IAAIjB,OAAO,EAAE;IACtB,MAAMkB,OAAM,GAAI5B,GAAG,CAAC;MAClB,GAAGa,cAAc;MACjBG,QAAQ,EAAEI,KAAK,CAACJ,QAAQ;MACxBC,MAAM,EAAEG,KAAK,CAACH,MAAM;MACpBC,gBAAgB,EAAEE,KAAK,CAACF,gBAAgB;MACxC,IAAIE,KAAK,CAACN,OAAM,IAAK;QAACA,OAAO,EAAEM,KAAK,CAACN;MAAO,CAAC,CAAC;MAC9C,IAAIM,KAAK,CAACL,QAAO,IAAK;QAACA,QAAQ,EAAEK,KAAK,CAACL;MAAQ,CAAC;IAClD,CAAC,CAAC;IACF,MAAM;MAACc;IAAc,IAAIlB,aAAa,EAAE;IAExC,MAAMmB,KAAI,GAAI;MACZhB,OAAO,EAAE,CAACb,QAAQ,CAAC;MACnBc,QAAQ,EAAE,CAACd,QAAQ,EAAEC,cAAc,CAAC;MACpCc,QAAQ,EAAE,CACRb,eAAe,CAAC0B,cAAc,CAAC,EAC/BxB,8BAA8B,CAC5B,MAAMuB,OAAO,CAACG,KAAK,CAACd,MAAM,EAC1BU,EAAE,CAAC,+CAA+C,CAAC,EACnD;QAACK,aAAa,EAAE;MAAI,CAAC,CACtB,CACF;MACDf,MAAM,EAAE,CACNd,eAAe,CAAC0B,cAAc,CAAC,EAC/BzB,6BAA6B,CAC3B,MAAMwB,OAAO,CAACG,KAAK,CAACf,QAAQ,EAC5BW,EAAE,CAAC,8CAA8C,CAAC,EAClD;QAACK,aAAa,EAAE;MAAI,CAAC,CACtB;IAEL,CAAC;IAED,MAAMC,iBAAgB,GAAIlC,QAAQ,CAAC,MAAM;MACvC,OAAO;QACLmC,SAAS,EAAEN,OAAO,CAACG,KAAK,CAACjB,OAAO,EAAEqB,EAAE;QACpCC,UAAU,EAAER,OAAO,CAACG,KAAK,CAAChB,QAAQ,EAAEoB,EAAE;QACtCnB,QAAQ,EAAEY,OAAO,CAACG,KAAK,CAACf,QAAQ;QAChCC,MAAM,EAAEW,OAAO,CAACG,KAAK,CAACd,MAAM;QAC5BC,gBAAgB,EAAEU,OAAO,CAACG,KAAK,CAACb,gBAAe,GAC3C,cAAa,GACb;MACN,CAAC;IACH,CAAC,CAAC;IAEF,MAAMmB,WAAU,GAAI,MAAM;MACxB/B,QAAQ,CAAC,oCAAoC,EAAEgC,SAAS,EAAE;QACxDJ,SAAS,EAAEd,KAAK,CAACN,OAAO,CAACqB,EAAE;QAC3BnB,QAAQ,EAAEI,KAAK,CAACJ,QAAQ;QACxBC,MAAM,EAAEG,KAAK,CAACJ,QAAQ;QACtBE,gBAAgB,EAAEE,KAAK,CAACF,gBAAe,GAAI,cAAa,GAAI;MAC9D,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLY,KAAK;MACLF,OAAO;MACPS,WAAW;MACXJ;IACF,CAAC;EACH;AACF,CAAC","names":["computed","ref","required","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","navigate","ReportsTable","ActivityDropdown","ProjectAutocomplete","usei18n","useDateFormat","OxdSwitchInput","defaultFilters","project","activity","fromDate","toDate","includeTimesheet","components","props","type","Object","String","default","Boolean","setup","$t","filters","userDateFormat","rules","value","allowSameDate","serializedFilters","projectId","id","activityId","onClickBack","undefined"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\reports\\ActivityDetailsReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <reports-table\n    module=\"time\"\n    name=\"activity_detailed\"\n    :prefetch=\"true\"\n    :filters=\"serializedFilters\"\n    :column-count=\"2\"\n  >\n    <template #default=\"{generateReport}\">\n      <oxd-table-filter :filter-title=\"$t('time.project_report')\">\n        <oxd-form @submit-valid=\"generateReport\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <project-autocomplete\n                  v-model=\"filters.project\"\n                  :rules=\"rules.project\"\n                  :label=\"$t('time.project_name')\"\n                  required\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <activity-dropdown\n                  v-model=\"filters.activity\"\n                  :rules=\"rules.activity\"\n                  :label=\"$t('time.activity_name')\"\n                  :project-id=\"filters.project && filters.project.id\"\n                  required\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-form-row>\n            <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.fromDate\"\n                  :placeholder=\"$t('general.from')\"\n                  :rules=\"rules.fromDate\"\n                  :label=\"$t('time.project_date_range')\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.toDate\"\n                  label=\"&nbsp\"\n                  :placeholder=\"$t('general.to')\"\n                  :rules=\"rules.toDate\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item class=\"orangehrm-switch-filter --span-column-2\">\n                <oxd-text class=\"orangehrm-switch-filter-text\" tag=\"p\">\n                  {{ $t('time.only_include_approved_timesheets') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"filters.includeTimesheet\" disabled />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-divider />\n\n          <oxd-form-actions>\n            <required-text />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.back')\"\n              @click=\"onClickBack\"\n            />\n            <submit-button :label=\"$t('general.view')\" />\n          </oxd-form-actions>\n        </oxd-form>\n      </oxd-table-filter>\n      <br />\n    </template>\n\n    <template #footer=\"{data}\">\n      {{ $t('time.total_duration') }}:\n      {{ data.meta ? data.meta.sum.label : '0.00' }}\n    </template>\n  </reports-table>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport {navigate} from '@/core/util/helper/navigation';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport ActivityDropdown from '@/orangehrmTimePlugin/components/ActivityDropdown.vue';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst defaultFilters = {\n  project: null,\n  activity: null,\n  fromDate: null,\n  toDate: null,\n  includeTimesheet: false,\n};\n\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'oxd-switch-input': OxdSwitchInput,\n    'activity-dropdown': ActivityDropdown,\n    'project-autocomplete': ProjectAutocomplete,\n  },\n\n  props: {\n    project: {\n      type: Object,\n      required: true,\n    },\n    activity: {\n      type: Object,\n      required: true,\n    },\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    includeTimesheet: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const filters = ref({\n      ...defaultFilters,\n      fromDate: props.fromDate,\n      toDate: props.toDate,\n      includeTimesheet: props.includeTimesheet,\n      ...(props.project && {project: props.project}),\n      ...(props.activity && {activity: props.activity}),\n    });\n    const {userDateFormat} = useDateFormat();\n\n    const rules = {\n      project: [required],\n      activity: [required, validSelection],\n      fromDate: [\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => filters.value.toDate,\n          $t('attendance.from_date_should_be_before_to_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      toDate: [\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('attendance.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n    };\n\n    const serializedFilters = computed(() => {\n      return {\n        projectId: filters.value.project?.id,\n        activityId: filters.value.activity?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeTimesheet: filters.value.includeTimesheet\n          ? 'onlyApproved'\n          : 'all',\n      };\n    });\n\n    const onClickBack = () => {\n      navigate('/time/displayProjectReportCriteria', undefined, {\n        projectId: props.project.id,\n        fromDate: props.fromDate,\n        toDate: props.fromDate,\n        includeTimesheet: props.includeTimesheet ? 'onlyApproved' : 'all',\n      });\n    };\n\n    return {\n      rules,\n      filters,\n      onClickBack,\n      serializedFilters,\n    };\n  },\n};\n</script>\n\n<style src=\"./time-reports.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}