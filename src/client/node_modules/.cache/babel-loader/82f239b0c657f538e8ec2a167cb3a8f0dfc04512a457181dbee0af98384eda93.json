{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2cee3bd5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-text-center-align\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-modal-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_Teleport, {\n    to: \"#app\"\n  }, [$data.show ? (_openBlock(), _createBlock(_component_oxd_dialog, {\n    key: 0,\n    class: \"orangehrm-confirmation-dialog orangehrm-dialog-popup\",\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($props.title), 1)]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n      type: \"card-body\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($props.subtitle), 1)]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_button, {\n      label: $props.cancelLabel,\n      \"display-type\": $props.cancelButtonType,\n      class: \"orangehrm-button-margin\",\n      onClick: $options.onCancel\n    }, null, 8, [\"label\", \"display-type\", \"onClick\"]), _createVNode(_component_oxd_button, {\n      \"icon-name\": $props.icon,\n      label: $props.confirmLabel,\n      \"display-type\": $props.confirmButtonType,\n      class: \"orangehrm-button-margin\",\n      onClick: $options.onConfirm\n    }, null, 8, [\"icon-name\", \"label\", \"display-type\", \"onClick\"])])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;;EA0BWA,KAAK,EAAC;AAAwB;;EAG9BA,KAAK,EAAC;AAA6B;;EAKnCA,KAAK,EAAC;AAAwB;;;;;uBAdvCC,aA8BWC;IA9BDC,EAAE,EAAC;EAAM,IAETC,UAAI,kBADZH,aA4BaI;;IA1BXL,KAAK,EAAC,sDAAsD;IAC3D,eAAW,EAAEM;;sBAEd,MAEM,CAFNC,oBAEM,OAFNC,UAEM,GADJC,aAAkDC;MAAxCC,IAAI,EAAC;IAAY;wBAAC,MAAW,mCAARC,YAAK;;UAEtCL,oBAIM,OAJNM,UAIM,GAHJJ,aAEWC;MAFDC,IAAI,EAAC;IAAW;wBACxB,MAAc,mCAAXC,eAAQ;;UAGfL,oBAcM,OAdNO,UAcM,GAbJL,aAKEM;MAJCC,KAAK,EAAEJ,kBAAW;MAClB,cAAY,EAAEA,uBAAgB;MAC/BZ,KAAK,EAAC,yBAAyB;MAC9BiB,OAAK,EAAEX;uDAEVG,aAMEM;MALC,WAAS,EAAEH,WAAI;MACfI,KAAK,EAAEJ,mBAAY;MACnB,cAAY,EAAEA,wBAAiB;MAChCZ,KAAK,EAAC,yBAAyB;MAC9BiB,OAAK,EAAEX","names":["class","_createBlock","_Teleport","to","$data","_component_oxd_dialog","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","$props","_hoisted_2","_hoisted_3","_component_oxd_button","label","onClick"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\core\\components\\dialogs\\ConfirmationDialog.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <teleport to=\"#app\">\n    <oxd-dialog\n      v-if=\"show\"\n      class=\"orangehrm-confirmation-dialog orangehrm-dialog-popup\"\n      @update:show=\"onCancel\"\n    >\n      <div class=\"orangehrm-modal-header\">\n        <oxd-text type=\"card-title\">{{ title }}</oxd-text>\n      </div>\n      <div class=\"orangehrm-text-center-align\">\n        <oxd-text type=\"card-body\">\n          {{ subtitle }}\n        </oxd-text>\n      </div>\n      <div class=\"orangehrm-modal-footer\">\n        <oxd-button\n          :label=\"cancelLabel\"\n          :display-type=\"cancelButtonType\"\n          class=\"orangehrm-button-margin\"\n          @click=\"onCancel\"\n        />\n        <oxd-button\n          :icon-name=\"icon\"\n          :label=\"confirmLabel\"\n          :display-type=\"confirmButtonType\"\n          class=\"orangehrm-button-margin\"\n          @click=\"onConfirm\"\n        />\n      </div>\n    </oxd-dialog>\n  </teleport>\n</template>\n\n<script>\nimport {OxdDialog} from '@ohrm/oxd';\n\nexport default {\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    subtitle: {\n      type: String,\n      required: true,\n    },\n    cancelLabel: {\n      type: String,\n      required: true,\n    },\n    confirmLabel: {\n      type: String,\n      required: true,\n    },\n    icon: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    confirmButtonType: {\n      type: String,\n      required: false,\n      default: 'label-danger',\n    },\n    cancelButtonType: {\n      type: String,\n      required: false,\n      default: 'text',\n    },\n  },\n  data() {\n    return {\n      show: false,\n      reject: null,\n      resolve: null,\n    };\n  },\n  methods: {\n    showDialog() {\n      return new Promise((resolve, reject) => {\n        this.resolve = resolve;\n        this.reject = reject;\n        this.show = true;\n      });\n    },\n    onConfirm() {\n      this.show = false;\n      this.resolve && this.resolve('ok');\n    },\n    onCancel() {\n      this.show = false;\n      this.resolve && this.resolve('cancel');\n    },\n  },\n};\n</script>\n\n<style src=\"./dialog.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}