{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_file_upload_input = _resolveComponent(\"file-upload-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('admin.edit_job_title')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.jobTitle.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.jobTitle.title = $event),\n        label: _ctx.$t('general.job_title'),\n        rules: $data.rules.title,\n        required: \"\"\n      }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.jobTitle.description,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.jobTitle.description = $event),\n        type: \"textarea\",\n        label: _ctx.$t('admin.job_description'),\n        placeholder: _ctx.$t('general.type_description_here'),\n        rules: $data.rules.description\n      }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_file_upload_input, {\n        newFile: $data.jobTitle.newSpecification,\n        \"onUpdate:newFile\": _cache[2] || (_cache[2] = $event => $data.jobTitle.newSpecification = $event),\n        method: $data.jobTitle.method,\n        \"onUpdate:method\": _cache[3] || (_cache[3] = $event => $data.jobTitle.method = $event),\n        label: _ctx.$t('general.job_specification'),\n        \"button-label\": _ctx.$t('general.browse'),\n        file: $data.jobTitle.oldSpecification,\n        rules: $data.rules.specification,\n        url: `admin/viewJobSpecification/attachId`,\n        hint: _ctx.$t('general.accepts_up_to_n_mb', {\n          count: $options.formattedFileSize\n        })\n      }, null, 8, [\"newFile\", \"method\", \"label\", \"button-label\", \"file\", \"rules\", \"hint\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.jobTitle.note,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.jobTitle.note = $event),\n        type: \"textarea\",\n        label: _ctx.$t('general.note'),\n        placeholder: _ctx.$t('general.add_note'),\n        rules: $data.rules.note,\n        \"label-icon\": \"pencil-square\"\n      }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;uBADvCC,oBAiEM,OAjENC,UAiEM,GAhEJC,oBA+DM,OA/DNC,UA+DM,GA9DJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAAgC,mCAA7BQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aAuDWK;IAvDAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAOe,CAPfT,aAOeU;wBANb,MAKE,CALFV,aAKEW;oBAJSJ,cAAQ,CAACK,KAAK;mEAAdL,cAAQ,CAACK,KAAK;QACtBC,KAAK,EAAEV,OAAE;QACTW,KAAK,EAAEP,WAAK,CAACK,KAAK;QACnBG,QAAQ,EAAR;;;QAIJf,aAQeU;wBAPb,MAME,CANFV,aAMEW;oBALSJ,cAAQ,CAACS,WAAW;mEAApBT,cAAQ,CAACS,WAAW;QAC7BC,IAAI,EAAC,UAAU;QACdJ,KAAK,EAAEV,OAAE;QACTe,WAAW,EAAEf,OAAE;QACfW,KAAK,EAAEP,WAAK,CAACS;;;QAIlBhB,aAWeU;wBAVb,MASE,CATFV,aASEmB;QARQC,OAAO,EAAEb,cAAQ,CAACc,gBAAgB;gEAAzBd,cAAQ,CAACc,gBAAgB;QAClCC,MAAM,EAAEf,cAAQ,CAACe,MAAM;+DAAff,cAAQ,CAACe,MAAM;QAC9BT,KAAK,EAAEV,OAAE;QACT,cAAY,EAAEA,OAAE;QAChBoB,IAAI,EAAEhB,cAAQ,CAACiB,gBAAgB;QAC/BV,KAAK,EAAEP,WAAK,CAACkB,aAAa;QAC1BC,GAAG,EAAE,qCAAqC;QAC1CC,IAAI,EAAExB,OAAE;UAAAyB,OAAuCnB;QAAiB;;;QAIrET,aASeU;wBARb,MAOE,CAPFV,aAOEW;oBANSJ,cAAQ,CAACsB,IAAI;mEAAbtB,cAAQ,CAACsB,IAAI;QACtBZ,IAAI,EAAC,UAAU;QACdJ,KAAK,EAAEV,OAAE;QACTe,WAAW,EAAEf,OAAE;QACfW,KAAK,EAAEP,WAAK,CAACsB,IAAI;QAClB,YAAU,EAAC;;;QAIf7B,aAAeI,yBAEfJ,aAQmB8B;wBAPjB,MAAiB,CAAjB9B,aAAiB+B,2BACjB/B,aAIEgC;QAHA,cAAY,EAAC,OAAO;QACnBnB,KAAK,EAAEV,OAAE;QACT8B,OAAK,EAAExB;yCAEVT,aAAiBkC","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_input_field","title","label","rules","required","description","type","placeholder","_component_file_upload_input","newFile","newSpecification","method","file","oldSpecification","specification","url","hint","count","note","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\jobTitle\\EditJobTitle.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.edit_job_title') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.title\"\n            :label=\"$t('general.job_title')\"\n            :rules=\"rules.title\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.description\"\n            type=\"textarea\"\n            :label=\"$t('admin.job_description')\"\n            :placeholder=\"$t('general.type_description_here')\"\n            :rules=\"rules.description\"\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <file-upload-input\n            v-model:newFile=\"jobTitle.newSpecification\"\n            v-model:method=\"jobTitle.method\"\n            :label=\"$t('general.job_specification')\"\n            :button-label=\"$t('general.browse')\"\n            :file=\"jobTitle.oldSpecification\"\n            :rules=\"rules.specification\"\n            :url=\"`admin/viewJobSpecification/attachId`\"\n            :hint=\"$t('general.accepts_up_to_n_mb', {count: formattedFileSize})\"\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"jobTitle.note\"\n            type=\"textarea\"\n            :label=\"$t('general.note')\"\n            :placeholder=\"$t('general.add_note')\"\n            :rules=\"rules.note\"\n            label-icon=\"pencil-square\"\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validFileTypes,\n  maxFileSize,\n} from '@ohrm/core/util/validation/rules';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialJobTitle = {\n  title: '',\n  description: '',\n  oldSpecification: '',\n  newSpecification: null,\n  method: 'keepCurrent',\n  note: '',\n};\n\nexport default {\n  components: {\n    'file-upload-input': FileUploadInput,\n  },\n  props: {\n    jobTitleId: {\n      type: String,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/job-titles',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const jobTitleUniqueValidation = createUniqueValidator(\n      'JobTitle',\n      'jobTitleName',\n      {\n        entityId: props.jobTitleId,\n        matchByField: 'isDeleted',\n        matchByValue: 'false',\n      },\n    );\n\n    return {\n      http,\n      jobTitleUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      jobTitle: {...initialJobTitle},\n      rules: {\n        title: [\n          required,\n          this.jobTitleUniqueValidation,\n          shouldNotExceedCharLength(100),\n        ],\n        description: [shouldNotExceedCharLength(400)],\n        specification: [\n          (v) => {\n            if (this.jobTitle.method == 'replaceCurrent') {\n              return required(v);\n            } else {\n              return true;\n            }\n          },\n          validFileTypes(this.allowedFileTypes),\n          maxFileSize(this.maxFileSize),\n        ],\n        note: [shouldNotExceedCharLength(400)],\n      },\n    };\n  },\n\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.jobTitleId)\n      .then((response) => {\n        const {data} = response.data;\n        this.jobTitle.title = data.title;\n        this.jobTitle.description = data.description;\n        this.jobTitle.note = data.note;\n        this.jobTitle.oldSpecification = data.jobSpecification?.id\n          ? data.jobSpecification\n          : null;\n        this.jobTitle.newSpecification = null;\n        this.jobTitle.method = 'keepCurrent';\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/admin/viewJobTitleList');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.jobTitleId, {\n          title: this.jobTitle.title,\n          description: this.jobTitle.description,\n          note: this.jobTitle.note,\n          currentJobSpecification: this.jobTitle.oldSpecification\n            ? this.jobTitle.method\n            : undefined,\n          specification: this.jobTitle.newSpecification\n            ? this.jobTitle.newSpecification\n            : undefined,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}