{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-00a26785\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    class: \"orangehrm-dialog-modal\",\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.edit_attachment')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n              label: _ctx.$t('general.current_file')\n            }, {\n              default: _withCtx(() => [_createVNode(_component_oxd_text, {\n                tag: \"p\",\n                class: \"current-file\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString($data.currentFile), 1)]),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"label\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _hoisted_2, _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n            class: \"--span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attachment.attachment,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.attachment.attachment = $event),\n              type: \"file\",\n              label: _ctx.$t('general.replace_with'),\n              \"button-label\": _ctx.$t('general.browse'),\n              rules: $data.rules.attachment,\n              placeholder: _ctx.$t('general.no_file_selected')\n            }, null, 8, [\"modelValue\", \"label\", \"button-label\", \"rules\", \"placeholder\"]), _createVNode(_component_oxd_text, {\n              class: \"orangehrm-input-hint\",\n              tag: \"p\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.accepts_up_to_n_mb', {\n                count: $options.formattedFileSize\n              })), 1)]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 2,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n            class: \"--span-column-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.attachment.description,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.attachment.description = $event),\n              type: \"textarea\",\n              label: _ctx.$t('general.comment'),\n              placeholder: _ctx.$t('general.type_comment_here'),\n              rules: $data.rules.description\n            }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          type: \"button\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;;EAoBSA,KAAK,EAAC;AAAwB;gEAkBjCC,oBAAM;;;;;;;;;;;;;;;uBAnBVC,aAgEaC;IAhEDH,KAAK,EAAC,wBAAwB;IAAE,eAAW,EAAEI;;sBACvD,MAIM,CAJNH,oBAIM,OAJNI,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAAmC,mCAAhCC,OAAE;;UAGTH,aAAeI,yBACfJ,aAwDWK;MAxDAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEV;;wBAC5C,MAUe,CAVfE,aAUeS;0BATb,MAQW,CARXT,aAQWU;UARAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAMgB,CANhBM,aAMgBY;8BALd,MAIkB,CAJlBZ,aAIkBa;cAJAC,KAAK,EAAEX,OAAE;;gCACzB,MAEW,CAFXH,aAEWC;gBAFDc,GAAG,EAAC,GAAG;gBAACrB,KAAK,EAAC;;kCACtB,MAAiB,mCAAda,iBAAW;;;;;;;;;;UAMxBS,UAAM,EACNhB,aAgBeS;0BAfb,MAcW,CAdXT,aAcWU;UAdAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAYgB,CAZhBM,aAYgBY;YAZDlB,KAAK,EAAC;UAAiB;8BACpC,MAOE,CAPFM,aAOEiB;0BANSV,gBAAU,CAACW,UAAU;yEAArBX,gBAAU,CAACW,UAAU;cAC9BhB,IAAI,EAAC,MAAM;cACVY,KAAK,EAAEX,OAAE;cACT,cAAY,EAAEA,OAAE;cAChBgB,KAAK,EAAEZ,WAAK,CAACW,UAAU;cACvBE,WAAW,EAAEjB,OAAE;0FAElBH,aAEWC;cAFDP,KAAK,EAAC,sBAAsB;cAACqB,GAAG,EAAC;;gCACzC,MAAkE,mCAA/DZ,OAAE;gBAAAkB,OAAuCvB;cAAiB;;;;;;;;UAMrEE,aAYeS;0BAXb,MAUW,CAVXT,aAUWU;UAVAC,IAAI,EAAE,CAAC;UAAEjB,KAAK,EAAC;;4BACxB,MAQgB,CARhBM,aAQgBY;YARDlB,KAAK,EAAC;UAAiB;8BACpC,MAME,CANFM,aAMEiB;0BALSV,gBAAU,CAACe,WAAW;yEAAtBf,gBAAU,CAACe,WAAW;cAC/BpB,IAAI,EAAC,UAAU;cACdY,KAAK,EAAEX,OAAE;cACTiB,WAAW,EAAEjB,OAAE;cACfgB,KAAK,EAAEZ,WAAK,CAACe;;;;;;;UAMtBtB,aAAeI,yBACfJ,aASmBuB;0BARjB,MAAiB,CAAjBvB,aAAiBwB,2BACjBxB,aAKEyB;UAJAvB,IAAI,EAAC,QAAQ;UACb,cAAY,EAAC,OAAO;UACnBY,KAAK,EAAEX,OAAE;UACTuB,OAAK,EAAE5B;2CAEVE,aAAiB2B","names":["class","_createElementVNode","_createBlock","_component_oxd_dialog","$options","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_group","label","tag","_hoisted_2","_component_oxd_input_field","attachment","rules","placeholder","count","description","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\EditAttachmentModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <oxd-dialog class=\"orangehrm-dialog-modal\" @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('general.edit_attachment') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-group :label=\"$t('general.current_file')\">\n              <oxd-text tag=\"p\" class=\"current-file\">\n                {{ currentFile }}\n              </oxd-text>\n            </oxd-input-group>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <br />\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"attachment.attachment\"\n              type=\"file\"\n              :label=\"$t('general.replace_with')\"\n              :button-label=\"$t('general.browse')\"\n              :rules=\"rules.attachment\"\n              :placeholder=\"$t('general.no_file_selected')\"\n            />\n            <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n              {{ $t('general.accepts_up_to_n_mb', {count: formattedFileSize}) }}\n            </oxd-text>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"attachment.description\"\n              type=\"textarea\"\n              :label=\"$t('general.comment')\"\n              :placeholder=\"$t('general.type_comment_here')\"\n              :rules=\"rules.description\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {OxdDialog} from '@ohrm/oxd';\nimport {\n  maxFileSize,\n  shouldNotExceedCharLength,\n  validFileTypes,\n} from '@ohrm/core/util/validation/rules';\nimport {truncate} from '@ohrm/core/util/helper/truncate';\n\nconst attachmentModel = {\n  attachment: null,\n  description: '',\n};\n\nexport default {\n  name: 'SaveAttachment',\n\n  components: {\n    'oxd-dialog': OxdDialog,\n  },\n\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n    requestId: {\n      type: Number,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/attachments`,\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      currentFile: '',\n      attachment: {\n        ...attachmentModel,\n      },\n      rules: {\n        description: [shouldNotExceedCharLength(200)],\n        attachment: [\n          maxFileSize(this.maxFileSize),\n          validFileTypes(this.allowedFileTypes),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.data.id)\n      .then((response) => {\n        const {data} = response.data;\n        this.currentFile = truncate(data.attachment.fileName);\n        this.attachment.description = data.attachment.description;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.data.id, {...this.attachment})\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.attachment = {...attachmentModel};\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.current-file {\n  @include truncate(6, 1.5, #fff);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}