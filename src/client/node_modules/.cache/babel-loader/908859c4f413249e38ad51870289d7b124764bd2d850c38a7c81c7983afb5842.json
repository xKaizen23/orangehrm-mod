{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nexport default {\n  props: {\n    terminationReasonId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/termination-reasons');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const terminationReasonUniqueValidation = createUniqueValidator('TerminationReason', 'name', {\n      entityId: props.terminationReasonId\n    });\n    return {\n      http,\n      terminationReasonUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      termination: {\n        id: '',\n        name: ''\n      },\n      rules: {\n        name: [required, this.terminationReasonUniqueValidation, shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.terminationReasonId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.termination.id = data.id;\n      this.termination.name = data.name;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.terminationReasonId, {\n        name: this.termination.name\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/pim/viewTerminationReasons');\n    }\n  }\n};","map":{"version":3,"mappings":"AAwDA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AACzC,OAAOC,mBAAkB,MAAO,4CAA4C;AAE5E,eAAe;EACbC,KAAK,EAAE;IACLC,mBAAmB,EAAE;MACnBC,IAAI,EAAEC,MAAM;MACZN,QAAQ,EAAE;IACZ;EACF,CAAC;EACDO,KAAK,CAACJ,KAAK,EAAE;IACX,MAAMK,IAAG,GAAI,IAAIT,UAAU,CACzBU,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,iCAAiC,CAClC;IACD,MAAM;MAACC;IAAqB,IAAIV,mBAAmB,CAACM,IAAI,CAAC;IACzD,MAAMK,iCAAgC,GAAID,qBAAqB,CAC7D,mBAAmB,EACnB,MAAM,EACN;MAACE,QAAQ,EAAEX,KAAK,CAACC;IAAmB,CAAC,CACtC;IACD,OAAO;MACLI,IAAI;MACJK;IACF,CAAC;EACH,CAAC;EAEDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE;QACXC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLD,IAAI,EAAE,CACJnB,QAAQ,EACR,IAAI,CAACa,iCAAiC,EACtCZ,yBAAyB,CAAC,GAAG,CAAC;MAElC;IACF,CAAC;EACH,CAAC;EAEDoB,OAAO,GAAG;IACR,IAAI,CAACL,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACR,IAAG,CACLc,GAAG,CAAC,IAAI,CAAClB,mBAAmB,EAC5BmB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACT;MAAI,IAAIS,QAAQ,CAACT,IAAI;MAC5B,IAAI,CAACE,WAAW,CAACC,EAAC,GAAIH,IAAI,CAACG,EAAE;MAC7B,IAAI,CAACD,WAAW,CAACE,IAAG,GAAIJ,IAAI,CAACI,IAAI;IACnC,CAAC,EACAM,OAAO,CAAC,MAAM;MACb,IAAI,CAACT,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDU,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACX,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACR,IAAG,CACLoB,MAAM,CAAC,IAAI,CAACxB,mBAAmB,EAAE;QAChCe,IAAI,EAAE,IAAI,CAACF,WAAW,CAACE;MACzB,CAAC,EACAI,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACM,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAP,IAAI,CAAC,MAAM;QACV,IAAI,CAACQ,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACTjC,QAAQ,CAAC,6BAA6B,CAAC;IACzC;EACF;AACF,CAAC","names":["navigate","APIService","required","shouldNotExceedCharLength","useServerValidation","props","terminationReasonId","type","Number","setup","http","window","appGlobal","baseUrl","createUniqueValidator","terminationReasonUniqueValidation","entityId","data","isLoading","termination","id","name","rules","created","get","then","response","finally","methods","onSave","update","$toast","updateSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\terminationReason\\EditTerminationReason.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">{{\n        $t('pim.edit_termination_reason')\n      }}</oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"termination.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nexport default {\n  props: {\n    terminationReasonId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/termination-reasons',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const terminationReasonUniqueValidation = createUniqueValidator(\n      'TerminationReason',\n      'name',\n      {entityId: props.terminationReasonId},\n    );\n    return {\n      http,\n      terminationReasonUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      termination: {\n        id: '',\n        name: '',\n      },\n      rules: {\n        name: [\n          required,\n          this.terminationReasonUniqueValidation,\n          shouldNotExceedCharLength(100),\n        ],\n      },\n    };\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.terminationReasonId)\n      .then((response) => {\n        const {data} = response.data;\n        this.termination.id = data.id;\n        this.termination.name = data.name;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.terminationReasonId, {\n          name: this.termination.name,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/pim/viewTerminationReasons');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}