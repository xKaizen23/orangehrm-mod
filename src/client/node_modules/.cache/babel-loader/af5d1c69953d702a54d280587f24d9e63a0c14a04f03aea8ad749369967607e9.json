{"ast":null,"code":"import { computed, ref } from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport { shouldNotExceedCharLength, validSelection } from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport usei18n from '@/core/util/composable/usei18n';\nconst defaultFilters = {\n  username: '',\n  userRoleId: null,\n  empNumber: null,\n  status: null\n};\nconst defaultSortOrder = {\n  'u.userName': 'ASC',\n  'r.displayName': 'ASC',\n  'e.firstName': 'ASC',\n  'u.status': 'DEFAULT'\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    unselectableIds: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const userdataNormalizer = data => {\n      return data.map(item => {\n        const selectable = props.unselectableIds.findIndex(id => id == item.id);\n        return {\n          id: item.id,\n          userName: item.userName,\n          role: item.userRole?.displayName === 'Admin' ? $t('general.admin') : $t('general.ess'),\n          empName: $tEmpName(item.employee, {\n            includeMiddle: false\n          }),\n          status: item.status ? $t('general.enabled') : $t('general.disabled'),\n          isSelectable: selectable === -1\n        };\n      });\n    };\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        username: filters.value.username,\n        userRoleId: filters.value.userRoleId?.id,\n        empNumber: filters.value.empNumber?.id,\n        status: filters.value.status?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/users');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: userdataNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'userName',\n        title: this.$t('general.username'),\n        sortField: 'u.userName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'role',\n        title: this.$t('general.user_role'),\n        style: {\n          flex: 1\n        },\n        sortField: 'r.displayName'\n      }, {\n        name: 'empName',\n        slot: 'title',\n        title: this.$t('general.employee_name'),\n        sortField: 'e.firstName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        sortField: 'u.status',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      userRoles: [{\n        id: 1,\n        label: this.$t('general.admin')\n      }, {\n        id: 2,\n        label: this.$t('general.ess')\n      }],\n      userStatuses: [{\n        id: 1,\n        label: this.$t('general.enabled')\n      }, {\n        id: 0,\n        label: this.$t('general.disabled')\n      }],\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection]\n      }\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveSystemUser');\n    },\n    onClickEdit(item) {\n      navigate('/admin/saveSystemUser/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(id => id == item.id);\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {\n        ...defaultFilters\n      };\n      this.filterItems();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","DeleteConfirmationDialog","usePaginate","navigate","APIService","EmployeeAutocomplete","useSort","shouldNotExceedCharLength","validSelection","useEmployeeNameTranslate","usei18n","defaultFilters","username","userRoleId","empNumber","status","defaultSortOrder","components","props","unselectableIds","type","Array","default","setup","$t","$tEmpName","userdataNormalizer","data","map","item","selectable","findIndex","id","userName","role","userRole","displayName","empName","employee","includeMiddle","isSelectable","filters","sortDefinition","sortField","sortOrder","onSort","serializedFilters","value","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","headers","name","title","style","flex","slot","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","userRoles","label","userStatuses","checkedItems","rules","methods","onClickAdd","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","$toast","cannotDelete","deleteAll","deleteSuccess","resetDataTable","filterItems","onClickReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\systemUser\\SystemUser.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('admin.system_users')\">\n      <oxd-form @submit-valid=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.username\"\n                :label=\"$t('general.username')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.userRoleId\"\n                type=\"select\"\n                :label=\"$t('general.user_role')\"\n                :options=\"userRoles\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.empNumber\"\n                :rules=\"rules.employee\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.status\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :options=\"userStatuses\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            @click=\"onClickReset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport usei18n from '@/core/util/composable/usei18n';\n\nconst defaultFilters = {\n  username: '',\n  userRoleId: null,\n  empNumber: null,\n  status: null,\n};\n\nconst defaultSortOrder = {\n  'u.userName': 'ASC',\n  'r.displayName': 'ASC',\n  'e.firstName': 'ASC',\n  'u.status': 'DEFAULT',\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  props: {\n    unselectableIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const userdataNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableIds.findIndex(\n          (id) => id == item.id,\n        );\n        return {\n          id: item.id,\n          userName: item.userName,\n          role:\n            item.userRole?.displayName === 'Admin'\n              ? $t('general.admin')\n              : $t('general.ess'),\n          empName: $tEmpName(item.employee, {includeMiddle: false}),\n          status: item.status ? $t('general.enabled') : $t('general.disabled'),\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n\n    const filters = ref({...defaultFilters});\n\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        username: filters.value.username,\n        userRoleId: filters.value.userRoleId?.id,\n        empNumber: filters.value.empNumber?.id,\n        status: filters.value.status?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/users',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: userdataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'userName',\n          title: this.$t('general.username'),\n          sortField: 'u.userName',\n          style: {flex: 1},\n        },\n        {\n          name: 'role',\n          title: this.$t('general.user_role'),\n          style: {flex: 1},\n          sortField: 'r.displayName',\n        },\n        {\n          name: 'empName',\n          slot: 'title',\n          title: this.$t('general.employee_name'),\n          sortField: 'e.firstName',\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          sortField: 'u.status',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      userRoles: [\n        {id: 1, label: this.$t('general.admin')},\n        {id: 2, label: this.$t('general.ess')},\n      ],\n      userStatuses: [\n        {id: 1, label: this.$t('general.enabled')},\n        {id: 0, label: this.$t('general.disabled')},\n      ],\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveSystemUser');\n    },\n    onClickEdit(item) {\n      navigate('/admin/saveSystemUser/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(\n        (id) => id == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}