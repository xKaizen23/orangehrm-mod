{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-42073826\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-employee-picture\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_profile_image_input = _resolveComponent(\"profile-image-input\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_edit_employee_layout = _resolveComponent(\"edit-employee-layout\");\n  return _openBlock(), _createBlock(_component_edit_employee_layout, {\n    \"employee-id\": $props.empNumber\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      tag: \"h6\",\n      class: \"orangehrm-main-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.change_profile_picture')), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_profile_image_input, {\n          modelValue: $data.empPicture,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.empPicture = $event),\n          rules: $data.rules.empPicture,\n          \"img-src\": $options.profilePicUrl\n        }, null, 8, [\"modelValue\", \"rules\", \"img-src\"])])]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])])]),\n    _: 1\n  }, 8, [\"employee-id\"]);\n}","map":{"version":3,"mappings":";;;EAqBSA,KAAK,EAAC;AAAyD;;EAOzDA,KAAK,EAAC;AAA4B;;;;;;;;;;uBAR/CC,aAuBuBC;IAvBA,aAAW,EAAEC;EAAS;sBAC3C,MAqBM,CArBNC,oBAqBM,OArBNC,UAqBM,GApBJC,aAEWC;MAFDC,GAAG,EAAC,IAAI;MAACR,KAAK,EAAC;;wBACvB,MAAsC,mCAAnCS,OAAE;;QAEPH,aAAeI,yBACfJ,aAeWK;MAfAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEC;;wBAC5C,MAQe,CARfT,aAQeU;0BAPb,MAMM,CANNZ,oBAMM,OANNa,UAMM,GALJX,aAIEY;sBAHSL,gBAAU;qEAAVA,gBAAU;UAClBM,KAAK,EAAEN,WAAK,CAACO,UAAU;UACvB,SAAO,EAAEL;;;UAKhBT,aAAeI,yBACfJ,aAEmBe;0BADjB,MAAiB,CAAjBf,aAAiBgB","names":["class","_createBlock","_component_edit_employee_layout","$props","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_hoisted_2","_component_profile_image_input","rules","empPicture","_component_oxd_form_actions","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeProfilePicture.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.change_profile_picture') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <div class=\"orangehrm-employee-picture\">\n            <profile-image-input\n              v-model=\"empPicture\"\n              :rules=\"rules.empPicture\"\n              :img-src=\"profilePicUrl\"\n            />\n          </div>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport ProfileImageInput from '@/orangehrmPimPlugin/components/ProfileImageInput';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport {\n  maxFileSize,\n  required,\n  validFileTypes,\n} from '@/core/util/validation/rules';\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\n\nexport default {\n  components: {\n    'profile-image-input': ProfileImageInput,\n    'edit-employee-layout': EditEmployeeLayout,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    allowedImageTypes: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/picture`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      empPicture: null,\n      rules: {\n        empPicture: [\n          required,\n          maxFileSize(1024 * 1024),\n          validFileTypes(this.allowedImageTypes),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    profilePicUrl() {\n      if (this.empPicture) {\n        const file = this.empPicture.base64;\n        const type = this.empPicture.type;\n        const isPicture = this.allowedImageTypes.findIndex(\n          (item) => item === type,\n        );\n        return isPicture > -1 ? `data:${type};base64,${file}` : defaultPic;\n      } else {\n        return defaultPic;\n      }\n    },\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            empPicture: this.empPicture,\n          },\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          location.reload();\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}