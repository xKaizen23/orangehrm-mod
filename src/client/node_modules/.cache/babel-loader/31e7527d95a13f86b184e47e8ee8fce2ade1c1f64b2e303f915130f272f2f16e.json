{"ast":null,"code":"import { computed } from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nconst defaultSortOrder = {\n  'customer.name': 'ASC'\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    unselectableIds: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const customerNormalizer = data => {\n      return data.map(item => {\n        const selectable = props.unselectableIds.findIndex(id => id == item.id);\n        return {\n          id: item.id,\n          name: item.name,\n          description: item.description,\n          isSelectable: selectable === -1\n        };\n      });\n    };\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/time/customers');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: customerNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.name'),\n        sortField: 'customer.name',\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'description',\n        title: this.$t('general.description'),\n        style: {\n          flex: 4\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/time/addCustomer');\n    },\n    onClickEdit(item) {\n      navigate('/time/addCustomer/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(id => id == item.id);\n      if (isSelectable > -1) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t('time.not_allowed_to_delete_customer_who_have_time_logged_against')\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","usePaginate","DeleteConfirmationDialog","navigate","APIService","useSort","defaultSortOrder","components","props","unselectableIds","type","Array","default","setup","customerNormalizer","data","map","item","selectable","findIndex","id","name","description","isSelectable","sortDefinition","sortField","sortOrder","onSort","serializedFilters","value","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","headers","slot","title","$t","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","methods","onClickAdd","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","$toast","error","message","deleteAll","deleteSuccess","resetDataTable"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\customer\\Customer.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.customers') }}\n        </oxd-text>\n        <div>\n          <oxd-button\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAdd\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :loading=\"isLoading\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed} from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\n\nconst defaultSortOrder = {\n  'customer.name': 'ASC',\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    unselectableIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  setup(props) {\n    const customerNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableIds.findIndex(\n          (id) => id == item.id,\n        );\n        return {\n          id: item.id,\n          name: item.name,\n          description: item.description,\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/time/customers',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: customerNormalizer,\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      sortDefinition,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.name'),\n          sortField: 'customer.name',\n          style: {flex: 2},\n        },\n        {\n          name: 'description',\n          title: this.$t('general.description'),\n          style: {flex: 4},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/time/addCustomer');\n    },\n    onClickEdit(item) {\n      navigate('/time/addCustomer/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(\n        (id) => id == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t(\n            'time.not_allowed_to_delete_customer_who_have_time_logged_against',\n          ),\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}