{"ast":null,"code":"import { computed, ref, inject } from 'vue';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { viewIcon, evaluateIcon, viewLabel, evaluateLabel } from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { APIService } from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport ReviewStatusDropdown from '@/orangehrmPerformancePlugin/components/ReviewStatusDropdown';\nimport usei18n from '@/core/util/composable/usei18n';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport { tableScreenStateKey } from '@ohrm/oxd';\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'performanceReview.dueDate': 'DEFAULT',\n  'performanceReview.statusId': 'ASC'\n};\nexport default {\n  name: 'ReviewList',\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'review-status-dropdown': ReviewStatusDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    fromDate: {\n      type: String,\n      required: false,\n      default: null\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const reviewListDateFormat = date => formatDate(parseDate(date), jsDateFormat, {\n      locale\n    });\n    const reviewListNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          employee: `${item.employee?.firstName} ${item.employee?.lastName} ${item.employee?.terminationId ? ` ${$t('general.past_employee')}` : ''}`,\n          jobTitle: item.jobTitle?.name,\n          subunit: item.subunit?.name,\n          reviewPeriod: {\n            reviewPeriodStart: reviewListDateFormat(item.reviewPeriodStart),\n            reviewPeriodEnd: reviewListDateFormat(item.reviewPeriodEnd)\n          },\n          dueDate: reviewListDateFormat(item.dueDate),\n          status: item.overallStatus.statusId === 2 ? $t('performance.activated') : item.overallStatus.statusId === 3 ? $t('performance.in_progress') : $t('performance.completed'),\n          statusId: item.overallStatus.statusId\n        };\n      });\n    };\n    const defaultFilters = {\n      employee: null,\n      jobTitle: null,\n      subunit: null,\n      status: null,\n      fromDate: null,\n      toDate: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only')\n      }\n    };\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.fromDate && {\n        fromDate: props.fromDate\n      }),\n      ...(props.toDate && {\n        toDate: props.toDate\n      })\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.employee?.id,\n        jobTitleId: filters.value.jobTitle?.id,\n        subunitId: filters.value.subunit?.id,\n        statusId: filters.value.status?.statusId,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/employees/reviews');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: reviewListNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'employee',\n        title: this.$t('general.employee'),\n        slot: 'title',\n        sortField: 'employee.lastName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'jobTitle',\n        title: this.$t('general.job_title'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'subunit',\n        title: this.$t('general.sub_unit'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'reviewPeriod',\n        title: this.$t('performance.review_period'),\n        sortField: 'performanceReview.reviewPeriodStart',\n        style: {\n          flex: 1\n        },\n        cellRenderer: this.reviewPeriodCellRenderer\n      }, {\n        name: 'dueDate',\n        title: this.$t('performance.due_date'),\n        sortField: 'performanceReview.dueDate',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('performance.review_status'),\n        sortField: 'performanceReview.statusId',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'action',\n        slot: 'footer',\n        title: this.$t('general.actions'),\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.actionCellRenderer,\n        style: {\n          flex: 1\n        }\n      }],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n        fromDate: [validDateFormat(this.userDateFormat), startDateShouldBeBeforeEndDate(() => this.filters.toDate, this.$t('general.from_date_should_be_before_to_date'), {\n          allowSameDate: true\n        })],\n        toDate: [validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.filters.fromDate, this.$t('general.to_date_should_be_after_from_date'), {\n          allowSameDate: true\n        })]\n      }\n    };\n  },\n  methods: {\n    actionCellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.statusId === 4) {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.statusId === 4) {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd\n        }\n      };\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluateByAdmin/{id}', {\n        id: item.id\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","inject","navigate","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","shouldNotExceedCharLength","viewIcon","evaluateIcon","viewLabel","evaluateLabel","useSort","usePaginate","APIService","EmployeeAutocomplete","JobtitleDropdown","SubunitDropdown","ReviewStatusDropdown","usei18n","formatDate","parseDate","useDateFormat","useLocale","IncludeEmployeeDropdown","ReviewPeriodCell","tableScreenStateKey","defaultSortOrder","name","components","props","fromDate","type","String","required","default","toDate","setup","$t","jsDateFormat","userDateFormat","locale","reviewListDateFormat","date","reviewListNormalizer","data","map","item","id","employee","firstName","lastName","terminationId","jobTitle","subunit","reviewPeriod","reviewPeriodStart","reviewPeriodEnd","dueDate","status","overallStatus","statusId","defaultFilters","includeEmployees","param","label","filters","sortDefinition","sortField","sortOrder","onSort","serializedFilters","value","empNumber","jobTitleId","subunitId","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","headers","title","slot","style","flex","cellRenderer","reviewPeriodCellRenderer","cellType","actionCellRenderer","rules","allowSameDate","methods","row","cellConfig","screenState","screenType","view","onClick","onClickEvaluate","evaluate","header","args","cellData","component","filterItems"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\ReviewList.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('performance.employee_reviews')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"filterItems\">\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: filters.includeEmployees.param,\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <jobtitle-dropdown v-model=\"filters.jobTitle\" />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <subunit-dropdown v-model=\"filters.subunit\" />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <include-employee-dropdown v-model=\"filters.includeEmployees\" />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <review-status-dropdown v-model=\"filters.status\" />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.fromDate\"\n              :rules=\"rules.fromDate\"\n              :label=\"$t('general.from_date')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"filters.toDate\"\n              :rules=\"rules.toDate\"\n              :label=\"$t('general.to_date')\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"false\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref, inject} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {\n  viewIcon,\n  evaluateIcon,\n  viewLabel,\n  evaluateLabel,\n} from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport ReviewStatusDropdown from '@/orangehrmPerformancePlugin/components/ReviewStatusDropdown';\nimport usei18n from '@/core/util/composable/usei18n';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport {tableScreenStateKey} from '@ohrm/oxd';\n\nconst defaultSortOrder = {\n  'employee.lastName': 'DEFAULT',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'performanceReview.dueDate': 'DEFAULT',\n  'performanceReview.statusId': 'ASC',\n};\n\nexport default {\n  name: 'ReviewList',\n  components: {\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n    'review-status-dropdown': ReviewStatusDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  props: {\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n  },\n  setup(props) {\n    const {$t} = usei18n();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const reviewListDateFormat = (date) =>\n      formatDate(parseDate(date), jsDateFormat, {locale});\n\n    const reviewListNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          employee: `${item.employee?.firstName} ${item.employee?.lastName} ${\n            item.employee?.terminationId\n              ? ` ${$t('general.past_employee')}`\n              : ''\n          }`,\n          jobTitle: item.jobTitle?.name,\n          subunit: item.subunit?.name,\n          reviewPeriod: {\n            reviewPeriodStart: reviewListDateFormat(item.reviewPeriodStart),\n            reviewPeriodEnd: reviewListDateFormat(item.reviewPeriodEnd),\n          },\n          dueDate: reviewListDateFormat(item.dueDate),\n          status:\n            item.overallStatus.statusId === 2\n              ? $t('performance.activated')\n              : item.overallStatus.statusId === 3\n              ? $t('performance.in_progress')\n              : $t('performance.completed'),\n          statusId: item.overallStatus.statusId,\n        };\n      });\n    };\n\n    const defaultFilters = {\n      employee: null,\n      jobTitle: null,\n      subunit: null,\n      status: null,\n      fromDate: null,\n      toDate: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    };\n\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.fromDate && {fromDate: props.fromDate}),\n      ...(props.toDate && {toDate: props.toDate}),\n    });\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        empNumber: filters.value.employee?.id,\n        jobTitleId: filters.value.jobTitle?.id,\n        subunitId: filters.value.subunit?.id,\n        statusId: filters.value.status?.statusId,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/employees/reviews',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: reviewListNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'employee',\n          title: this.$t('general.employee'),\n          slot: 'title',\n          sortField: 'employee.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          style: {flex: 1},\n        },\n        {\n          name: 'subunit',\n          title: this.$t('general.sub_unit'),\n          style: {flex: 1},\n        },\n        {\n          name: 'reviewPeriod',\n          title: this.$t('performance.review_period'),\n          sortField: 'performanceReview.reviewPeriodStart',\n          style: {flex: 1},\n          cellRenderer: this.reviewPeriodCellRenderer,\n        },\n        {\n          name: 'dueDate',\n          title: this.$t('performance.due_date'),\n          sortField: 'performanceReview.dueDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('performance.review_status'),\n          sortField: 'performanceReview.statusId',\n          style: {flex: 1},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.actionCellRenderer,\n          style: {flex: 1},\n        },\n      ],\n      rules: {\n        employee: [shouldNotExceedCharLength(100), validSelection],\n        fromDate: [\n          validDateFormat(this.userDateFormat),\n          startDateShouldBeBeforeEndDate(\n            () => this.filters.toDate,\n            this.$t('general.from_date_should_be_before_to_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        toDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.filters.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n      },\n    };\n  },\n  methods: {\n    actionCellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.statusId === 4) {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.statusId === 4) {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd,\n        },\n      };\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluateByAdmin/{id}', {id: item.id});\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}