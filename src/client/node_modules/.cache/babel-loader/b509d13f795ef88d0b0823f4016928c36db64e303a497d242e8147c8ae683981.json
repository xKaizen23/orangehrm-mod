{"ast":null,"code":"import { computed, ref } from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer';\nexport default {\n  name: 'PostDetails',\n  components: {\n    'post-stats': PostStats,\n    'post-like': PostLikeButton,\n    'profile-image': ProfileImage,\n    'post-comment-container': PostCommentContainer\n  },\n  props: {\n    post: {\n      type: Object,\n      required: true\n    },\n    mobile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['like', 'close', 'createComment', 'deleteComment'],\n  setup(props, context) {\n    let loading = false;\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const readMore = ref(new String(props.post?.text).length < 500);\n    const {\n      updatePostLike\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const postDateTime = computed(() => {\n      const {\n        createdDate,\n        createdTime\n      } = props.post;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale\n      });\n    });\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.post.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false\n      });\n    });\n    const onClickClose = () => context.emit('close');\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n    const postClasses = computed(() => ({\n      'orangehrm-post-details-text': true,\n      '--truncate': readMore.value === false\n    }));\n    const onClickReadMore = () => {\n      readMore.value = !readMore.value;\n    };\n    return {\n      readMore,\n      postClasses,\n      onClickLike,\n      onClickClose,\n      postDateTime,\n      onClickReadMore,\n      employeeFullName\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","useLocale","APIService","formatDate","parseDate","useDateFormat","PostStats","ProfileImage","useBuzzAPIs","PostLikeButton","useEmployeeNameTranslate","PostCommentContainer","name","components","props","post","type","Object","required","mobile","Boolean","default","emits","setup","context","loading","locale","jsDateFormat","jsTimeFormat","$tEmpName","readMore","String","text","length","updatePostLike","window","appGlobal","baseUrl","postDateTime","createdDate","createdTime","utcDate","employeeFullName","employee","includeMiddle","excludePastEmpTag","onClickClose","emit","onClickLike","id","liked","then","postClasses","value","onClickReadMore"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostDetails.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-post-details\">\n    <oxd-icon-button\n      class=\"orangehrm-post-details-close\"\n      name=\"x\"\n      :with-container=\"false\"\n      @click=\"onClickClose\"\n    />\n    <div class=\"orangehrm-post-details-header\">\n      <profile-image :employee=\"post.employee\"></profile-image>\n      <div class=\"orangehrm-post-details-header-text\">\n        <oxd-text tag=\"p\" class=\"orangehrm-post-details-emp-name\">\n          {{ employeeFullName }}\n        </oxd-text>\n        <oxd-text tag=\"p\" class=\"orangehrm-post-details-time\">\n          {{ postDateTime }}\n        </oxd-text>\n      </div>\n    </div>\n    <oxd-text v-if=\"post.text\" tag=\"p\" :class=\"postClasses\">\n      {{ post.text }}\n    </oxd-text>\n    <oxd-text\n      v-show=\"!readMore\"\n      tag=\"p\"\n      class=\"orangehrm-post-details-readmore\"\n      @click=\"onClickReadMore\"\n    >\n      {{ $t('buzz.read_more') }}\n    </oxd-text>\n    <oxd-divider></oxd-divider>\n    <div class=\"orangehrm-post-details-actions\">\n      <post-like :like=\"post.liked\" @click=\"onClickLike\"></post-like>\n      <post-stats :post=\"post\" :mobile=\"mobile\"></post-stats>\n    </div>\n    <oxd-divider></oxd-divider>\n    <post-comment-container\n      :post-id=\"post.id\"\n      :employee=\"post.employee\"\n      @create=\"$emit('createComment', $event)\"\n      @delete=\"$emit('deleteComment', $event)\"\n    ></post-comment-container>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer';\n\nexport default {\n  name: 'PostDetails',\n\n  components: {\n    'post-stats': PostStats,\n    'post-like': PostLikeButton,\n    'profile-image': ProfileImage,\n    'post-comment-container': PostCommentContainer,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n    mobile: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: ['like', 'close', 'createComment', 'deleteComment'],\n\n  setup(props, context) {\n    let loading = false;\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const readMore = ref(new String(props.post?.text).length < 500);\n    const {updatePostLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const postDateTime = computed(() => {\n      const {createdDate, createdTime} = props.post;\n\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale,\n      });\n    });\n\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.post.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false,\n      });\n    });\n\n    const onClickClose = () => context.emit('close');\n\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n\n    const postClasses = computed(() => ({\n      'orangehrm-post-details-text': true,\n      '--truncate': readMore.value === false,\n    }));\n\n    const onClickReadMore = () => {\n      readMore.value = !readMore.value;\n    };\n\n    return {\n      readMore,\n      postClasses,\n      onClickLike,\n      onClickClose,\n      postDateTime,\n      onClickReadMore,\n      employeeFullName,\n    };\n  },\n};\n</script>\n\n<style src=\"./post-details.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}