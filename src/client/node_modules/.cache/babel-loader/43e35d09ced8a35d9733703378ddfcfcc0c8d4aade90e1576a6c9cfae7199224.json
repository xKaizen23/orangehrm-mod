{"ast":null,"code":"import { ref, computed, onBeforeMount } from 'vue';\nimport { navigate } from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage.vue';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  name: 'BuzzLatestPostWidget',\n  components: {\n    'base-widget': BaseWidget,\n    'video-frame': VideoFrame,\n    'profile-image': ProfileImage\n  },\n  setup() {\n    const posts = ref([]);\n    const isLoading = ref(false);\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const {\n      fetchPosts\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const isEmpty = computed(() => posts.value.length === 0);\n    const onClickPost = () => navigate('/buzz/viewBuzz');\n    onBeforeMount(() => {\n      isLoading.value = true;\n      fetchPosts(5, 0, 'DESC', 'share.createdAtUtc').then(response => {\n        const {\n          data\n        } = response.data;\n        posts.value = data.map(post => {\n          const {\n            employee,\n            createdDate,\n            createdTime,\n            originalPost\n          } = post;\n          const postVideoSrc = post.video?.link || null;\n          const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n          const dateTime = formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n            locale\n          });\n          const employeeFullName = $tEmpName(employee, {\n            includeMiddle: true,\n            excludePastEmpTag: false\n          });\n          const postImgSrc = Array.isArray(post?.photoIds) ? `${window.appGlobal.baseUrl}/buzz/photo/${post.photoIds[0]}` : null;\n          const text = originalPost ? originalPost.text : post.text;\n          return {\n            ...post,\n            text,\n            dateTime,\n            postImgSrc,\n            postVideoSrc,\n            employeeFullName\n          };\n        });\n      }).finally(() => {\n        isLoading.value = false;\n      });\n    });\n    return {\n      posts,\n      isEmpty,\n      isLoading,\n      onClickPost\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","computed","onBeforeMount","navigate","useLocale","APIService","formatDate","parseDate","useDateFormat","VideoFrame","useBuzzAPIs","ProfileImage","BaseWidget","useEmployeeNameTranslate","name","components","setup","posts","isLoading","locale","jsDateFormat","jsTimeFormat","$tEmpName","fetchPosts","window","appGlobal","baseUrl","isEmpty","value","length","onClickPost","then","response","data","map","post","employee","createdDate","createdTime","originalPost","postVideoSrc","video","link","utcDate","dateTime","employeeFullName","includeMiddle","excludePastEmpTag","postImgSrc","Array","isArray","photoIds","text","finally"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmDashboardPlugin\\components\\BuzzLatestPostWidget.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <base-widget\n    icon=\"camera-fill\"\n    :empty=\"isEmpty\"\n    :loading=\"isLoading\"\n    :title=\"$t('dashboard.buzz_latest_posts')\"\n    :empty-text=\"$t('dashboard.no_posts_added')\"\n  >\n    <oxd-grid class=\"orangehrm-buzz-widget\" :cols=\"1\">\n      <oxd-grid-item\n        v-for=\"post in posts\"\n        :key=\"post\"\n        class=\"orangehrm-buzz-widget-card\"\n      >\n        <div class=\"orangehrm-buzz-widget-header\" @click=\"onClickPost\">\n          <profile-image :employee=\"post.employee\"></profile-image>\n          <div class=\"orangehrm-buzz-widget-header-text\">\n            <oxd-text tag=\"p\" class=\"orangehrm-buzz-widget-header-emp\">\n              {{ post.employeeFullName }}\n            </oxd-text>\n            <oxd-text tag=\"p\" class=\"orangehrm-buzz-widget-header-time\">\n              {{ post.dateTime }}\n            </oxd-text>\n          </div>\n        </div>\n        <oxd-divider class=\"orangehrm-buzz-widget-divider\" />\n        <oxd-text v-if=\"post.text\" tag=\"p\" class=\"orangehrm-buzz-widget-body\">\n          {{ post.text }}\n        </oxd-text>\n        <img\n          v-if=\"post.postImgSrc\"\n          :src=\"post.postImgSrc\"\n          class=\"orangehrm-buzz-widget-picture\"\n        />\n        <video-frame v-if=\"post.postVideoSrc\" :video-src=\"post.postVideoSrc\">\n        </video-frame>\n      </oxd-grid-item>\n    </oxd-grid>\n  </base-widget>\n</template>\n\n<script>\nimport {ref, computed, onBeforeMount} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage.vue';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  name: 'BuzzLatestPostWidget',\n\n  components: {\n    'base-widget': BaseWidget,\n    'video-frame': VideoFrame,\n    'profile-image': ProfileImage,\n  },\n\n  setup() {\n    const posts = ref([]);\n    const isLoading = ref(false);\n    const {locale} = useLocale();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const {fetchPosts} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const isEmpty = computed(() => posts.value.length === 0);\n\n    const onClickPost = () => navigate('/buzz/viewBuzz');\n\n    onBeforeMount(() => {\n      isLoading.value = true;\n      fetchPosts(5, 0, 'DESC', 'share.createdAtUtc')\n        .then((response) => {\n          const {data} = response.data;\n          posts.value = data.map((post) => {\n            const {employee, createdDate, createdTime, originalPost} = post;\n\n            const postVideoSrc = post.video?.link || null;\n            const utcDate = parseDate(\n              `${createdDate} ${createdTime} +00:00`,\n              'yyyy-MM-dd HH:mm xxx',\n            );\n            const dateTime = formatDate(\n              utcDate,\n              `${jsDateFormat} ${jsTimeFormat}`,\n              {\n                locale,\n              },\n            );\n            const employeeFullName = $tEmpName(employee, {\n              includeMiddle: true,\n              excludePastEmpTag: false,\n            });\n            const postImgSrc = Array.isArray(post?.photoIds)\n              ? `${window.appGlobal.baseUrl}/buzz/photo/${post.photoIds[0]}`\n              : null;\n            const text = originalPost ? originalPost.text : post.text;\n\n            return {\n              ...post,\n              text,\n              dateTime,\n              postImgSrc,\n              postVideoSrc,\n              employeeFullName,\n            };\n          });\n        })\n        .finally(() => {\n          isLoading.value = false;\n        });\n    });\n\n    return {\n      posts,\n      isEmpty,\n      isLoading,\n      onClickPost,\n    };\n  },\n};\n</script>\n\n<style src=\"./buzz-latest-post-widget.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}