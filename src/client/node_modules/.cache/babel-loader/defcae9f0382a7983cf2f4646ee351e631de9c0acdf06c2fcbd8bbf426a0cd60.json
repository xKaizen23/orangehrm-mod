{"ast":null,"code":"import { required, shouldNotExceedCharLength, validSelection } from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport RequiredText from '@/core/components/labels/RequiredText';\nexport default {\n  name: 'EmployeeRecords',\n  components: {\n    'required-text': RequiredText,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    includeEmployeesParam: {\n      type: String,\n      required: true\n    },\n    titleLabel: {\n      type: String,\n      required: true\n    },\n    autocompleteLabel: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['search'],\n  data() {\n    return {\n      employee: null,\n      rules: {\n        employee: [required, shouldNotExceedCharLength(100), validSelection]\n      }\n    };\n  },\n  methods: {\n    emitEmployee() {\n      this.$emit('search', this.employee?._employee);\n    }\n  }\n};","map":{"version":3,"mappings":"AAqDA,SACEA,QAAQ,EACRC,yBAAyB,EACzBC,cAAc,QACT,8BAA8B;AACrC,OAAOC,oBAAmB,MAAO,+CAA+C;AAChF,OAAOC,YAAW,MAAO,uCAAuC;AAEhE,eAAe;EACbC,IAAI,EAAE,iBAAiB;EAEvBC,UAAU,EAAE;IACV,eAAe,EAAEF,YAAY;IAC7B,uBAAuB,EAAED;EAC3B,CAAC;EAEDI,KAAK,EAAE;IACLC,qBAAqB,EAAE;MACrBC,IAAI,EAAEC,MAAM;MACZV,QAAQ,EAAE;IACZ,CAAC;IACDW,UAAU,EAAE;MACVF,IAAI,EAAEC,MAAM;MACZV,QAAQ,EAAE;IACZ,CAAC;IACDY,iBAAiB,EAAE;MACjBH,IAAI,EAAEC,MAAM;MACZV,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDa,KAAK,EAAE,CAAC,QAAQ,CAAC;EAEjBC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;QACLD,QAAQ,EAAE,CAACf,QAAQ,EAAEC,yBAAyB,CAAC,GAAG,CAAC,EAAEC,cAAc;MACrE;IACF,CAAC;EACH,CAAC;EAEDe,OAAO,EAAE;IACPC,YAAY,GAAG;MACb,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACJ,QAAQ,EAAEK,SAAS,CAAC;IAChD;EACF;AACF,CAAC","names":["required","shouldNotExceedCharLength","validSelection","EmployeeAutocomplete","RequiredText","name","components","props","includeEmployeesParam","type","String","titleLabel","autocompleteLabel","emits","data","employee","rules","methods","emitEmployee","$emit","_employee"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmMaintenancePlugin\\components\\EmployeeRecords.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ titleLabel }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form @submit=\"emitEmployee\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"employee\"\n              :rules=\"rules.employee\"\n              :params=\"{includeEmployees: includeEmployeesParam}\"\n              :label=\"autocompleteLabel\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.search')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport RequiredText from '@/core/components/labels/RequiredText';\n\nexport default {\n  name: 'EmployeeRecords',\n\n  components: {\n    'required-text': RequiredText,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n\n  props: {\n    includeEmployeesParam: {\n      type: String,\n      required: true,\n    },\n    titleLabel: {\n      type: String,\n      required: true,\n    },\n    autocompleteLabel: {\n      type: String,\n      required: true,\n    },\n  },\n\n  emits: ['search'],\n\n  data() {\n    return {\n      employee: null,\n      rules: {\n        employee: [required, shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n\n  methods: {\n    emitEmployee() {\n      this.$emit('search', this.employee?._employee);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}