{"ast":null,"code":"import { navigate } from '@/core/util/helper/navigation';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport ReviewerAutoComplete from '@/orangehrmPerformancePlugin/components/ReviewerAutoComplete';\nimport { required, validSelection, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nconst trackerModel = {\n  name: null,\n  employee: null,\n  reviewers: []\n};\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'reviewer-autocomplete': ReviewerAutoComplete\n  },\n  props: {\n    performanceTrackerId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/config/trackers');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      tracker: {\n        ...trackerModel\n      },\n      isReadOnly: false,\n      rules: {\n        tracker: [required, shouldNotExceedCharLength(200)],\n        employee: [required, validSelection, value => {\n          if (value === null) {\n            return true;\n          }\n          const valid = this.tracker.reviewers.findIndex(reviewer => {\n            return reviewer.id === value.id;\n          });\n          if (valid == -1) {\n            return true;\n          }\n          return this.$t('performance.employee_cannot_be_assigned_as_his_own_reviewer');\n        }],\n        reviewers: [required, validSelection]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.performanceTrackerId) //performance-tracker-id\n    .then(response => {\n      const {\n        data\n      } = response.data;\n      this.isReadOnly = data.ownerEditable === false;\n      this.tracker.id = data.id;\n      this.tracker.name = data.trackerName;\n      this.tracker.employee = data.employee ? {\n        id: data.employee.empNumber,\n        label: `${data.employee.firstName} ${data.employee.middleName} ${data.employee.lastName}`,\n        isPastEmployee: data.employee.terminationId ? true : false\n      } : null;\n      this.tracker.reviewers = data.reviewers.map(employee => {\n        return {\n          id: employee.empNumber,\n          label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n          isPastEmployee: employee.terminationId ? true : false\n        };\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/viewPerformanceTracker');\n    },\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        trackerName: this.tracker.name.trim(),\n        empNumber: this.tracker.employee.id,\n        reviewerEmpNumbers: this.tracker.reviewers.map(employee => employee.id)\n      };\n      this.http.update(this.performanceTrackerId, payload).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","EmployeeAutocomplete","ReviewerAutoComplete","required","validSelection","shouldNotExceedCharLength","APIService","trackerModel","name","employee","reviewers","components","props","performanceTrackerId","type","Number","setup","http","window","appGlobal","baseUrl","data","isLoading","tracker","isReadOnly","rules","value","valid","findIndex","reviewer","id","$t","beforeMount","get","then","response","ownerEditable","trackerName","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId","map","finally","methods","onCancel","onSave","payload","trim","reviewerEmpNumbers","update","$toast","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\EditPerformanceTracker.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('performance.edit_performance_tracker') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"tracker.name\"\n                :rules=\"rules.tracker\"\n                :label=\"$t('performance.tracker_name')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"tracker.employee\"\n                :rules=\"rules.employee\"\n                :readonly=\"isReadOnly\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <reviewer-autocomplete\n                v-model=\"tracker.reviewers\"\n                :rules=\"rules.reviewers\"\n                :exclude-employee=\"tracker.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport ReviewerAutoComplete from '@/orangehrmPerformancePlugin/components/ReviewerAutoComplete';\nimport {\n  required,\n  validSelection,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\n\nconst trackerModel = {\n  name: null,\n  employee: null,\n  reviewers: [],\n};\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'reviewer-autocomplete': ReviewerAutoComplete,\n  },\n  props: {\n    performanceTrackerId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/config/trackers',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      tracker: {...trackerModel},\n      isReadOnly: false,\n      rules: {\n        tracker: [required, shouldNotExceedCharLength(200)],\n        employee: [\n          required,\n          validSelection,\n          (value) => {\n            if (value === null) {\n              return true;\n            }\n            const valid = this.tracker.reviewers.findIndex((reviewer) => {\n              return reviewer.id === value.id;\n            });\n            if (valid == -1) {\n              return true;\n            }\n            return this.$t(\n              'performance.employee_cannot_be_assigned_as_his_own_reviewer',\n            );\n          },\n        ],\n        reviewers: [required, validSelection],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.performanceTrackerId) //performance-tracker-id\n      .then((response) => {\n        const {data} = response.data;\n        this.isReadOnly = data.ownerEditable === false;\n        this.tracker.id = data.id;\n        this.tracker.name = data.trackerName;\n        this.tracker.employee = data.employee\n          ? {\n              id: data.employee.empNumber,\n              label: `${data.employee.firstName} ${data.employee.middleName} ${data.employee.lastName}`,\n              isPastEmployee: data.employee.terminationId ? true : false,\n            }\n          : null;\n        this.tracker.reviewers = data.reviewers.map((employee) => {\n          return {\n            id: employee.empNumber,\n            label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n            isPastEmployee: employee.terminationId ? true : false,\n          };\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/performance/viewPerformanceTracker');\n    },\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        trackerName: this.tracker.name.trim(),\n        empNumber: this.tracker.employee.id,\n        reviewerEmpNumbers: this.tracker.reviewers.map(\n          (employee) => employee.id,\n        ),\n      };\n      this.http\n        .update(this.performanceTrackerId, payload)\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}