{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { OxdAlert, OxdSwitchInput } from '@ohrm/oxd';\nconst initialOAuthClient = {\n  id: null,\n  name: '',\n  redirectUri: '',\n  enabled: true,\n  clientId: null,\n  clientSecret: '********',\n  confidential: false\n};\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'oxd-alert': OxdAlert\n  },\n  props: {\n    id: {\n      type: Number,\n      default: null\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/oauth-clients');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      isSecretPlain: false,\n      oAuthClient: {\n        ...initialOAuthClient\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(80)],\n        redirectUri: [required, shouldNotExceedCharLength(2000)]\n      }\n    };\n  },\n  computed: {\n    editMode() {\n      return this.oAuthClient.clientId !== null;\n    },\n    showClientSecret() {\n      return this.oAuthClient.confidential === true;\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.getClient().then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => item.name === v);\n        if (index > -1) {\n          const {\n            id\n          } = data[index];\n          return id !== this.id ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    getClient() {\n      if (this.id !== null) {\n        return this.http.get(this.id).then(response => {\n          const {\n            data\n          } = response.data;\n          this.setDataFromResponse(data);\n\n          // Fetch list data for unique test\n          return this.http.getAll({\n            limit: 0\n          });\n        });\n      }\n      return this.http.getAll({\n        limit: 0\n      });\n    },\n    onCancel() {\n      navigate('/admin/registerOAuthClient');\n    },\n    onSave() {\n      this.isLoading = true;\n      (this.editMode ? this.update() : this.create()).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    create() {\n      return this.http.create({\n        name: this.oAuthClient.name,\n        redirectUri: this.oAuthClient.redirectUri,\n        enabled: this.oAuthClient.enabled,\n        confidential: this.oAuthClient.confidential\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        this.setDataFromResponse(data);\n        this.oAuthClient.clientSecret = meta.clientSecret;\n        this.isSecretPlain = true;\n        return this.$toast.saveSuccess();\n      });\n    },\n    update() {\n      return this.http.update(this.oAuthClient.id, {\n        name: this.oAuthClient.name,\n        redirectUri: this.oAuthClient.redirectUri,\n        enabled: this.oAuthClient.enabled,\n        confidential: this.oAuthClient.confidential\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        this.setDataFromResponse(data);\n        if (data.confidential === true && meta.clientSecret !== null) {\n          this.oAuthClient.clientSecret = meta.clientSecret;\n          this.isSecretPlain = true;\n        }\n        return this.$toast.updateSuccess();\n      });\n    },\n    setDataFromResponse(data) {\n      this.oAuthClient.id = data.id;\n      this.oAuthClient.name = data.name;\n      this.oAuthClient.redirectUri = data.redirectUri;\n      this.oAuthClient.enabled = data.enabled;\n      this.oAuthClient.clientId = data.clientId;\n      this.oAuthClient.confidential = data.confidential;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","shouldNotExceedCharLength","OxdAlert","OxdSwitchInput","initialOAuthClient","id","name","redirectUri","enabled","clientId","clientSecret","confidential","components","props","type","Number","default","setup","http","window","appGlobal","baseUrl","data","isLoading","isSecretPlain","oAuthClient","rules","computed","editMode","showClientSecret","created","getClient","then","response","push","v","index","findIndex","item","$t","finally","methods","get","setDataFromResponse","getAll","limit","onCancel","onSave","update","create","meta","$toast","saveSuccess","updateSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmCoreOAuthPlugin\\pages\\registerOAuthClient\\SaveOAuthClient.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{\n          editMode\n            ? $t('admin.edit_oauth_client')\n            : $t('admin.add_oauth_client')\n        }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"oAuthClient.name\"\n                :label=\"$t('general.name')\"\n                :rules=\"rules.name\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item class=\"--offset-row-2\">\n              <oxd-input-field\n                v-model=\"oAuthClient.redirectUri\"\n                :label=\"$t('admin.redirect_uri')\"\n                :rules=\"rules.redirectUri\"\n                required\n              />\n            </oxd-grid-item>\n            <template v-if=\"editMode\">\n              <oxd-grid-item class=\"--offset-row-3\">\n                <oxd-input-field\n                  v-model=\"oAuthClient.clientId\"\n                  :label=\"$t('admin.client_id')\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item v-if=\"showClientSecret\" class=\"--offset-row-4\">\n                <oxd-alert\n                  v-if=\"isSecretPlain\"\n                  type=\"warn\"\n                  :show=\"true\"\n                  :message=\"$t('admin.client_secret_warning_message')\"\n                ></oxd-alert>\n                <oxd-input-field\n                  v-model=\"oAuthClient.clientSecret\"\n                  :label=\"$t('admin.client_secret')\"\n                  disabled\n                />\n              </oxd-grid-item>\n            </template>\n            <oxd-grid-item class=\"--offset-row-5\">\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item class=\"orangehrm-field-row\">\n                  <oxd-text tag=\"p\" class=\"orangehrm-field-label\">\n                    {{ $t('admin.enable_client') }}\n                  </oxd-text>\n                  <oxd-switch-input v-model=\"oAuthClient.enabled\" />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n            <oxd-grid-item v-if=\"!editMode\" class=\"--offset-row-6\">\n              <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n                <oxd-grid-item class=\"orangehrm-field-row\">\n                  <oxd-text tag=\"p\" class=\"orangehrm-field-label\">\n                    {{ $t('admin.confidential_client') }}\n                  </oxd-text>\n                  <oxd-switch-input v-model=\"oAuthClient.confidential\" />\n                </oxd-grid-item>\n              </oxd-grid>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdAlert, OxdSwitchInput} from '@ohrm/oxd';\n\nconst initialOAuthClient = {\n  id: null,\n  name: '',\n  redirectUri: '',\n  enabled: true,\n  clientId: null,\n  clientSecret: '********',\n  confidential: false,\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'oxd-alert': OxdAlert,\n  },\n  props: {\n    id: {\n      type: Number,\n      default: null,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/oauth-clients',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      isSecretPlain: false,\n      oAuthClient: {...initialOAuthClient},\n      rules: {\n        name: [required, shouldNotExceedCharLength(80)],\n        redirectUri: [required, shouldNotExceedCharLength(2000)],\n      },\n    };\n  },\n\n  computed: {\n    editMode() {\n      return this.oAuthClient.clientId !== null;\n    },\n    showClientSecret() {\n      return this.oAuthClient.confidential === true;\n    },\n  },\n\n  created() {\n    this.isLoading = true;\n    this.getClient()\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.name.push((v) => {\n          const index = data.findIndex((item) => item.name === v);\n          if (index > -1) {\n            const {id} = data[index];\n            return id !== this.id ? this.$t('general.already_exists') : true;\n          } else {\n            return true;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    getClient() {\n      if (this.id !== null) {\n        return this.http.get(this.id).then((response) => {\n          const {data} = response.data;\n          this.setDataFromResponse(data);\n\n          // Fetch list data for unique test\n          return this.http.getAll({limit: 0});\n        });\n      }\n      return this.http.getAll({limit: 0});\n    },\n    onCancel() {\n      navigate('/admin/registerOAuthClient');\n    },\n    onSave() {\n      this.isLoading = true;\n      (this.editMode ? this.update() : this.create()).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    create() {\n      return this.http\n        .create({\n          name: this.oAuthClient.name,\n          redirectUri: this.oAuthClient.redirectUri,\n          enabled: this.oAuthClient.enabled,\n          confidential: this.oAuthClient.confidential,\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          this.setDataFromResponse(data);\n          this.oAuthClient.clientSecret = meta.clientSecret;\n          this.isSecretPlain = true;\n\n          return this.$toast.saveSuccess();\n        });\n    },\n    update() {\n      return this.http\n        .update(this.oAuthClient.id, {\n          name: this.oAuthClient.name,\n          redirectUri: this.oAuthClient.redirectUri,\n          enabled: this.oAuthClient.enabled,\n          confidential: this.oAuthClient.confidential,\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          this.setDataFromResponse(data);\n          if (data.confidential === true && meta.clientSecret !== null) {\n            this.oAuthClient.clientSecret = meta.clientSecret;\n            this.isSecretPlain = true;\n          }\n\n          return this.$toast.updateSuccess();\n        });\n    },\n    setDataFromResponse(data) {\n      this.oAuthClient.id = data.id;\n      this.oAuthClient.name = data.name;\n      this.oAuthClient.redirectUri = data.redirectUri;\n      this.oAuthClient.enabled = data.enabled;\n      this.oAuthClient.clientId = data.clientId;\n      this.oAuthClient.confidential = data.confidential;\n    },\n  },\n};\n</script>\n\n<style src=\"./oauth-client.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}