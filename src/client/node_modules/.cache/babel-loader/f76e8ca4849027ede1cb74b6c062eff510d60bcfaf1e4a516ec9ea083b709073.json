{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_reference_id_autocomplete = _resolveComponent(\"reference-id-autocomplete\");\n  const _component_claim_event_dropdown = _resolveComponent(\"claim-event-dropdown\");\n  const _component_status_dropdown = _resolveComponent(\"status-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_include_employee_dropdown = _resolveComponent(\"include-employee-dropdown\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('claim.employee_claims')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.employee,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n              rules: $data.rules.employee,\n              params: {\n                includeEmployees: 'currentAndPast'\n              }\n            }, null, 8, [\"modelValue\", \"rules\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_reference_id_autocomplete, {\n              modelValue: $setup.filters.referenceId,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.referenceId = $event),\n              \"is-assigned\": true,\n              label: _ctx.$t('claim.reference_id')\n            }, null, 8, [\"modelValue\", \"label\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_claim_event_dropdown, {\n              modelValue: $setup.filters.claimEvent,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.claimEvent = $event),\n              label: _ctx.$t('claim.event_name')\n            }, null, 8, [\"modelValue\", \"label\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_status_dropdown, {\n              modelValue: $setup.filters.status,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.status = $event),\n              label: _ctx.$t('general.status')\n            }, null, 8, [\"modelValue\", \"label\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.fromDate,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.fromDate = $event),\n              label: _ctx.$t('general.from_date'),\n              rules: $data.rules.date,\n              years: _ctx.yearsArray\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_date_input, {\n              modelValue: $setup.filters.toDate,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.filters.toDate = $event),\n              label: _ctx.$t('general.to_date'),\n              rules: $data.rules.toDate,\n              years: _ctx.yearsArray\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"years\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_include_employee_dropdown, {\n              modelValue: $setup.filters.includeEmployees,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.filters.includeEmployees = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset'),\n          onClick: $options.onClickReset\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n          class: \"orangehrm-left-space\",\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.search'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_button, {\n    label: _ctx.$t('claim.assign_claim'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])]), _createVNode(_component_table_header, {\n    total: $setup.total,\n    loading: $setup.isLoading\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[7] || (_cache[7] = $event => $setup.sortDefinition = $event),\n    items: $setup.items.data,\n    headers: $data.headers,\n    selectable: false,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"order\", \"items\", \"headers\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[8] || (_cache[8] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])])], 64);\n}","map":{"version":3,"mappings":";gCA8FEA,oBAAM;;EACDC,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EASlCA,KAAK,EAAC;AAAqB;;EAW3BA,KAAK,EAAC;AAA4B;;;;;;;;;;;;;;;;;;;6DAhGzCC,aAyEmBC;IAzEA,cAAY,EAAEC,OAAE;;sBACjC,MAuEW,CAvEXF,aAuEWG;MAvEAC,aAAY,EAAEC;IAAW;wBAClC,MA+Be,CA/BfL,aA+BeM;0BA9Bb,MA6BW,CA7BXN,aA6BWO;UA7BAC,IAAI,EAAE,CAAC;UAAET,KAAK,EAAC;;4BACxB,MAQgB,CARhBC,aAQgBS;8BAPd,MAME,CANFT,aAMEU;0BALSC,cAAO,CAACC,QAAQ;yEAAhBD,cAAO,CAACC,QAAQ;cACxBC,KAAK,EAAEC,WAAK,CAACF,QAAQ;cACrBG,MAAM,EAAE;;;;;cAKbf,aAMgBS;8BALd,MAIE,CAJFT,aAIEgB;0BAHSL,cAAO,CAACM,WAAW;yEAAnBN,cAAO,CAACM,WAAW;cAC3B,aAAW,EAAE,IAAI;cACjBC,KAAK,EAAEhB,OAAE;;;cAGdF,aAKgBS;8BAJd,MAGE,CAHFT,aAGEmB;0BAFSR,cAAO,CAACS,UAAU;yEAAlBT,cAAO,CAACS,UAAU;cAC1BF,KAAK,EAAEhB,OAAE;;;cAGdF,aAKgBS;8BAJd,MAGE,CAHFT,aAGEqB;0BAFSV,cAAO,CAACW,MAAM;yEAAdX,cAAO,CAACW,MAAM;cACtBJ,KAAK,EAAEhB,OAAE;;;;;;;UAKlBF,aAuBeM;0BAtBb,MAqBW,CArBXN,aAqBWO;UArBAC,IAAI,EAAE,CAAC;UAAET,KAAK,EAAC;;4BACxB,MAOgB,CAPhBC,aAOgBS;8BANd,MAKE,CALFT,aAKEuB;0BAJSZ,cAAO,CAACa,QAAQ;yEAAhBb,cAAO,CAACa,QAAQ;cACxBN,KAAK,EAAEhB,OAAE;cACTW,KAAK,EAAEC,WAAK,CAACW,IAAI;cACjBC,KAAK,EAAExB;;;cAGZF,aAOgBS;8BANd,MAKE,CALFT,aAKEuB;0BAJSZ,cAAO,CAACgB,MAAM;yEAAdhB,cAAO,CAACgB,MAAM;cACtBT,KAAK,EAAEhB,OAAE;cACTW,KAAK,EAAEC,WAAK,CAACa,MAAM;cACnBD,KAAK,EAAExB;;;cAGZF,aAGgBS;8BAFd,MAC4B,CAD5BT,aAC4B4B;0BADQjB,cAAO,CAACkB,gBAAgB;yEAAxBlB,cAAO,CAACkB,gBAAgB;;;;;;;UAKlE7B,aAAe8B,yBACf9B,aAYmB+B;0BAXjB,MAIE,CAJF/B,aAIEgC;UAHA,cAAY,EAAC,OAAO;UACnBd,KAAK,EAAEhB,OAAE;UACT+B,OAAK,EAAE5B;2CAEVL,aAKEgC;UAJAjC,KAAK,EAAC,sBAAsB;UAC5B,cAAY,EAAC,WAAW;UACvBmB,KAAK,EAAEhB,OAAE;UACVgC,IAAI,EAAC;;;;;;;2BAKbC,UAAM,EACNrC,oBA4BM,OA5BNsC,UA4BM,GA3BJtC,oBAOM,OAPNuC,UAOM,GANJrC,aAKEgC;IAJCd,KAAK,EAAEhB,OAAE;IACV,WAAS,EAAC,MAAM;IAChB,cAAY,EAAC,WAAW;IACvB+B,OAAK,EAAE5B;uCAGZL,aAAoDsC;IAArCC,KAAK,EAAE5B,YAAK;IAAG6B,OAAO,EAAE7B;qCACvCb,oBAUM,OAVN2C,UAUM,GATJzC,aAQE0C;IAPQC,KAAK,EAAEhC,qBAAc;0DAAdA,qBAAc;IAC5BiC,KAAK,EAAEjC,YAAK,CAACkC,IAAI;IACjBC,OAAO,EAAEhC,aAAO;IAChBiC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,KAAK;IAChBR,OAAO,EAAE7B,gBAAS;IACnB,eAAa,EAAC;2DAGlBb,oBAMM,OANNmD,UAMM,GAJItC,oBAAa,kBADrBuC,aAIEC;;IAFQC,OAAO,EAAEzC,kBAAW;4DAAXA,kBAAW;IAC3B0C,MAAM,EAAE1C","names":["_createElementVNode","class","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","employee","rules","$data","params","_component_reference_id_autocomplete","referenceId","label","_component_claim_event_dropdown","claimEvent","_component_status_dropdown","status","_component_date_input","fromDate","date","years","toDate","_component_include_employee_dropdown","includeEmployees","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","onClick","type","_hoisted_1","_hoisted_2","_hoisted_3","_component_table_header","total","loading","_hoisted_4","_component_oxd_card_table","order","items","data","headers","selectable","clickable","_hoisted_5","_createBlock","_component_oxd_pagination","current","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\employeeClaims\\EmployeeClaims.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-table-filter :filter-title=\"$t('claim.employee_claims')\">\n    <oxd-form @submit-valid=\"filterItems\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: 'currentAndPast',\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <reference-id-autocomplete\n              v-model=\"filters.referenceId\"\n              :is-assigned=\"true\"\n              :label=\"$t('claim.reference_id')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <claim-event-dropdown\n              v-model=\"filters.claimEvent\"\n              :label=\"$t('claim.event_name')\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <status-dropdown\n              v-model=\"filters.status\"\n              :label=\"$t('general.status')\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <date-input\n              v-model=\"filters.fromDate\"\n              :label=\"$t('general.from_date')\"\n              :rules=\"rules.date\"\n              :years=\"yearsArray\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"filters.toDate\"\n              :label=\"$t('general.to_date')\"\n              :rules=\"rules.toDate\"\n              :years=\"yearsArray\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <include-employee-dropdown v-model=\"filters.includeEmployees\">\n            </include-employee-dropdown>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions>\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.reset')\"\n          @click=\"onClickReset\"\n        />\n        <oxd-button\n          class=\"orangehrm-left-space\"\n          display-type=\"secondary\"\n          :label=\"$t('general.search')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-table-filter>\n  <br />\n  <div class=\"orangehrm-paper-container\">\n    <div class=\"orangehrm-header-container\">\n      <oxd-button\n        :label=\"$t('claim.assign_claim')\"\n        icon-name=\"plus\"\n        display-type=\"secondary\"\n        @click=\"onClickAdd\"\n      />\n    </div>\n    <table-header :total=\"total\" :loading=\"isLoading\" />\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:order=\"sortDefinition\"\n        :items=\"items.data\"\n        :headers=\"headers\"\n        :selectable=\"false\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {ref, computed} from 'vue';\nimport {navigate} from '@/core/util/helper/navigation';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport ReferenceIdAutocomplete from '@/orangehrmClaimPlugin/components/ReferenceIdAutocomplete.vue';\nimport ClaimEventDropdown from '@/orangehrmClaimPlugin/components/ClaimEventDropdown.vue';\nimport StatusDropdown from '@/orangehrmClaimPlugin/components/StatusDropdown.vue';\nimport {\n  shouldNotExceedCharLength,\n  validDateFormat,\n} from '@/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport {\n  validSelection,\n  endDateShouldBeAfterStartDate,\n} from '@/core/util/validation/rules';\nimport IncludeEmployeeDropdownVue from '@ohrm/core/components/dropdown/IncludeEmployeeDropdown.vue';\nimport usei18n from '@/core/util/composable/usei18n';\n\nconst defaultFilters = {\n  referenceId: '',\n  employee: null,\n  claimEvent: null,\n  status: null,\n  fromDate: null,\n  toDate: null,\n};\n\nconst defaultSortOrder = {\n  'claimRequest.referenceId': 'DESC',\n  'employee.firstName': 'ASC',\n  'claimEvent.name': 'ASC',\n  'claimRequest.status': 'ASC',\n  'claimRequest.submittedDate': 'ASC',\n};\n\nexport default {\n  components: {\n    'reference-id-autocomplete': ReferenceIdAutocomplete,\n    'claim-event-dropdown': ClaimEventDropdown,\n    'status-dropdown': StatusDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'include-employee-dropdown': IncludeEmployeeDropdownVue,\n  },\n  props: {\n    empNumber: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup() {\n    const {$t} = usei18n();\n    const filters = ref({\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n      ...defaultFilters,\n    });\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n\n    const serializedFilters = computed(() => {\n      return {\n        referenceId:\n          typeof filters.value.referenceId === 'object' &&\n          filters.value.referenceId\n            ? filters.value.referenceId.id\n            : typeof filters.value.referenceId === 'string'\n            ? filters.value.referenceId\n            : null,\n        empNumber: filters.value.employee?.id,\n        eventId: filters.value.claimEvent ? filters.value.claimEvent?.id : null,\n        status: filters.value.status ? filters.value.status?.id : null,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeEmployees: filters.value.includeEmployees?.param,\n        sortField:\n          sortField.value === 'claimRequest.claimEvent.name'\n            ? 'claimEvent.name'\n            : sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const claimRequestDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          referenceId: item.referenceId,\n          employee: $tEmpName(item.employee),\n          eventName: item.claimEvent.name,\n          description: item.description,\n          currency: item.currencyType.name,\n          status:\n            item.status.charAt(0).toUpperCase() +\n            item.status.slice(1).toLowerCase(),\n          submittedDate: formatDate(\n            parseDate(item.submittedDate),\n            jsDateFormat,\n            {locale},\n          ),\n          amount: Number(item.amount).toLocaleString('en-US', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/claim/employees/requests',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: claimRequestDataNormalizer,\n      query: serializedFilters,\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      response,\n      filters,\n      sortDefinition,\n      useDateFormat,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'referenceId',\n          title: this.$t('claim.reference_id'),\n          slot: 'title',\n          sortField: 'claimRequest.referenceId',\n          style: {flex: 3},\n        },\n        {\n          name: 'employee',\n          title: this.$t('general.employee_name'),\n          slot: 'title',\n          sortField: 'employee.firstName',\n          style: {flex: 4},\n        },\n        {\n          name: 'eventName',\n          title: this.$t('claim.event_name'),\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          sortField: 'claimEvent.name',\n          style: {flex: 3},\n        },\n        {\n          name: 'description',\n          title: this.$t('general.description'),\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          sortField: 'claimRequest.description',\n          style: {flex: 4},\n        },\n        {\n          name: 'currency',\n          title: this.$t('general.currency'),\n          slot: 'title',\n          style: {flex: 3},\n        },\n        {\n          name: 'submittedDate',\n          title: this.$t('claim.submitted_date'),\n          slot: 'title',\n          sortField: 'claimRequest.submittedDate',\n          style: {flex: 3},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          sortField: 'claimRequest.status',\n          style: {flex: 2},\n        },\n        {\n          name: 'amount',\n          title: this.$t('general.amount'),\n          slot: 'title',\n          sortField: 'claimRequest.amount',\n          style: {flex: 3},\n        },\n        {\n          name: 'actions',\n          slot: 'right',\n          title: this.$t('general.actions'),\n          style: {flex: 4},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            view: {\n              onClick: this.onClickView,\n              component: 'oxd-button',\n              props: {\n                label: this.$t('claim.view_details'),\n                displayType: 'text',\n                size: 'medium',\n              },\n            },\n          },\n        },\n      ],\n      rules: {\n        date: [validDateFormat(this.userDateFormat)],\n        toDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.filters.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n            {allowSameDate: true},\n          ),\n        ],\n        employee: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onClickReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n    onClickAdd() {\n      navigate('/claim/assignClaim');\n    },\n    onClickView(item) {\n      navigate('/claim/assignClaim/id/{id}', {id: item.id});\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}