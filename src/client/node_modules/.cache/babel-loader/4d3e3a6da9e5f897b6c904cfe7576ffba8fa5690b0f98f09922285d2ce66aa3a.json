{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport ClaimAttachment from '@/orangehrmClaimPlugin/components/ClaimAttachment.vue';\nimport ClaimExpenses from '@/orangehrmClaimPlugin/components/ClaimExpenses.vue';\nimport ClaimActionButtons from '@/orangehrmClaimPlugin/components/ClaimActionButtons.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  name: 'AssignClaim',\n  components: {\n    'claim-attachment': ClaimAttachment,\n    'claim-expenses': ClaimExpenses,\n    'claim-action-buttons': ClaimActionButtons\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    empNumber: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/claim/employees/${props.empNumber}/requests`);\n    return {\n      http\n    };\n  },\n  data() {\n    const statusMap = {\n      SUBMITTED: this.$t('time.submitted'),\n      APPROVED: this.$t('time.approved'),\n      REJECTED: this.$t('leave.rejected'),\n      CANCELLED: this.$t('leave.cancelled'),\n      PAID: this.$t('claim.paid'),\n      INITIATED: this.$t('claim.initiated')\n    };\n    return {\n      isLoading: false,\n      request: {},\n      claimEvent: {},\n      currency: {},\n      response: {},\n      allowedActions: [],\n      employee: {},\n      statusMap,\n      employeeName: ''\n    };\n  },\n  computed: {\n    canEdit() {\n      if (this.allowedActions) {\n        return this.allowedActions.includes('Submit');\n      }\n      return false;\n    },\n    formattedEventName() {\n      return this.claimEvent.isDeleted ? `${this.claimEvent.name} ${this.$t('general.deleted')}` : !this.claimEvent.status ? `${this.claimEvent.name} (${this.$t('performance.inactive')})` : this.claimEvent.name;\n    }\n  },\n  beforeMount() {\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    this.isLoading = true;\n    this.http.get(this.id).then(res => {\n      const {\n        data,\n        meta\n      } = res.data;\n      this.response = res.data;\n      this.request = data;\n      this.claimEvent = data.claimEvent;\n      this.currency = data.currencyType;\n      this.allowedActions = meta.allowedActions.map(action => action.name);\n      this.employee = meta.employee;\n      this.employeeName = $tEmpName(this.employee);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/claim/submitClaim');\n    }\n  }\n};","map":{"version":3,"mappings":"AAgHA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,OAAOC,eAAc,MAAO,uDAAuD;AACnF,OAAOC,aAAY,MAAO,qDAAqD;AAC/E,OAAOC,kBAAiB,MAAO,0DAA0D;AACzF,OAAOC,wBAAuB,MAAO,iDAAiD;AAEtF,eAAe;EACbC,IAAI,EAAE,aAAa;EAEnBC,UAAU,EAAE;IACV,kBAAkB,EAAEL,eAAe;IACnC,gBAAgB,EAAEC,aAAa;IAC/B,sBAAsB,EAAEC;EAC1B,CAAC;EAEDI,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,gBAAgB,EAAE;MAChBH,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ,CAAC;IACDG,WAAW,EAAE;MACXL,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDI,SAAS,EAAE;MACTN,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDK,KAAK,CAACT,KAAK,EAAE;IACX,MAAMU,IAAG,GAAI,IAAIlB,UAAU,CACzBmB,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,2BAA0Bb,KAAK,CAACQ,SAAU,WAAU,CACtD;IAED,OAAO;MACLE;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,MAAMC,SAAQ,GAAI;MAChBC,SAAS,EAAE,IAAI,CAACC,EAAE,CAAC,gBAAgB,CAAC;MACpCC,QAAQ,EAAE,IAAI,CAACD,EAAE,CAAC,eAAe,CAAC;MAClCE,QAAQ,EAAE,IAAI,CAACF,EAAE,CAAC,gBAAgB,CAAC;MACnCG,SAAS,EAAE,IAAI,CAACH,EAAE,CAAC,iBAAiB,CAAC;MACrCI,IAAI,EAAE,IAAI,CAACJ,EAAE,CAAC,YAAY,CAAC;MAC3BK,SAAS,EAAE,IAAI,CAACL,EAAE,CAAC,iBAAiB;IACtC,CAAC;IACD,OAAO;MACLM,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,CAAC,CAAC;MACXC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE,CAAC,CAAC;MACZC,QAAQ,EAAE,CAAC,CAAC;MACZC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,CAAC,CAAC;MACZd,SAAS;MACTe,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,OAAO,GAAG;MACR,IAAI,IAAI,CAACJ,cAAc,EAAE;QACvB,OAAO,IAAI,CAACA,cAAc,CAACK,QAAQ,CAAC,QAAQ,CAAC;MAC/C;MACA,OAAO,KAAK;IACd,CAAC;IACDC,kBAAkB,GAAG;MACnB,OAAO,IAAI,CAACT,UAAU,CAACU,SAAQ,GAC1B,GAAE,IAAI,CAACV,UAAU,CAAC3B,IAAI,IAAI,IAAI,CAACmB,EAAE,CAAC,iBAAiB,CAAE,KACtD,CAAC,IAAI,CAACQ,UAAU,CAACW,MAAK,GACrB,GAAE,IAAI,CAACX,UAAU,CAAC3B,IAAI,KAAK,IAAI,CAACmB,EAAE,CAAC,sBAAsB,CAAE,GAAC,GAC7D,IAAI,CAACQ,UAAU,CAAC3B,IAAI;IAC1B;EACF,CAAC;EAEDuC,WAAW,GAAG;IACZ,MAAM;MAACC;IAAS,IAAIzC,wBAAwB,EAAE;IAC9C,IAAI,CAAC0B,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACb,IAAG,CACL6B,GAAG,CAAC,IAAI,CAACtC,EAAE,EACXuC,IAAI,CAAEC,GAAG,IAAK;MACb,MAAM;QAAC3B,IAAI;QAAE4B;MAAI,IAAID,GAAG,CAAC3B,IAAI;MAC7B,IAAI,CAACa,QAAO,GAAIc,GAAG,CAAC3B,IAAI;MACxB,IAAI,CAACU,OAAM,GAAIV,IAAI;MACnB,IAAI,CAACW,UAAS,GAAIX,IAAI,CAACW,UAAU;MACjC,IAAI,CAACC,QAAO,GAAIZ,IAAI,CAAC6B,YAAY;MACjC,IAAI,CAACf,cAAa,GAAIc,IAAI,CAACd,cAAc,CAACgB,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAAC/C,IAAI,CAAC;MACtE,IAAI,CAAC+B,QAAO,GAAIa,IAAI,CAACb,QAAQ;MAC7B,IAAI,CAACC,YAAW,GAAIQ,SAAS,CAAC,IAAI,CAACT,QAAQ,CAAC;IAC9C,CAAC,EACAiB,OAAO,CAAC,MAAM;MACb,IAAI,CAACvB,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDwB,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTvD,QAAQ,CAAC,oBAAoB,CAAC;IAChC;EACF;AACF,CAAC","names":["APIService","navigate","ClaimAttachment","ClaimExpenses","ClaimActionButtons","useEmployeeNameTranslate","name","components","props","id","type","Number","required","allowedFileTypes","Array","maxFileSize","empNumber","setup","http","window","appGlobal","baseUrl","data","statusMap","SUBMITTED","$t","APPROVED","REJECTED","CANCELLED","PAID","INITIATED","isLoading","request","claimEvent","currency","response","allowedActions","employee","employeeName","computed","canEdit","includes","formattedEventName","isDeleted","status","beforeMount","$tEmpName","get","then","res","meta","currencyType","map","action","finally","methods","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\assignClaim\\AssignClaim.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-card-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('claim.assign_claim') }}\n        </oxd-text>\n        <oxd-divider />\n        <oxd-form :loading=\"isLoading\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"employeeName\"\n                  :label=\"$t('general.employee')\"\n                  disabled\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"request.referenceId\"\n                  :label=\"$t('claim.reference_id')\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"formattedEventName\"\n                  :label=\"$t('claim.event')\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"statusMap[request.status]\"\n                  :label=\"$t('general.status')\"\n                  disabled\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"currency.name\"\n                  :label=\"$t('general.currency')\"\n                  disabled\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"request.remarks\"\n                  :label=\"$t('claim.remarks')\"\n                  type=\"textarea\"\n                  disabled\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n        </oxd-form>\n      </div>\n      <claim-expenses\n        :request-id=\"id\"\n        :currency=\"currency\"\n        :can-edit=\"canEdit\"\n      ></claim-expenses>\n      <br />\n      <claim-attachment\n        :request-id=\"id\"\n        :can-edit=\"canEdit\"\n        :allowed-file-types=\"allowedFileTypes\"\n        :max-file-size=\"maxFileSize\"\n      ></claim-attachment>\n      <br />\n      <claim-action-buttons\n        :request-id=\"id\"\n        :allowed-actions=\"allowedActions\"\n        :is-assigned=\"true\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport ClaimAttachment from '@/orangehrmClaimPlugin/components/ClaimAttachment.vue';\nimport ClaimExpenses from '@/orangehrmClaimPlugin/components/ClaimExpenses.vue';\nimport ClaimActionButtons from '@/orangehrmClaimPlugin/components/ClaimActionButtons.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  name: 'AssignClaim',\n\n  components: {\n    'claim-attachment': ClaimAttachment,\n    'claim-expenses': ClaimExpenses,\n    'claim-action-buttons': ClaimActionButtons,\n  },\n\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n    empNumber: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/employees/${props.empNumber}/requests`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    const statusMap = {\n      SUBMITTED: this.$t('time.submitted'),\n      APPROVED: this.$t('time.approved'),\n      REJECTED: this.$t('leave.rejected'),\n      CANCELLED: this.$t('leave.cancelled'),\n      PAID: this.$t('claim.paid'),\n      INITIATED: this.$t('claim.initiated'),\n    };\n    return {\n      isLoading: false,\n      request: {},\n      claimEvent: {},\n      currency: {},\n      response: {},\n      allowedActions: [],\n      employee: {},\n      statusMap,\n      employeeName: '',\n    };\n  },\n\n  computed: {\n    canEdit() {\n      if (this.allowedActions) {\n        return this.allowedActions.includes('Submit');\n      }\n      return false;\n    },\n    formattedEventName() {\n      return this.claimEvent.isDeleted\n        ? `${this.claimEvent.name} ${this.$t('general.deleted')}`\n        : !this.claimEvent.status\n        ? `${this.claimEvent.name} (${this.$t('performance.inactive')})`\n        : this.claimEvent.name;\n    },\n  },\n\n  beforeMount() {\n    const {$tEmpName} = useEmployeeNameTranslate();\n    this.isLoading = true;\n    this.http\n      .get(this.id)\n      .then((res) => {\n        const {data, meta} = res.data;\n        this.response = res.data;\n        this.request = data;\n        this.claimEvent = data.claimEvent;\n        this.currency = data.currencyType;\n        this.allowedActions = meta.allowedActions.map((action) => action.name);\n        this.employee = meta.employee;\n        this.employeeName = $tEmpName(this.employee);\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/claim/submitClaim');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}