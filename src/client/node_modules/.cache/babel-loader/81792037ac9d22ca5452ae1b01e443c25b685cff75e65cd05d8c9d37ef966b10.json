{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.add_attachment')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.attachment.attachment,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.attachment.attachment = $event),\n            type: \"file\",\n            label: _ctx.$t('general.select_file'),\n            \"button-label\": _ctx.$t('general.browse'),\n            rules: $data.rules.attachment,\n            placeholder: _ctx.$t('general.no_file_selected'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"button-label\", \"rules\", \"placeholder\"]), _createVNode(_component_oxd_text, {\n            class: \"orangehrm-input-hint\",\n            tag: \"p\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.accepts_up_to_n_mb', {\n              count: $options.formattedFileSize\n            })), 1)]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.attachment.description,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.attachment.description = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comment'),\n            placeholder: _ctx.$t('general.type_comment_here'),\n            rules: $data.rules.description\n          }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;uBAArCC,oBAmDM,OAnDNC,UAmDM,GAlDJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACL,KAAK,EAAC;;sBACvB,MAAkC,mCAA/BM,OAAE;;MAEPH,aAAeI,yBACfJ,aA6CWK;IA7CAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAiBe,CAjBfT,aAiBeU;wBAhBb,MAeW,CAfXV,aAeWW;QAfAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAagB,CAbhBG,aAagBa;4BAZd,MAQE,CARFb,aAQEc;wBAPSP,gBAAU,CAACQ,UAAU;uEAArBR,gBAAU,CAACQ,UAAU;YAC9BC,IAAI,EAAC,MAAM;YACVC,KAAK,EAAEd,OAAE;YACT,cAAY,EAAEA,OAAE;YAChBe,KAAK,EAAEX,WAAK,CAACQ,UAAU;YACvBI,WAAW,EAAEhB,OAAE;YAChBiB,QAAQ,EAAR;wFAEFpB,aAEWC;YAFDJ,KAAK,EAAC,sBAAsB;YAACK,GAAG,EAAC;;8BACzC,MAAkE,mCAA/DC,OAAE;cAAAkB,OAAuCZ;YAAiB;;;;;;;;QAMrET,aAYeU;wBAXb,MAUW,CAVXV,aAUWW;QAVAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAQgB,CARhBG,aAQgBa;4BAPd,MAME,CANFb,aAMEc;wBALSP,gBAAU,CAACe,WAAW;uEAAtBf,gBAAU,CAACe,WAAW;YAC/BN,IAAI,EAAC,UAAU;YACdC,KAAK,EAAEd,OAAE;YACTgB,WAAW,EAAEhB,OAAE;YACfe,KAAK,EAAEX,WAAK,CAACe;;;;;;;QAMtBtB,aAAeI,yBACfJ,aASmBuB;wBARjB,MAAiB,CAAjBvB,aAAiBwB,2BACjBxB,aAKEyB;QAJAT,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBC,KAAK,EAAEd,OAAE;QACTuB,OAAK,EAAEjB;yCAEVT,aAAiB2B","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","attachment","type","label","rules","placeholder","required","count","description","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\SaveAttachment.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('general.add_attachment') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"attachment.attachment\"\n              type=\"file\"\n              :label=\"$t('general.select_file')\"\n              :button-label=\"$t('general.browse')\"\n              :rules=\"rules.attachment\"\n              :placeholder=\"$t('general.no_file_selected')\"\n              required\n            />\n            <oxd-text class=\"orangehrm-input-hint\" tag=\"p\">\n              {{ $t('general.accepts_up_to_n_mb', {count: formattedFileSize}) }}\n            </oxd-text>\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"attachment.description\"\n              type=\"textarea\"\n              :label=\"$t('general.comment')\"\n              :placeholder=\"$t('general.type_comment_here')\"\n              :rules=\"rules.description\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  maxFileSize,\n  shouldNotExceedCharLength,\n  validFileTypes,\n} from '@ohrm/core/util/validation/rules';\n\nconst attachmentModel = {\n  attachment: null,\n  description: '',\n};\n\nexport default {\n  name: 'SaveAttachment',\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel,\n      },\n      rules: {\n        description: [shouldNotExceedCharLength(200)],\n        attachment: [\n          required,\n          maxFileSize(this.maxFileSize),\n          validFileTypes(this.allowedFileTypes),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.attachment,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.attachment = {...attachmentModel};\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}