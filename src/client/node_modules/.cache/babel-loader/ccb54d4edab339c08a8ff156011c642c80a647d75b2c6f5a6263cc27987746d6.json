{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cfa4c0f2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"orangehrm-modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_leave_comment = _resolveComponent(\"leave-comment\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    class: \"orangehrm-dialog-modal\",\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.leave_request_comments')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), !$data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comm => {\n      return _openBlock(), _createBlock(_component_leave_comment, {\n        key: comm.id,\n        data: comm\n      }, null, 8, [\"data\"]);\n    }), 128))])) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.comment,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment = $event),\n          type: \"textarea\",\n          placeholder: _ctx.$t('general.comment_here'),\n          rules: $data.rules.comment\n        }, null, 8, [\"modelValue\", \"placeholder\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          type: \"button\",\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;;EAqBSA,KAAK,EAAC;AAAwB;;;EAMZA,KAAK,EAAC;;;;;;;;;;;;;uBAP/BC,aAkCaC;IAlCDF,KAAK,EAAC,wBAAwB;IAAE,eAAW,EAAEG;;sBACvD,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAAwC,mCAArCC,OAAE;;UAGTH,aAAeI,0BACHC,eAAS,kBAArBC,oBAMM,OANNC,UAMM,sBALJD,oBAIiBE,6BAHAH,cAAQ,EAAhBI,IAAI;2BADbd,aAIiBe;QAFdC,GAAG,EAAEF,IAAI,CAACG,EAAE;QACZC,IAAI,EAAEJ;;kDAGXT,aAmBWc;MAnBAC,OAAO,EAAEV,eAAS;MAAGW,aAAY,EAAEnB;;wBAC5C,MAOe,CAPfG,aAOeiB;0BANb,MAKE,CALFjB,aAKEkB;sBAJSb,aAAO;qEAAPA,aAAO;UAChBH,IAAI,EAAC,UAAU;UACdiB,WAAW,EAAEhB,OAAE;UACfiB,KAAK,EAAEf,WAAK,CAACgB;;;UAGlBrB,aAAeI,yBACfJ,aAQmBsB;0BAPjB,MAKE,CALFtB,aAKEuB;UAJArB,IAAI,EAAC,QAAQ;UACb,cAAY,EAAC,OAAO;UACnBsB,KAAK,EAAErB,OAAE;UACTsB,OAAK,EAAE5B;2CAEVG,aAAiB0B","names":["class","_createBlock","_component_oxd_dialog","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","$data","_createElementBlock","_hoisted_2","_Fragment","comm","_component_leave_comment","key","id","data","_component_oxd_form","loading","onSubmitValid","_component_oxd_form_row","_component_oxd_input_field","placeholder","rules","comment","_component_oxd_form_actions","_component_oxd_button","label","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveCommentsModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog class=\"orangehrm-dialog-modal\" @update:show=\"onCancel\">\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('leave.leave_request_comments') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <div v-if=\"!isLoading\" class=\"orangehrm-modal-content\">\n      <leave-comment\n        v-for=\"comm in comments\"\n        :key=\"comm.id\"\n        :data=\"comm\"\n      ></leave-comment>\n    </div>\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"comment\"\n          type=\"textarea\"\n          :placeholder=\"$t('general.comment_here')\"\n          :rules=\"rules.comment\"\n        />\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions>\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {OxdDialog} from '@ohrm/oxd';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport LeaveComment from '@/orangehrmLeavePlugin/components/LeaveComment';\n\nexport default {\n  name: 'LeaveCommentModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'leave-comment': LeaveComment,\n  },\n  props: {\n    id: {\n      type: Number,\n      required: false,\n      default: null,\n    },\n    leaveRequest: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  emits: ['close'],\n  setup(props) {\n    const apiPath = props.leaveRequest ? 'leave-requests' : 'leaves';\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/leave/${apiPath}/${props.id}/leave-comments`,\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      comment: null,\n      rules: {\n        comment: [required, shouldNotExceedCharLength(255)],\n      },\n      comments: [],\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll({limit: 0})\n      .then((response) => {\n        const {data} = response.data;\n        this.comments = data;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          comment: this.comment,\n        })\n        .then(() => {\n          this.$toast.saveSuccess();\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.comment = null;\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n\n<style src=\"./leave-comment-modal.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}