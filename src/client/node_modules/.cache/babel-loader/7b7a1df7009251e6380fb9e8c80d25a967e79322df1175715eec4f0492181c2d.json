{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport PostCommentButton from '@/orangehrmBuzzPlugin/components/PostCommentButton';\nimport { OxdIcon } from '@ohrm/oxd';\nexport default {\n  name: 'PostActionsPill',\n  components: {\n    'oxd-icon': OxdIcon,\n    'post-like': PostLikeButton,\n    'post-comment': PostCommentButton\n  },\n  props: {\n    post: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['like', 'comment'],\n  setup(props, context) {\n    let loading = false;\n    const {\n      updatePostLike\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const onClickComment = () => {\n      context.emit('comment');\n    };\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n    return {\n      onClickLike,\n      onClickComment\n    };\n  },\n  computed: {\n    combinedPostStats() {\n      const commentsCount = this.$t('buzz.n_comment', {\n        commentCount: this.post.stats?.numOfComments || 0\n      });\n      const sharesCount = this.$t('buzz.n_share', {\n        shareCount: this.post.stats?.numOfShares || 0\n      });\n      return this.post.stats?.numOfShares === null ? commentsCount : `${commentsCount}, ${sharesCount}`;\n    }\n  }\n};","map":{"version":3,"mappings":"AAuCA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,WAAU,MAAO,mDAAmD;AAC3E,OAAOC,cAAa,MAAO,iDAAiD;AAC5E,OAAOC,iBAAgB,MAAO,oDAAoD;AAClF,SAAQC,OAAO,QAAO,WAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EAEvBC,UAAU,EAAE;IACV,UAAU,EAAEF,OAAO;IACnB,WAAW,EAAEF,cAAc;IAC3B,cAAc,EAAEC;EAClB,CAAC;EAEDI,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;EAE1BC,KAAK,CAACN,KAAK,EAAEO,OAAO,EAAE;IACpB,IAAIC,OAAM,GAAI,KAAK;IACnB,MAAM;MAACC;IAAc,IAAIf,WAAW,CAClC,IAAID,UAAU,CAACiB,MAAM,CAACC,SAAS,CAACC,OAAO,EAAE,EAAE,CAAC,CAC7C;IAED,MAAMC,cAAa,GAAI,MAAM;MAC3BN,OAAO,CAACO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IAED,MAAMC,WAAU,GAAI,MAAM;MACxB,IAAI,CAACP,OAAO,EAAE;QACZA,OAAM,GAAI,IAAI;QACdC,cAAc,CAACT,KAAK,CAACC,IAAI,CAACe,EAAE,EAAEhB,KAAK,CAACC,IAAI,CAACgB,KAAK,CAAC,CAACC,IAAI,CAAC,MAAM;UACzDV,OAAM,GAAI,KAAK;UACfD,OAAO,CAACO,IAAI,CAAC,MAAM,CAAC;QACtB,CAAC,CAAC;MACJ;IACF,CAAC;IAED,OAAO;MACLC,WAAW;MACXF;IACF,CAAC;EACH,CAAC;EAEDM,QAAQ,EAAE;IACRC,iBAAiB,GAAG;MAClB,MAAMC,aAAY,GAAI,IAAI,CAACC,EAAE,CAAC,gBAAgB,EAAE;QAC9CC,YAAY,EAAE,IAAI,CAACtB,IAAI,CAACuB,KAAK,EAAEC,aAAY,IAAK;MAClD,CAAC,CAAC;MAEF,MAAMC,WAAU,GAAI,IAAI,CAACJ,EAAE,CAAC,cAAc,EAAE;QAC1CK,UAAU,EAAE,IAAI,CAAC1B,IAAI,CAACuB,KAAK,EAAEI,WAAU,IAAK;MAC9C,CAAC,CAAC;MAEF,OAAO,IAAI,CAAC3B,IAAI,CAACuB,KAAK,EAAEI,WAAU,KAAM,IAAG,GACvCP,aAAY,GACX,GAAEA,aAAc,KAAIK,WAAY,EAAC;IACxC;EACF;AACF,CAAC","names":["APIService","useBuzzAPIs","PostLikeButton","PostCommentButton","OxdIcon","name","components","props","post","type","Object","required","emits","setup","context","loading","updatePostLike","window","appGlobal","baseUrl","onClickComment","emit","onClickLike","id","liked","then","computed","combinedPostStats","commentsCount","$t","commentCount","stats","numOfComments","sharesCount","shareCount","numOfShares"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostActionsPill.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-buzz-pill\">\n    <div class=\"orangehrm-buzz-pill-actions\">\n      <post-like :like=\"post.liked\" @click=\"onClickLike\"></post-like>\n      <post-comment @click=\"onClickComment\"></post-comment>\n    </div>\n    <div class=\"orangehrm-buzz-pill-stats\">\n      <div class=\"orangehrm-buzz-pill-stats-likes\">\n        <oxd-icon name=\"heart-fill\"></oxd-icon>\n        <oxd-text tag=\"p\">\n          {{ $t('buzz.n_like', {likesCount: post.stats.numOfLikes}) }}\n        </oxd-text>\n      </div>\n      <div class=\"orangehrm-buzz-pill-stats-other\">\n        <oxd-text tag=\"p\">{{ combinedPostStats }}</oxd-text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport PostCommentButton from '@/orangehrmBuzzPlugin/components/PostCommentButton';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'PostActionsPill',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'post-like': PostLikeButton,\n    'post-comment': PostCommentButton,\n  },\n\n  props: {\n    post: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['like', 'comment'],\n\n  setup(props, context) {\n    let loading = false;\n    const {updatePostLike} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const onClickComment = () => {\n      context.emit('comment');\n    };\n\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n\n    return {\n      onClickLike,\n      onClickComment,\n    };\n  },\n\n  computed: {\n    combinedPostStats() {\n      const commentsCount = this.$t('buzz.n_comment', {\n        commentCount: this.post.stats?.numOfComments || 0,\n      });\n\n      const sharesCount = this.$t('buzz.n_share', {\n        shareCount: this.post.stats?.numOfShares || 0,\n      });\n\n      return this.post.stats?.numOfShares === null\n        ? commentsCount\n        : `${commentsCount}, ${sharesCount}`;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-pill {\n  display: flex;\n  padding: 0.5rem;\n  border-radius: 1rem;\n  align-items: flex-start;\n  background: $oxd-white-color;\n  justify-content: space-between;\n  &-actions {\n    gap: 5px;\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: space-between;\n    ::v-deep(.oxd-icon-button) {\n      width: 36px;\n      height: 36px;\n    }\n  }\n  &-stats {\n    &-likes {\n      display: flex;\n      font-size: 1rem;\n      font-weight: 700;\n      align-items: flex-end;\n      justify-content: flex-end;\n      ::v-deep(.oxd-icon) {\n        margin-right: 5px;\n        color: $oxd-feedback-danger-color;\n      }\n    }\n    &-other {\n      display: flex;\n      font-size: 0.75rem;\n      justify-content: flex-end;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}