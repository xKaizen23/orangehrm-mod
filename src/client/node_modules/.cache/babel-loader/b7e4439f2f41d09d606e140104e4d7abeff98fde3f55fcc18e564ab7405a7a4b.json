{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_interviewer_autocomplete = _resolveComponent(\"interviewer-autocomplete\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_time_input = _resolveComponent(\"time-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_candidate_action_layout = _resolveComponent(\"candidate-action-layout\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_candidate_action_layout, {\n    loading: $data.isLoading,\n    \"onUpdate:loading\": _cache[4] || (_cache[4] = $event => $data.isLoading = $event),\n    \"candidate-id\": $props.candidateId,\n    title: _ctx.$t('recruitment.schedule_interview'),\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.interview.interviewName,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.interview.interviewName = $event),\n            rules: $data.rules.interviewName,\n            label: _ctx.$t('recruitment.interview_title'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.interviewers, (interviewer, index) => {\n            return _openBlock(), _createBlock(_component_interviewer_autocomplete, {\n              key: index,\n              modelValue: $data.interviewers[index],\n              \"onUpdate:modelValue\": $event => $data.interviewers[index] = $event,\n              \"show-delete\": index > 0,\n              rules: $data.rules.interviewerName.filter((_, i) => index === 0 || i > 0),\n              \"include-employees\": \"onlyCurrent\",\n              required: \"\",\n              onRemove: $event => $options.onRemoveInterviewer(index)\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"show-delete\", \"rules\", \"onRemove\"]);\n          }), 128)), $data.interviewers.length < 5 ? (_openBlock(), _createBlock(_component_oxd_button, {\n            key: 0,\n            \"icon-name\": \"plus\",\n            \"display-type\": \"text\",\n            class: \"orangehrm-input-field-bottom-space\",\n            label: _ctx.$t('general.add_another'),\n            onClick: $options.onAddAnother\n          }, null, 8, [\"label\", \"onClick\"])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.interview.interviewDate,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.interview.interviewDate = $event),\n            rules: $data.rules.interviewDate,\n            label: _ctx.$t('general.date'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_time_input, {\n            modelValue: $data.interview.interviewTime,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.interview.interviewTime = $event),\n            rules: $data.rules.interviewTime,\n            label: _ctx.$t('general.time')\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-3 --span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.interview.note,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.interview.note = $event),\n            rules: $data.rules.note,\n            label: _ctx.$t('general.notes'),\n            placeholder: _ctx.$t('general.type_here'),\n            type: \"textarea\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_required_text), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onClickBack\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"candidate-id\", \"title\", \"onSubmitValid\"])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;;;;;;;;;;;;;;uBAA3CC,oBA8EM,OA9ENC,UA8EM,GA7EJC,aA4E0BC;IA3EhBC,OAAO,EAAEC,eAAS;4DAATA,eAAS;IACzB,cAAY,EAAEC,kBAAW;IACzBC,KAAK,EAAEC,OAAE;IACTC,aAAY,EAAEC;;sBAEf,MA0De,CA1DfR,aA0DeS;wBAzDb,MAwDW,CAxDXT,aAwDWU;QAxDAC,IAAI,EAAE;MAAC;0BAChB,MAOgB,CAPhBX,aAOgBY;4BANd,MAKE,CALFZ,aAKEa;wBAJSV,eAAS,CAACW,aAAa;uEAAvBX,eAAS,CAACW,aAAa;YAC/BC,KAAK,EAAEZ,WAAK,CAACW,aAAa;YAC1BE,KAAK,EAAEV,OAAE;YACVW,QAAQ,EAAR;;;YAGJjB,aAqBgBY;UArBDf,KAAK,EAAC;QAAgB;4BAEjC,MAA4C,oBAD9CC,oBAWEoB,6BAV+Bf,kBAAY,GAAnCgB,WAAW,EAAEC,KAAK;iCAD5BC,aAWEC;cATCC,GAAG,EAAEH,KAAK;0BACFjB,kBAAY,CAACiB,KAAK;+CAAlBjB,kBAAY,CAACiB,KAAK;cAC1B,aAAW,EAAEA,KAAK;cAClBL,KAAK,EAAmBZ,WAAK,CAACqB,eAAe,CAACC,MAAM,EAAEC,CAAC,EAAEC,CAAC,KAAKP,KAAK,UAAUO,CAAC;cAGhF,mBAAiB,EAAC,aAAa;cAC/BV,QAAQ,EAAR,EAAQ;cACPW,QAAM,YAAEpB,4BAAmB,CAACY,KAAK;;qBAG5BjB,kBAAY,CAAC0B,MAAM,sBAD3BR,aAOES;;YALA,WAAS,EAAC,MAAM;YAChB,cAAY,EAAC,MAAM;YACnBjC,KAAK,EAAC,oCAAoC;YACzCmB,KAAK,EAAEV,OAAE;YACTyB,OAAK,EAAEvB;;;YAGZR,aAOgBY;UAPDf,KAAK,EAAC;QAAgB;4BACnC,MAKE,CALFG,aAKEgC;wBAJS7B,eAAS,CAAC8B,aAAa;uEAAvB9B,eAAS,CAAC8B,aAAa;YAC/BlB,KAAK,EAAEZ,WAAK,CAAC8B,aAAa;YAC1BjB,KAAK,EAAEV,OAAE;YACVW,QAAQ,EAAR;;;YAGJjB,aAMgBY;UANDf,KAAK,EAAC;QAAgB;4BACnC,MAIE,CAJFG,aAIEkC;wBAHS/B,eAAS,CAACgC,aAAa;uEAAvBhC,eAAS,CAACgC,aAAa;YAC/BpB,KAAK,EAAEZ,WAAK,CAACgC,aAAa;YAC1BnB,KAAK,EAAEV,OAAE;;;YAIdN,aAQgBY;UARDf,KAAK,EAAC;QAAgC;4BACnD,MAME,CANFG,aAMEa;wBALSV,eAAS,CAACiC,IAAI;uEAAdjC,eAAS,CAACiC,IAAI;YACtBrB,KAAK,EAAEZ,WAAK,CAACiC,IAAI;YACjBpB,KAAK,EAAEV,OAAE;YACT+B,WAAW,EAAE/B,OAAE;YAChBgC,IAAI,EAAC;;;;;;;QAMbtC,aAAeuC,yBACfvC,aAA+BwC,2BAC/BxC,aAOmByC;wBANjB,MAIE,CAJFzC,aAIE8B;QAHA,cAAY,EAAC,OAAO;QACnBd,KAAK,EAAEV,OAAE;QACTyB,OAAK,EAAEvB;yCAEVR,aAAiB0C","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_candidate_action_layout","loading","$data","$props","title","_ctx","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","interviewName","rules","label","required","_Fragment","interviewer","index","_createBlock","_component_interviewer_autocomplete","key","interviewerName","filter","_","i","onRemove","length","_component_oxd_button","onClick","_component_date_input","interviewDate","_component_time_input","interviewTime","note","placeholder","type","_component_oxd_divider","_component_required_text","_component_oxd_form_actions","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\InterviewScheduleAction.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <candidate-action-layout\n      v-model:loading=\"isLoading\"\n      :candidate-id=\"candidateId\"\n      :title=\"$t('recruitment.schedule_interview')\"\n      @submit-valid=\"onSave\"\n    >\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"interview.interviewName\"\n              :rules=\"rules.interviewName\"\n              :label=\"$t('recruitment.interview_title')\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <interviewer-autocomplete\n              v-for=\"(interviewer, index) in interviewers\"\n              :key=\"index\"\n              v-model=\"interviewers[index]\"\n              :show-delete=\"index > 0\"\n              :rules=\"\n                rules.interviewerName.filter((_, i) => index === 0 || i > 0)\n              \"\n              include-employees=\"onlyCurrent\"\n              required\n              @remove=\"onRemoveInterviewer(index)\"\n            />\n            <oxd-button\n              v-if=\"interviewers.length < 5\"\n              icon-name=\"plus\"\n              display-type=\"text\"\n              class=\"orangehrm-input-field-bottom-space\"\n              :label=\"$t('general.add_another')\"\n              @click=\"onAddAnother\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <date-input\n              v-model=\"interview.interviewDate\"\n              :rules=\"rules.interviewDate\"\n              :label=\"$t('general.date')\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <time-input\n              v-model=\"interview.interviewTime\"\n              :rules=\"rules.interviewTime\"\n              :label=\"$t('general.time')\"\n            />\n          </oxd-grid-item>\n\n          <oxd-grid-item class=\"--offset-row-3 --span-column-2\">\n            <oxd-input-field\n              v-model=\"interview.note\"\n              :rules=\"rules.note\"\n              :label=\"$t('general.notes')\"\n              :placeholder=\"$t('general.type_here')\"\n              type=\"textarea\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n      <required-text></required-text>\n      <oxd-form-actions>\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onClickBack\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </candidate-action-layout>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  validTimeFormat,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport CandidateActionLayout from '@/orangehrmRecruitmentPlugin/components/CandidateActionLayout.vue';\nimport InterviewerAutocomplete from '@/orangehrmRecruitmentPlugin/components/InterviewerAutocomplete.vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst interviewModel = {\n  interviewName: null,\n  interviewDate: null,\n  interviewTime: null,\n  note: null,\n};\n\nexport default {\n  components: {\n    'candidate-action-layout': CandidateActionLayout,\n    'interviewer-autocomplete': InterviewerAutocomplete,\n  },\n  props: {\n    candidateId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/recruitment/candidates/${props.candidateId}/shedule-interview`,\n    );\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      interview: {...interviewModel},\n      interviewers: [null],\n      rules: {\n        interviewName: [required, shouldNotExceedCharLength(100)],\n        interviewDate: [required, validDateFormat(this.userDateFormat)],\n        interviewTime: [validTimeFormat],\n        interviewerName: [\n          required,\n          validSelection,\n          (value) => {\n            return this.interviewers.filter(\n              (interviewer) => interviewer && interviewer.id === value?.id,\n            ).length < 2\n              ? true\n              : this.$t('general.already_exists');\n          },\n        ],\n        note: [shouldNotExceedCharLength(2000)],\n      },\n    };\n  },\n  methods: {\n    onAddAnother() {\n      if (this.interviewers.length < 5) {\n        this.interviewers.push(null);\n      }\n    },\n    onRemoveInterviewer(index) {\n      this.interviewers.splice(index, 1);\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.interview,\n          interviewerEmpNumbers: this.interviewers\n            .map((interviewer) => interviewer?.id)\n            .filter(Number),\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          navigate('/recruitment/addCandidate/{id}', {id: this.candidateId});\n        });\n    },\n    onClickBack() {\n      navigate('/recruitment/addCandidate/{id}', {id: this.candidateId});\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}