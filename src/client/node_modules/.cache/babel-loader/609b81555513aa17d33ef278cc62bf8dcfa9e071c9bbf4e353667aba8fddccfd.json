{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-41d4c372\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_2 = {\n  key: 1,\n  class: \"orangehrm-performance-review-read\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"orangehrm-performance-review-read\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"orangehrm-performance-review-read\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-performance-review-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.review_finalization')), 1)]),\n    _: 1\n  }), _hoisted_1, _createVNode(_component_oxd_grid, {\n    cols: 4,\n    class: \"orangehrm-performance-review-grid\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        type: \"subtitle-2\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.date_of_completion')), 1)]),\n        _: 1\n      }), $setup.editable ? (_openBlock(), _createBlock(_component_date_input, {\n        key: 0,\n        \"model-value\": $props.completedDate,\n        rules: $data.rules.completedDate,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:completedDate', $event))\n      }, null, 8, [\"model-value\", \"rules\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.formattedCompletedDate), 1)]),\n        _: 1\n      })]))]),\n      _: 1\n    }), _createVNode(_component_oxd_grid_item, {\n      class: \"orangehrm-performance-review-grid-rating\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        type: \"subtitle-2\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.final_rating')), 1)]),\n        _: 1\n      }), $setup.editable ? (_openBlock(), _createBlock(_component_oxd_input_field, {\n        key: 0,\n        \"model-value\": $props.finalRating,\n        rules: $data.rules.finalRating,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$emit('update:finalRating', $event))\n      }, null, 8, [\"model-value\", \"rules\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($props.finalRating), 1)]),\n        _: 1\n      })]))]),\n      _: 1\n    }), _createVNode(_component_oxd_grid_item, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        type: \"subtitle-2\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.final_comments')), 1)]),\n        _: 1\n      }), $setup.editable ? (_openBlock(), _createBlock(_component_oxd_input_field, {\n        key: 0,\n        rows: \"1\",\n        type: \"textarea\",\n        \"model-value\": $props.finalComment,\n        rules: $data.rules.finalComment,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.$emit('update:finalComment', $event))\n      }, null, 8, [\"model-value\", \"rules\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_oxd_text, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($props.finalComment), 1)]),\n        _: 1\n      })]))]),\n      _: 1\n    })]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":";;gEAwBIA,oBAAM;;;EAYUC,KAAK,EAAC;;;;EAcNA,KAAK,EAAC;;;;EAgBNA,KAAK,EAAC;;;;;;;;uBA9CxBC,oBAmDM,cAlDJC,aAEWC;IAFDH,KAAK,EAAC;EAAoC;sBAClD,MAA2C,mCAAxCI,OAAE;;MAEPC,UAAM,EACNH,aA6CWI;IA7CAC,IAAI,EAAE,CAAC;IAAEP,KAAK,EAAC;;sBACxB,MAagB,CAbhBE,aAagBM;wBAZd,MAEW,CAFXN,aAEWC;QAFDM,IAAI,EAAC;MAAY;0BACzB,MAA0C,mCAAvCL,OAAE;;UAGCM,eAAQ,kBADhBC,aAKEC;;QAHC,aAAW,EAAEC,oBAAa;QAC1BC,KAAK,EAAEC,WAAK,CAACC,aAAa;QAC1B,qBAAkB,sCAAEZ,UAAK,yBAAyBa,MAAM;8DAE3DhB,oBAEM,OAFNiB,UAEM,GADJhB,aAAiDC;0BAAvC,MAA4B,mCAAzBO,6BAAsB;;;;QAGvCR,aAagBM;MAbDR,KAAK,EAAC;IAA0C;wBAC7D,MAEW,CAFXE,aAEWC;QAFDM,IAAI,EAAC;MAAY;0BACzB,MAAoC,mCAAjCL,OAAE;;UAGCM,eAAQ,kBADhBC,aAKEQ;;QAHC,aAAW,EAAEN,kBAAW;QACxBC,KAAK,EAAEC,WAAK,CAACK,WAAW;QACxB,qBAAkB,sCAAEhB,UAAK,uBAAuBa,MAAM;8DAEzDhB,oBAEM,OAFNoB,UAEM,GADJnB,aAAsCC;0BAA5B,MAAiB,mCAAdU,kBAAW;;;;QAG5BX,aAegBM;wBAdd,MAEW,CAFXN,aAEWC;QAFDM,IAAI,EAAC;MAAY;0BACzB,MAAsC,mCAAnCL,OAAE;;UAGCM,eAAQ,kBADhBC,aAOEQ;;QALAG,IAAI,EAAC,GAAG;QACRb,IAAI,EAAC,UAAU;QACd,aAAW,EAAEI,mBAAY;QACzBC,KAAK,EAAEC,WAAK,CAACQ,YAAY;QACzB,qBAAkB,sCAAEnB,UAAK,wBAAwBa,MAAM;8DAE1DhB,oBAEM,OAFNuB,UAEM,GADJtB,aAAuCC;0BAA7B,MAAkB,mCAAfU,mBAAY","names":["_createElementVNode","class","_createElementBlock","_createVNode","_component_oxd_text","_ctx","_hoisted_1","_component_oxd_grid","cols","_component_oxd_grid_item","type","$setup","_createBlock","_component_date_input","$props","rules","$data","completedDate","$event","_hoisted_2","_component_oxd_input_field","finalRating","_hoisted_3","rows","finalComment","_hoisted_4"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\components\\FinalEvaluation.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div>\n    <oxd-text class=\"orangehrm-performance-review-title\">\n      {{ $t('performance.review_finalization') }}\n    </oxd-text>\n    <br />\n    <oxd-grid :cols=\"4\" class=\"orangehrm-performance-review-grid\">\n      <oxd-grid-item>\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.date_of_completion') }}\n        </oxd-text>\n        <date-input\n          v-if=\"editable\"\n          :model-value=\"completedDate\"\n          :rules=\"rules.completedDate\"\n          @update:model-value=\"$emit('update:completedDate', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ formattedCompletedDate }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n      <oxd-grid-item class=\"orangehrm-performance-review-grid-rating\">\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.final_rating') }}\n        </oxd-text>\n        <oxd-input-field\n          v-if=\"editable\"\n          :model-value=\"finalRating\"\n          :rules=\"rules.finalRating\"\n          @update:model-value=\"$emit('update:finalRating', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ finalRating }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n      <oxd-grid-item>\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.final_comments') }}\n        </oxd-text>\n        <oxd-input-field\n          v-if=\"editable\"\n          rows=\"1\"\n          type=\"textarea\"\n          :model-value=\"finalComment\"\n          :rules=\"rules.finalComment\"\n          @update:model-value=\"$emit('update:finalComment', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ finalComment }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n    </oxd-grid>\n  </div>\n</template>\n\n<script>\nimport {computed} from 'vue';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {\n  required,\n  validDateFormat,\n  greaterThanOrEqual,\n  lessThanOrEqual,\n} from '@/core/util/validation/rules';\n\nexport default {\n  name: 'FinalEvaluation',\n  props: {\n    completedDate: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    finalRating: {\n      type: Number,\n      default: null,\n      required: false,\n    },\n    finalComment: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    status: {\n      type: Number,\n      required: true,\n    },\n    isRequired: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  emits: ['update:finalRating', 'update:finalComment', 'update:completedDate'],\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n\n    const editable = computed(() => props.status !== 4);\n    const formattedCompletedDate = computed(() =>\n      formatDate(parseDate(props.completedDate), jsDateFormat, {locale}),\n    );\n\n    return {\n      editable,\n      userDateFormat,\n      formattedCompletedDate,\n    };\n  },\n\n  data() {\n    return {\n      rules: {\n        completedDate: [\n          validDateFormat(this.userDateFormat),\n          ...(this.isRequired ? [required] : []),\n        ],\n        finalRating: [\n          greaterThanOrEqual(\n            0,\n            this.$t(\n              'performance.rating_should_be_greater_than_or_equal_to_minValue',\n              {\n                minValue: 0,\n              },\n            ),\n          ),\n          lessThanOrEqual(\n            100,\n            this.$t(\n              'performance.rating_should_be_less_than_or_equal_to_maxValue',\n              {\n                maxValue: 100,\n              },\n            ),\n          ),\n          ...(this.isRequired ? [required] : []),\n        ],\n        finalComment: [...(this.isRequired ? [required] : [])],\n      },\n    };\n  },\n};\n</script>\n\n<style src=\"./final-evaluation.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}