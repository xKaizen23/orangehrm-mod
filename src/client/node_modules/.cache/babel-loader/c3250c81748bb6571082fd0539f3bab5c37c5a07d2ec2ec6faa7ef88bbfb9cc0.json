{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n      type: \"select\",\n      rules: $setup.rules.operator,\n      options: $setup.operators,\n      \"model-value\": $props.operator,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:operator', $event))\n    }, null, 8, [\"rules\", \"options\", \"model-value\"])]),\n    _: 1\n  }), $props.operator && $props.operator.id === 'between' ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n    key: 0,\n    class: \"orangehrm-report-daterange --span-column-2\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n      type: \"date\",\n      rules: $setup.rules.valueX,\n      \"model-value\": $props.valueX,\n      placeholder: $setup.userDateFormat,\n      \"display-format\": $setup.jsDateFormat,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$emit('update:valueX', $event))\n    }, null, 8, [\"rules\", \"model-value\", \"placeholder\", \"display-format\"]), _createVNode(_component_oxd_text, {\n      class: \"orangehrm-report-range-text\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"to\")]),\n      _: 1\n    }), _createVNode(_component_oxd_input_field, {\n      type: \"date\",\n      rules: $setup.rules.valueY,\n      \"model-value\": $props.valueY,\n      placeholder: $setup.userDateFormat,\n      \"display-format\": $setup.jsDateFormat,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.$emit('update:valueY', $event))\n    }, null, 8, [\"rules\", \"model-value\", \"placeholder\", \"display-format\"])]),\n    _: 1\n  })) : $props.operator ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n    key: 1\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n      type: \"date\",\n      rules: $setup.rules.valueXOnly,\n      \"model-value\": $props.valueX,\n      placeholder: $setup.userDateFormat,\n      \"display-format\": $setup.jsDateFormat,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.$emit('update:valueX', $event))\n    }, null, 8, [\"rules\", \"model-value\", \"placeholder\", \"display-format\"])]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)], 64);\n}","map":{"version":3,"mappings":";;;;;6DAoBEA,aAQgBC;sBAPd,MAME,CANFD,aAMEE;MALAC,IAAI,EAAC,QAAQ;MACZC,KAAK,EAAEC,YAAK,CAACC,QAAQ;MACrBC,OAAO,EAAEF,gBAAS;MAClB,aAAW,EAAEG,eAAQ;MACrB,qBAAkB,sCAAEC,UAAK,oBAAoBC,MAAM;;;MAIhDF,eAAQ,IAAIA,eAAQ,CAACG,EAAE,gCAD/BC,aAqBgBX;;IAnBdY,KAAK,EAAC;;sBAEN,MAOE,CAPFb,aAOEE;MANAC,IAAI,EAAC,MAAM;MACVC,KAAK,EAAEC,YAAK,CAACS,MAAM;MACnB,aAAW,EAAEN,aAAM;MACnBO,WAAW,EAAEV,qBAAc;MAC3B,gBAAc,EAAEA,mBAAY;MAC5B,qBAAkB,sCAAEI,UAAK,kBAAkBC,MAAM;4EAEpDV,aAAmEgB;MAAzDH,KAAK,EAAC,6BAA6B;MAACI,GAAG,EAAC;;wBAAI,MAAE,kBAAF,IAAE;;QACxDjB,aAOEE;MANAC,IAAI,EAAC,MAAM;MACVC,KAAK,EAAEC,YAAK,CAACa,MAAM;MACnB,aAAW,EAAEV,aAAM;MACnBO,WAAW,EAAEV,qBAAc;MAC3B,gBAAc,EAAEA,mBAAY;MAC5B,qBAAkB,sCAAEI,UAAK,kBAAkBC,MAAM;;;QAG5BF,eAAQ,kBAAlCI,aASgBX;IAAAkB;EAAA;sBARd,MAOE,CAPFnB,aAOEE;MANAC,IAAI,EAAC,MAAM;MACVC,KAAK,EAAEC,YAAK,CAACe,UAAU;MACvB,aAAW,EAAEZ,aAAM;MACnBO,WAAW,EAAEV,qBAAc;MAC3B,gBAAc,EAAEA,mBAAY;MAC5B,qBAAkB,sCAAEI,UAAK,kBAAkBC,MAAM","names":["_createVNode","_component_oxd_grid_item","_component_oxd_input_field","type","rules","$setup","operator","options","$props","_ctx","$event","id","_createBlock","class","valueX","placeholder","_component_oxd_text","tag","valueY","key","valueXOnly"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\ReportCriterionDateRange.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-grid-item>\n    <oxd-input-field\n      type=\"select\"\n      :rules=\"rules.operator\"\n      :options=\"operators\"\n      :model-value=\"operator\"\n      @update:model-value=\"$emit('update:operator', $event)\"\n    />\n  </oxd-grid-item>\n  <oxd-grid-item\n    v-if=\"operator && operator.id === 'between'\"\n    class=\"orangehrm-report-daterange --span-column-2\"\n  >\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueX\"\n      :model-value=\"valueX\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueX', $event)\"\n    />\n    <oxd-text class=\"orangehrm-report-range-text\" tag=\"p\">to</oxd-text>\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueY\"\n      :model-value=\"valueY\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueY', $event)\"\n    />\n  </oxd-grid-item>\n  <oxd-grid-item v-else-if=\"operator\">\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueXOnly\"\n      :model-value=\"valueX\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueX', $event)\"\n    />\n  </oxd-grid-item>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport {\n  required,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@ohrm/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nexport default {\n  name: 'ReportCriterionDateRange',\n  inheritAttrs: false,\n  props: {\n    operator: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    valueX: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    valueY: {\n      type: String,\n      required: false,\n      default: null,\n    },\n  },\n  emits: ['update:valueX', 'update:valueY', 'update:operator'],\n  setup(props) {\n    const {$t} = usei18n();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const operators = ref([\n      {id: 'lt', label: 'Joined before'},\n      {id: 'gt', label: 'Joined after'},\n      {id: 'between', label: 'Joined in between'},\n    ]);\n\n    const rules = {\n      operator: [required],\n      valueXOnly: [required, validDateFormat(userDateFormat)],\n      valueX: [\n        required,\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => props.valueY,\n          $t('general.from_date_should_be_before_to_date'),\n        ),\n      ],\n      valueY: [\n        required,\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => props.valueX,\n          $t('general.to_date_should_be_after_from_date'),\n        ),\n      ],\n    };\n\n    return {\n      rules,\n      operators,\n      jsDateFormat,\n      userDateFormat,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-report {\n  &-daterange {\n    display: flex;\n    justify-content: center;\n    align-items: baseline;\n  }\n  &-range-text {\n    margin: 0 1rem;\n    font-size: $oxd-input-control-font-size;\n  }\n}\n::v-deep(.oxd-input-group__label-wrapper) {\n  display: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}