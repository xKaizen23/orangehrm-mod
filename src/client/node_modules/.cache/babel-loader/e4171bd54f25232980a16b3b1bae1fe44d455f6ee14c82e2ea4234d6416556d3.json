{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nconst customFieldModel = {\n  fieldName: '',\n  screen: '',\n  fieldType: '',\n  extraData: ''\n};\nexport default {\n  props: {\n    screenList: {\n      type: Array,\n      required: true\n    },\n    fieldTypeList: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/custom-fields');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      customField: {\n        ...customFieldModel\n      },\n      rules: {\n        fieldName: [required, shouldNotExceedCharLength(250)],\n        screen: [required, shouldNotExceedCharLength(100)],\n        fieldType: [required, shouldNotExceedCharLength(15)],\n        extraData: [required, shouldNotExceedCharLength(250)]\n      }\n    };\n  },\n  computed: {\n    isDropDownField() {\n      return this.customField.fieldType?.id === 1;\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.fieldName.push(v => {\n        const index = data.findIndex(item => item.fieldName == v);\n        return index === -1 || this.$t('general.already_exists');\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const fieldType = this.customField.fieldType.id;\n      this.http.create({\n        fieldName: this.customField.fieldName,\n        screen: this.customField.screen.id,\n        fieldType: fieldType,\n        extraData: fieldType === 1 ? this.customField.extraData : null\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/pim/listCustomFields');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","shouldNotExceedCharLength","customFieldModel","fieldName","screen","fieldType","extraData","props","screenList","type","Array","fieldTypeList","setup","http","window","appGlobal","baseUrl","data","isLoading","customField","rules","computed","isDropDownField","id","created","getAll","then","response","push","v","index","findIndex","item","$t","finally","methods","onSave","create","$toast","saveSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\customField\\SaveCustomField.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.add_custom_field') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <oxd-input-field\n                v-model=\"customField.fieldName\"\n                :label=\"$t('pim.field_name')\"\n                :rules=\"rules.fieldName\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"customField.screen\"\n                type=\"select\"\n                :label=\"$t('pim.screen')\"\n                :rules=\"rules.screen\"\n                :options=\"screenList\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <oxd-input-field\n                v-model=\"customField.fieldType\"\n                type=\"select\"\n                :label=\"$t('general.type')\"\n                :rules=\"rules.fieldType\"\n                :options=\"fieldTypeList\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item v-if=\"isDropDownField\">\n              <oxd-input-field\n                v-model=\"customField.extraData\"\n                :label=\"$t('pim.select_options')\"\n                :rules=\"rules.extraData\"\n                :required=\"isDropDownField\"\n              />\n              <oxd-text tag=\"p\" class=\"select-options-hint\">\n                {{ $t('pim.enter_allowed_options_separated_by_commas') }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\n\nconst customFieldModel = {\n  fieldName: '',\n  screen: '',\n  fieldType: '',\n  extraData: '',\n};\n\nexport default {\n  props: {\n    screenList: {\n      type: Array,\n      required: true,\n    },\n    fieldTypeList: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/custom-fields',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      customField: {...customFieldModel},\n      rules: {\n        fieldName: [required, shouldNotExceedCharLength(250)],\n        screen: [required, shouldNotExceedCharLength(100)],\n        fieldType: [required, shouldNotExceedCharLength(15)],\n        extraData: [required, shouldNotExceedCharLength(250)],\n      },\n    };\n  },\n  computed: {\n    isDropDownField() {\n      return this.customField.fieldType?.id === 1;\n    },\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.fieldName.push((v) => {\n          const index = data.findIndex((item) => item.fieldName == v);\n          return index === -1 || this.$t('general.already_exists');\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const fieldType = this.customField.fieldType.id;\n      this.http\n        .create({\n          fieldName: this.customField.fieldName,\n          screen: this.customField.screen.id,\n          fieldType: fieldType,\n          extraData: fieldType === 1 ? this.customField.extraData : null,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/pim/listCustomFields');\n    },\n  },\n};\n</script>\n\n<style src=\"./customField.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}