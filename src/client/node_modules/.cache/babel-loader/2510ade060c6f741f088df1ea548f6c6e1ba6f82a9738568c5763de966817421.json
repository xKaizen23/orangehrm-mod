{"ast":null,"code":"import { computed } from 'vue';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { required, validDateFormat, greaterThanOrEqual, lessThanOrEqual } from '@/core/util/validation/rules';\nexport default {\n  name: 'FinalEvaluation',\n  props: {\n    completedDate: {\n      type: String,\n      default: null,\n      required: false\n    },\n    finalRating: {\n      type: Number,\n      default: null,\n      required: false\n    },\n    finalComment: {\n      type: String,\n      default: null,\n      required: false\n    },\n    status: {\n      type: Number,\n      required: true\n    },\n    isRequired: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:finalRating', 'update:finalComment', 'update:completedDate'],\n  setup(props) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const editable = computed(() => props.status !== 4);\n    const formattedCompletedDate = computed(() => formatDate(parseDate(props.completedDate), jsDateFormat, {\n      locale\n    }));\n    return {\n      editable,\n      userDateFormat,\n      formattedCompletedDate\n    };\n  },\n  data() {\n    return {\n      rules: {\n        completedDate: [validDateFormat(this.userDateFormat), ...(this.isRequired ? [required] : [])],\n        finalRating: [greaterThanOrEqual(0, this.$t('performance.rating_should_be_greater_than_or_equal_to_minValue', {\n          minValue: 0\n        })), lessThanOrEqual(100, this.$t('performance.rating_should_be_less_than_or_equal_to_maxValue', {\n          maxValue: 100\n        })), ...(this.isRequired ? [required] : [])],\n        finalComment: [...(this.isRequired ? [required] : [])]\n      }\n    };\n  }\n};","map":{"version":3,"mappings":"AA2EA,SAAQA,QAAQ,QAAO,KAAK;AAC5B,SAAQC,UAAU,EAAEC,SAAS,QAAO,4BAA4B;AAChE,OAAOC,aAAY,MAAO,sCAAsC;AAChE,OAAOC,SAAQ,MAAO,kCAAkC;AACxD,SACEC,QAAQ,EACRC,eAAe,EACfC,kBAAkB,EAClBC,eAAe,QACV,8BAA8B;AAErC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,aAAa,EAAE;MACbC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbT,QAAQ,EAAE;IACZ,CAAC;IACDU,WAAW,EAAE;MACXH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE,IAAI;MACbT,QAAQ,EAAE;IACZ,CAAC;IACDY,YAAY,EAAE;MACZL,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbT,QAAQ,EAAE;IACZ,CAAC;IACDa,MAAM,EAAE;MACNN,IAAI,EAAEI,MAAM;MACZX,QAAQ,EAAE;IACZ,CAAC;IACDc,UAAU,EAAE;MACVP,IAAI,EAAEQ,OAAO;MACbf,QAAQ,EAAE;IACZ;EACF,CAAC;EACDgB,KAAK,EAAE,CAAC,oBAAoB,EAAE,qBAAqB,EAAE,sBAAsB,CAAC;EAC5EC,KAAK,CAACZ,KAAK,EAAE;IACX,MAAM;MAACa;IAAM,IAAInB,SAAS,EAAE;IAC5B,MAAM;MAACoB,YAAY;MAAEC;IAAc,IAAItB,aAAa,EAAE;IAEtD,MAAMuB,QAAO,GAAI1B,QAAQ,CAAC,MAAMU,KAAK,CAACQ,MAAK,KAAM,CAAC,CAAC;IACnD,MAAMS,sBAAqB,GAAI3B,QAAQ,CAAC,MACtCC,UAAU,CAACC,SAAS,CAACQ,KAAK,CAACC,aAAa,CAAC,EAAEa,YAAY,EAAE;MAACD;IAAM,CAAC,CAAC,CACnE;IAED,OAAO;MACLG,QAAQ;MACRD,cAAc;MACdE;IACF,CAAC;EACH,CAAC;EAEDC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLlB,aAAa,EAAE,CACbL,eAAe,CAAC,IAAI,CAACmB,cAAc,CAAC,EACpC,IAAI,IAAI,CAACN,UAAS,GAAI,CAACd,QAAQ,IAAI,EAAE,CAAC,CACvC;QACDU,WAAW,EAAE,CACXR,kBAAkB,CAChB,CAAC,EACD,IAAI,CAACuB,EAAE,CACL,gEAAgE,EAChE;UACEC,QAAQ,EAAE;QACZ,CAAC,CACF,CACF,EACDvB,eAAe,CACb,GAAG,EACH,IAAI,CAACsB,EAAE,CACL,6DAA6D,EAC7D;UACEE,QAAQ,EAAE;QACZ,CAAC,CACF,CACF,EACD,IAAI,IAAI,CAACb,UAAS,GAAI,CAACd,QAAQ,IAAI,EAAE,CAAC,CACvC;QACDY,YAAY,EAAE,CAAC,IAAI,IAAI,CAACE,UAAS,GAAI,CAACd,QAAQ,IAAI,EAAE,CAAC;MACvD;IACF,CAAC;EACH;AACF,CAAC","names":["computed","formatDate","parseDate","useDateFormat","useLocale","required","validDateFormat","greaterThanOrEqual","lessThanOrEqual","name","props","completedDate","type","String","default","finalRating","Number","finalComment","status","isRequired","Boolean","emits","setup","locale","jsDateFormat","userDateFormat","editable","formattedCompletedDate","data","rules","$t","minValue","maxValue"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\components\\FinalEvaluation.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div>\n    <oxd-text class=\"orangehrm-performance-review-title\">\n      {{ $t('performance.review_finalization') }}\n    </oxd-text>\n    <br />\n    <oxd-grid :cols=\"4\" class=\"orangehrm-performance-review-grid\">\n      <oxd-grid-item>\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.date_of_completion') }}\n        </oxd-text>\n        <date-input\n          v-if=\"editable\"\n          :model-value=\"completedDate\"\n          :rules=\"rules.completedDate\"\n          @update:model-value=\"$emit('update:completedDate', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ formattedCompletedDate }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n      <oxd-grid-item class=\"orangehrm-performance-review-grid-rating\">\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.final_rating') }}\n        </oxd-text>\n        <oxd-input-field\n          v-if=\"editable\"\n          :model-value=\"finalRating\"\n          :rules=\"rules.finalRating\"\n          @update:model-value=\"$emit('update:finalRating', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ finalRating }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n      <oxd-grid-item>\n        <oxd-text type=\"subtitle-2\">\n          {{ $t('performance.final_comments') }}\n        </oxd-text>\n        <oxd-input-field\n          v-if=\"editable\"\n          rows=\"1\"\n          type=\"textarea\"\n          :model-value=\"finalComment\"\n          :rules=\"rules.finalComment\"\n          @update:model-value=\"$emit('update:finalComment', $event)\"\n        />\n        <div v-else class=\"orangehrm-performance-review-read\">\n          <oxd-text>{{ finalComment }}</oxd-text>\n        </div>\n      </oxd-grid-item>\n    </oxd-grid>\n  </div>\n</template>\n\n<script>\nimport {computed} from 'vue';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {\n  required,\n  validDateFormat,\n  greaterThanOrEqual,\n  lessThanOrEqual,\n} from '@/core/util/validation/rules';\n\nexport default {\n  name: 'FinalEvaluation',\n  props: {\n    completedDate: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    finalRating: {\n      type: Number,\n      default: null,\n      required: false,\n    },\n    finalComment: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    status: {\n      type: Number,\n      required: true,\n    },\n    isRequired: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  emits: ['update:finalRating', 'update:finalComment', 'update:completedDate'],\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n\n    const editable = computed(() => props.status !== 4);\n    const formattedCompletedDate = computed(() =>\n      formatDate(parseDate(props.completedDate), jsDateFormat, {locale}),\n    );\n\n    return {\n      editable,\n      userDateFormat,\n      formattedCompletedDate,\n    };\n  },\n\n  data() {\n    return {\n      rules: {\n        completedDate: [\n          validDateFormat(this.userDateFormat),\n          ...(this.isRequired ? [required] : []),\n        ],\n        finalRating: [\n          greaterThanOrEqual(\n            0,\n            this.$t(\n              'performance.rating_should_be_greater_than_or_equal_to_minValue',\n              {\n                minValue: 0,\n              },\n            ),\n          ),\n          lessThanOrEqual(\n            100,\n            this.$t(\n              'performance.rating_should_be_less_than_or_equal_to_maxValue',\n              {\n                maxValue: 100,\n              },\n            ),\n          ),\n          ...(this.isRequired ? [required] : []),\n        ],\n        finalComment: [...(this.isRequired ? [required] : [])],\n      },\n    };\n  },\n};\n</script>\n\n<style src=\"./final-evaluation.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}