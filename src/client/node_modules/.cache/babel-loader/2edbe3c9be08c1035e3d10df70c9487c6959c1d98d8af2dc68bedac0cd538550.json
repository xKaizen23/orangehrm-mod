{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-26d19b6a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_buzz_post_input = _resolveComponent(\"oxd-buzz-post-input\");\n  const _component_video_frame = _resolveComponent(\"video-frame\");\n  const _component_photo_frame = _resolveComponent(\"photo-frame\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_post_modal = _resolveComponent(\"post-modal\");\n  return _openBlock(), _createBlock(_component_post_modal, {\n    loading: _ctx.isLoading,\n    title: _ctx.$t('buzz.share_post'),\n    onSubmit: $setup.onSubmit,\n    onClose: _cache[1] || (_cache[1] = $event => _ctx.$emit('close', false))\n  }, {\n    header: _withCtx(() => [_createVNode(_component_oxd_buzz_post_input, {\n      modelValue: _ctx.post.text,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.post.text = $event),\n      rules: $setup.rules.text,\n      placeholder: _ctx.$t('buzz.post_placeholder')\n    }, null, 8, [\"modelValue\", \"rules\", \"placeholder\"])]),\n    default: _withCtx(() => [$props.data.type === 'video' ? (_openBlock(), _createBlock(_component_video_frame, {\n      key: 0,\n      \"video-src\": $props.data.video.link\n    }, null, 8, [\"video-src\"])) : _createCommentVNode(\"\", true), $props.data.type === 'photo' ? (_openBlock(), _createBlock(_component_photo_frame, {\n      key: 1,\n      media: $props.data.photoIds\n    }, null, 8, [\"media\"])) : _createCommentVNode(\"\", true), $props.data.type === 'video' || $props.data.type === 'photo' ? (_openBlock(), _createElementBlock(\"br\", _hoisted_1)) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_text, {\n      tag: \"p\",\n      class: \"orangehrm-buzz-share-employee\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.employee), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_text, {\n      tag: \"p\",\n      class: \"orangehrm-buzz-share-date\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.dateTime), 1)]),\n      _: 1\n    }), $setup.originalPost.text ? (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 3,\n      tag: \"p\",\n      class: \"orangehrm-buzz-share-text\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.originalPost.text), 1)]),\n      _: 1\n    })) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"loading\", \"title\", \"onSubmit\"]);\n}","map":{"version":3,"mappings":";;;;;;;;;;;uBAoBEA,aAiCaC;IAhCVC,OAAO,EAAEC,cAAS;IAClBC,KAAK,EAAED,OAAE;IACTE,QAAM,EAAEC,eAAQ;IAChBC,OAAK,sCAAEJ,UAAK;;IAEFK,MAAM,WACf,MAKsB,CALtBC,aAKsBC;kBAJXP,SAAI,CAACQ,IAAI;iEAATR,SAAI,CAACQ,IAAI;MACjBC,KAAK,EAAEN,YAAK,CAACK,IAAI;MACjBE,WAAW,EAAEV,OAAE;;sBAIpB,MACc,CADKW,WAAI,CAACC,IAAI,8BAA5Bf,aACcgB;;MAD6B,WAAS,EAAEF,WAAI,CAACG,KAAK,CAACC;iEAE9CJ,WAAI,CAACC,IAAI,8BAA5Bf,aACcmB;;MAD6BC,KAAK,EAAEN,WAAI,CAACO;6DAE7CP,WAAI,CAACC,IAAI,gBAAgBD,WAAI,CAACC,IAAI,8BAA5CO,oBAA4D,oDAE5Db,aAEWc;MAFDC,GAAG,EAAC,GAAG;MAACC,KAAK,EAAC;;wBACtB,MAA2B,mCAAxBnB,mBAAY,CAACoB,QAAQ;;QAE1BjB,aAEWc;MAFDC,GAAG,EAAC,GAAG;MAACC,KAAK,EAAC;;wBACtB,MAA2B,mCAAxBnB,mBAAY,CAACqB,QAAQ;;QAGlBrB,mBAAY,CAACK,IAAI,kBADzBX,aAMWuB;;MAJTC,GAAG,EAAC,GAAG;MACPC,KAAK,EAAC;;wBAEN,MAAuB,mCAApBnB,mBAAY,CAACK,IAAI","names":["_createBlock","_component_post_modal","loading","_ctx","title","onSubmit","$setup","onClose","header","_createVNode","_component_oxd_buzz_post_input","text","rules","placeholder","$props","type","_component_video_frame","video","link","_component_photo_frame","media","photoIds","_createElementBlock","_component_oxd_text","tag","class","employee","dateTime"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\SharePostModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <post-modal\n    :loading=\"isLoading\"\n    :title=\"$t('buzz.share_post')\"\n    @submit=\"onSubmit\"\n    @close=\"$emit('close', false)\"\n  >\n    <template #header>\n      <oxd-buzz-post-input\n        v-model=\"post.text\"\n        :rules=\"rules.text\"\n        :placeholder=\"$t('buzz.post_placeholder')\"\n      >\n      </oxd-buzz-post-input>\n    </template>\n    <video-frame v-if=\"data.type === 'video'\" :video-src=\"data.video.link\">\n    </video-frame>\n    <photo-frame v-if=\"data.type === 'photo'\" :media=\"data.photoIds\">\n    </photo-frame>\n    <br v-if=\"data.type === 'video' || data.type === 'photo'\" />\n\n    <oxd-text tag=\"p\" class=\"orangehrm-buzz-share-employee\">\n      {{ originalPost.employee }}\n    </oxd-text>\n    <oxd-text tag=\"p\" class=\"orangehrm-buzz-share-date\">\n      {{ originalPost.dateTime }}\n    </oxd-text>\n    <oxd-text\n      v-if=\"originalPost.text\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-share-text\"\n    >\n      {{ originalPost.text }}\n    </oxd-text>\n  </post-modal>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdBuzzPostInput} from '@ohrm/oxd';\n\nexport default {\n  name: 'SharePostModal',\n\n  components: {\n    'post-modal': PostModal,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n  },\n\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props, context) {\n    const {locale} = useLocale();\n    const {saveSuccess} = useToast();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)],\n    };\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/buzz/shares',\n    );\n\n    const state = reactive({\n      post: {\n        text: null,\n      },\n      isLoading: false,\n    });\n\n    const onSubmit = () => {\n      state.isLoading = true;\n      http\n        .create({\n          text: state.post.text,\n          shareId: props.data.id,\n        })\n        .then(() => {\n          saveSuccess();\n          context.emit('close', true);\n        });\n    };\n\n    const originalPost = computed(() => {\n      const originalText = props.data.originalPost?.text || props.data.text;\n      const originalEmployee =\n        props.data.originalPost?.employee || props.data.employee;\n      const {createdDate, createdTime} = props.data.originalPost || props.data;\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return {\n        text: originalText,\n        employee: $tEmpName(originalEmployee, {\n          includeMiddle: true,\n          excludePastEmpTag: false,\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale,\n        }),\n      };\n    });\n\n    return {\n      rules,\n      onSubmit,\n      originalPost,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-share {\n  &-employee {\n    font-size: 0.9rem;\n  }\n  &-date {\n    font-size: 0.6rem;\n    color: $oxd-interface-gray-color;\n  }\n  &-text {\n    font-weight: 300;\n    margin-top: 0.5rem;\n    @include truncate(6, 1.5, #fff);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}