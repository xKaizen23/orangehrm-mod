{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-094f309e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"label-is-entitlement-situational\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_label = _resolveComponent(\"oxd-label\");\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_entitlement_situational_modal = _resolveComponent(\"entitlement-situational-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.edit_leave_type')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.leaveType.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leaveType.name = $event),\n        label: _ctx.$t('general.name'),\n        rules: $data.rules.name,\n        required: \"\"\n      }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            classes: {\n              wrapper: '--status-grouped-field'\n            }\n          }, {\n            label: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_label, {\n              label: _ctx.$t('leave.is_entitlement_situational')\n            }, null, 8, [\"label\"]), _createVNode(_component_oxd_icon_button, {\n              class: \"--help\",\n              name: \"exclamation-circle\",\n              \"with-container\": false,\n              onClick: $options.onModalOpen\n            }, null, 8, [\"onClick\"])])]),\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.leaveType.situational,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leaveType.situational = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.yes'),\n              value: true\n            }, null, 8, [\"modelValue\", \"option-label\"]), _createVNode(_component_oxd_input_field, {\n              modelValue: $data.leaveType.situational,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.leaveType.situational = $event),\n              type: \"radio\",\n              \"option-label\": _ctx.$t('general.no'),\n              value: false\n            }, null, 8, [\"modelValue\", \"option-label\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"]), $data.showModal ? (_openBlock(), _createBlock(_component_entitlement_situational_modal, {\n    key: 0,\n    onClose: $options.onModalClose\n  }, null, 8, [\"onClose\"])) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;EAqBlBA,KAAK,EAAC;AAAkC;;;;;;;;;;;;;;;;;uBAtB7DC,oBAqEM,OArENC,UAqEM,GApEJC,oBAmEM,OAnENC,UAmEM,GAlEJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAAiC,mCAA9BQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aAuDWK;IAvDAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAOe,CAPfT,aAOeU;wBANb,MAKE,CALFV,aAKEW;oBAJSJ,eAAS,CAACK,IAAI;mEAAdL,eAAS,CAACK,IAAI;QACtBC,KAAK,EAAEV,OAAE;QACTW,KAAK,EAAEP,WAAK,CAACK,IAAI;QAClBG,QAAQ,EAAR;;;QAGJf,aAgCeU;wBA/Bb,MA8BW,CA9BXV,aA8BWgB;QA9BAC,IAAI,EAAE,CAAC;QAAEtB,KAAK,EAAC;;0BACxB,MA4BgB,CA5BhBK,aA4BgBkB;4BA3Bd,MA0BkB,CA1BlBlB,aA0BkBmB;YA1BAC,OAAO,EAAE;cAAAC;YAAA;UAAmC;YACjDR,KAAK,WACd,MAUM,CAVNf,oBAUM,OAVNwB,UAUM,GATJtB,aAEEuB;cADCV,KAAK,EAAEV,OAAE;oCAEZH,aAKEwB;cAJA7B,KAAK,EAAC,QAAQ;cACdiB,IAAI,EAAC,oBAAoB;cACxB,gBAAc,EAAE,KAAK;cACrBa,OAAK,EAAEhB;;8BAId,MAKE,CALFT,aAKEW;0BAJSJ,eAAS,CAACmB,WAAW;yEAArBnB,eAAS,CAACmB,WAAW;cAC9BC,IAAI,EAAC,OAAO;cACX,cAAY,EAAExB,OAAE;cAChByB,KAAK,EAAE;yDAEV5B,aAKEW;0BAJSJ,eAAS,CAACmB,WAAW;yEAArBnB,eAAS,CAACmB,WAAW;cAC9BC,IAAI,EAAC,OAAO;cACX,cAAY,EAAExB,OAAE;cAChByB,KAAK,EAAE;;;;;;;;;QAOlB5B,aAAeI,yBAEfJ,aASmB6B;wBARjB,MAAiB,CAAjB7B,aAAiB8B,2BACjB9B,aAKE+B;QAJAJ,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBd,KAAK,EAAEV,OAAE;QACTsB,OAAK,EAAEhB;yCAEVT,aAAiBgC;;;;uCAIbzB,eAAS,kBADjB0B,aAGiCC;;IAD9BC,OAAK,EAAE1B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_input_field","name","label","rules","required","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_group","classes","wrapper","_hoisted_3","_component_oxd_label","_component_oxd_icon_button","onClick","situational","type","value","_component_oxd_form_actions","_component_required_text","_component_oxd_button","_component_submit_button","_createBlock","_component_entitlement_situational_modal","onClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\leaveType\\EditLeaveType.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('leave.edit_leave_type') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"leaveType.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-group :classes=\"{wrapper: '--status-grouped-field'}\">\n                <template #label>\n                  <div class=\"label-is-entitlement-situational\">\n                    <oxd-label\n                      :label=\"$t('leave.is_entitlement_situational')\"\n                    />\n                    <oxd-icon-button\n                      class=\"--help\"\n                      name=\"exclamation-circle\"\n                      :with-container=\"false\"\n                      @click=\"onModalOpen\"\n                    />\n                  </div>\n                </template>\n                <oxd-input-field\n                  v-model=\"leaveType.situational\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.yes')\"\n                  :value=\"true\"\n                />\n                <oxd-input-field\n                  v-model=\"leaveType.situational\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.no')\"\n                  :value=\"false\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n      <entitlement-situational-modal\n        v-if=\"showModal\"\n        @close=\"onModalClose\"\n      ></entitlement-situational-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport EntitlementSituationalModal from '@/orangehrmLeavePlugin/components/EntitlementSituationalModal';\nimport {OxdLabel} from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst leaveTypeModel = {\n  id: '',\n  name: '',\n  situational: '',\n};\n\nexport default {\n  components: {\n    'oxd-label': OxdLabel,\n    'entitlement-situational-modal': EntitlementSituationalModal,\n  },\n  props: {\n    leaveTypeId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-types',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const leaveTypeUniqueValidation = createUniqueValidator(\n      'LeaveType',\n      'name',\n      {entityId: props.leaveTypeId},\n    );\n    return {\n      http,\n      leaveTypeUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      showModal: false,\n      isLoading: false,\n      leaveType: {...leaveTypeModel},\n      rules: {\n        name: [\n          required,\n          this.leaveTypeUniqueValidation,\n          shouldNotExceedCharLength(50),\n        ],\n      },\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.leaveTypeId)\n      .then((response) => {\n        const {data} = response.data;\n        this.leaveType.id = data.id;\n        this.leaveType.name = data.name;\n        this.leaveType.situational = data.situational;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.leaveTypeId, {\n          name: this.leaveType.name,\n          situational: this.leaveType.situational,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/leave/leaveTypeList');\n    },\n    onModalOpen() {\n      this.showModal = true;\n    },\n    onModalClose() {\n      this.showModal = false;\n    },\n  },\n};\n</script>\n\n<style src=\"./leave-type.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}