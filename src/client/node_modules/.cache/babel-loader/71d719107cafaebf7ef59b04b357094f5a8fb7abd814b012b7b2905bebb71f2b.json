{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_selected_candidates = _resolveComponent(\"selected-candidates\");\n  const _component_maintenance_note = _resolveComponent(\"maintenance-note\");\n  const _component_purge_confirmation = _resolveComponent(\"purge-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_selected_candidates, {\n    loading: $data.isLoading,\n    onPurge: $options.onClickPurge\n  }, null, 8, [\"loading\", \"onPurge\"]), _hoisted_2, _createVNode(_component_maintenance_note, {\n    \"instance-identifier\": $props.instanceIdentifier\n  }, null, 8, [\"instance-identifier\"]), _createVNode(_component_purge_confirmation, {\n    ref: \"purgeDialog\",\n    title: _ctx.$t('maintenance.purge_candidates'),\n    subtitle: _ctx.$t('maintenance.purge_candidates_warning'),\n    \"cancel-label\": _ctx.$t('general.no_cancel'),\n    \"confirm-label\": _ctx.$t('maintenance.yes_purge')\n  }, null, 8, [\"title\", \"subtitle\", \"cancel-label\", \"confirm-label\"])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;gCAEzCC,oBAAM;;;;;uBAFRC,oBAYM,OAZNC,UAYM,GAXJC,aAAkEC;IAA5CC,OAAO,EAAEC,eAAS;IAAGC,OAAK,EAAEC;uCAClDC,UAAM,EACNN,aAA8DO;IAA3C,qBAAmB,EAAEC;EAAkB,sCAE1DR,aAMsBS;IALpBC,GAAG,EAAC,aAAa;IAChBC,KAAK,EAAEC,OAAE;IACTC,QAAQ,EAAED,OAAE;IACZ,cAAY,EAAEA,OAAE;IAChB,eAAa,EAAEA,OAAE","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_selected_candidates","loading","$data","onPurge","$options","_hoisted_2","_component_maintenance_note","$props","_component_purge_confirmation","ref","title","_ctx","subtitle"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmMaintenancePlugin\\pages\\PurgeCandidate.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <selected-candidates :loading=\"isLoading\" @purge=\"onClickPurge\" />\n    <br />\n    <maintenance-note :instance-identifier=\"instanceIdentifier\" />\n\n    <purge-confirmation\n      ref=\"purgeDialog\"\n      :title=\"$t('maintenance.purge_candidates')\"\n      :subtitle=\"$t('maintenance.purge_candidates_warning')\"\n      :cancel-label=\"$t('general.no_cancel')\"\n      :confirm-label=\"$t('maintenance.yes_purge')\"\n    ></purge-confirmation>\n  </div>\n</template>\n\n<script>\nimport {reloadPage} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport ConfirmationDialog from '@/core/components/dialogs/ConfirmationDialog';\nimport MaintenanceNote from '@/orangehrmMaintenancePlugin/components/MaintenanceNote';\nimport SelectedCandidates from '@/orangehrmMaintenancePlugin/components/SelectedCandidates';\n\nexport default {\n  name: 'PurgeCandidate',\n  components: {\n    'maintenance-note': MaintenanceNote,\n    'purge-confirmation': ConfirmationDialog,\n    'selected-candidates': SelectedCandidates,\n  },\n  props: {\n    instanceIdentifier: {\n      type: String,\n      default: null,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/maintenance/candidates/purge',\n    );\n\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n    };\n  },\n  methods: {\n    onClickPurge(vacancy) {\n      const vacancyId = vacancy;\n      this.$refs.purgeDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.purgeCandidates(vacancyId);\n        }\n      });\n    },\n    purgeCandidates(vacancyId) {\n      this.isLoading = true;\n      this.http\n        .deleteAll({\n          vacancyId,\n        })\n        .then(() => {\n          return this.$toast.success({\n            title: this.$t('general.success'),\n            message: this.$t('maintenance.purge_success'),\n          });\n        })\n        .then(() => {\n          reloadPage();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}