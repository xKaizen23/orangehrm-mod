{"ast":null,"code":"import useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport { onBeforeMount, reactive, ref, toRefs, watch } from 'vue';\nimport PostBody from '@/orangehrmBuzzPlugin/components/PostBody.vue';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats.vue';\nimport CreatePost from '@/orangehrmBuzzPlugin/components/CreatePost.vue';\nimport useInfiniteScroll from '@/core/util/composable/useInfiniteScroll';\nimport PostActions from '@/orangehrmBuzzPlugin/components/PostActions.vue';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport EditPostModal from '@/orangehrmBuzzPlugin/components/EditPostModal.vue';\nimport PhotoCarousel from '@/orangehrmBuzzPlugin/components/PhotoCarousel.vue';\nimport PostContainer from '@/orangehrmBuzzPlugin/components/PostContainer.vue';\nimport SharePostModal from '@/orangehrmBuzzPlugin/components/SharePostModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer.vue';\nimport { OxdSpinner } from '@ohrm/oxd';\nexport default {\n  name: 'NewsFeed',\n  components: {\n    'post-body': PostBody,\n    'post-stats': PostStats,\n    'create-post': CreatePost,\n    'post-actions': PostActions,\n    'oxd-loading-spinner': OxdSpinner,\n    'photo-carousel': PhotoCarousel,\n    'post-container': PostContainer,\n    'edit-post-modal': EditPostModal,\n    'share-post-modal': SharePostModal,\n    'post-comment-container': PostCommentContainer,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    employee: {\n      type: Object,\n      required: true\n    },\n    sortField: {\n      type: String,\n      required: true\n    },\n    mobile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const POST_LIMIT = 10;\n    const deleteDialog = ref();\n    const {\n      deleteSuccess\n    } = useToast();\n    const {\n      fetchPosts,\n      deletePost\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const noPostsPic = `${window.appGlobal.publicPath}/images/buzz_no_posts.svg`;\n    const state = reactive({\n      total: 0,\n      offset: 0,\n      posts: [],\n      isLoading: false,\n      showEditModal: false,\n      editModalState: null,\n      showShareModal: false,\n      shareModalState: null,\n      showPhotoCarousel: false,\n      photoCarouselState: null\n    });\n    const fetchData = () => {\n      state.isLoading = true;\n      fetchPosts(POST_LIMIT, state.offset, 'DESC', props.sortField).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        state.total = meta.total || 0;\n        if (Array.isArray(data)) {\n          state.posts = [...state.posts, ...data];\n        }\n      }).finally(() => state.isLoading = false);\n    };\n    useInfiniteScroll(() => {\n      if (state.posts.length >= state.total) return;\n      state.offset += POST_LIMIT;\n      fetchData();\n    });\n    const onLike = index => {\n      state.posts[index].liked = !state.posts[index].liked;\n      if (state.posts[index].liked) {\n        state.posts[index].stats.numOfLikes++;\n      } else {\n        state.posts[index].stats.numOfLikes--;\n      }\n    };\n    const onEdit = index => {\n      state.showEditModal = true;\n      state.editModalState = {\n        postIndex: index,\n        post: state.posts[index]\n      };\n      document.body.style.overflow = 'hidden';\n    };\n    const onShare = index => {\n      state.showShareModal = true;\n      state.shareModalState = state.posts[index];\n      document.body.style.overflow = 'hidden';\n    };\n    const onComment = index => {\n      if (state.posts[index].showComments) {\n        state.posts[index].showComments = false;\n      } else {\n        state.posts[index].showComments = true;\n      }\n    };\n    const resetFeed = () => {\n      state.posts = [];\n      state.offset = 0;\n      fetchData();\n    };\n    const onSelectPhoto = ($event, index) => {\n      state.photoCarouselState = {\n        postIndex: index,\n        photoIndex: $event,\n        post: state.posts[index]\n      };\n      state.showPhotoCarousel = true;\n      document.body.style.overflow = 'hidden';\n    };\n    const onClosePhotoCarousel = () => {\n      state.showPhotoCarousel = false;\n      state.photoCarouselState = null;\n      document.body.style.overflow = 'auto';\n    };\n    const onCloseShareModal = $event => {\n      state.showShareModal = false;\n      state.shareModalState = null;\n      document.body.style.overflow = 'auto';\n      if ($event) resetFeed();\n    };\n    const onCloseEditModal = $event => {\n      const {\n        data\n      } = $event;\n      if (data) state.posts[state.editModalState.postIndex] = {\n        ...data\n      };\n      state.showEditModal = false;\n      state.editModalState = null;\n      document.body.style.overflow = 'auto';\n    };\n    const onDelete = index => {\n      deleteDialog.value.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          deletePost(state.posts[index].id).then(() => {\n            resetFeed();\n            deleteSuccess();\n          });\n        }\n      });\n    };\n    const onCreateComment = index => {\n      state.posts[index].stats.numOfComments++;\n    };\n    const onDeleteComment = index => {\n      state.posts[index].stats.numOfComments--;\n    };\n    onBeforeMount(() => fetchData());\n    watch(() => props.sortField, () => {\n      state.posts = [];\n      state.offset = 0;\n      fetchData();\n    });\n    return {\n      onLike,\n      onEdit,\n      onShare,\n      onDelete,\n      resetFeed,\n      onComment,\n      noPostsPic,\n      deleteDialog,\n      onSelectPhoto,\n      onCreateComment,\n      onDeleteComment,\n      onCloseEditModal,\n      onCloseShareModal,\n      onClosePhotoCarousel,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["useToast","APIService","onBeforeMount","reactive","ref","toRefs","watch","PostBody","PostStats","CreatePost","useInfiniteScroll","PostActions","useBuzzAPIs","EditPostModal","PhotoCarousel","PostContainer","SharePostModal","DeleteConfirmationDialog","PostCommentContainer","OxdSpinner","name","components","props","employee","type","Object","required","sortField","String","mobile","Boolean","default","setup","POST_LIMIT","deleteDialog","deleteSuccess","fetchPosts","deletePost","window","appGlobal","baseUrl","noPostsPic","publicPath","state","total","offset","posts","isLoading","showEditModal","editModalState","showShareModal","shareModalState","showPhotoCarousel","photoCarouselState","fetchData","then","response","data","meta","Array","isArray","finally","length","onLike","index","liked","stats","numOfLikes","onEdit","postIndex","post","document","body","style","overflow","onShare","onComment","showComments","resetFeed","onSelectPhoto","$event","photoIndex","onClosePhotoCarousel","onCloseShareModal","onCloseEditModal","onDelete","value","showDialog","confirmation","id","onCreateComment","numOfComments","onDeleteComment"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\NewsFeed.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-newsfeed\">\n    <oxd-text type=\"card-title\" class=\"orangehrm-buzz-newsfeed-title\">\n      {{ $t('buzz.buzz_newsfeed') }}\n    </oxd-text>\n\n    <create-post\n      :key=\"posts\"\n      :employee=\"employee\"\n      @refresh=\"resetFeed\"\n    ></create-post>\n    <slot></slot>\n\n    <oxd-grid :cols=\"1\" class=\"orangehrm-buzz-newsfeed-posts\">\n      <oxd-grid-item v-for=\"(post, index) in posts\" :key=\"post\">\n        <post-container\n          :post=\"post\"\n          @edit=\"onEdit(index)\"\n          @delete=\"onDelete(index)\"\n        >\n          <template #content>\n            <post-body\n              :post=\"post\"\n              @select-photo=\"onSelectPhoto($event, index)\"\n            ></post-body>\n          </template>\n          <template #actionButton>\n            <post-actions\n              :post=\"post\"\n              @like=\"onLike(index)\"\n              @share=\"onShare(index)\"\n              @comment=\"onComment(index)\"\n            ></post-actions>\n          </template>\n          <template #postStats>\n            <post-stats\n              :post=\"post\"\n              :mobile=\"mobile\"\n              @comment=\"onComment(index)\"\n            ></post-stats>\n          </template>\n          <template v-if=\"post.showComments\" #comments>\n            <oxd-divider />\n            <post-comment-container\n              :post-id=\"post.id\"\n              :employee=\"employee\"\n              @create=\"onCreateComment(index)\"\n              @delete=\"onDeleteComment(index)\"\n            ></post-comment-container>\n          </template>\n        </post-container>\n      </oxd-grid-item>\n\n      <oxd-grid-item\n        v-show=\"!isLoading && posts.length === 0\"\n        class=\"orangehrm-buzz-newsfeed-noposts\"\n      >\n        <img :src=\"noPostsPic\" alt=\"No Posts\" />\n        <oxd-text tag=\"p\">\n          {{ $t('buzz.no_posts_available') }}\n        </oxd-text>\n      </oxd-grid-item>\n    </oxd-grid>\n    <oxd-loading-spinner\n      v-if=\"isLoading\"\n      class=\"orangehrm-buzz-newsfeed-loader\"\n    />\n  </div>\n\n  <edit-post-modal\n    v-if=\"showEditModal\"\n    :employee=\"employee\"\n    :data=\"editModalState.post\"\n    @close=\"onCloseEditModal\"\n  ></edit-post-modal>\n  <share-post-modal\n    v-if=\"showShareModal\"\n    :employee=\"employee\"\n    :data=\"shareModalState\"\n    @close=\"onCloseShareModal\"\n  ></share-post-modal>\n  <photo-carousel\n    v-if=\"showPhotoCarousel\"\n    :mobile=\"mobile\"\n    :post=\"photoCarouselState.post\"\n    :photo-index=\"photoCarouselState.photoIndex\"\n    @close=\"onClosePhotoCarousel\"\n    @like=\"onLike(photoCarouselState.postIndex)\"\n    @create-comment=\"onCreateComment(photoCarouselState.postIndex)\"\n    @delete-comment=\"onDeleteComment(photoCarouselState.postIndex)\"\n  ></photo-carousel>\n  <delete-confirmation\n    ref=\"deleteDialog\"\n    :message=\"$t('buzz.post_delete_confirmation_message')\"\n  ></delete-confirmation>\n</template>\n\n<script>\nimport useToast from '@/core/util/composable/useToast';\nimport {APIService} from '@/core/util/services/api.service';\nimport {onBeforeMount, reactive, ref, toRefs, watch} from 'vue';\nimport PostBody from '@/orangehrmBuzzPlugin/components/PostBody.vue';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats.vue';\nimport CreatePost from '@/orangehrmBuzzPlugin/components/CreatePost.vue';\nimport useInfiniteScroll from '@/core/util/composable/useInfiniteScroll';\nimport PostActions from '@/orangehrmBuzzPlugin/components/PostActions.vue';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport EditPostModal from '@/orangehrmBuzzPlugin/components/EditPostModal.vue';\nimport PhotoCarousel from '@/orangehrmBuzzPlugin/components/PhotoCarousel.vue';\nimport PostContainer from '@/orangehrmBuzzPlugin/components/PostContainer.vue';\nimport SharePostModal from '@/orangehrmBuzzPlugin/components/SharePostModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer.vue';\nimport {OxdSpinner} from '@ohrm/oxd';\n\nexport default {\n  name: 'NewsFeed',\n\n  components: {\n    'post-body': PostBody,\n    'post-stats': PostStats,\n    'create-post': CreatePost,\n    'post-actions': PostActions,\n    'oxd-loading-spinner': OxdSpinner,\n    'photo-carousel': PhotoCarousel,\n    'post-container': PostContainer,\n    'edit-post-modal': EditPostModal,\n    'share-post-modal': SharePostModal,\n    'post-comment-container': PostCommentContainer,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    employee: {\n      type: Object,\n      required: true,\n    },\n    sortField: {\n      type: String,\n      required: true,\n    },\n    mobile: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const POST_LIMIT = 10;\n    const deleteDialog = ref();\n    const {deleteSuccess} = useToast();\n    const {fetchPosts, deletePost} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n    const noPostsPic = `${window.appGlobal.publicPath}/images/buzz_no_posts.svg`;\n\n    const state = reactive({\n      total: 0,\n      offset: 0,\n      posts: [],\n      isLoading: false,\n      showEditModal: false,\n      editModalState: null,\n      showShareModal: false,\n      shareModalState: null,\n      showPhotoCarousel: false,\n      photoCarouselState: null,\n    });\n\n    const fetchData = () => {\n      state.isLoading = true;\n      fetchPosts(POST_LIMIT, state.offset, 'DESC', props.sortField)\n        .then((response) => {\n          const {data, meta} = response.data;\n          state.total = meta.total || 0;\n          if (Array.isArray(data)) {\n            state.posts = [...state.posts, ...data];\n          }\n        })\n        .finally(() => (state.isLoading = false));\n    };\n\n    useInfiniteScroll(() => {\n      if (state.posts.length >= state.total) return;\n      state.offset += POST_LIMIT;\n      fetchData();\n    });\n\n    const onLike = (index) => {\n      state.posts[index].liked = !state.posts[index].liked;\n      if (state.posts[index].liked) {\n        state.posts[index].stats.numOfLikes++;\n      } else {\n        state.posts[index].stats.numOfLikes--;\n      }\n    };\n\n    const onEdit = (index) => {\n      state.showEditModal = true;\n      state.editModalState = {\n        postIndex: index,\n        post: state.posts[index],\n      };\n      document.body.style.overflow = 'hidden';\n    };\n\n    const onShare = (index) => {\n      state.showShareModal = true;\n      state.shareModalState = state.posts[index];\n      document.body.style.overflow = 'hidden';\n    };\n\n    const onComment = (index) => {\n      if (state.posts[index].showComments) {\n        state.posts[index].showComments = false;\n      } else {\n        state.posts[index].showComments = true;\n      }\n    };\n\n    const resetFeed = () => {\n      state.posts = [];\n      state.offset = 0;\n      fetchData();\n    };\n\n    const onSelectPhoto = ($event, index) => {\n      state.photoCarouselState = {\n        postIndex: index,\n        photoIndex: $event,\n        post: state.posts[index],\n      };\n      state.showPhotoCarousel = true;\n      document.body.style.overflow = 'hidden';\n    };\n\n    const onClosePhotoCarousel = () => {\n      state.showPhotoCarousel = false;\n      state.photoCarouselState = null;\n      document.body.style.overflow = 'auto';\n    };\n\n    const onCloseShareModal = ($event) => {\n      state.showShareModal = false;\n      state.shareModalState = null;\n      document.body.style.overflow = 'auto';\n      if ($event) resetFeed();\n    };\n\n    const onCloseEditModal = ($event) => {\n      const {data} = $event;\n      if (data) state.posts[state.editModalState.postIndex] = {...data};\n      state.showEditModal = false;\n      state.editModalState = null;\n      document.body.style.overflow = 'auto';\n    };\n\n    const onDelete = (index) => {\n      deleteDialog.value.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          deletePost(state.posts[index].id).then(() => {\n            resetFeed();\n            deleteSuccess();\n          });\n        }\n      });\n    };\n\n    const onCreateComment = (index) => {\n      state.posts[index].stats.numOfComments++;\n    };\n\n    const onDeleteComment = (index) => {\n      state.posts[index].stats.numOfComments--;\n    };\n\n    onBeforeMount(() => fetchData());\n\n    watch(\n      () => props.sortField,\n      () => {\n        state.posts = [];\n        state.offset = 0;\n        fetchData();\n      },\n    );\n\n    return {\n      onLike,\n      onEdit,\n      onShare,\n      onDelete,\n      resetFeed,\n      onComment,\n      noPostsPic,\n      deleteDialog,\n      onSelectPhoto,\n      onCreateComment,\n      onDeleteComment,\n      onCloseEditModal,\n      onCloseShareModal,\n      onClosePhotoCarousel,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style src=\"./news-feed.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}