{"ast":null,"code":"import { required, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport ClaimEventDropdownVue from '../../components/ClaimEventDropdown.vue';\nconst claimRequest = {\n  event: null,\n  currency: null,\n  remarks: null\n};\nexport default {\n  name: 'SubmitClaimRequest',\n  components: {\n    'claim-event-dropdown': ClaimEventDropdownVue\n  },\n  props: {\n    currencies: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/claim/requests');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      request: {\n        ...claimRequest\n      },\n      id: 0,\n      rules: {\n        event: [required],\n        currency: [required],\n        remarks: [shouldNotExceedCharLength(1000)]\n      }\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/claim/viewClaim');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        claimEventId: this.request.event.id,\n        currencyId: this.request.currency.id,\n        remarks: this.request.remarks\n      }).then(res => {\n        this.id = res.data.data.id;\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        navigate('/claim/submitClaim/id/{id}', {\n          id: this.id\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAiFA,SACEA,QAAQ,EACRC,yBAAyB,QACpB,8BAA8B;AACrC,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,OAAOC,qBAAoB,MAAO,yCAAyC;AAE3E,MAAMC,YAAW,GAAI;EACnBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE;AACX,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAE1BC,UAAU,EAAE;IACV,sBAAsB,EAAEN;EAC1B,CAAC;EAEDO,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EAEDC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIf,UAAU,CACzBgB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,wBAAwB,CACzB;IAED,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;QAAC,GAAGlB;MAAY,CAAC;MAC1BmB,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;QACLnB,KAAK,EAAE,CAACN,QAAQ,CAAC;QACjBO,QAAQ,EAAE,CAACP,QAAQ,CAAC;QACpBQ,OAAO,EAAE,CAACP,yBAAyB,CAAC,IAAI,CAAC;MAC3C;IACF,CAAC;EACH,CAAC;EAEDyB,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTxB,QAAQ,CAAC,kBAAkB,CAAC;IAC9B,CAAC;IACDyB,MAAM,GAAG;MACP,IAAI,CAACN,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLY,MAAM,CAAC;QACNC,YAAY,EAAE,IAAI,CAACP,OAAO,CAACjB,KAAK,CAACkB,EAAE;QACnCO,UAAU,EAAE,IAAI,CAACR,OAAO,CAAChB,QAAQ,CAACiB,EAAE;QACpChB,OAAO,EAAE,IAAI,CAACe,OAAO,CAACf;MACxB,CAAC,EACAwB,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACT,EAAC,GAAIS,GAAG,CAACZ,IAAI,CAACA,IAAI,CAACG,EAAE;QAC1B,OAAO,IAAI,CAACU,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAH,IAAI,CAAC,MAAM;QACV7B,QAAQ,CAAC,4BAA4B,EAAE;UAACqB,EAAE,EAAE,IAAI,CAACA;QAAE,CAAC,CAAC;MACvD,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["required","shouldNotExceedCharLength","APIService","navigate","ClaimEventDropdownVue","claimRequest","event","currency","remarks","name","components","props","currencies","type","Array","default","setup","http","window","appGlobal","baseUrl","data","isLoading","request","id","rules","methods","onCancel","onSave","create","claimEventId","currencyId","then","res","$toast","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\submitClaim\\SubmitClaimRequest.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('claim.create_claim_request') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <claim-event-dropdown\n                v-model=\"request.event\"\n                :rules=\"rules.event\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"request.currency\"\n                type=\"select\"\n                :rules=\"rules.currency\"\n                :options=\"currencies\"\n                :label=\"$t('general.currency')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"--span-column-2\">\n              <oxd-input-field\n                v-model=\"request.remarks\"\n                type=\"textarea\"\n                :label=\"$t('claim.remarks')\"\n                :rules=\"rules.remarks\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button :label=\"$t('claim.create')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport ClaimEventDropdownVue from '../../components/ClaimEventDropdown.vue';\n\nconst claimRequest = {\n  event: null,\n  currency: null,\n  remarks: null,\n};\n\nexport default {\n  name: 'SubmitClaimRequest',\n\n  components: {\n    'claim-event-dropdown': ClaimEventDropdownVue,\n  },\n\n  props: {\n    currencies: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/claim/requests',\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      request: {...claimRequest},\n      id: 0,\n      rules: {\n        event: [required],\n        currency: [required],\n        remarks: [shouldNotExceedCharLength(1000)],\n      },\n    };\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/claim/viewClaim');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          claimEventId: this.request.event.id,\n          currencyId: this.request.currency.id,\n          remarks: this.request.remarks,\n        })\n        .then((res) => {\n          this.id = res.data.data.id;\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          navigate('/claim/submitClaim/id/{id}', {id: this.id});\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}