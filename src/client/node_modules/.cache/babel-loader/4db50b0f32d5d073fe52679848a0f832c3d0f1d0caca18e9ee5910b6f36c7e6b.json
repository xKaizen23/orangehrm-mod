{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { required, shouldNotExceedCharLength, validSelection } from '@/core/util/validation/rules';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeavePeriodDropdown from '@/orangehrmLeavePlugin/components/LeavePeriodDropdown';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst defaultFilters = {\n  type: 'leave_type_leave_entitlements_and_usage',\n  employee: null,\n  leavePeriod: null,\n  leaveType: null,\n  subunit: null,\n  location: null,\n  jobTitle: null,\n  includePastEmps: false\n};\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'oxd-switch-input': OxdSwitchInput,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-period-dropdown': LeavePeriodDropdown,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    locations: {\n      type: Array,\n      default: () => []\n    },\n    subunits: {\n      type: Array,\n      default: () => []\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null\n    }\n  },\n  setup(props) {\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.leavePeriod && {\n        leavePeriod: props.leavePeriod\n      })\n    });\n    const rules = ref({\n      employee: [required, shouldNotExceedCharLength(100), validSelection],\n      leavePeriod: [required],\n      leaveType: [required]\n    });\n    const serializedFilters = computed(() => {\n      if (filters.value.type === 'leave_type_leave_entitlements_and_usage') {\n        return {\n          name: filters.value.type,\n          fromDate: filters.value.leavePeriod?.startDate,\n          toDate: filters.value.leavePeriod?.endDate,\n          subunitId: filters.value.subunit?.id,\n          leaveTypeId: filters.value.leaveType?.id,\n          locationId: filters.value.location?.id,\n          jobTitleId: filters.value.jobTitle?.id,\n          includeEmployees: filters.value.includePastEmps ? 'currentAndPast' : 'onlyCurrent'\n        };\n      } else {\n        return {\n          name: filters.value.type,\n          empNumber: filters.value.employee?.id,\n          fromDate: filters.value.leavePeriod?.startDate,\n          toDate: filters.value.leavePeriod?.endDate\n        };\n      }\n    });\n    return {\n      rules,\n      filters,\n      serializedFilters\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","required","shouldNotExceedCharLength","validSelection","ReportsTable","JobtitleDropdown","EmployeeAutocomplete","LeaveTypeDropdown","LeavePeriodDropdown","OxdSwitchInput","defaultFilters","type","employee","leavePeriod","leaveType","subunit","location","jobTitle","includePastEmps","components","props","locations","Array","default","subunits","Object","setup","filters","rules","serializedFilters","value","name","fromDate","startDate","toDate","endDate","subunitId","id","leaveTypeId","locationId","jobTitleId","includeEmployees","empNumber"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\reports\\LeaveEntitlementReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <reports-table\n    module=\"leave\"\n    :name=\"filters.type\"\n    :filters=\"serializedFilters\"\n    :column-count=\"6\"\n  >\n    <template #default=\"{generateReport}\">\n      <oxd-table-filter\n        :filter-title=\"$t('leave.leave_entitlement_and_usage_report')\"\n      >\n        <oxd-form @submit-valid=\"generateReport\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <oxd-input-group\n                  :label=\"$t('leave.generate_for')\"\n                  :classes=\"{wrapper: '--grouped-field'}\"\n                >\n                  <oxd-input-field\n                    v-model=\"filters.type\"\n                    type=\"radio\"\n                    :option-label=\"$t('leave.leave_type')\"\n                    value=\"leave_type_leave_entitlements_and_usage\"\n                  />\n                  <oxd-input-field\n                    v-model=\"filters.type\"\n                    type=\"radio\"\n                    :option-label=\"$t('general.employee')\"\n                    value=\"employee_leave_entitlements_and_usage\"\n                  />\n                </oxd-input-group>\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-form-row\n            v-if=\"filters.type === 'leave_type_leave_entitlements_and_usage'\"\n          >\n            <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <leave-type-dropdown\n                  v-model=\"filters.leaveType\"\n                  :empty-text=\"$t('leave.no_leave_types_defined')\"\n                  :eligible-only=\"false\"\n                  :show-empty-selector=\"false\"\n                  :rules=\"rules.leaveType\"\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <leave-period-dropdown\n                  v-model=\"filters.leavePeriod\"\n                  :rules=\"rules.leavePeriod\"\n                  required\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"filters.location\"\n                  type=\"select\"\n                  :label=\"$t('general.location')\"\n                  :options=\"locations\"\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <oxd-input-field\n                  v-model=\"filters.subunit\"\n                  type=\"select\"\n                  :label=\"$t('general.sub_unit')\"\n                  :options=\"subunits\"\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <jobtitle-dropdown v-model=\"filters.jobTitle\" />\n              </oxd-grid-item>\n              <oxd-grid-item class=\"orangehrm-leave-filter --span-column-2\">\n                <oxd-text class=\"orangehrm-leave-filter-text\" tag=\"p\">\n                  {{ $t('leave.include_past_employees') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"filters.includePastEmps\" />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-form-row v-else>\n            <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <employee-autocomplete\n                  v-model=\"filters.employee\"\n                  :rules=\"rules.employee\"\n                  :params=\"{\n                    includeEmployees: 'currentAndPast',\n                  }\"\n                  required\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <leave-period-dropdown\n                  v-model=\"filters.leavePeriod\"\n                  :rules=\"rules.leavePeriod\"\n                  required\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-divider />\n\n          <oxd-form-actions>\n            <required-text />\n            <oxd-button\n              type=\"submit\"\n              display-type=\"secondary\"\n              class=\"orangehrm-left-space\"\n              :label=\"$t('general.generate')\"\n            />\n          </oxd-form-actions>\n        </oxd-form>\n      </oxd-table-filter>\n      <br />\n    </template>\n  </reports-table>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\nimport LeavePeriodDropdown from '@/orangehrmLeavePlugin/components/LeavePeriodDropdown';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst defaultFilters = {\n  type: 'leave_type_leave_entitlements_and_usage',\n  employee: null,\n  leavePeriod: null,\n  leaveType: null,\n  subunit: null,\n  location: null,\n  jobTitle: null,\n  includePastEmps: false,\n};\n\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'oxd-switch-input': OxdSwitchInput,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'leave-period-dropdown': LeavePeriodDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  props: {\n    locations: {\n      type: Array,\n      default: () => [],\n    },\n    subunits: {\n      type: Array,\n      default: () => [],\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.leavePeriod && {leavePeriod: props.leavePeriod}),\n    });\n    const rules = ref({\n      employee: [required, shouldNotExceedCharLength(100), validSelection],\n      leavePeriod: [required],\n      leaveType: [required],\n    });\n\n    const serializedFilters = computed(() => {\n      if (filters.value.type === 'leave_type_leave_entitlements_and_usage') {\n        return {\n          name: filters.value.type,\n          fromDate: filters.value.leavePeriod?.startDate,\n          toDate: filters.value.leavePeriod?.endDate,\n          subunitId: filters.value.subunit?.id,\n          leaveTypeId: filters.value.leaveType?.id,\n          locationId: filters.value.location?.id,\n          jobTitleId: filters.value.jobTitle?.id,\n          includeEmployees: filters.value.includePastEmps\n            ? 'currentAndPast'\n            : 'onlyCurrent',\n        };\n      } else {\n        return {\n          name: filters.value.type,\n          empNumber: filters.value.employee?.id,\n          fromDate: filters.value.leavePeriod?.startDate,\n          toDate: filters.value.leavePeriod?.endDate,\n        };\n      }\n    });\n\n    return {\n      rules,\n      filters,\n      serializedFilters,\n    };\n  },\n};\n</script>\n\n<style src=\"./leave-entitlement-report.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}