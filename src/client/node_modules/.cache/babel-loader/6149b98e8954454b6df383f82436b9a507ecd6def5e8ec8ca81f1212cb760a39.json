{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.edit_skill')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.skill.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.skill.name = $event),\n        label: _ctx.$t('general.name'),\n        rules: $data.rules.name,\n        required: \"\"\n      }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.skill.description,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.skill.description = $event),\n        type: \"textarea\",\n        label: _ctx.$t('general.description'),\n        placeholder: _ctx.$t('general.type_description_here'),\n        rules: $data.rules.description\n      }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;uBADvCC,oBA0CM,OA1CNC,UA0CM,GAzCJC,oBAwCM,OAxCNC,UAwCM,GAvCJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAA8B,mCAA3BQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aAgCWK;IAhCAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAOe,CAPfT,aAOeU;wBANb,MAKE,CALFV,aAKEW;oBAJSJ,WAAK,CAACK,IAAI;mEAAVL,WAAK,CAACK,IAAI;QAClBC,KAAK,EAAEV,OAAE;QACTW,KAAK,EAAEP,WAAK,CAACK,IAAI;QAClBG,QAAQ,EAAR;;;QAIJf,aAQeU;wBAPb,MAME,CANFV,aAMEW;oBALSJ,WAAK,CAACS,WAAW;mEAAjBT,WAAK,CAACS,WAAW;QAC1BC,IAAI,EAAC,UAAU;QACdJ,KAAK,EAAEV,OAAE;QACTe,WAAW,EAAEf,OAAE;QACfW,KAAK,EAAEP,WAAK,CAACS;;;QAIlBhB,aAAeI,yBAEfJ,aASmBmB;wBARjB,MAAiB,CAAjBnB,aAAiBoB,2BACjBpB,aAKEqB;QAJAJ,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBJ,KAAK,EAAEV,OAAE;QACTmB,OAAK,EAAEb;yCAEVT,aAAiBuB","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_input_field","name","label","rules","required","description","type","placeholder","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\qualificationSkill\\EditQualificationSkill.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.edit_skill') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"skill.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"skill.description\"\n            type=\"textarea\"\n            :label=\"$t('general.description')\"\n            :placeholder=\"$t('general.type_description_here')\"\n            :rules=\"rules.description\"\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst skillModel = {\n  id: '',\n  name: '',\n  description: '',\n};\n\nexport default {\n  props: {\n    qualificationSkillId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/skills',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const skillUniqueValidation = createUniqueValidator('Skill', 'name', {\n      entityId: props.qualificationSkillId,\n    });\n\n    return {\n      http,\n      skillUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      skill: {...skillModel},\n      rules: {\n        name: [\n          required,\n          shouldNotExceedCharLength(120),\n          this.skillUniqueValidation,\n        ],\n        description: [shouldNotExceedCharLength(400)],\n      },\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.qualificationSkillId)\n      .then((response) => {\n        const {data} = response.data;\n        this.skill.id = data.id;\n        this.skill.name = data.name;\n        this.skill.description = data.description;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.qualificationSkillId, {\n          name: this.skill.name,\n          description: this.skill.description,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/admin/viewSkills');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}