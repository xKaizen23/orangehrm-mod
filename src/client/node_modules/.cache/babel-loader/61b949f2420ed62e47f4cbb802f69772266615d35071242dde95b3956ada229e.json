{"ast":null,"code":"import { computed, reactive, toRefs } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoInput from '@/orangehrmBuzzPlugin/components/PhotoInput';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { OxdBuzzPostInput } from '@ohrm/oxd';\nexport default {\n  name: 'SharePhotoModal',\n  components: {\n    'post-modal': PostModal,\n    'photo-input': PhotoInput,\n    'oxd-buzz-post-input': OxdBuzzPostInput\n  },\n  props: {\n    text: {\n      type: String,\n      default: null\n    }\n  },\n  emits: ['close'],\n  setup(props, context) {\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)]\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n    const state = reactive({\n      post: {\n        text: props.text || null,\n        photos: []\n      },\n      isLoading: false\n    });\n    const onSubmit = () => {\n      state.isLoading = true;\n      http.create({\n        type: 'photo',\n        text: state.post.text,\n        photos: state.post.photos\n      }).then(() => context.emit('close', true));\n    };\n    const isDisabled = computed(() => state.post.photos.length === 0);\n    return {\n      rules,\n      onSubmit,\n      isDisabled,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"AAwCA,SAAQA,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,QAAO,KAAK;AAC9C,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,SAAQ,MAAO,4CAA4C;AAClE,OAAOC,UAAS,MAAO,6CAA6C;AACpE,SAAQC,yBAAyB,QAAO,8BAA8B;AACtE,SAAQC,gBAAgB,QAAO,WAAW;AAE1C,eAAe;EACbC,IAAI,EAAE,iBAAiB;EAEvBC,UAAU,EAAE;IACV,YAAY,EAAEL,SAAS;IACvB,aAAa,EAAEC,UAAU;IACzB,qBAAqB,EAAEE;EACzB,CAAC;EAEDG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,OAAO,CAAC;EAEhBC,KAAK,CAACN,KAAK,EAAEO,OAAO,EAAE;IACpB,MAAMC,KAAI,GAAI;MACZP,IAAI,EAAE,CAACL,yBAAyB,CAAC,KAAK,CAAC;IACzC,CAAC;IACD,MAAMa,IAAG,GAAI,IAAIhB,UAAU,CAACiB,MAAM,CAACC,SAAS,CAACC,OAAO,EAAE,oBAAoB,CAAC;IAE3E,MAAMC,KAAI,GAAItB,QAAQ,CAAC;MACrBuB,IAAI,EAAE;QACJb,IAAI,EAAED,KAAK,CAACC,IAAG,IAAK,IAAI;QACxBc,MAAM,EAAE;MACV,CAAC;MACDC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,QAAO,GAAI,MAAM;MACrBJ,KAAK,CAACG,SAAQ,GAAI,IAAI;MACtBP,IAAG,CACAS,MAAM,CAAC;QACNhB,IAAI,EAAE,OAAO;QACbD,IAAI,EAAEY,KAAK,CAACC,IAAI,CAACb,IAAI;QACrBc,MAAM,EAAEF,KAAK,CAACC,IAAI,CAACC;MACrB,CAAC,EACAI,IAAI,CAAC,MAAMZ,OAAO,CAACa,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,MAAMC,UAAS,GAAI/B,QAAQ,CAAC,MAAMuB,KAAK,CAACC,IAAI,CAACC,MAAM,CAACO,MAAK,KAAM,CAAC,CAAC;IAEjE,OAAO;MACLd,KAAK;MACLS,QAAQ;MACRI,UAAU;MACV,GAAG7B,MAAM,CAACqB,KAAK;IACjB,CAAC;EACH;AACF,CAAC","names":["computed","reactive","toRefs","APIService","PostModal","PhotoInput","shouldNotExceedCharLength","OxdBuzzPostInput","name","components","props","text","type","String","default","emits","setup","context","rules","http","window","appGlobal","baseUrl","state","post","photos","isLoading","onSubmit","create","then","emit","isDisabled","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\SharePhotoModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <post-modal\n    :loading=\"isLoading\"\n    :disabled=\"isDisabled\"\n    :title=\"$t('buzz.share_photos')\"\n    @submit=\"onSubmit\"\n    @close=\"$emit('close', false)\"\n  >\n    <template #header>\n      <oxd-buzz-post-input\n        v-model=\"post.text\"\n        :rules=\"rules.text\"\n        :placeholder=\"$t('buzz.post_placeholder')\"\n      >\n      </oxd-buzz-post-input>\n    </template>\n    <photo-input v-model=\"post.photos\" />\n  </post-modal>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoInput from '@/orangehrmBuzzPlugin/components/PhotoInput';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport {OxdBuzzPostInput} from '@ohrm/oxd';\n\nexport default {\n  name: 'SharePhotoModal',\n\n  components: {\n    'post-modal': PostModal,\n    'photo-input': PhotoInput,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n  },\n\n  props: {\n    text: {\n      type: String,\n      default: null,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props, context) {\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)],\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n\n    const state = reactive({\n      post: {\n        text: props.text || null,\n        photos: [],\n      },\n      isLoading: false,\n    });\n\n    const onSubmit = () => {\n      state.isLoading = true;\n      http\n        .create({\n          type: 'photo',\n          text: state.post.text,\n          photos: state.post.photos,\n        })\n        .then(() => context.emit('close', true));\n    };\n\n    const isDisabled = computed(() => state.post.photos.length === 0);\n\n    return {\n      rules,\n      onSubmit,\n      isDisabled,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}