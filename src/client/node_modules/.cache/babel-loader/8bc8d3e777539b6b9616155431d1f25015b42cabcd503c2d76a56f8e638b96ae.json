{"ast":null,"code":"import { ref } from 'vue';\nimport { OxdBuzzPostInput, OxdGlassButton, OxdSheet } from '@ohrm/oxd';\nimport useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport ShareVideoModal from '@/orangehrmBuzzPlugin/components/ShareVideoModal';\nimport SharePhotoModal from '@/orangehrmBuzzPlugin/components/SharePhotoModal';\nexport default {\n  name: 'CreatePost',\n  components: {\n    'oxd-sheet': OxdSheet,\n    'profile-image': ProfileImage,\n    'oxd-glass-button': OxdGlassButton,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n    'share-video-modal': ShareVideoModal,\n    'share-photo-modal': SharePhotoModal\n  },\n  props: {\n    employee: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['refresh'],\n  setup(_, context) {\n    const post = ref(null);\n    const {\n      saveSuccess\n    } = useToast();\n    const showVideoModal = ref(false);\n    const showPhotoModal = ref(false);\n    const rules = [shouldNotExceedCharLength(65530)];\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n    const onSubmit = () => {\n      if (post.value === null || String(post.value).trim() === '') return;\n      http.create({\n        type: 'text',\n        text: post.value\n      }).then(() => {\n        saveSuccess();\n        post.value = null;\n        context.emit('refresh');\n      });\n    };\n    const onClickSharePhotos = () => {\n      showPhotoModal.value = true;\n    };\n    const onClickShareVideos = () => {\n      showVideoModal.value = true;\n    };\n    const onCloseVideoModal = $event => {\n      showVideoModal.value = false;\n      if ($event) {\n        saveSuccess();\n        context.emit('refresh');\n      }\n    };\n    const onClosePhotoModal = $event => {\n      showPhotoModal.value = false;\n      if ($event) {\n        saveSuccess();\n        context.emit('refresh');\n      }\n    };\n    return {\n      post,\n      rules,\n      onSubmit,\n      showVideoModal,\n      showPhotoModal,\n      onCloseVideoModal,\n      onClosePhotoModal,\n      onClickSharePhotos,\n      onClickShareVideos\n    };\n  }\n};","map":{"version":3,"mappings":"AAgEA,SAAQA,GAAG,QAAO,KAAK;AACvB,SAAQC,gBAAgB,EAAEC,cAAc,EAAEC,QAAQ,QAAO,WAAW;AACpE,OAAOC,QAAO,MAAO,iCAAiC;AACtD,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,SAAQC,yBAAyB,QAAO,8BAA8B;AACtE,OAAOC,YAAW,MAAO,+CAA+C;AACxE,OAAOC,eAAc,MAAO,kDAAkD;AAC9E,OAAOC,eAAc,MAAO,kDAAkD;AAE9E,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACV,WAAW,EAAER,QAAQ;IACrB,eAAe,EAAEI,YAAY;IAC7B,kBAAkB,EAAEL,cAAc;IAClC,qBAAqB,EAAED,gBAAgB;IACvC,mBAAmB,EAAEO,eAAe;IACpC,mBAAmB,EAAEC;EACvB,CAAC;EAEDG,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,SAAS,CAAC;EAElBC,KAAK,CAACC,CAAC,EAAEC,OAAO,EAAE;IAChB,MAAMC,IAAG,GAAIrB,GAAG,CAAC,IAAI,CAAC;IACtB,MAAM;MAACsB;IAAW,IAAIlB,QAAQ,EAAE;IAChC,MAAMmB,cAAa,GAAIvB,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMwB,cAAa,GAAIxB,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMyB,KAAI,GAAI,CAACnB,yBAAyB,CAAC,KAAK,CAAC,CAAC;IAChD,MAAMoB,IAAG,GAAI,IAAIrB,UAAU,CAACsB,MAAM,CAACC,SAAS,CAACC,OAAO,EAAE,oBAAoB,CAAC;IAE3E,MAAMC,QAAO,GAAI,MAAM;MACrB,IAAIT,IAAI,CAACU,KAAI,KAAM,IAAG,IAAKC,MAAM,CAACX,IAAI,CAACU,KAAK,CAAC,CAACE,IAAI,EAAC,KAAM,EAAE,EAAE;MAC7DP,IAAG,CACAQ,MAAM,CAAC;QACNpB,IAAI,EAAE,MAAM;QACZqB,IAAI,EAAEd,IAAI,CAACU;MACb,CAAC,EACAK,IAAI,CAAC,MAAM;QACVd,WAAW,EAAE;QACbD,IAAI,CAACU,KAAI,GAAI,IAAI;QACjBX,OAAO,CAACiB,IAAI,CAAC,SAAS,CAAC;MACzB,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,kBAAiB,GAAI,MAAM;MAC/Bd,cAAc,CAACO,KAAI,GAAI,IAAI;IAC7B,CAAC;IAED,MAAMQ,kBAAiB,GAAI,MAAM;MAC/BhB,cAAc,CAACQ,KAAI,GAAI,IAAI;IAC7B,CAAC;IAED,MAAMS,iBAAgB,GAAKC,MAAM,IAAK;MACpClB,cAAc,CAACQ,KAAI,GAAI,KAAK;MAC5B,IAAIU,MAAM,EAAE;QACVnB,WAAW,EAAE;QACbF,OAAO,CAACiB,IAAI,CAAC,SAAS,CAAC;MACzB;IACF,CAAC;IAED,MAAMK,iBAAgB,GAAKD,MAAM,IAAK;MACpCjB,cAAc,CAACO,KAAI,GAAI,KAAK;MAC5B,IAAIU,MAAM,EAAE;QACVnB,WAAW,EAAE;QACbF,OAAO,CAACiB,IAAI,CAAC,SAAS,CAAC;MACzB;IACF,CAAC;IAED,OAAO;MACLhB,IAAI;MACJI,KAAK;MACLK,QAAQ;MACRP,cAAc;MACdC,cAAc;MACdgB,iBAAiB;MACjBE,iBAAiB;MACjBJ,kBAAkB;MAClBC;IACF,CAAC;EACH;AACF,CAAC","names":["ref","OxdBuzzPostInput","OxdGlassButton","OxdSheet","useToast","APIService","shouldNotExceedCharLength","ProfileImage","ShareVideoModal","SharePhotoModal","name","components","props","employee","type","Object","required","emits","setup","_","context","post","saveSuccess","showVideoModal","showPhotoModal","rules","http","window","appGlobal","baseUrl","onSubmit","value","String","trim","create","text","then","emit","onClickSharePhotos","onClickShareVideos","onCloseVideoModal","$event","onClosePhotoModal"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\CreatePost.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-sheet class=\"orangehrm-buzz-create-post\">\n    <div class=\"orangehrm-buzz-create-post-header\">\n      <profile-image :employee=\"employee\"></profile-image>\n      <div class=\"orangehrm-buzz-create-post-header-text\">\n        <oxd-form @submit-valid=\"onSubmit\">\n          <oxd-buzz-post-input\n            v-model=\"post\"\n            :rules=\"rules\"\n            :placeholder=\"$t('buzz.post_placeholder')\"\n          >\n            <oxd-button type=\"submit\" :label=\"$t('buzz.post')\" />\n          </oxd-buzz-post-input>\n        </oxd-form>\n      </div>\n    </div>\n    <oxd-divider />\n    <div class=\"orangehrm-buzz-create-post-actions\">\n      <oxd-glass-button\n        icon=\"cameraglass\"\n        :label=\"$t('buzz.share_photos')\"\n        @click=\"onClickSharePhotos\"\n      ></oxd-glass-button>\n      <oxd-glass-button\n        icon=\"videoglass\"\n        :label=\"$t('buzz.share_video')\"\n        @click=\"onClickShareVideos\"\n      ></oxd-glass-button>\n    </div>\n  </oxd-sheet>\n  <share-video-modal\n    v-if=\"showVideoModal\"\n    :text=\"post\"\n    :employee=\"employee\"\n    @close=\"onCloseVideoModal\"\n  ></share-video-modal>\n  <share-photo-modal\n    v-if=\"showPhotoModal\"\n    :text=\"post\"\n    :employee=\"employee\"\n    @close=\"onClosePhotoModal\"\n  ></share-photo-modal>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport {OxdBuzzPostInput, OxdGlassButton, OxdSheet} from '@ohrm/oxd';\nimport useToast from '@/core/util/composable/useToast';\nimport {APIService} from '@/core/util/services/api.service';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport ShareVideoModal from '@/orangehrmBuzzPlugin/components/ShareVideoModal';\nimport SharePhotoModal from '@/orangehrmBuzzPlugin/components/SharePhotoModal';\n\nexport default {\n  name: 'CreatePost',\n\n  components: {\n    'oxd-sheet': OxdSheet,\n    'profile-image': ProfileImage,\n    'oxd-glass-button': OxdGlassButton,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n    'share-video-modal': ShareVideoModal,\n    'share-photo-modal': SharePhotoModal,\n  },\n\n  props: {\n    employee: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['refresh'],\n\n  setup(_, context) {\n    const post = ref(null);\n    const {saveSuccess} = useToast();\n    const showVideoModal = ref(false);\n    const showPhotoModal = ref(false);\n    const rules = [shouldNotExceedCharLength(65530)];\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n\n    const onSubmit = () => {\n      if (post.value === null || String(post.value).trim() === '') return;\n      http\n        .create({\n          type: 'text',\n          text: post.value,\n        })\n        .then(() => {\n          saveSuccess();\n          post.value = null;\n          context.emit('refresh');\n        });\n    };\n\n    const onClickSharePhotos = () => {\n      showPhotoModal.value = true;\n    };\n\n    const onClickShareVideos = () => {\n      showVideoModal.value = true;\n    };\n\n    const onCloseVideoModal = ($event) => {\n      showVideoModal.value = false;\n      if ($event) {\n        saveSuccess();\n        context.emit('refresh');\n      }\n    };\n\n    const onClosePhotoModal = ($event) => {\n      showPhotoModal.value = false;\n      if ($event) {\n        saveSuccess();\n        context.emit('refresh');\n      }\n    };\n\n    return {\n      post,\n      rules,\n      onSubmit,\n      showVideoModal,\n      showPhotoModal,\n      onCloseVideoModal,\n      onClosePhotoModal,\n      onClickSharePhotos,\n      onClickShareVideos,\n    };\n  },\n};\n</script>\n\n<style src=\"./create-post.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}