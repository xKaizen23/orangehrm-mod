{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_customer_autocomplete = _resolveComponent(\"customer-autocomplete\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_project_admin_autocomplete = _resolveComponent(\"project-admin-autocomplete\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_add_customer_modal = _resolveComponent(\"add-customer-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.add_project')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.project.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.project.name = $event),\n          label: _ctx.$t('general.name'),\n          rules: $data.rules.name,\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [(_openBlock(), _createBlock(_component_customer_autocomplete, {\n          key: $data.project.customer,\n          modelValue: $data.project.customer,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.project.customer = $event),\n          rules: $data.rules.customer,\n          label: _ctx.$t('time.customer_name'),\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"rules\", \"label\"])), _createVNode(_component_oxd_button, {\n          \"icon-name\": \"plus\",\n          \"display-type\": \"text\",\n          class: \"orangehrm-input-field-bottom-space\",\n          label: _ctx.$t('time.add_customer'),\n          onClick: $options.onClickAddCustomer\n        }, null, 8, [\"label\", \"onClick\"])]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.project.description,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.project.description = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.description'),\n            rules: $data.rules.description,\n            placeholder: _ctx.$t('general.type_description_here')\n          }, null, 8, [\"modelValue\", \"label\", \"rules\", \"placeholder\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projectAdmins, (projectAdmin, index) => {\n            return _openBlock(), _createBlock(_component_project_admin_autocomplete, {\n              key: index,\n              modelValue: projectAdmin.value,\n              \"onUpdate:modelValue\": $event => projectAdmin.value = $event,\n              \"show-delete\": index > 0,\n              rules: $data.rules.projectAdmin,\n              \"include-employees\": \"onlyCurrent\",\n              onRemove: $event => $options.onRemoveAdmin(index)\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"show-delete\", \"rules\", \"onRemove\"]);\n          }), 128)), $data.projectAdmins.length < 5 ? (_openBlock(), _createBlock(_component_oxd_button, {\n            key: 0,\n            \"icon-name\": \"plus\",\n            \"display-type\": \"text\",\n            label: _ctx.$t('general.add_another'),\n            onClick: $options.onAddAnother\n          }, null, 8, [\"label\", \"onClick\"])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _hoisted_3, _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])]), $data.showCustomerModal ? (_openBlock(), _createBlock(_component_add_customer_modal, {\n    key: 0,\n    onClose: $options.onCustomerModalClose\n  }, null, 8, [\"onClose\"])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;gCAgEjCC,oBAAM;;;;;;;;;;;;;;;;uBAjEZC,oBAkFM,OAlFNC,UAkFM,GAjFJF,oBA4EM,OA5ENG,UA4EM,GA3EJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAA4B,mCAAzBQ,OAAE;;MAEPH,aAAeI,yBAEfJ,aAqEWK;IArEAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAyBW,CAzBXT,aAyBWU;MAzBAC,IAAI,EAAE,CAAC;MAAEhB,KAAK,EAAC;;wBACxB,MAOgB,CAPhBK,aAOgBY;0BANd,MAKE,CALFZ,aAKEa;sBAJSN,aAAO,CAACO,IAAI;qEAAZP,aAAO,CAACO,IAAI;UACpBC,KAAK,EAAEZ,OAAE;UACTa,KAAK,EAAET,WAAK,CAACO,IAAI;UAClBG,QAAQ,EAAR;;;UAGJjB,aAegBY;0BAdd,MAME,gBANFM,aAMEC;UALCC,GAAG,EAAEb,aAAO,CAACc,QAAQ;sBACbd,aAAO,CAACc,QAAQ;qEAAhBd,aAAO,CAACc,QAAQ;UACxBL,KAAK,EAAET,WAAK,CAACc,QAAQ;UACrBN,KAAK,EAAEZ,OAAE;UACVc,QAAQ,EAAR;wDAEFjB,aAMEsB;UALA,WAAS,EAAC,MAAM;UAChB,cAAY,EAAC,MAAM;UACnB3B,KAAK,EAAC,oCAAoC;UACzCoB,KAAK,EAAEZ,OAAE;UACToB,OAAK,EAAEd;;;;;QAIdT,aA8BewB;wBA7Bb,MA4BW,CA5BXxB,aA4BWU;QA5BAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAQgB,CARhBK,aAQgBY;4BAPd,MAME,CANFZ,aAMEa;wBALSN,aAAO,CAACkB,WAAW;uEAAnBlB,aAAO,CAACkB,WAAW;YAC5BC,IAAI,EAAC,UAAU;YACdX,KAAK,EAAEZ,OAAE;YACTa,KAAK,EAAET,WAAK,CAACkB,WAAW;YACxBE,WAAW,EAAExB,OAAE;;;YAGpBH,aAiBgBY;4BAfZ,MAA8C,oBADhDf,oBAQE+B,6BAPgCrB,mBAAa,GAArCsB,YAAY,EAAEC,KAAK;iCAD7BZ,aAQEa;cANCX,GAAG,EAAEU,KAAK;0BACFD,YAAY,CAACG,KAAK;+CAAlBH,YAAY,CAACG,KAAK;cAC1B,aAAW,EAAEF,KAAK;cAClBd,KAAK,EAAET,WAAK,CAACsB,YAAY;cAC1B,mBAAiB,EAAC,aAAa;cAC9BI,QAAM,YAAExB,sBAAa,CAACqB,KAAK;;qBAGtBvB,mBAAa,CAAC2B,MAAM,sBAD5BhB,aAMEI;;YAJA,WAAS,EAAC,MAAM;YAChB,cAAY,EAAC,MAAM;YAClBP,KAAK,EAAEZ,OAAE;YACToB,OAAK,EAAEd;;;;;;;QAKhB0B,UAAM,EACNnC,aAAeI,yBACfJ,aAQmBoC;wBAPjB,MAAiB,CAAjBpC,aAAiBqC,2BACjBrC,aAIEsB;QAHA,cAAY,EAAC,OAAO;QACnBP,KAAK,EAAEZ,OAAE;QACToB,OAAK,EAAEd;yCAEVT,aAAiBsC;;;;yCAKf/B,uBAAiB,kBADzBW,aAGsBqB;;IADnBC,OAAK,EAAE/B","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","label","rules","required","_createBlock","_component_customer_autocomplete","key","customer","_component_oxd_button","onClick","_component_oxd_form_row","description","type","placeholder","_Fragment","projectAdmin","index","_component_project_admin_autocomplete","value","onRemove","length","_hoisted_3","_component_oxd_form_actions","_component_required_text","_component_submit_button","_component_add_customer_modal","onClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\project\\ProjectSave.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('time.add_project') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"project.name\"\n              :label=\"$t('general.name')\"\n              :rules=\"rules.name\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <customer-autocomplete\n              :key=\"project.customer\"\n              v-model=\"project.customer\"\n              :rules=\"rules.customer\"\n              :label=\"$t('time.customer_name')\"\n              required\n            />\n            <oxd-button\n              icon-name=\"plus\"\n              display-type=\"text\"\n              class=\"orangehrm-input-field-bottom-space\"\n              :label=\"$t('time.add_customer')\"\n              @click=\"onClickAddCustomer\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"project.description\"\n                type=\"textarea\"\n                :label=\"$t('general.description')\"\n                :rules=\"rules.description\"\n                :placeholder=\"$t('general.type_description_here')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <project-admin-autocomplete\n                v-for=\"(projectAdmin, index) in projectAdmins\"\n                :key=\"index\"\n                v-model=\"projectAdmin.value\"\n                :show-delete=\"index > 0\"\n                :rules=\"rules.projectAdmin\"\n                include-employees=\"onlyCurrent\"\n                @remove=\"onRemoveAdmin(index)\"\n              />\n              <oxd-button\n                v-if=\"projectAdmins.length < 5\"\n                icon-name=\"plus\"\n                display-type=\"text\"\n                :label=\"$t('general.add_another')\"\n                @click=\"onAddAnother\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <add-customer-modal\n      v-if=\"showCustomerModal\"\n      @close=\"onCustomerModalClose\"\n    ></add-customer-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport AddCustomerModal from '@/orangehrmTimePlugin/components/AddCustomerModal.vue';\nimport CustomerAutocomplete from '@/orangehrmTimePlugin/components/CustomerAutocomplete.vue';\nimport ProjectAdminAutocomplete from '@/orangehrmTimePlugin/components/ProjectAdminAutocomplete.vue';\n\nconst defaultProjectModel = {\n  name: null,\n  customer: null,\n  description: null,\n  projectAdminEmpNumbers: [],\n};\n\nexport default {\n  name: 'ProjectSave',\n  components: {\n    'add-customer-modal': AddCustomerModal,\n    'customer-autocomplete': CustomerAutocomplete,\n    'project-admin-autocomplete': ProjectAdminAutocomplete,\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/time/projects',\n    );\n    http.setIgnorePath('/api/v2/time/validation/project-name');\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      showCustomerModal: false,\n      projectAdmins: [{value: null}],\n      project: {...defaultProjectModel},\n      projectId: null,\n      rules: {\n        name: [\n          required,\n          shouldNotExceedCharLength(50),\n          promiseDebounce(this.validateProjectName, 500),\n        ],\n        description: [shouldNotExceedCharLength(255)],\n        customer: [required, validSelection],\n        projectAdmin: [\n          validSelection,\n          (value) => {\n            return this.projectAdmins.filter(\n              ({value: admin}) => admin && admin.id === value?.id,\n            ).length < 2\n              ? true\n              : this.$t('general.already_exists');\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    onClickAddCustomer() {\n      this.showCustomerModal = true;\n    },\n    onCustomerModalClose(data) {\n      if (data !== undefined) {\n        const {id, name} = data;\n        this.project.customer = {\n          id,\n          label: name,\n        };\n      }\n      this.showCustomerModal = false;\n    },\n    onAddAnother() {\n      if (this.projectAdmins.length < 5) {\n        this.projectAdmins.push({value: null});\n      }\n    },\n    onRemoveAdmin(index) {\n      this.projectAdmins.splice(index, 1);\n    },\n    onCancel() {\n      navigate('/time/viewProjects');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          name: this.project.name,\n          description: this.project.description,\n          customerId: this.project.customer.id,\n          projectAdminsEmpNumbers: this.projectAdmins\n            .map(({value}) => value && value.id)\n            .filter(Number),\n        })\n        .then((result) => {\n          this.projectId = result.data?.data.id;\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          navigate('/time/saveProject/{id}', {id: this.projectId});\n        });\n    },\n    validateProjectName(project) {\n      return new Promise((resolve) => {\n        if (project) {\n          this.http\n            .request({\n              method: 'GET',\n              url: `/api/v2/time/validation/project-name`,\n              params: {\n                projectName: this.project.name.trim(),\n                customerId: this.project.customer?.id,\n              },\n            })\n            .then((response) => {\n              const {data} = response.data;\n              return data.valid === true\n                ? resolve(true)\n                : resolve(this.$t('general.already_exists'));\n            });\n        } else {\n          resolve(true);\n        }\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}