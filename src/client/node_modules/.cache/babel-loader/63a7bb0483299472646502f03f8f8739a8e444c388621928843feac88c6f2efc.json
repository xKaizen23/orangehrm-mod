{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nexport default {\n  props: {\n    reportingMethodId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/reporting-methods');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      reportingMethod: {\n        id: '',\n        name: ''\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.reportingMethodId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.reportingMethod.id = data.id;\n      this.reportingMethod.name = data.name;\n      // Fetch list data for unique test\n      return this.http.getAll({\n        limit: 0\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => item.name === v);\n        if (index > -1) {\n          const {\n            id\n          } = data[index];\n          return id !== this.reportingMethod.id ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.reportingMethodId, {\n        name: this.reportingMethod.name\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/pim/viewReportingMethods');\n    }\n  }\n};","map":{"version":3,"mappings":";AAwDA,SAAQA,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AAEzC,eAAe;EACbC,KAAK,EAAE;IACLC,iBAAiB,EAAE;MACjBC,IAAI,EAAEC,MAAM;MACZL,QAAQ,EAAE;IACZ;EACF,CAAC;EACDM,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAIR,UAAU,CACzBS,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,+BAA+B,CAChC;IACD,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,eAAe,EAAE;QACfC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLD,IAAI,EAAE,CAACf,QAAQ,EAAEC,yBAAyB,CAAC,GAAG,CAAC;MACjD;IACF,CAAC;EACH,CAAC;EAEDgB,OAAO,GAAG;IACR,IAAI,CAACL,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACL,IAAG,CACLW,GAAG,CAAC,IAAI,CAACf,iBAAiB,EAC1BgB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACT;MAAI,IAAIS,QAAQ,CAACT,IAAI;MAC5B,IAAI,CAACE,eAAe,CAACC,EAAC,GAAIH,IAAI,CAACG,EAAE;MACjC,IAAI,CAACD,eAAe,CAACE,IAAG,GAAIJ,IAAI,CAACI,IAAI;MACrC;MACA,OAAO,IAAI,CAACR,IAAI,CAACc,MAAM,CAAC;QAACC,KAAK,EAAE;MAAC,CAAC,CAAC;IACrC,CAAC,EACAH,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACT;MAAI,IAAIS,QAAQ,CAACT,IAAI;MAC5B,IAAI,CAACK,KAAK,CAACD,IAAI,CAACQ,IAAI,CAAEC,CAAC,IAAK;QAC1B,MAAMC,KAAI,GAAId,IAAI,CAACe,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACZ,IAAG,KAAMS,CAAC,CAAC;QACvD,IAAIC,KAAI,GAAI,CAAC,CAAC,EAAE;UACd,MAAM;YAACX;UAAE,IAAIH,IAAI,CAACc,KAAK,CAAC;UACxB,OAAOX,EAAC,KAAM,IAAI,CAACD,eAAe,CAACC,EAAC,GAChC,IAAI,CAACc,EAAE,CAAC,wBAAwB,IAChC,IAAI;QACV,OAAO;UACL,OAAO,IAAI;QACb;MACF,CAAC,CAAC;IACJ,CAAC,EACAC,OAAO,CAAC,MAAM;MACb,IAAI,CAACjB,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDkB,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACnB,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLyB,MAAM,CAAC,IAAI,CAAC7B,iBAAiB,EAAE;QAC9BY,IAAI,EAAE,IAAI,CAACF,eAAe,CAACE;MAC7B,CAAC,EACAI,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACc,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAf,IAAI,CAAC,MAAM;QACV,IAAI,CAACgB,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACTrC,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF;AACF,CAAC","names":["navigate","APIService","required","shouldNotExceedCharLength","props","reportingMethodId","type","Number","setup","http","window","appGlobal","baseUrl","data","isLoading","reportingMethod","id","name","rules","created","get","then","response","getAll","limit","push","v","index","findIndex","item","$t","finally","methods","onSave","update","$toast","updateSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\reportingMethod\\EditReportingMethod.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">{{\n        $t('pim.edit_reporting_method')\n      }}</oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-input-field\n            v-model=\"reportingMethod.name\"\n            :label=\"$t('general.name')\"\n            :rules=\"rules.name\"\n            required\n          />\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\n\nexport default {\n  props: {\n    reportingMethodId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/reporting-methods',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      reportingMethod: {\n        id: '',\n        name: '',\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n      },\n    };\n  },\n\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.reportingMethodId)\n      .then((response) => {\n        const {data} = response.data;\n        this.reportingMethod.id = data.id;\n        this.reportingMethod.name = data.name;\n        // Fetch list data for unique test\n        return this.http.getAll({limit: 0});\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.name.push((v) => {\n          const index = data.findIndex((item) => item.name === v);\n          if (index > -1) {\n            const {id} = data[index];\n            return id !== this.reportingMethod.id\n              ? this.$t('general.already_exists')\n              : true;\n          } else {\n            return true;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.reportingMethodId, {\n          name: this.reportingMethod.name,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/pim/viewReportingMethods');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}