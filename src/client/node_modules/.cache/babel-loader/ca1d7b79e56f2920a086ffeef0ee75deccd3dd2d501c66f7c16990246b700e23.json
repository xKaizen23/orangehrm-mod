{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-top-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.add_work_experience')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.workExperience.company,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.workExperience.company = $event),\n            label: _ctx.$t('pim.company'),\n            rules: $data.rules.company,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.workExperience.jobTitle,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.workExperience.jobTitle = $event),\n            label: _ctx.$t('general.job_title'),\n            rules: $data.rules.jobTitle,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.workExperience.fromDate,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.workExperience.fromDate = $event),\n            label: _ctx.$t('general.from'),\n            rules: $data.rules.fromDate\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.workExperience.toDate,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.workExperience.toDate = $event),\n            label: _ctx.$t('general.to'),\n            rules: $data.rules.toDate\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.workExperience.comment,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.workExperience.comment = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.comment'),\n            rules: $data.rules.comment\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        type: \"button\",\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"]), _createVNode(_component_oxd_divider)]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAoD;;;;;;;;;;;;;;uBAA/DC,oBAuEM,OAvENC,UAuEM,GAtEJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACL,KAAK,EAAC;;sBACvB,MAAmC,mCAAhCM,OAAE;;MAEPH,aAAeI,yBACfJ,aAgEWK;IAhEAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAmBe,CAnBfT,aAmBeU;wBAlBb,MAiBW,CAjBXV,aAiBWW;QAjBAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAOgB,CAPhBG,aAOgBa;4BANd,MAKE,CALFb,aAKEc;wBAJSP,oBAAc,CAACQ,OAAO;uEAAtBR,oBAAc,CAACQ,OAAO;YAC9BC,KAAK,EAAEb,OAAE;YACTc,KAAK,EAAEV,WAAK,CAACQ,OAAO;YACrBG,QAAQ,EAAR;;;YAGJlB,aAOgBa;4BANd,MAKE,CALFb,aAKEc;wBAJSP,oBAAc,CAACY,QAAQ;uEAAvBZ,oBAAc,CAACY,QAAQ;YAC/BH,KAAK,EAAEb,OAAE;YACTc,KAAK,EAAEV,WAAK,CAACY,QAAQ;YACtBD,QAAQ,EAAR;;;;;;;QAMRlB,aAiBeU;wBAhBb,MAeW,CAfXV,aAeWW;QAfAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAMgB,CANhBG,aAMgBa;4BALd,MAIE,CAJFb,aAIEoB;wBAHSb,oBAAc,CAACc,QAAQ;uEAAvBd,oBAAc,CAACc,QAAQ;YAC/BL,KAAK,EAAEb,OAAE;YACTc,KAAK,EAAEV,WAAK,CAACc;;;YAGlBrB,aAMgBa;4BALd,MAIE,CAJFb,aAIEoB;wBAHSb,oBAAc,CAACe,MAAM;uEAArBf,oBAAc,CAACe,MAAM;YAC7BN,KAAK,EAAEb,OAAE;YACTc,KAAK,EAAEV,WAAK,CAACe;;;;;;;QAMtBtB,aAWeU;wBAVb,MASW,CATXV,aASWW;QATAC,IAAI,EAAE,CAAC;QAAEf,KAAK,EAAC;;0BACxB,MAOgB,CAPhBG,aAOgBa;UAPDhB,KAAK,EAAC;QAAiB;4BACpC,MAKE,CALFG,aAKEc;wBAJSP,oBAAc,CAACgB,OAAO;uEAAtBhB,oBAAc,CAACgB,OAAO;YAC/BC,IAAI,EAAC,UAAU;YACdR,KAAK,EAAEb,OAAE;YACTc,KAAK,EAAEV,WAAK,CAACgB;;;;;;;QAMtBvB,aASmByB;wBARjB,MAAiB,CAAjBzB,aAAiB0B,2BACjB1B,aAKE2B;QAJAH,IAAI,EAAC,QAAQ;QACb,cAAY,EAAC,OAAO;QACnBR,KAAK,EAAEb,OAAE;QACTyB,OAAK,EAAEnB;yCAEVT,aAAiB6B;;;;uCAGrB7B,aAAeI","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","company","label","rules","required","jobTitle","_component_date_input","fromDate","toDate","comment","type","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\SaveWorkExperience.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-top-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('pim.add_work_experience') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"workExperience.company\"\n              :label=\"$t('pim.company')\"\n              :rules=\"rules.company\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"workExperience.jobTitle\"\n              :label=\"$t('general.job_title')\"\n              :rules=\"rules.jobTitle\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <date-input\n              v-model=\"workExperience.fromDate\"\n              :label=\"$t('general.from')\"\n              :rules=\"rules.fromDate\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"workExperience.toDate\"\n              :label=\"$t('general.to')\"\n              :rules=\"rules.toDate\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"workExperience.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comment')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n    <oxd-divider />\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n} from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst workExpModel = {\n  company: '',\n  jobTitle: '',\n  fromDate: '',\n  toDate: '',\n  comment: '',\n};\n\nexport default {\n  name: 'SaveWorkExperience',\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup() {\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      workExperience: {...workExpModel},\n      rules: {\n        company: [required, shouldNotExceedCharLength(100)],\n        jobTitle: [required, shouldNotExceedCharLength(100)],\n        fromDate: [validDateFormat(this.userDateFormat)],\n        toDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.workExperience.fromDate,\n            this.$t('general.to_date_should_be_after_from_date'),\n          ),\n        ],\n        comment: [shouldNotExceedCharLength(200)],\n      },\n    };\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.workExperience,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}