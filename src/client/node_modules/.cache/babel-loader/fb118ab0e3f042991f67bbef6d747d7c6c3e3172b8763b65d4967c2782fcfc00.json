{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_loading_spinner = _resolveComponent(\"oxd-loading-spinner\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createBlock(_component_oxd_input_group, {\n    label: _ctx.$t('general.job_specification')\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'input-container': true,\n        '--disabled': !_ctx.file.id\n      })\n    }, [_createVNode(_component_oxd_text, {\n      class: \"input-container-filename\",\n      tag: \"p\",\n      title: _ctx.file.filename,\n      onClick: $setup.downloadFile\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.file.id ? _ctx.file.filename : 'Not Defined'), 1)]),\n      _: 1\n    }, 8, [\"title\", \"onClick\"]), !_ctx.isLoading && _ctx.file.id ? (_openBlock(), _createBlock(_component_oxd_icon_button, {\n      key: 0,\n      class: \"input-container-icon\",\n      name: \"download\",\n      onClick: $setup.downloadFile\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _ctx.isLoading ? (_openBlock(), _createBlock(_component_oxd_loading_spinner, {\n      key: 1,\n      class: \"input-container-loader\",\n      \"with-container\": false\n    })) : _createCommentVNode(\"\", true)], 2)]),\n    _: 1\n  }, 8, [\"label\"]);\n}","map":{"version":3,"mappings":";;;;;;uBAoBEA,aAsBkBC;IAtBAC,KAAK,EAAEC,OAAE;;sBACzB,MAoBM,CApBNC,oBAoBM;MApBAC,KAAK;QAAA;QAAA,eAA2CF,SAAI,CAACG;MAAE;QAC3DC,aAOWC;MANTH,KAAK,EAAC,0BAA0B;MAChCI,GAAG,EAAC,GAAG;MACNC,KAAK,EAAEP,SAAI,CAACQ,QAAQ;MACpBC,OAAK,EAAEC;;wBAER,MAA6C,mCAA1CV,SAAI,CAACG,EAAE,GAAGH,SAAI,CAACQ,QAAQ;;kCAGnBR,cAAS,IAAIA,SAAI,CAACG,EAAE,kBAD7BN,aAKEc;;MAHAT,KAAK,EAAC,sBAAsB;MAC5BU,IAAI,EAAC,UAAU;MACdH,OAAK,EAAEC;+DAGFV,cAAS,kBADjBH,aAIEgB;;MAFAX,KAAK,EAAC,wBAAwB;MAC7B,gBAAc,EAAE","names":["_createBlock","_component_oxd_input_group","label","_ctx","_createElementVNode","class","id","_createVNode","_component_oxd_text","tag","title","filename","onClick","$setup","_component_oxd_icon_button","name","_component_oxd_loading_spinner"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\JobSpecDownload.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-group :label=\"$t('general.job_specification')\">\n    <div :class=\"{'input-container': true, '--disabled': !file.id}\">\n      <oxd-text\n        class=\"input-container-filename\"\n        tag=\"p\"\n        :title=\"file.filename\"\n        @click=\"downloadFile\"\n      >\n        {{ file.id ? file.filename : 'Not Defined' }}\n      </oxd-text>\n      <oxd-icon-button\n        v-if=\"!isLoading && file.id\"\n        class=\"input-container-icon\"\n        name=\"download\"\n        @click=\"downloadFile\"\n      />\n      <oxd-loading-spinner\n        v-if=\"isLoading\"\n        class=\"input-container-loader\"\n        :with-container=\"false\"\n      />\n    </div>\n  </oxd-input-group>\n</template>\n\n<script>\nimport {onBeforeMount, reactive, toRefs} from 'vue';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {OxdSpinner} from '@ohrm/oxd';\n\nexport default {\n  name: 'JobSpecDownload',\n  components: {\n    'oxd-loading-spinner': OxdSpinner,\n  },\n  props: {\n    resourceId: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/job-titles/${props.resourceId}/specification`,\n    );\n    const state = reactive({\n      isLoading: false,\n      file: {\n        id: '',\n        filename: '',\n        fileType: '',\n        fileSize: 0,\n      },\n    });\n\n    const fetchFile = async () => {\n      state.isLoading = true;\n      http\n        .request({\n          method: 'GET',\n          // Prevent triggering response interceptor on 404\n          validateStatus: (status) => {\n            return (status >= 200 && status < 300) || status == 404;\n          },\n        })\n        .then(({data}) => {\n          state.file = {\n            ...data.data,\n          };\n        })\n        .finally(() => {\n          state.isLoading = false;\n        });\n    };\n\n    const downloadFile = () => {\n      if (!state.file.id) return;\n      const downUrl = `${window.appGlobal.baseUrl}/admin/viewJobSpecification/attachId/${state.file.id}`;\n      window.open(downUrl, '_blank');\n    };\n\n    if (props.resourceId) {\n      onBeforeMount(fetchFile);\n    }\n\n    return {\n      ...toRefs(state),\n      downloadFile,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.input-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  @include oxd-input-control();\n  @include oxd-input-control-size();\n  border: $oxd-input-control-border--active;\n  min-height: 45px;\n  cursor: pointer;\n  text-decoration: underline;\n  &-filename {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    width: 75%;\n    white-space: nowrap;\n  }\n  &-loader {\n    position: absolute;\n    right: 10px;\n  }\n  &-icon {\n    font-size: inherit !important;\n    min-width: unset;\n    min-height: unset;\n    border-radius: 0.65rem;\n    padding: 0.3rem;\n    margin-left: auto;\n  }\n  &.--disabled {\n    cursor: not-allowed;\n    text-decoration: none;\n  }\n  ::v-deep(.oxd-loading-spinner) {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}