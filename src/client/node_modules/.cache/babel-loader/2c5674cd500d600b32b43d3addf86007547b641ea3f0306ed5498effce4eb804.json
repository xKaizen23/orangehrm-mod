{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { required } from '@/core/util/validation/rules';\nconst workWeekModel = {\n  monday: null,\n  tuesday: null,\n  wednesday: null,\n  thursday: null,\n  friday: null,\n  saturday: null,\n  sunday: null\n};\nexport default {\n  props: {\n    dayTypes: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/workweek');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      workWeek: {\n        ...workWeekModel\n      },\n      rules: {\n        monday: [required],\n        tuesday: [required],\n        wednesday: [required],\n        thursday: [required],\n        friday: [required],\n        saturday: [required],\n        sunday: [required]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET'\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.workWeek.monday = this.dayTypes.find(dayType => dayType.id === data.monday);\n      this.workWeek.tuesday = this.dayTypes.find(dayType => dayType.id === data.tuesday);\n      this.workWeek.wednesday = this.dayTypes.find(dayType => dayType.id === data.wednesday);\n      this.workWeek.thursday = this.dayTypes.find(dayType => dayType.id === data.thursday);\n      this.workWeek.friday = this.dayTypes.find(dayType => dayType.id === data.friday);\n      this.workWeek.saturday = this.dayTypes.find(dayType => dayType.id === data.saturday);\n      this.workWeek.sunday = this.dayTypes.find(dayType => dayType.id === data.sunday);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      // check if workweek contains at least one working day\n      const noWorkingDays = Object.values(this.workWeek).find(dayType => dayType.id !== 8);\n      if (noWorkingDays === undefined) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('leave.at_least_one_day_should_be_a_working_day')\n        });\n      }\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          monday: this.workWeek.monday.id,\n          tuesday: this.workWeek.tuesday.id,\n          wednesday: this.workWeek.wednesday.id,\n          thursday: this.workWeek.thursday.id,\n          friday: this.workWeek.friday.id,\n          saturday: this.workWeek.saturday.id,\n          sunday: this.workWeek.sunday.id\n        }\n      }).then(() => {\n        this.$toast.saveSuccess();\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","required","workWeekModel","monday","tuesday","wednesday","thursday","friday","saturday","sunday","props","dayTypes","type","Array","default","setup","http","window","appGlobal","baseUrl","data","isLoading","workWeek","rules","beforeMount","request","method","then","response","find","dayType","id","finally","methods","onSave","noWorkingDays","Object","values","undefined","$toast","warn","title","$t","message","saveSuccess"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\configure\\WorkWeek.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.work_week') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.monday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.monday\"\n                :label=\"$t('general.monday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.tuesday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.tuesday\"\n                :label=\"$t('general.tuesday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.wednesday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.wednesday\"\n                :label=\"$t('general.wednesday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.thursday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.thursday\"\n                :label=\"$t('general.thursday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.friday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.friday\"\n                :label=\"$t('general.friday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.saturday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.saturday\"\n                :label=\"$t('general.saturday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"workWeek.sunday\"\n                type=\"select\"\n                :options=\"dayTypes\"\n                :rules=\"rules.sunday\"\n                :label=\"$t('general.sunday')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {required} from '@/core/util/validation/rules';\n\nconst workWeekModel = {\n  monday: null,\n  tuesday: null,\n  wednesday: null,\n  thursday: null,\n  friday: null,\n  saturday: null,\n  sunday: null,\n};\n\nexport default {\n  props: {\n    dayTypes: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/workweek',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      workWeek: {...workWeekModel},\n      rules: {\n        monday: [required],\n        tuesday: [required],\n        wednesday: [required],\n        thursday: [required],\n        friday: [required],\n        saturday: [required],\n        sunday: [required],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.workWeek.monday = this.dayTypes.find(\n          (dayType) => dayType.id === data.monday,\n        );\n        this.workWeek.tuesday = this.dayTypes.find(\n          (dayType) => dayType.id === data.tuesday,\n        );\n        this.workWeek.wednesday = this.dayTypes.find(\n          (dayType) => dayType.id === data.wednesday,\n        );\n        this.workWeek.thursday = this.dayTypes.find(\n          (dayType) => dayType.id === data.thursday,\n        );\n        this.workWeek.friday = this.dayTypes.find(\n          (dayType) => dayType.id === data.friday,\n        );\n        this.workWeek.saturday = this.dayTypes.find(\n          (dayType) => dayType.id === data.saturday,\n        );\n        this.workWeek.sunday = this.dayTypes.find(\n          (dayType) => dayType.id === data.sunday,\n        );\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      // check if workweek contains at least one working day\n      const noWorkingDays = Object.values(this.workWeek).find(\n        (dayType) => dayType.id !== 8,\n      );\n\n      if (noWorkingDays === undefined) {\n        return this.$toast.warn({\n          title: this.$t('general.warning'),\n          message: this.$t('leave.at_least_one_day_should_be_a_working_day'),\n        });\n      }\n\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            monday: this.workWeek.monday.id,\n            tuesday: this.workWeek.tuesday.id,\n            wednesday: this.workWeek.wednesday.id,\n            thursday: this.workWeek.thursday.id,\n            friday: this.workWeek.friday.id,\n            saturday: this.workWeek.saturday.id,\n            sunday: this.workWeek.sunday.id,\n          },\n        })\n        .then(() => {\n          this.$toast.saveSuccess();\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}