{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dbd5a02\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-button-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_supervisor_autocomplete = _resolveComponent(\"supervisor-autocomplete\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\",\n    tag: \"h6\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.add_review')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    ref: \"formRef\",\n    loading: $data.isLoading\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $data.review.employee,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.review.employee = $event),\n            rules: $data.rules.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_supervisor_autocomplete, {\n            modelValue: $data.review.supervisorReviewer,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.review.supervisorReviewer = $event),\n            rules: $data.rules.supervisorReviewer,\n            subordinate: $data.review.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"subordinate\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.review.startDate,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.review.startDate = $event),\n            label: _ctx.$t('performance.review_period_start_date'),\n            rules: $data.rules.startDate,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.review.endDate,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.review.endDate = $event),\n            label: _ctx.$t('performance.review_period_end_date'),\n            rules: $data.rules.endDate,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_date_input, {\n            modelValue: $data.review.dueDate,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.review.dueDate = $event),\n            label: _ctx.$t('performance.due_date'),\n            rules: $data.rules.dueDate,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        type: \"button\",\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.save'),\n        type: \"submit\",\n        onClick: _cache[5] || (_cache[5] = $event => $options.onSave(false))\n      }, null, 8, [\"label\"]), _createVNode(_component_oxd_button, {\n        \"display-type\": \"secondary\",\n        label: _ctx.$t('performance.activate'),\n        type: \"button\",\n        onClick: _cache[6] || (_cache[6] = $event => $options.onSave(true))\n      }, null, 8, [\"label\"])])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;EA4D1BA,KAAK,EAAC;AAAsB;;;;;;;;;;;;;;uBA7DzCC,oBAoFM,OApFNC,UAoFM,GAnFJC,oBAkFM,OAlFNC,UAkFM,GAjFJC,aAEWC;IAFDN,KAAK,EAAC,sBAAsB;IAACO,GAAG,EAAC;;sBACzC,MAAkC,mCAA/BC,OAAE;;MAEPH,aAAeI,yBACfJ,aA4EWK;IA5EDC,GAAG,EAAC,SAAS;IAAEC,OAAO,EAAEC;;sBAChC,MAUe,CAVfR,aAUeS;wBATb,MAQW,CARXT,aAQWU;QARAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBY;4BALd,MAIE,CAJFZ,aAIEa;wBAHSL,YAAM,CAACM,QAAQ;uEAAfN,YAAM,CAACM,QAAQ;YACvBC,KAAK,EAAEP,WAAK,CAACM,QAAQ;YACtBE,QAAQ,EAAR;;;;;;;QAKRhB,aAWeS;wBAVb,MASW,CATXT,aASWU;QATAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBY;4BANd,MAKE,CALFZ,aAKEiB;wBAJST,YAAM,CAACU,kBAAkB;uEAAzBV,YAAM,CAACU,kBAAkB;YACjCH,KAAK,EAAEP,WAAK,CAACU,kBAAkB;YAC/BC,WAAW,EAAEX,YAAM,CAACM,QAAQ;YAC7BE,QAAQ,EAAR;;;;;;;QAKRhB,aA2BeS;wBA1Bb,MAyBW,CAzBXT,aAyBWU;QAzBAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBY;4BANd,MAKE,CALFZ,aAKEoB;wBAJSZ,YAAM,CAACa,SAAS;uEAAhBb,YAAM,CAACa,SAAS;YACxBC,KAAK,EAAEnB,OAAE;YACTY,KAAK,EAAEP,WAAK,CAACa,SAAS;YACvBL,QAAQ,EAAR;;;YAGJhB,aAOgBY;4BANd,MAKE,CALFZ,aAKEoB;wBAJSZ,YAAM,CAACe,OAAO;uEAAdf,YAAM,CAACe,OAAO;YACtBD,KAAK,EAAEnB,OAAE;YACTY,KAAK,EAAEP,WAAK,CAACe,OAAO;YACrBP,QAAQ,EAAR;;;YAGJhB,aAOgBY;4BANd,MAKE,CALFZ,aAKEoB;wBAJSZ,YAAM,CAACgB,OAAO;uEAAdhB,YAAM,CAACgB,OAAO;YACtBF,KAAK,EAAEnB,OAAE;YACTY,KAAK,EAAEP,WAAK,CAACgB,OAAO;YACrBR,QAAQ,EAAR;;;;;;;QAKRhB,aAAeI,yBACfJ,aAsBmByB;wBArBjB,MAAiB,CAAjBzB,aAAiB0B,2BACjB5B,oBAmBM,OAnBN6B,UAmBM,GAlBJ3B,aAKE4B;QAJA,cAAY,EAAC,OAAO;QACnBN,KAAK,EAAEnB,OAAE;QACV0B,IAAI,EAAC,QAAQ;QACZC,OAAK,EAAEC;yCAEV/B,aAKE4B;QAJA,cAAY,EAAC,OAAO;QACnBN,KAAK,EAAEnB,OAAE;QACV0B,IAAI,EAAC,QAAQ;QACZC,OAAK,sCAAEC,eAAM;8BAEhB/B,aAKE4B;QAJA,cAAY,EAAC,WAAW;QACvBN,KAAK,EAAEnB,OAAE;QACV0B,IAAI,EAAC,QAAQ;QACZC,OAAK,sCAAEC,eAAM","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","ref","loading","$data","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","employee","rules","required","_component_supervisor_autocomplete","supervisorReviewer","subordinate","_component_date_input","startDate","label","endDate","dueDate","_component_oxd_form_actions","_component_required_text","_hoisted_3","_component_oxd_button","type","onClick","$options"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\AddReview.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\" tag=\"h6\">\n        {{ $t('performance.add_review') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form ref=\"formRef\" :loading=\"isLoading\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"review.employee\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <supervisor-autocomplete\n                v-model=\"review.supervisorReviewer\"\n                :rules=\"rules.supervisorReviewer\"\n                :subordinate=\"review.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.startDate\"\n                :label=\"$t('performance.review_period_start_date')\"\n                :rules=\"rules.startDate\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.endDate\"\n                :label=\"$t('performance.review_period_end_date')\"\n                :rules=\"rules.endDate\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"review.dueDate\"\n                :label=\"$t('performance.due_date')\"\n                :rules=\"rules.dueDate\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <div class=\"orangehrm-button-row\">\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.cancel')\"\n              type=\"button\"\n              @click=\"onCancel\"\n            />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.save')\"\n              type=\"submit\"\n              @click=\"onSave(false)\"\n            />\n            <oxd-button\n              display-type=\"secondary\"\n              :label=\"$t('performance.activate')\"\n              type=\"button\"\n              @click=\"onSave(true)\"\n            />\n          </div>\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport SupervisorAutoComplete from '@/orangehrmPerformancePlugin/components/SupervisorAutoComplete';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst reviewModel = {\n  employee: null,\n  supervisorReviewer: null,\n  startDate: null,\n  endDate: null,\n  dueDate: null,\n};\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'supervisor-autocomplete': SupervisorAutoComplete,\n  },\n  setup() {\n    const {formRef, invalid, validate} = useForm();\n    const {userDateFormat} = useDateFormat();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/manage/reviews',\n    );\n    http.setIgnorePath('/api/v2/performance/manage/reviews');\n    return {\n      formRef,\n      invalid,\n      validate,\n      http,\n      userDateFormat,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      review: {...reviewModel},\n      rules: {\n        employee: [required, validSelection],\n        supervisorReviewer: [required, validSelection],\n        startDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          startDateShouldBeBeforeEndDate(\n            () => this.review.endDate,\n            this.$t(\n              'performance.review_period_start_date_should_be_before_end_date',\n            ),\n          ),\n        ],\n        endDate: [\n          required,\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(\n            () => this.review.startDate,\n            this.$t(\n              'performance.review_period_end_date_should_be_after_start_date',\n            ),\n          ),\n        ],\n        dueDate: [\n          required,\n          validDateFormat(),\n          endDateShouldBeAfterStartDate(\n            () => this.review.endDate,\n            this.$t(\n              'performance.due_date_should_be_after_review_period_end_date',\n            ),\n          ),\n        ],\n      },\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/searchPerformanceReview');\n    },\n    onSave(activate = false) {\n      this.validate().then(() => {\n        if (this.invalid === true) return;\n        this.isLoading = true;\n        this.http\n          .create({\n            empNumber: this.review.employee.id,\n            reviewerEmpNumber: this.review.supervisorReviewer.id,\n            startDate: this.review.startDate,\n            endDate: this.review.endDate,\n            dueDate: this.review.dueDate,\n            activate,\n          })\n          .then(() => {\n            if (activate === true) {\n              return this.$toast.success({\n                title: this.$t('general.success'),\n                message: this.$t('general.successfully_activated'),\n              });\n            } else {\n              return this.$toast.updateSuccess();\n            }\n          })\n          .then(() => {\n            this.onCancel();\n          })\n          .catch((response) => {\n            return this.$toast.warn({\n              title: this.$t('general.warning'),\n              message: response?.data.error.message,\n            });\n          })\n          .finally(() => {\n            this.isLoading = false;\n          });\n      });\n    },\n  },\n};\n</script>\n<style src=\"./review.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}