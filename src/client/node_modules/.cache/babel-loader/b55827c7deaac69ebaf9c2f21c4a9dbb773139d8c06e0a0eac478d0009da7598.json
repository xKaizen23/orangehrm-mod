{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-334dffa7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-sm-field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('claim.add_event')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.claimEvent.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.claimEvent.name = $event),\n          label: _ctx.$t('claim.event_name'),\n          rules: $data.rules.name,\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_grid_item, {\n        class: \"--offset-row-2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.claimEvent.description,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.claimEvent.description = $event),\n          type: \"textarea\",\n          label: _ctx.$t('general.description'),\n          rules: $data.rules.description\n        }, null, 8, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_grid_item, {\n        class: \"--offset-row-3\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n          tag: \"p\",\n          class: \"orangehrm-sm-field-label\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.active')), 1)]),\n          _: 1\n        }), _createVNode(_component_oxd_switch_input, {\n          modelValue: $data.claimEvent.status,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.claimEvent.status = $event)\n        }, null, 8, [\"modelValue\"])])]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;EA2BxBA,KAAK,EAAC;AAAoB;;;;;;;;;;;;;uBA5BzCC,oBAiDM,OAjDNC,UAiDM,GAhDJC,oBA+CM,OA/CNC,UA+CM,GA9CJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAA2B,mCAAxBQ,OAAE;;MAGPH,aAAeI,yBAEfJ,aAuCWK;IAvCAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MA0BW,CA1BXT,aA0BWU;MA1BAC,IAAI,EAAE,CAAC;MAAEhB,KAAK,EAAC;;wBACxB,MAOgB,CAPhBK,aAOgBY;0BANd,MAKE,CALFZ,aAKEa;sBAJSN,gBAAU,CAACO,IAAI;qEAAfP,gBAAU,CAACO,IAAI;UACvBC,KAAK,EAAEZ,OAAE;UACTa,KAAK,EAAET,WAAK,CAACO,IAAI;UAClBG,QAAQ,EAAR;;;UAGJjB,aAOgBY;QAPDjB,KAAK,EAAC;MAAgB;0BACnC,MAKE,CALFK,aAKEa;sBAJSN,gBAAU,CAACW,WAAW;qEAAtBX,gBAAU,CAACW,WAAW;UAC/BC,IAAI,EAAC,UAAU;UACdJ,KAAK,EAAEZ,OAAE;UACTa,KAAK,EAAET,WAAK,CAACW;;;UAIlBlB,aAOgBY;QAPDjB,KAAK,EAAC;MAAgB;0BACnC,MAKM,CALNG,oBAKM,OALNsB,UAKM,GAJJpB,aAEWC;UAFDC,GAAG,EAAC,GAAG;UAACP,KAAK,EAAC;;4BACtB,MAA0B,mCAAvBQ,OAAE;;YAEPH,aAAgDqB;sBAArBd,gBAAU,CAACe,MAAM;qEAAjBf,gBAAU,CAACe,MAAM;;;;;QAIlDtB,aAAeI,yBAEfJ,aAQmBuB;wBAPjB,MAAiB,CAAjBvB,aAAiBwB,2BACjBxB,aAIEyB;QAHA,cAAY,EAAC,OAAO;QACnBV,KAAK,EAAEZ,OAAE;QACTuB,OAAK,EAAEjB;yCAEVT,aAAiB2B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","label","rules","required","description","type","_hoisted_3","_component_oxd_switch_input","status","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\pages\\SaveClaimEvent.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('claim.add_event') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"claimEvent.name\"\n              :label=\"$t('claim.event_name')\"\n              :rules=\"rules.name\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item class=\"--offset-row-2\">\n            <oxd-input-field\n              v-model=\"claimEvent.description\"\n              type=\"textarea\"\n              :label=\"$t('general.description')\"\n              :rules=\"rules.description\"\n            />\n          </oxd-grid-item>\n\n          <oxd-grid-item class=\"--offset-row-3\">\n            <div class=\"orangehrm-sm-field\">\n              <oxd-text tag=\"p\" class=\"orangehrm-sm-field-label\">\n                {{ $t('general.active') }}\n              </oxd-text>\n              <oxd-switch-input v-model=\"claimEvent.status\" />\n            </div>\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {OxdSwitchInput} from '@ohrm/oxd';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\n\nconst initialClaimEvent = {\n  name: '',\n  description: '',\n  status: true,\n};\n\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/claim/events',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const claimEventNameUniqueValidation = createUniqueValidator(\n      'ClaimEvent',\n      'name',\n      {\n        matchByField: 'isDeleted',\n        matchByValue: 'false',\n      },\n    );\n    return {\n      http,\n      claimEventNameUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      claimEvent: {...initialClaimEvent},\n      rules: {\n        name: [\n          required,\n          this.claimEventNameUniqueValidation,\n          shouldNotExceedCharLength(100),\n        ],\n        description: [shouldNotExceedCharLength(1000)],\n      },\n    };\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/claim/viewEvents');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.claimEvent,\n          name: this.claimEvent.name.trim(),\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n\n<style src=\"./save-claim-event.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}