{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { required, validSelection, validDateFormat, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { freshDate, parseDate, parseTime, formatTime, formatDate, getStandardTimezone } from '@/core/util/helper/datefns';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { yearRange } from '@/core/util/helper/year-range';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport RecordCell from '@/orangehrmAttendancePlugin/components/RecordCell.vue';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    date: {\n      type: String,\n      default: null\n    },\n    employee: {\n      type: Object,\n      required: true\n    },\n    isEditable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const filters = ref({\n      date: props.date ? props.date : formatDate(freshDate(), 'yyyy-MM-dd'),\n      employee: props.employee ? {\n        id: props.employee.empNumber,\n        label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n        isPastEmployee: props.employee.terminationId\n      } : null\n    });\n    const serializedFilters = computed(() => {\n      return {\n        date: filters.value.date,\n        empNumber: filters.value.employee?.id\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/attendance/employees/${props.employee.empNumber}/records`);\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      userDateFormat,\n      timeFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const rules = {\n      date: [required, validDateFormat(userDateFormat)],\n      employee: [shouldNotExceedCharLength(100), validSelection]\n    };\n    const attendanceRecordNormalizer = data => {\n      return data.map(item => {\n        const {\n          punchIn,\n          punchOut\n        } = item;\n        const punchInDate = formatDate(parseDate(punchIn?.userDate), jsDateFormat, {\n          locale\n        });\n        const punchInTime = formatTime(parseTime(punchIn?.userTime, timeFormat), jsTimeFormat);\n        const punchOutDate = formatDate(parseDate(punchOut?.userDate), jsDateFormat, {\n          locale\n        });\n        const punchOutTime = formatTime(parseTime(punchOut?.userTime, timeFormat), jsTimeFormat);\n        return {\n          id: item.id,\n          punchIn: {\n            ...punchIn,\n            userTime: punchInTime,\n            userDate: punchInDate\n          },\n          punchOut: {\n            ...punchOut,\n            userTime: punchOutTime,\n            userDate: punchOutDate\n          },\n          duration: item.duration,\n          punchInNote: punchIn.note,\n          punchOutNote: punchOut.note\n        };\n      });\n    };\n    const {\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: attendanceRecordNormalizer,\n      prefetch: true\n    });\n    const totalDuration = computed(() => {\n      const meta = response.value?.meta;\n      return meta ? meta.sum.label : '0.00';\n    });\n    return {\n      http,\n      rules,\n      total,\n      pages,\n      filters,\n      pageSize,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n      items: response,\n      totalDuration\n    };\n  },\n  data() {\n    return {\n      yearArray: [...yearRange()],\n      headers: [{\n        name: 'punchIn',\n        slot: 'title',\n        title: this.$t('attendance.punch_in'),\n        style: {\n          flex: 1\n        },\n        cellRenderer: this.cellRenderer\n      }, {\n        name: 'punchInNote',\n        slot: 'title',\n        cellType: 'oxd-table-cell-truncate',\n        title: this.$t('attendance.punch_in_note'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'punchOut',\n        slot: 'title',\n        title: this.$t('attendance.punch_out'),\n        style: {\n          flex: 1\n        },\n        cellRenderer: this.cellRenderer\n      }, {\n        name: 'punchOutNote',\n        slot: 'title',\n        cellType: 'oxd-table-cell-truncate',\n        title: this.$t('attendance.punch_out_note'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'duration',\n        slot: 'title',\n        title: this.$t('attendance.duration_hours'),\n        style: {\n          flex: 1\n        }\n      }, {\n        ...(this.isEditable && {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {\n            flex: 1\n          },\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash'\n              }\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill'\n              }\n            }\n          }\n        })\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    cellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: RecordCell,\n        props: {\n          date: cellData.userDate,\n          time: cellData.userTime,\n          offset: getStandardTimezone(cellData.offset)\n        }\n      };\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickView() {\n      return navigate('/attendance/viewAttendanceRecord', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date\n      });\n    },\n    onClickAdd() {\n      return navigate('/attendance/proxyPunchInPunchOut', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date\n      });\n    },\n    onClickEdit(item) {\n      return navigate('/attendance/editEmployeeAttendanceRecord/{id}', {\n        id: item.id\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","required","validSelection","validDateFormat","shouldNotExceedCharLength","freshDate","parseDate","parseTime","formatTime","formatDate","getStandardTimezone","navigate","yearRange","useLocale","APIService","usePaginate","useDateFormat","RecordCell","EmployeeAutocomplete","DeleteConfirmationDialog","components","props","date","type","String","default","employee","Object","isEditable","Boolean","setup","filters","id","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId","serializedFilters","value","http","window","appGlobal","baseUrl","locale","jsDateFormat","userDateFormat","timeFormat","jsTimeFormat","rules","attendanceRecordNormalizer","data","map","item","punchIn","punchOut","punchInDate","userDate","punchInTime","userTime","punchOutDate","punchOutTime","duration","punchInNote","note","punchOutNote","total","pages","pageSize","response","isLoading","execQuery","currentPage","showPaginator","query","normalizer","prefetch","totalDuration","meta","sum","items","yearArray","headers","name","slot","title","$t","style","flex","cellRenderer","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","methods","args","cellData","time","offset","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess","resetDataTable","onClickView","undefined","employeeId","onClickAdd"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAttendancePlugin\\pages\\ViewEmployeeAttendanceDetailed.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-table-filter\n    :filter-title=\"$t('attendance.employee_attendance_records')\"\n  >\n    <oxd-form @submit-valid=\"onClickView\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <employee-autocomplete\n              v-model=\"filters.employee\"\n              :rules=\"rules.employee\"\n              :params=\"{\n                includeEmployees: 'currentAndPast',\n              }\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <date-input\n              v-model=\"filters.date\"\n              :rules=\"rules.date\"\n              :years=\"yearArray\"\n              :label=\"$t('general.date')\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.view')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-table-filter>\n  <br />\n  <div class=\"orangehrm-paper-container\">\n    <div\n      v-if=\"isEditable && filters.employee\"\n      class=\"orangehrm-header-container\"\n    >\n      <oxd-button\n        icon-name=\"plus\"\n        display-type=\"secondary\"\n        :label=\"$t('general.add')\"\n        @click=\"onClickAdd\"\n      />\n      <oxd-text class=\"orangehrm-header-total\" tag=\"span\">\n        {{ $t('time.total_duration') }}: {{ totalDuration }}\n      </oxd-text>\n    </div>\n    <table-header\n      :total=\"total\"\n      :loading=\"isLoading\"\n      :show-divider=\"isEditable\"\n      :selected=\"checkedItems.length\"\n      @delete=\"onClickDeleteSelected\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        v-model:selected=\"checkedItems\"\n        :headers=\"headers\"\n        :items=\"items?.data\"\n        :selectable=\"isEditable\"\n        :clickable=\"false\"\n        :loading=\"isLoading\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {\n  freshDate,\n  parseDate,\n  parseTime,\n  formatTime,\n  formatDate,\n  getStandardTimezone,\n} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {yearRange} from '@/core/util/helper/year-range';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport RecordCell from '@/orangehrmAttendancePlugin/components/RecordCell.vue';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nexport default {\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    date: {\n      type: String,\n      default: null,\n    },\n    employee: {\n      type: Object,\n      required: true,\n    },\n    isEditable: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      date: props.date ? props.date : formatDate(freshDate(), 'yyyy-MM-dd'),\n      employee: props.employee\n        ? {\n            id: props.employee.empNumber,\n            label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n            isPastEmployee: props.employee.terminationId,\n          }\n        : null,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        date: filters.value.date,\n        empNumber: filters.value.employee?.id,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/attendance/employees/${props.employee.empNumber}/records`,\n    );\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat, timeFormat, jsTimeFormat} =\n      useDateFormat();\n\n    const rules = {\n      date: [required, validDateFormat(userDateFormat)],\n      employee: [shouldNotExceedCharLength(100), validSelection],\n    };\n\n    const attendanceRecordNormalizer = (data) => {\n      return data.map((item) => {\n        const {punchIn, punchOut} = item;\n        const punchInDate = formatDate(\n          parseDate(punchIn?.userDate),\n          jsDateFormat,\n          {locale},\n        );\n        const punchInTime = formatTime(\n          parseTime(punchIn?.userTime, timeFormat),\n          jsTimeFormat,\n        );\n        const punchOutDate = formatDate(\n          parseDate(punchOut?.userDate),\n          jsDateFormat,\n          {locale},\n        );\n        const punchOutTime = formatTime(\n          parseTime(punchOut?.userTime, timeFormat),\n          jsTimeFormat,\n        );\n\n        return {\n          id: item.id,\n          punchIn: {\n            ...punchIn,\n            userTime: punchInTime,\n            userDate: punchInDate,\n          },\n          punchOut: {\n            ...punchOut,\n            userTime: punchOutTime,\n            userDate: punchOutDate,\n          },\n          duration: item.duration,\n          punchInNote: punchIn.note,\n          punchOutNote: punchOut.note,\n        };\n      });\n    };\n\n    const {\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: attendanceRecordNormalizer,\n      prefetch: true,\n    });\n\n    const totalDuration = computed(() => {\n      const meta = response.value?.meta;\n      return meta ? meta.sum.label : '0.00';\n    });\n\n    return {\n      http,\n      rules,\n      total,\n      pages,\n      filters,\n      pageSize,\n      isLoading,\n      execQuery,\n      currentPage,\n      showPaginator,\n      items: response,\n      totalDuration,\n    };\n  },\n\n  data() {\n    return {\n      yearArray: [...yearRange()],\n      headers: [\n        {\n          name: 'punchIn',\n          slot: 'title',\n          title: this.$t('attendance.punch_in'),\n          style: {flex: 1},\n          cellRenderer: this.cellRenderer,\n        },\n        {\n          name: 'punchInNote',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('attendance.punch_in_note'),\n          style: {flex: 1},\n        },\n        {\n          name: 'punchOut',\n          slot: 'title',\n          title: this.$t('attendance.punch_out'),\n          style: {flex: 1},\n          cellRenderer: this.cellRenderer,\n        },\n        {\n          name: 'punchOutNote',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('attendance.punch_out_note'),\n          style: {flex: 1},\n        },\n        {\n          name: 'duration',\n          slot: 'title',\n          title: this.$t('attendance.duration_hours'),\n          style: {flex: 1},\n        },\n        {\n          ...(this.isEditable && {\n            name: 'actions',\n            title: this.$t('general.actions'),\n            slot: 'action',\n            style: {flex: 1},\n            cellType: 'oxd-table-cell-actions',\n            cellConfig: {\n              delete: {\n                onClick: this.onClickDelete,\n                component: 'oxd-icon-button',\n                props: {\n                  name: 'trash',\n                },\n              },\n              edit: {\n                onClick: this.onClickEdit,\n                props: {\n                  name: 'pencil-fill',\n                },\n              },\n            },\n          }),\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  methods: {\n    cellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: RecordCell,\n        props: {\n          date: cellData.userDate,\n          time: cellData.userTime,\n          offset: getStandardTimezone(cellData.offset),\n        },\n      };\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickView() {\n      return navigate('/attendance/viewAttendanceRecord', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date,\n      });\n    },\n    onClickAdd() {\n      return navigate('/attendance/proxyPunchInPunchOut', undefined, {\n        employeeId: this.filters.employee?.id,\n        date: this.filters?.date,\n      });\n    },\n    onClickEdit(item) {\n      return navigate('/attendance/editEmployeeAttendanceRecord/{id}', {\n        id: item.id,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}