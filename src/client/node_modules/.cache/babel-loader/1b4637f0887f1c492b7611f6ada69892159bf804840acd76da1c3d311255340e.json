{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ba9f580\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_timesheet = _resolveComponent(\"timesheet\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_timesheet, {\n    records: _ctx.timesheetRecords,\n    \"onUpdate:records\": _cache[0] || (_cache[0] = $event => _ctx.timesheetRecords = $event),\n    editable: true,\n    loading: _ctx.isLoading,\n    \"timesheet-id\": $props.timesheetId,\n    columns: _ctx.timesheetColumns,\n    onSubmitValid: $setup.onSave\n  }, {\n    \"header-title\": _withCtx(() => [_createVNode(_component_oxd_text, {\n      tag: \"h6\",\n      class: \"orangehrm-main-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.title), 1)]),\n      _: 1\n    })]),\n    \"header-options\": _withCtx(() => [$options.timesheetDateRange ? (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 0,\n      tag: \"p\",\n      class: \"orangehrm-timeperiod-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.timesheet_period')), 1)]),\n      _: 1\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_text, {\n      tag: \"h6\",\n      class: \"orangehrm-main-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.timesheetDateRange), 1)]),\n      _: 1\n    })]),\n    \"footer-options\": _withCtx(() => [_createVNode(_component_oxd_button, {\n      \"display-type\": \"ghost\",\n      label: _ctx.$t('general.cancel'),\n      onClick: $setup.onClickCancel\n    }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n      \"display-type\": \"ghost\",\n      label: _ctx.$t('general.reset'),\n      onClick: $setup.onClickReset\n    }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n      type: \"submit\",\n      \"display-type\": \"secondary\",\n      label: _ctx.$t('general.save')\n    }, null, 8, [\"label\"])]),\n    _: 1\n  }, 8, [\"records\", \"loading\", \"timesheet-id\", \"columns\", \"onSubmitValid\"])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;;;;uBAA3CC,oBA6CM,OA7CNC,UA6CM,GA5CJC,aA2CYC;IA1CFC,OAAO,EAAEC,qBAAgB;4DAAhBA,qBAAgB;IAChCC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAEF,cAAS;IAClB,cAAY,EAAEG,kBAAW;IACzBC,OAAO,EAAEJ,qBAAgB;IACzBK,aAAY,EAAEC;;IAEJ,cAAY,WACrB,MAEW,CAFXT,aAEWU;MAFDC,GAAG,EAAC,IAAI;MAACd,KAAK,EAAC;;wBACvB,MAAW,mCAARe,cAAK;;;IAGD,gBAAc,WACvB,MAMW,CALHA,2BAAkB,kBAD1BC,aAMWH;;MAJTC,GAAG,EAAC,GAAG;MACPd,KAAK,EAAC;;wBAEN,MAAiC,mCAA9BM,OAAE;;yCAEPH,aAEWU;MAFDC,GAAG,EAAC,IAAI;MAACd,KAAK,EAAC;;wBACvB,MAAwB,mCAArBe,2BAAkB;;;IAId,gBAAc,WACvB,MAIE,CAJFZ,aAIEc;MAHA,cAAY,EAAC,OAAO;MACnBC,KAAK,EAAEZ,OAAE;MACTa,OAAK,EAAEP;uCAEVT,aAIEc;MAHA,cAAY,EAAC,OAAO;MACnBC,KAAK,EAAEZ,OAAE;MACTa,OAAK,EAAEP;uCAEVT,aAIEc;MAHAG,IAAI,EAAC,QAAQ;MACb,cAAY,EAAC,WAAW;MACvBF,KAAK,EAAEZ,OAAE","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_timesheet","records","_ctx","editable","loading","$props","columns","onSubmitValid","$setup","_component_oxd_text","tag","$options","_createBlock","_component_oxd_button","label","onClick","type"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\timesheets\\EditTimeSheet.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <timesheet\n      v-model:records=\"timesheetRecords\"\n      :editable=\"true\"\n      :loading=\"isLoading\"\n      :timesheet-id=\"timesheetId\"\n      :columns=\"timesheetColumns\"\n      @submit-valid=\"onSave\"\n    >\n      <template #header-title>\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ title }}\n        </oxd-text>\n      </template>\n      <template #header-options>\n        <oxd-text\n          v-if=\"timesheetDateRange\"\n          tag=\"p\"\n          class=\"orangehrm-timeperiod-title\"\n        >\n          {{ $t('time.timesheet_period') }}\n        </oxd-text>\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ timesheetDateRange }}\n        </oxd-text>\n      </template>\n\n      <template #footer-options>\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onClickCancel\"\n        />\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.reset')\"\n          @click=\"onClickReset\"\n        />\n        <oxd-button\n          type=\"submit\"\n          display-type=\"secondary\"\n          :label=\"$t('general.save')\"\n        />\n      </template>\n    </timesheet>\n  </div>\n</template>\n\n<script>\nimport {\n  secondsTohhmm,\n  parseTimeInSeconds,\n} from '@ohrm/core/util/helper/datefns';\nimport {onBeforeMount, toRefs} from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport Timesheet from '@/orangehrmTimePlugin/components/Timesheet.vue';\nimport useTimesheetAPIs from '@/orangehrmTimePlugin/util/composable/useTimesheetAPIs';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  components: {\n    timesheet: Timesheet,\n  },\n\n  props: {\n    myTimesheet: {\n      type: Boolean,\n      default: false,\n    },\n    timesheetId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/time/timesheets`,\n    );\n\n    http.setIgnorePath('/api/v2/time/timesheets/[0-9]+/entries');\n\n    let timesheetModal = [];\n\n    const {saveSuccess} = useToast();\n    const {state, fetchTimesheetEntries, updateTimesheetEntries} =\n      useTimesheetAPIs(http);\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const loadTimesheet = () => {\n      state.isLoading = true;\n      timesheetModal = [];\n      state.timesheetRecords = [];\n      fetchTimesheetEntries(props.timesheetId, !props.myTimesheet).then(\n        (response) => {\n          const {data, meta, timesheet, allowedActions} = response;\n          state.timesheet = timesheet;\n          state.employee = meta.employee;\n          state.timesheetColumns = meta.columns;\n          state.timesheetSubtotal = meta.sum.label;\n          state.timesheetStatus = timesheet.status.name;\n          state.timesheetAllowedActions = allowedActions;\n          if (data.length > 0) {\n            state.timesheetRecords = data;\n            timesheetModal = JSON.parse(JSON.stringify(data));\n          } else {\n            state.timesheetRecords.push({\n              project: null,\n              activity: null,\n              dates: {},\n            });\n            timesheetModal.push({\n              project: null,\n              activity: null,\n              dates: {},\n            });\n          }\n          state.isLoading = false;\n        },\n      );\n    };\n\n    const onClickReset = () => loadTimesheet();\n\n    const onClickCancel = () => {\n      if (props.myTimesheet) {\n        navigate(\n          '/time/viewMyTimesheet',\n          {},\n          {\n            startDate: state.timesheet.startDate,\n          },\n        );\n      } else {\n        navigate(\n          '/time/viewTimesheet/employeeId/{id}',\n          {\n            id: state.employee?.empNumber,\n          },\n          {startDate: state.timesheet.startDate},\n        );\n      }\n    };\n\n    const onSave = () => {\n      state.isLoading = true;\n      const payload = {\n        entries: state.timesheetRecords.map((record) => {\n          const dates = {};\n          for (const date in record.dates) {\n            const _duration = parseTimeInSeconds(record.dates[date].duration);\n            dates[date] = {\n              duration: _duration > 0 ? secondsTohhmm(_duration) : '00:00',\n            };\n          }\n          return {\n            projectId: record.project.id,\n            activityId: record.activity.id,\n            dates,\n          };\n        }),\n        deletedEntries: timesheetModal\n          .filter((record) => {\n            if (!record.project) return false;\n            return (\n              state.timesheetRecords.findIndex(\n                (item) =>\n                  item.project.id === record.project.id &&\n                  item.activity.id === record.activity.id,\n              ) < 0\n            );\n          })\n          .map((record) => ({\n            projectId: record.project.id,\n            activityId: record.activity.id,\n          })),\n      };\n      updateTimesheetEntries(props.timesheetId, payload, !props.myTimesheet)\n        .then(() => {\n          return saveSuccess();\n        })\n        .catch(() => {\n          // Catch invalid parameter error when submitting without any time\n          return saveSuccess();\n        })\n        .then(() => {\n          onClickCancel();\n        });\n    };\n\n    onBeforeMount(() => loadTimesheet());\n\n    return {\n      onSave,\n      onClickReset,\n      onClickCancel,\n      ...toRefs(state),\n      jsDateFormat,\n      locale,\n      translateEmpName: $tEmpName,\n    };\n  },\n\n  computed: {\n    title() {\n      if (this.myTimesheet) {\n        return this.$t('time.edit_timesheet');\n      } else if (this.employee) {\n        const empName = this.translateEmpName(this.employee, {\n          includeMiddle: false,\n          excludePastEmpTag: false,\n        });\n        return `${this.$t('time.edit_timesheet_for')} ${empName}`;\n      }\n      return '';\n    },\n    timesheetDateRange() {\n      if (!this.timesheet) return '';\n      const startDate = formatDate(\n        parseDate(this.timesheet.startDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      const endDate = formatDate(\n        parseDate(this.timesheet.endDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      return `${startDate} - ${endDate}`;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-timeperiod-title {\n  font-size: 12px;\n  margin-right: 10px;\n}\n.orangehrm-form-hint {\n  margin-right: auto;\n  font-weight: 600;\n  font-size: 0.75rem;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}