{"ast":null,"code":"import usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport usei18n from '@/core/util/composable/usei18n';\nimport { OxdSpinner, OxdSwitchInput } from '@ohrm/oxd';\nexport default {\n  setup() {\n    const {\n      $t\n    } = usei18n();\n    const subscribersNormalizer = data => {\n      return data.map(item => {\n        const subscribers = Array.isArray(item.subscribers) ? item.subscribers.slice(0, 10) : [];\n        let _type = item.name;\n        switch (_type) {\n          case 'Leave Applications':\n            _type = $t('admin.leave_applications');\n            break;\n          case 'Leave Approvals':\n            _type = $t('admin.leave_approvals');\n            break;\n          case 'Leave Assignments':\n            _type = $t('admin.leave_assignments');\n            break;\n          case 'Leave Cancellations':\n            _type = $t('admin.leave_cancellation');\n            break;\n          case 'Leave Rejections':\n            _type = $t('admin.leave_rejections');\n            break;\n        }\n        return {\n          id: item.id,\n          type: _type,\n          subscribers: subscribers.map(sub => {\n            return `${sub.name} <${sub.email}>`;\n          }).join(', '),\n          enabled: item.isEnabled,\n          _loading: false\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/email-subscriptions');\n    const {\n      total,\n      response,\n      isLoading\n    } = usePaginate(http, {\n      normalizer: subscribersNormalizer\n    });\n    return {\n      http,\n      isLoading,\n      total,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'type',\n        slot: 'title',\n        title: this.$t('admin.notification_type'),\n        style: {\n          flex: '20%'\n        }\n      }, {\n        name: 'subscribers',\n        title: this.$t('admin.subscribers'),\n        style: {\n          flex: '65%'\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: '15%'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer\n      }]\n    };\n  },\n  methods: {\n    cellRenderer(...args) {\n      const [index,,, row] = args;\n      const addSubscriber = {\n        component: 'oxd-icon-button',\n        props: {\n          name: 'person-plus-fill',\n          onClick: () => {\n            navigate('/admin/saveSubscriber/{id}', {\n              id: row.id\n            });\n          }\n        }\n      };\n      const switchSubscription = {\n        component: OxdSwitchInput,\n        props: {\n          modelValue: row.enabled,\n          'onUpdate:modelValue': $event => {\n            this.items.data[index]._loading = true;\n            this.http.update(row.id, {\n              enabled: $event\n            }).then(response => {\n              const {\n                data\n              } = response.data;\n              this.items.data[index].enabled = data.isEnabled;\n              this.$toast.updateSuccess();\n            }).finally(() => {\n              this.items.data[index]._loading = false;\n            });\n          },\n          style: {\n            'margin-left': '1rem',\n            'text-align': 'left'\n          }\n        }\n      };\n      const loader = {\n        component: OxdSpinner,\n        props: {\n          withContainer: false\n        }\n      };\n      return {\n        props: {\n          header: {\n            cellConfig: {\n              ...(row._loading ? {\n                loader\n              } : {\n                addSubscriber,\n                switchSubscription\n              })\n            }\n          }\n        }\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["usePaginate","navigate","APIService","usei18n","OxdSpinner","OxdSwitchInput","setup","$t","subscribersNormalizer","data","map","item","subscribers","Array","isArray","slice","_type","name","id","type","sub","email","join","enabled","isEnabled","_loading","http","window","appGlobal","baseUrl","total","response","isLoading","normalizer","items","headers","slot","title","style","flex","cellType","cellRenderer","methods","args","index","row","addSubscriber","component","props","onClick","switchSubscription","modelValue","$event","update","then","$toast","updateSuccess","finally","loader","withContainer","header","cellConfig"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\emailSubscription\\EmailSubscription.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('admin.email_subscriptions') }}\n        </oxd-text>\n      </div>\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          :loading=\"isLoading\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"false\"\n          :clickable=\"false\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport usei18n from '@/core/util/composable/usei18n';\nimport {OxdSpinner, OxdSwitchInput} from '@ohrm/oxd';\n\nexport default {\n  setup() {\n    const {$t} = usei18n();\n    const subscribersNormalizer = (data) => {\n      return data.map((item) => {\n        const subscribers = Array.isArray(item.subscribers)\n          ? item.subscribers.slice(0, 10)\n          : [];\n        let _type = item.name;\n        switch (_type) {\n          case 'Leave Applications':\n            _type = $t('admin.leave_applications');\n            break;\n          case 'Leave Approvals':\n            _type = $t('admin.leave_approvals');\n            break;\n          case 'Leave Assignments':\n            _type = $t('admin.leave_assignments');\n            break;\n          case 'Leave Cancellations':\n            _type = $t('admin.leave_cancellation');\n            break;\n          case 'Leave Rejections':\n            _type = $t('admin.leave_rejections');\n            break;\n        }\n        return {\n          id: item.id,\n          type: _type,\n          subscribers: subscribers\n            .map((sub) => {\n              return `${sub.name} <${sub.email}>`;\n            })\n            .join(', '),\n          enabled: item.isEnabled,\n          _loading: false,\n        };\n      });\n    };\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/email-subscriptions',\n    );\n    const {total, response, isLoading} = usePaginate(http, {\n      normalizer: subscribersNormalizer,\n    });\n    return {\n      http,\n      isLoading,\n      total,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'type',\n          slot: 'title',\n          title: this.$t('admin.notification_type'),\n          style: {flex: '20%'},\n        },\n        {\n          name: 'subscribers',\n          title: this.$t('admin.subscribers'),\n          style: {flex: '65%'},\n        },\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: '15%'},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ],\n    };\n  },\n\n  methods: {\n    cellRenderer(...args) {\n      const [index, , , row] = args;\n\n      const addSubscriber = {\n        component: 'oxd-icon-button',\n        props: {\n          name: 'person-plus-fill',\n          onClick: () => {\n            navigate('/admin/saveSubscriber/{id}', {id: row.id});\n          },\n        },\n      };\n\n      const switchSubscription = {\n        component: OxdSwitchInput,\n        props: {\n          modelValue: row.enabled,\n          'onUpdate:modelValue': ($event) => {\n            this.items.data[index]._loading = true;\n            this.http\n              .update(row.id, {\n                enabled: $event,\n              })\n              .then((response) => {\n                const {data} = response.data;\n                this.items.data[index].enabled = data.isEnabled;\n                this.$toast.updateSuccess();\n              })\n              .finally(() => {\n                this.items.data[index]._loading = false;\n              });\n          },\n          style: {\n            'margin-left': '1rem',\n            'text-align': 'left',\n          },\n        },\n      };\n\n      const loader = {\n        component: OxdSpinner,\n        props: {\n          withContainer: false,\n        },\n      };\n\n      return {\n        props: {\n          header: {\n            cellConfig: {\n              ...(row._loading\n                ? {loader}\n                : {addSubscriber, switchSubscription}),\n            },\n          },\n        },\n      };\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}