{"ast":null,"code":"import { ref } from 'vue';\nimport { required, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate } from '@ohrm/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nexport default {\n  name: 'ReportCriterionDateRange',\n  inheritAttrs: false,\n  props: {\n    operator: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    valueX: {\n      type: String,\n      required: false,\n      default: null\n    },\n    valueY: {\n      type: String,\n      required: false,\n      default: null\n    }\n  },\n  emits: ['update:valueX', 'update:valueY', 'update:operator'],\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const operators = ref([{\n      id: 'lt',\n      label: 'Joined before'\n    }, {\n      id: 'gt',\n      label: 'Joined after'\n    }, {\n      id: 'between',\n      label: 'Joined in between'\n    }]);\n    const rules = {\n      operator: [required],\n      valueXOnly: [required, validDateFormat(userDateFormat)],\n      valueX: [required, validDateFormat(userDateFormat), startDateShouldBeBeforeEndDate(() => props.valueY, $t('general.from_date_should_be_before_to_date'))],\n      valueY: [required, validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => props.valueX, $t('general.to_date_should_be_after_from_date'))]\n    };\n    return {\n      rules,\n      operators,\n      jsDateFormat,\n      userDateFormat\n    };\n  }\n};","map":{"version":3,"mappings":"AAgEA,SAAQA,GAAG,QAAO,KAAK;AACvB,SACEC,QAAQ,EACRC,eAAe,EACfC,6BAA6B,EAC7BC,8BAA8B,QACzB,kCAAkC;AACzC,OAAOC,OAAM,MAAO,gCAAgC;AACpD,OAAOC,aAAY,MAAO,sCAAsC;AAEhE,eAAe;EACbC,IAAI,EAAE,0BAA0B;EAChCC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZX,QAAQ,EAAE,KAAK;MACfY,OAAO,EAAE,MAAM;IACjB,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZd,QAAQ,EAAE,KAAK;MACfY,OAAO,EAAE;IACX,CAAC;IACDG,MAAM,EAAE;MACNL,IAAI,EAAEI,MAAM;MACZd,QAAQ,EAAE,KAAK;MACfY,OAAO,EAAE;IACX;EACF,CAAC;EACDI,KAAK,EAAE,CAAC,eAAe,EAAE,eAAe,EAAE,iBAAiB,CAAC;EAC5DC,KAAK,CAACT,KAAK,EAAE;IACX,MAAM;MAACU;IAAE,IAAId,OAAO,EAAE;IACtB,MAAM;MAACe,YAAY;MAAEC;IAAc,IAAIf,aAAa,EAAE;IACtD,MAAMgB,SAAQ,GAAItB,GAAG,CAAC,CACpB;MAACuB,EAAE,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAe,CAAC,EAClC;MAACD,EAAE,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAc,CAAC,EACjC;MAACD,EAAE,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAmB,CAAC,CAC5C,CAAC;IAEF,MAAMC,KAAI,GAAI;MACZf,QAAQ,EAAE,CAACT,QAAQ,CAAC;MACpByB,UAAU,EAAE,CAACzB,QAAQ,EAAEC,eAAe,CAACmB,cAAc,CAAC,CAAC;MACvDP,MAAM,EAAE,CACNb,QAAQ,EACRC,eAAe,CAACmB,cAAc,CAAC,EAC/BjB,8BAA8B,CAC5B,MAAMK,KAAK,CAACO,MAAM,EAClBG,EAAE,CAAC,4CAA4C,CAAC,CACjD,CACF;MACDH,MAAM,EAAE,CACNf,QAAQ,EACRC,eAAe,CAACmB,cAAc,CAAC,EAC/BlB,6BAA6B,CAC3B,MAAMM,KAAK,CAACK,MAAM,EAClBK,EAAE,CAAC,2CAA2C,CAAC,CAChD;IAEL,CAAC;IAED,OAAO;MACLM,KAAK;MACLH,SAAS;MACTF,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC","names":["ref","required","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","usei18n","useDateFormat","name","inheritAttrs","props","operator","type","Object","default","valueX","String","valueY","emits","setup","$t","jsDateFormat","userDateFormat","operators","id","label","rules","valueXOnly"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\ReportCriterionDateRange.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-grid-item>\n    <oxd-input-field\n      type=\"select\"\n      :rules=\"rules.operator\"\n      :options=\"operators\"\n      :model-value=\"operator\"\n      @update:model-value=\"$emit('update:operator', $event)\"\n    />\n  </oxd-grid-item>\n  <oxd-grid-item\n    v-if=\"operator && operator.id === 'between'\"\n    class=\"orangehrm-report-daterange --span-column-2\"\n  >\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueX\"\n      :model-value=\"valueX\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueX', $event)\"\n    />\n    <oxd-text class=\"orangehrm-report-range-text\" tag=\"p\">to</oxd-text>\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueY\"\n      :model-value=\"valueY\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueY', $event)\"\n    />\n  </oxd-grid-item>\n  <oxd-grid-item v-else-if=\"operator\">\n    <oxd-input-field\n      type=\"date\"\n      :rules=\"rules.valueXOnly\"\n      :model-value=\"valueX\"\n      :placeholder=\"userDateFormat\"\n      :display-format=\"jsDateFormat\"\n      @update:model-value=\"$emit('update:valueX', $event)\"\n    />\n  </oxd-grid-item>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport {\n  required,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@ohrm/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nexport default {\n  name: 'ReportCriterionDateRange',\n  inheritAttrs: false,\n  props: {\n    operator: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    valueX: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    valueY: {\n      type: String,\n      required: false,\n      default: null,\n    },\n  },\n  emits: ['update:valueX', 'update:valueY', 'update:operator'],\n  setup(props) {\n    const {$t} = usei18n();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const operators = ref([\n      {id: 'lt', label: 'Joined before'},\n      {id: 'gt', label: 'Joined after'},\n      {id: 'between', label: 'Joined in between'},\n    ]);\n\n    const rules = {\n      operator: [required],\n      valueXOnly: [required, validDateFormat(userDateFormat)],\n      valueX: [\n        required,\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => props.valueY,\n          $t('general.from_date_should_be_before_to_date'),\n        ),\n      ],\n      valueY: [\n        required,\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => props.valueX,\n          $t('general.to_date_should_be_after_from_date'),\n        ),\n      ],\n    };\n\n    return {\n      rules,\n      operators,\n      jsDateFormat,\n      userDateFormat,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-report {\n  &-daterange {\n    display: flex;\n    justify-content: center;\n    align-items: baseline;\n  }\n  &-range-text {\n    margin: 0 1rem;\n    font-size: $oxd-input-control-font-size;\n  }\n}\n::v-deep(.oxd-input-group__label-wrapper) {\n  display: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}