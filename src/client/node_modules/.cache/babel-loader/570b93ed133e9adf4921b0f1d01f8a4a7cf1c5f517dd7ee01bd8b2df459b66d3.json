{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_edit_employee_layout = _resolveComponent(\"edit-employee-layout\");\n  return _openBlock(), _createBlock(_component_edit_employee_layout, {\n    \"employee-id\": $props.empNumber,\n    screen: \"tax\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      tag: \"h6\",\n      class: \"orangehrm-main-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.tax_exemptions')), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"orangehrm-sub-title\",\n        tag: \"h6\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.federal_income_tax')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.federalStatus,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taxExemption.federalStatus = $event),\n              type: \"select\",\n              label: _ctx.$t('general.status'),\n              options: $props.statuses,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"options\", \"disabled\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.federalExemptions,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taxExemption.federalExemptions = $event),\n              label: _ctx.$t('pim.exemptions'),\n              rules: $data.rules.federalExemptions,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"disabled\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_text, {\n        class: \"orangehrm-sub-title\",\n        tag: \"h6\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.state_income_tax')), 1)]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 3,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.taxState,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.taxExemption.taxState = $event),\n              type: \"select\",\n              label: _ctx.$t('general.state'),\n              options: $props.provinces,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"options\", \"disabled\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.stateStatus,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.taxExemption.stateStatus = $event),\n              type: \"select\",\n              label: _ctx.$t('general.status'),\n              options: $props.statuses,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"options\", \"disabled\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.stateExemptions,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.taxExemption.stateExemptions = $event),\n              label: _ctx.$t('pim.exemptions'),\n              rules: $data.rules.stateExemptions,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"rules\", \"disabled\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.unemploymentState,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.taxExemption.unemploymentState = $event),\n              type: \"select\",\n              label: _ctx.$t('pim.unemployment_state'),\n              options: $props.provinces,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"options\", \"disabled\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.taxExemption.workState,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.taxExemption.workState = $event),\n              type: \"select\",\n              label: _ctx.$t('pim.work_state'),\n              options: $props.provinces,\n              disabled: !_ctx.$can.update('tax_exemptions')\n            }, null, 8, [\"modelValue\", \"label\", \"options\", \"disabled\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_ctx.$can.update('tax_exemptions') ? (_openBlock(), _createBlock(_component_submit_button, {\n          key: 0\n        })) : _createCommentVNode(\"\", true)]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])])]),\n    _: 1\n  }, 8, [\"employee-id\"]);\n}","map":{"version":3,"mappings":"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","names":["class","_createBlock","_component_edit_employee_layout","$props","screen","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","federalStatus","type","label","options","disabled","update","federalExemptions","rules","taxState","stateStatus","stateExemptions","unemploymentState","workState","_component_oxd_form_actions","_component_submit_button","key"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeTaxExemption.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\" screen=\"tax\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.tax_exemptions') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n          {{ $t('pim.federal_income_tax') }}\n        </oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.federalStatus\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :options=\"statuses\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.federalExemptions\"\n                :label=\"$t('pim.exemptions')\"\n                :rules=\"rules.federalExemptions\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n          {{ $t('pim.state_income_tax') }}\n        </oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.taxState\"\n                type=\"select\"\n                :label=\"$t('general.state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.stateStatus\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :options=\"statuses\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.stateExemptions\"\n                :label=\"$t('pim.exemptions')\"\n                :rules=\"rules.stateExemptions\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.unemploymentState\"\n                type=\"select\"\n                :label=\"$t('pim.unemployment_state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.workState\"\n                type=\"select\"\n                :label=\"$t('pim.work_state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <submit-button v-if=\"$can.update('tax_exemptions')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport {shouldNotExceedCharLength} from '@ohrm/core/util/validation/rules';\n\nconst taxExemptionModel = {\n  federalStatus: null,\n  federalExemptions: null,\n  taxStateCode: [],\n  stateStatus: null,\n  stateExemptions: null,\n  unemploymentStateCode: [],\n  workStateCode: [],\n};\n\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    provinces: {\n      type: Array,\n      default: () => [],\n    },\n    statuses: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/tax-exemption`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      taxExemption: {...taxExemptionModel},\n      rules: {\n        federalExemptions: [\n          (v) => {\n            return (\n              v.match(/^\\d*\\.?\\d*$/) !== null ||\n              this.$t('general.should_be_a_positive_number')\n            );\n          },\n          shouldNotExceedCharLength(2),\n        ],\n        stateExemptions: [\n          (v) => {\n            return (\n              v.match(/^\\d*\\.?\\d*$/) !== null ||\n              this.$t('general.should_be_a_positive_number')\n            );\n          },\n          shouldNotExceedCharLength(2),\n        ],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        this.updateModel(response);\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            federalStatus: this.taxExemption.federalStatus?.id,\n            federalExemptions: this.taxExemption.federalExemptions,\n            taxStateCode: this.taxExemption.taxState?.id,\n            stateStatus: this.taxExemption.stateStatus?.id,\n            stateExemptions: this.taxExemption.stateExemptions,\n            unemploymentStateCode: this.taxExemption.unemploymentState?.id,\n            workStateCode: this.taxExemption.workState?.id,\n          },\n        })\n        .then((response) => {\n          this.updateModel(response);\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n\n    updateModel(response) {\n      const {data} = response.data;\n      this.taxExemption.federalExemptions = data.federalExemptions;\n      this.taxExemption.stateExemptions = data.stateExemptions;\n      this.taxExemption.taxState = this.provinces.find(\n        (item) => item.id === data.taxState.code,\n      );\n      this.taxExemption.unemploymentState = this.provinces.find(\n        (item) => item.id === data.unemploymentState.code,\n      );\n      this.taxExemption.workState = this.provinces.find(\n        (item) => item.id === data.workState.code,\n      );\n      this.taxExemption.federalStatus = this.statuses.find(\n        (item) => item.id === data.federalStatus,\n      );\n      this.taxExemption.stateStatus = this.statuses.find(\n        (item) => item.id === data.stateStatus,\n      );\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}