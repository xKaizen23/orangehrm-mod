{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { validSelection, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate } from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport CandidateAutocomplete from '@/orangehrmRecruitmentPlugin/components/CandidateAutocomplete';\nimport HiringManagerDropdown from '@/orangehrmRecruitmentPlugin/components/HiringManagerDropdown';\nimport CandidateStatusDropdown from '@/orangehrmRecruitmentPlugin/components/CandidateStatusDropdown';\nconst defaultFilters = {\n  jobTitle: null,\n  vacancy: null,\n  hiringManager: null,\n  status: null,\n  keywords: null,\n  application: null,\n  candidate: null,\n  fromDate: null,\n  toDate: null\n};\nconst defaultSortOrder = {\n  'vacancy.name': 'DEFAULT',\n  'candidate.lastName': 'DEFAULT',\n  'hiringManager.lastName': 'DEFAULT',\n  'candidate.dateOfApplication': 'DESC',\n  'candidateVacancy.status': 'DEFAULT'\n};\nexport default {\n  components: {\n    'vacancy-dropdown': VacancyDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'delete-confirmation': DeleteConfirmationDialog,\n    'candidate-autocomplete': CandidateAutocomplete,\n    'hiring-manager-dropdown': HiringManagerDropdown,\n    'candidate-status-dropdown': CandidateStatusDropdown\n  },\n  props: {\n    status: {\n      type: Object,\n      required: false,\n      default: null\n    }\n  },\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const statuses = [{\n      id: 1,\n      label: $t('recruitment.application_initiated')\n    }, {\n      id: 2,\n      label: $t('recruitment.shortlisted')\n    }, {\n      id: 3,\n      label: $t('leave.rejected')\n    }, {\n      id: 4,\n      label: $t('recruitment.interview_scheduled')\n    }, {\n      id: 5,\n      label: $t('recruitment.interview_passed')\n    }, {\n      id: 6,\n      label: $t('recruitment.interview_failed')\n    }, {\n      id: 7,\n      label: $t('recruitment.job_offered')\n    }, {\n      id: 8,\n      label: $t('recruitment.offer_declined')\n    }, {\n      id: 9,\n      label: $t('recruitment.hired')\n    }];\n    const candidateDataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          vacancy: item.vacancy?.status === false ? `${item.vacancy?.name} (${$t('general.closed')})` : item.vacancy?.name,\n          candidate: `${item.firstName} ${item.middleName || ''} ${item.lastName}`,\n          manager: item?.vacancy?.hiringManager?.id ? $tEmpName(item.vacancy.hiringManager, {\n            includeMiddle: true,\n            excludePastEmpTag: false\n          }) : $t('general.deleted'),\n          dateOfApplication: formatDate(parseDate(item.dateOfApplication), jsDateFormat, {\n            locale\n          }),\n          status: statuses.find(status => status.id === item.status?.id)?.label || '',\n          resume: item.hasAttachment,\n          isSelectable: item.deletable\n        };\n      });\n    };\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.status && {\n        status: props.status\n      })\n    });\n    const rules = {\n      candidate: [validSelection],\n      fromDate: [validDateFormat(userDateFormat), startDateShouldBeBeforeEndDate(() => filters.value.toDate, $t('general.from_date_should_be_before_to_date'), {\n        allowSameDate: true\n      })],\n      toDate: [validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => filters.value.fromDate, $t('general.to_date_should_be_after_from_date'), {\n        allowSameDate: true\n      })]\n    };\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        jobTitleId: filters.value.jobTitle?.id,\n        vacancyId: filters.value.vacancy?.id,\n        hiringManagerId: filters.value.hiringManager?.id,\n        keywords: filters.value.keywords,\n        candidateId: filters.value.candidate?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        status: filters.value.status?.id,\n        methodOfApplication: filters.value.methodOfApplication?.id,\n        model: 'list',\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/candidates');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: candidateDataNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      rules\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      headers: [{\n        name: 'vacancy',\n        title: this.$t('recruitment.vacancy'),\n        sortField: 'vacancy.name',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'candidate',\n        slot: 'title',\n        title: this.$t('recruitment.candidate'),\n        sortField: 'candidate.lastName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'manager',\n        title: this.$t('recruitment.hiring_manager'),\n        sortField: 'hiringManager.lastName',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'dateOfApplication',\n        title: this.$t('recruitment.date_of_application'),\n        sortField: 'candidate.dateOfApplication',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        sortField: 'candidateVacancy.status',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer\n      }],\n      applications: [{\n        id: 1,\n        label: this.$t('recruitment.manual')\n      }, {\n        id: 2,\n        label: this.$t('recruitment.online')\n      }]\n    };\n  },\n  methods: {\n    cellRenderer(...[,,, row]) {\n      const cellConfig = {\n        view: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'eye-fill'\n          }\n        }\n      };\n      if (row.isSelectable) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      if (row.resume) {\n        cellConfig.download = {\n          onClick: this.onDownload,\n          props: {\n            name: 'download'\n          }\n        };\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    onClickAdd() {\n      navigate('/recruitment/addCandidate');\n    },\n    onClickEdit(item) {\n      navigate('/recruitment/addCandidate/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onDownload(item) {\n      if (!item?.id) return;\n      const fileUrl = 'recruitment/viewCandidateAttachment/candidateId';\n      const downUrl = `${window.appGlobal.baseUrl}/${fileUrl}/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        }).catch(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onReset() {\n      this.filters = {\n        ...defaultFilters\n      };\n      this.filterItems();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","validSelection","validDateFormat","endDateShouldBeAfterStartDate","startDateShouldBeBeforeEndDate","usei18n","useSort","useLocale","navigate","APIService","useDateFormat","usePaginate","formatDate","parseDate","JobtitleDropdown","VacancyDropdown","useEmployeeNameTranslate","DeleteConfirmationDialog","CandidateAutocomplete","HiringManagerDropdown","CandidateStatusDropdown","defaultFilters","jobTitle","vacancy","hiringManager","status","keywords","application","candidate","fromDate","toDate","defaultSortOrder","components","props","type","Object","required","default","setup","$t","locale","jsDateFormat","userDateFormat","$tEmpName","statuses","id","label","candidateDataNormalizer","data","map","item","name","firstName","middleName","lastName","manager","includeMiddle","excludePastEmpTag","dateOfApplication","find","resume","hasAttachment","isSelectable","deletable","filters","rules","value","allowSameDate","sortDefinition","sortField","sortOrder","onSort","serializedFilters","jobTitleId","vacancyId","hiringManagerId","candidateId","methodOfApplication","model","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","items","checkedItems","headers","title","style","flex","slot","cellType","cellRenderer","applications","methods","row","cellConfig","view","onClick","onClickEdit","delete","onClickDelete","component","download","onDownload","header","onClickAdd","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","fileUrl","downUrl","open","Array","deleteAll","$toast","deleteSuccess","resetDataTable","catch","filterItems","onReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmRecruitmentPlugin\\pages\\ViewCandidatesList.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-candidate-page\">\n    <oxd-table-filter :filter-title=\"$t('general.candidates')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"onReset\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <jobtitle-dropdown v-model=\"filters.jobTitle\"></jobtitle-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <vacancy-dropdown v-model=\"filters.vacancy\"></vacancy-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <hiring-manager-dropdown\n                v-model=\"filters.hiringManager\"\n              ></hiring-manager-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <candidate-status-dropdown v-model=\"filters.status\" />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <candidate-autocomplete\n                v-model=\"filters.candidate\"\n                :rules=\"rules.candidate\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.keywords\"\n                :label=\"$t('recruitment.keywords')\"\n                :placeholder=\"`${$t(\n                  'recruitment.enter_comma_seperated_words',\n                )}...`\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.fromDate\"\n                :label=\"$t('recruitment.date_of_application')\"\n                :placeholder=\"$t('general.from')\"\n                :rules=\"rules.fromDate\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"filters.toDate\"\n                label=\"&nbsp\"\n                :placeholder=\"$t('general.to')\"\n                :rules=\"rules.toDate\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.methodOfApplication\"\n                :label=\"$t('recruitment.method_of_application')\"\n                type=\"select\"\n                :options=\"applications\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            type=\"reset\"\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n          />\n          <submit-button :label=\"$t('general.search')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div\n        v-if=\"$can.create('recruitment_candidates')\"\n        class=\"orangehrm-header-container\"\n      >\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        :show-divider=\"$can.create('recruitment_candidates')\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport CandidateAutocomplete from '@/orangehrmRecruitmentPlugin/components/CandidateAutocomplete';\nimport HiringManagerDropdown from '@/orangehrmRecruitmentPlugin/components/HiringManagerDropdown';\nimport CandidateStatusDropdown from '@/orangehrmRecruitmentPlugin/components/CandidateStatusDropdown';\n\nconst defaultFilters = {\n  jobTitle: null,\n  vacancy: null,\n  hiringManager: null,\n  status: null,\n  keywords: null,\n  application: null,\n  candidate: null,\n  fromDate: null,\n  toDate: null,\n};\n\nconst defaultSortOrder = {\n  'vacancy.name': 'DEFAULT',\n  'candidate.lastName': 'DEFAULT',\n  'hiringManager.lastName': 'DEFAULT',\n  'candidate.dateOfApplication': 'DESC',\n  'candidateVacancy.status': 'DEFAULT',\n};\n\nexport default {\n  components: {\n    'vacancy-dropdown': VacancyDropdown,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'delete-confirmation': DeleteConfirmationDialog,\n    'candidate-autocomplete': CandidateAutocomplete,\n    'hiring-manager-dropdown': HiringManagerDropdown,\n    'candidate-status-dropdown': CandidateStatusDropdown,\n  },\n\n  props: {\n    status: {\n      type: Object,\n      required: false,\n      default: null,\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const {locale} = useLocale();\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const statuses = [\n      {id: 1, label: $t('recruitment.application_initiated')},\n      {id: 2, label: $t('recruitment.shortlisted')},\n      {id: 3, label: $t('leave.rejected')},\n      {id: 4, label: $t('recruitment.interview_scheduled')},\n      {id: 5, label: $t('recruitment.interview_passed')},\n      {id: 6, label: $t('recruitment.interview_failed')},\n      {id: 7, label: $t('recruitment.job_offered')},\n      {id: 8, label: $t('recruitment.offer_declined')},\n      {id: 9, label: $t('recruitment.hired')},\n    ];\n    const candidateDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          vacancy:\n            item.vacancy?.status === false\n              ? `${item.vacancy?.name} (${$t('general.closed')})`\n              : item.vacancy?.name,\n          candidate: `${item.firstName} ${item.middleName || ''} ${\n            item.lastName\n          }`,\n          manager: item?.vacancy?.hiringManager?.id\n            ? $tEmpName(item.vacancy.hiringManager, {\n                includeMiddle: true,\n                excludePastEmpTag: false,\n              })\n            : $t('general.deleted'),\n          dateOfApplication: formatDate(\n            parseDate(item.dateOfApplication),\n            jsDateFormat,\n            {locale},\n          ),\n          status:\n            statuses.find((status) => status.id === item.status?.id)?.label ||\n            '',\n          resume: item.hasAttachment,\n          isSelectable: item.deletable,\n        };\n      });\n    };\n    const filters = ref({\n      ...defaultFilters,\n      ...(props.status && {status: props.status}),\n    });\n    const rules = {\n      candidate: [validSelection],\n      fromDate: [\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => filters.value.toDate,\n          $t('general.from_date_should_be_before_to_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      toDate: [\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('general.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n    };\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        jobTitleId: filters.value.jobTitle?.id,\n        vacancyId: filters.value.vacancy?.id,\n        hiringManagerId: filters.value.hiringManager?.id,\n        keywords: filters.value.keywords,\n        candidateId: filters.value.candidate?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        status: filters.value.status?.id,\n        methodOfApplication: filters.value.methodOfApplication?.id,\n        model: 'list',\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/recruitment/candidates',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: candidateDataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n      rules,\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      headers: [\n        {\n          name: 'vacancy',\n          title: this.$t('recruitment.vacancy'),\n          sortField: 'vacancy.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'candidate',\n          slot: 'title',\n          title: this.$t('recruitment.candidate'),\n          sortField: 'candidate.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'manager',\n          title: this.$t('recruitment.hiring_manager'),\n          sortField: 'hiringManager.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'dateOfApplication',\n          title: this.$t('recruitment.date_of_application'),\n          sortField: 'candidate.dateOfApplication',\n          style: {flex: 1},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          sortField: 'candidateVacancy.status',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ],\n      applications: [\n        {\n          id: 1,\n          label: this.$t('recruitment.manual'),\n        },\n        {\n          id: 2,\n          label: this.$t('recruitment.online'),\n        },\n      ],\n    };\n  },\n  methods: {\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {\n        view: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'eye-fill',\n          },\n        },\n      };\n      if (row.isSelectable) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n      if (row.resume) {\n        cellConfig.download = {\n          onClick: this.onDownload,\n          props: {\n            name: 'download',\n          },\n        };\n      }\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    onClickAdd() {\n      navigate('/recruitment/addCandidate');\n    },\n    onClickEdit(item) {\n      navigate('/recruitment/addCandidate/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onDownload(item) {\n      if (!item?.id) return;\n      const fileUrl = 'recruitment/viewCandidateAttachment/candidateId';\n      const downUrl = `${window.appGlobal.baseUrl}/${fileUrl}/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    onReset() {\n      this.filters = {...defaultFilters};\n      this.filterItems();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}