{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-11a17ec4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_add_language_modal = _resolveComponent(\"add-language-modal\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.language_packages')), 1)]),\n    _: 1\n  }), _createElementVNode(\"div\", null, [_createVNode(_component_oxd_button, {\n    label: _ctx.$t('general.add'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    onClick: $options.onClickAddLanguage\n  }, null, 8, [\"label\", \"onClick\"])])]), _createVNode(_component_table_header, {\n    selected: $data.checkedItems.length,\n    total: $setup.total,\n    loading: $setup.isLoading,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"selected\", \"total\", \"loading\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[0] || (_cache[0] = $event => $data.checkedItems = $event),\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[1] || (_cache[1] = $event => $setup.sortDefinition = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: true,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"selected\", \"order\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[2] || (_cache[2] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])]), $data.showAddLanguageModal ? (_openBlock(), _createBlock(_component_add_language_modal, {\n    key: 0,\n    onClose: $options.onAddLanguageModalClose\n  }, null, 8, [\"onClose\"])) : _createCommentVNode(\"\", true), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":";;;EAmBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EAmBlCA,KAAK,EAAC;AAAqB;;EAY3BA,KAAK,EAAC;AAA4B;;;;;;;;;uBAjC3CC,oBAgDM,OAhDNC,UAgDM,GA/CJC,oBAuCM,OAvCNC,UAuCM,GAtCJD,oBAYM,OAZNE,UAYM,GAXJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACR,KAAK,EAAC;;sBACvB,MAAqC,mCAAlCS,OAAE;;MAEPN,oBAOM,cANJG,aAKEI;IAJCC,KAAK,EAAEF,OAAE;IACV,WAAS,EAAC,MAAM;IAChB,cAAY,EAAC,WAAW;IACvBG,OAAK,EAAEC;yCAIdP,aAKgBQ;IAJbC,QAAQ,EAAEC,kBAAY,CAACC,MAAM;IAC7BC,KAAK,EAAEC,YAAK;IACZC,OAAO,EAAED,gBAAS;IAClBE,QAAM,EAAER;6DAEXV,oBAWM,OAXNmB,UAWM,GAVJhB,aASEiB;IARQR,QAAQ,EAAEC,kBAAY;6DAAZA,kBAAY;IACtBQ,KAAK,EAAEL,qBAAc;0DAAdA,qBAAc;IAC5BM,OAAO,EAAET,aAAO;IAChBU,KAAK,EAAEP,YAAK,EAAEQ,IAAI;IAClBC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE,KAAK;IAChBT,OAAO,EAAED,gBAAS;IACnB,eAAa,EAAC;uEAGlBhB,oBAMM,OANN2B,UAMM,GAJIX,oBAAa,kBADrBY,aAIEC;;IAFQC,OAAO,EAAEd,kBAAW;4DAAXA,kBAAW;IAC3BF,MAAM,EAAEE;2EAKPH,0BAAoB,kBAD5Be,aAIqBG;;IAFlBC,OAAK,EAAEtB;6DAIVP,aAA8D8B;IAAzCC,GAAG,EAAC;EAAc","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_button","label","onClick","$options","_component_table_header","selected","$data","length","total","$setup","loading","onDelete","_hoisted_4","_component_oxd_card_table","order","headers","items","data","selectable","clickable","_hoisted_5","_createBlock","_component_oxd_pagination","current","_component_add_language_modal","onClose","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\languagePackage\\LanguagePackage.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.language_packages') }}\n        </oxd-text>\n        <div>\n          <oxd-button\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAddLanguage\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <add-language-modal\n      v-if=\"showAddLanguageModal\"\n      @close=\"onAddLanguageModalClose\"\n    >\n    </add-language-modal>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n<script>\nimport {computed, ref} from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport AddLanguageModal from '@/orangehrmAdminPlugin/components/AddLanguageModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {urlFor} from '@/core/util/helper/url';\n\nconst defaultFilters = {\n  languageName: '',\n};\n\nconst defaultSortOrder = {\n  languageName: 'ASC',\n};\n\nexport default {\n  name: 'LanguagePackageList',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-language-modal': AddLanguageModal,\n  },\n\n  setup() {\n    const filters = ref({...defaultFilters});\n\n    const {sortDefinition, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        sortOrder: sortOrder.value,\n        activeOnly: true,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/i18n/languages',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n  data() {\n    return {\n      showAddLanguageModal: false,\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.language_packages'),\n          sortField: 'languageName',\n          style: {flex: '70%'},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          style: {flex: 1},\n          cellConfig: {\n            import: {\n              component: 'oxd-icon-button',\n              onClick: this.onClickImport,\n              props: {\n                name: 'upload',\n              },\n            },\n            translate: {\n              component: 'oxd-icon-button',\n              onClick: this.onClickTranslate,\n              props: {\n                name: 'translate',\n              },\n            },\n            export: {\n              component: 'oxd-icon-button',\n              props: {\n                name: 'download',\n              },\n              onClick: this.onClickExport,\n            },\n            delete: {\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n              onClick: this.onClickDelete,\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n  methods: {\n    onClickAddLanguage() {\n      this.showAddLanguageModal = true;\n    },\n    onAddLanguageModalClose() {\n      this.showAddLanguageModal = false;\n      this.reloadLanguages();\n    },\n    onCancel() {\n      navigate('/admin/languagePackage');\n    },\n    async reloadLanguages() {\n      await this.execQuery();\n    },\n    onClickTranslate(item) {\n      navigate('/admin/languageCustomization/{id}', {id: item.id});\n    },\n    onClickExport(item) {\n      const url = urlFor('/admin/viewLanguagePackage/languageId/{languageId}', {\n        languageId: item.id,\n      });\n      window.open(url, '_blank');\n    },\n    onClickImport(item) {\n      navigate('/admin/languageImport/{languageId}', {languageId: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n<style src=\"./language-package.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}