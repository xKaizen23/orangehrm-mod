{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { freshDate, formatDate } from '@ohrm/core/util/helper/datefns';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport EmployeesOnLeaveConfigModal from '@/orangehrmDashboardPlugin/components/EmployeesOnLeaveConfigModal.vue';\nimport { OxdIcon } from '@ohrm/oxd';\nexport default {\n  name: 'EmployeesOnLeaveWidget',\n  components: {\n    'oxd-icon': OxdIcon,\n    'base-widget': BaseWidget,\n    'employees-on-leave-config-modal': EmployeesOnLeaveConfigModal\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/dashboard/employees/leaves');\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    return {\n      http,\n      tEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      leaveList: [],\n      isLoading: false,\n      leavePeriod: null,\n      showConfigModal: false\n    };\n  },\n  computed: {\n    isEmpty() {\n      return this.leaveList.length === 0;\n    },\n    emptyText() {\n      return this.leavePeriod ? this.$t('dashboard.no_employees_are_on_leave_today') : this.$t('dashboard.leave_period_not_defined');\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll({\n      date: formatDate(freshDate(), 'yyyy-MM-dd')\n    }).then(response => {\n      const {\n        data,\n        meta\n      } = response.data;\n      this.leaveList = data.map(item => {\n        const {\n          employee,\n          leaveType,\n          duration\n        } = item;\n        let _leaveType = leaveType?.name;\n        if (_leaveType && duration === 'half_day_morning') {\n          _leaveType += ` (${this.$t('leave.half_day_morning')})`;\n        }\n        if (_leaveType && duration === 'half_day_afternoon') {\n          _leaveType += ` (${this.$t('leave.half_day_evening')})`;\n        }\n        if (_leaveType && duration === 'specify_time') {\n          _leaveType += ` (${item.startTime} - ${item.endTime})`;\n        }\n        return {\n          leaveType: _leaveType,\n          empNumber: employee.empNumber,\n          employeeId: employee.employeeId,\n          empName: this.tEmpName(employee, {\n            includeMiddle: false,\n            excludePastEmpTag: false\n          })\n        };\n      });\n      this.leavePeriod = meta?.leavePeriodDefined;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onClickConfig() {\n      this.showConfigModal = true;\n    },\n    onConfigModalClose() {\n      this.showConfigModal = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","freshDate","formatDate","BaseWidget","useEmployeeNameTranslate","EmployeesOnLeaveConfigModal","OxdIcon","name","components","setup","http","window","appGlobal","baseUrl","$tEmpName","tEmpName","data","leaveList","isLoading","leavePeriod","showConfigModal","computed","isEmpty","length","emptyText","$t","beforeMount","getAll","date","then","response","meta","map","item","employee","leaveType","duration","_leaveType","startTime","endTime","empNumber","employeeId","empName","includeMiddle","excludePastEmpTag","leavePeriodDefined","finally","methods","onClickConfig","onConfigModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmDashboardPlugin\\components\\EmployeesOnLeaveWidget.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <base-widget\n    icon=\"leaveAlt\"\n    icon-type=\"svg\"\n    class=\"emp-leave-chart\"\n    :empty=\"isEmpty\"\n    :empty-text=\"emptyText\"\n    :loading=\"isLoading\"\n    :title=\"$t('dashboard.employees_on_leave_today')\"\n  >\n    <template\n      v-if=\"$can.update('dashboard_employees_on_leave_today_config')\"\n      #action\n    >\n      <oxd-icon\n        class=\"orangehrm-leave-card-icon\"\n        name=\"gear-fill\"\n        @click=\"onClickConfig\"\n      />\n    </template>\n    <div v-for=\"leave in leaveList\" :key=\"leave\" class=\"orangehrm-leave-card\">\n      <div class=\"orangehrm-leave-card-profile-image\">\n        <img\n          alt=\"profile picture\"\n          class=\"employee-image\"\n          :src=\"`../pim/viewPhoto/empNumber/${leave.empNumber}`\"\n        />\n      </div>\n      <div class=\"orangehrm-leave-card-details\">\n        <oxd-text tag=\"p\" class=\"orangehrm-leave-card-emp-name\">\n          {{ leave.empName }}\n        </oxd-text>\n        <oxd-text\n          v-if=\"leave.leaveType\"\n          tag=\"p\"\n          class=\"orangehrm-leave-card-leave-details\"\n        >\n          {{ leave.leaveType }}\n        </oxd-text>\n      </div>\n      <oxd-text tag=\"p\" class=\"orangehrm-leave-card-emp-id\">\n        {{ leave.employeeId }}\n      </oxd-text>\n    </div>\n  </base-widget>\n  <employees-on-leave-config-modal\n    v-if=\"showConfigModal\"\n    @close=\"onConfigModalClose\"\n  ></employees-on-leave-config-modal>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {freshDate, formatDate} from '@ohrm/core/util/helper/datefns';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport EmployeesOnLeaveConfigModal from '@/orangehrmDashboardPlugin/components/EmployeesOnLeaveConfigModal.vue';\nimport {OxdIcon} from '@ohrm/oxd';\n\nexport default {\n  name: 'EmployeesOnLeaveWidget',\n\n  components: {\n    'oxd-icon': OxdIcon,\n    'base-widget': BaseWidget,\n    'employees-on-leave-config-modal': EmployeesOnLeaveConfigModal,\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/dashboard/employees/leaves',\n    );\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    return {\n      http,\n      tEmpName: $tEmpName,\n    };\n  },\n\n  data() {\n    return {\n      leaveList: [],\n      isLoading: false,\n      leavePeriod: null,\n      showConfigModal: false,\n    };\n  },\n\n  computed: {\n    isEmpty() {\n      return this.leaveList.length === 0;\n    },\n    emptyText() {\n      return this.leavePeriod\n        ? this.$t('dashboard.no_employees_are_on_leave_today')\n        : this.$t('dashboard.leave_period_not_defined');\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll({\n        date: formatDate(freshDate(), 'yyyy-MM-dd'),\n      })\n      .then((response) => {\n        const {data, meta} = response.data;\n        this.leaveList = data.map((item) => {\n          const {employee, leaveType, duration} = item;\n          let _leaveType = leaveType?.name;\n          if (_leaveType && duration === 'half_day_morning') {\n            _leaveType += ` (${this.$t('leave.half_day_morning')})`;\n          }\n          if (_leaveType && duration === 'half_day_afternoon') {\n            _leaveType += ` (${this.$t('leave.half_day_evening')})`;\n          }\n          if (_leaveType && duration === 'specify_time') {\n            _leaveType += ` (${item.startTime} - ${item.endTime})`;\n          }\n          return {\n            leaveType: _leaveType,\n            empNumber: employee.empNumber,\n            employeeId: employee.employeeId,\n            empName: this.tEmpName(employee, {\n              includeMiddle: false,\n              excludePastEmpTag: false,\n            }),\n          };\n        });\n        this.leavePeriod = meta?.leavePeriodDefined;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onClickConfig() {\n      this.showConfigModal = true;\n    },\n    onConfigModalClose() {\n      this.showConfigModal = false;\n    },\n  },\n};\n</script>\n\n<style src=\"./employee-on-leave-widget.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}