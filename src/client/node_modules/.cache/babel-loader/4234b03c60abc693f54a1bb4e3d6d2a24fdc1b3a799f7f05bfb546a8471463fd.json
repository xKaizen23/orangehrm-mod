{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport AddLanguageModal from '@/orangehrmAdminPlugin/components/AddLanguageModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport { urlFor } from '@/core/util/helper/url';\nconst defaultFilters = {\n  languageName: ''\n};\nconst defaultSortOrder = {\n  languageName: 'ASC'\n};\nexport default {\n  name: 'LanguagePackageList',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-language-modal': AddLanguageModal\n  },\n  setup() {\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      sortDefinition,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortOrder: sortOrder.value,\n        activeOnly: true\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/i18n/languages');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      showAddLanguageModal: false,\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.language_packages'),\n        sortField: 'languageName',\n        style: {\n          flex: '70%'\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        cellType: 'oxd-table-cell-actions',\n        style: {\n          flex: 1\n        },\n        cellConfig: {\n          import: {\n            component: 'oxd-icon-button',\n            onClick: this.onClickImport,\n            props: {\n              name: 'upload'\n            }\n          },\n          translate: {\n            component: 'oxd-icon-button',\n            onClick: this.onClickTranslate,\n            props: {\n              name: 'translate'\n            }\n          },\n          export: {\n            component: 'oxd-icon-button',\n            props: {\n              name: 'download'\n            },\n            onClick: this.onClickExport\n          },\n          delete: {\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            },\n            onClick: this.onClickDelete\n          }\n        }\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAddLanguage() {\n      this.showAddLanguageModal = true;\n    },\n    onAddLanguageModalClose() {\n      this.showAddLanguageModal = false;\n      this.reloadLanguages();\n    },\n    onCancel() {\n      navigate('/admin/languagePackage');\n    },\n    async reloadLanguages() {\n      await this.execQuery();\n    },\n    onClickTranslate(item) {\n      navigate('/admin/languageCustomization/{id}', {\n        id: item.id\n      });\n    },\n    onClickExport(item) {\n      const url = urlFor('/admin/viewLanguagePackage/languageId/{languageId}', {\n        languageId: item.id\n      });\n      window.open(url, '_blank');\n    },\n    onClickImport(item) {\n      navigate('/admin/languageImport/{languageId}', {\n        languageId: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":";AAsEA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,OAAOC,WAAU,MAAO,wCAAwC;AAChE,SAAQC,QAAQ,QAAO,mCAAmC;AAC1D,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,OAAM,MAAO,oCAAoC;AACxD,OAAOC,gBAAe,MAAO,wDAAwD;AACrF,OAAOC,wBAAuB,MAAO,uDAAuD;AAC5F,SAAQC,MAAM,QAAO,wBAAwB;AAE7C,MAAMC,cAAa,GAAI;EACrBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,gBAAe,GAAI;EACvBD,YAAY,EAAE;AAChB,CAAC;AAED,eAAe;EACbE,IAAI,EAAE,qBAAqB;EAE3BC,UAAU,EAAE;IACV,qBAAqB,EAAEN,wBAAwB;IAC/C,oBAAoB,EAAED;EACxB,CAAC;EAEDQ,KAAK,GAAG;IACN,MAAMC,OAAM,GAAId,GAAG,CAAC;MAAC,GAAGQ;IAAc,CAAC,CAAC;IAExC,MAAM;MAACO,cAAc;MAAEC,SAAS;MAAEC;IAAM,IAAIb,OAAO,CAAC;MAClDW,cAAc,EAAEL;IAClB,CAAC,CAAC;IAEF,MAAMQ,iBAAgB,GAAInB,QAAQ,CAAC,MAAM;MACvC,OAAO;QACLiB,SAAS,EAAEA,SAAS,CAACG,KAAK;QAC1BC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,IAAG,GAAI,IAAIlB,UAAU,CACzBmB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,8BAA8B,CAC/B;IAED,MAAM;MACJC,aAAa;MACbC,WAAW;MACXC,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC;IACF,IAAI/B,WAAW,CAACoB,IAAI,EAAE;MACpBY,KAAK,EAAEf;IACT,CAAC,CAAC;IAEFD,MAAM,CAACe,SAAS,CAAC;IAEjB,OAAO;MACLX,IAAI;MACJI,aAAa;MACbC,WAAW;MACXK,SAAS;MACTJ,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRG,SAAS;MACTE,KAAK,EAAEJ,QAAQ;MACfhB,OAAO;MACPC;IACF,CAAC;EACH,CAAC;EACDoB,IAAI,GAAG;IACL,OAAO;MACLC,oBAAoB,EAAE,KAAK;MAC3BC,OAAO,EAAE,CACP;QACE1B,IAAI,EAAE,MAAM;QACZ2B,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,2BAA2B,CAAC;QAC3CC,SAAS,EAAE,cAAc;QACzBC,KAAK,EAAE;UAACC,IAAI,EAAE;QAAK;MACrB,CAAC,EACD;QACEhC,IAAI,EAAE,SAAS;QACf2B,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,iBAAiB,CAAC;QACjCI,QAAQ,EAAE,wBAAwB;QAClCF,KAAK,EAAE;UAACC,IAAI,EAAE;QAAC,CAAC;QAChBE,UAAU,EAAE;UACVC,MAAM,EAAE;YACNC,SAAS,EAAE,iBAAiB;YAC5BC,OAAO,EAAE,IAAI,CAACC,aAAa;YAC3BC,KAAK,EAAE;cACLvC,IAAI,EAAE;YACR;UACF,CAAC;UACDwC,SAAS,EAAE;YACTJ,SAAS,EAAE,iBAAiB;YAC5BC,OAAO,EAAE,IAAI,CAACI,gBAAgB;YAC9BF,KAAK,EAAE;cACLvC,IAAI,EAAE;YACR;UACF,CAAC;UACD0C,MAAM,EAAE;YACNN,SAAS,EAAE,iBAAiB;YAC5BG,KAAK,EAAE;cACLvC,IAAI,EAAE;YACR,CAAC;YACDqC,OAAO,EAAE,IAAI,CAACM;UAChB,CAAC;UACDC,MAAM,EAAE;YACNR,SAAS,EAAE,iBAAiB;YAC5BG,KAAK,EAAE;cACLvC,IAAI,EAAE;YACR,CAAC;YACDqC,OAAO,EAAE,IAAI,CAACQ;UAChB;QACF;MACF,CAAC,CACF;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkB,GAAG;MACnB,IAAI,CAACvB,oBAAmB,GAAI,IAAI;IAClC,CAAC;IACDwB,uBAAuB,GAAG;MACxB,IAAI,CAACxB,oBAAmB,GAAI,KAAK;MACjC,IAAI,CAACyB,eAAe,EAAE;IACxB,CAAC;IACDC,QAAQ,GAAG;MACT5D,QAAQ,CAAC,wBAAwB,CAAC;IACpC,CAAC;IACD,MAAM2D,eAAe,GAAG;MACtB,MAAM,IAAI,CAAC7B,SAAS,EAAE;IACxB,CAAC;IACDoB,gBAAgB,CAACW,IAAI,EAAE;MACrB7D,QAAQ,CAAC,mCAAmC,EAAE;QAAC8D,EAAE,EAAED,IAAI,CAACC;MAAE,CAAC,CAAC;IAC9D,CAAC;IACDV,aAAa,CAACS,IAAI,EAAE;MAClB,MAAME,GAAE,GAAI1D,MAAM,CAAC,oDAAoD,EAAE;QACvE2D,UAAU,EAAEH,IAAI,CAACC;MACnB,CAAC,CAAC;MACF1C,MAAM,CAAC6C,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;IAC5B,CAAC;IACDhB,aAAa,CAACc,IAAI,EAAE;MAClB7D,QAAQ,CAAC,oCAAoC,EAAE;QAACgE,UAAU,EAAEH,IAAI,CAACC;MAAE,CAAC,CAAC;IACvE,CAAC;IACDI,qBAAqB,GAAG;MACtB,MAAMC,GAAE,GAAI,EAAE;MACd,IAAI,CAACZ,YAAY,CAACa,OAAO,CAAEC,KAAK,IAAK;QACnCF,GAAG,CAACG,IAAI,CAAC,IAAI,CAACtC,KAAK,EAAEC,IAAI,CAACoC,KAAK,CAAC,CAACP,EAAE,CAAC;MACtC,CAAC,CAAC;MACF,IAAI,CAACS,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAACT,GAAG,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;IACDb,aAAa,CAACO,IAAI,EAAE;MAClB,IAAI,CAACU,KAAK,CAACC,YAAY,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC1D,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,WAAW,CAAC,CAACf,IAAI,CAACC,EAAE,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IACDc,WAAW,CAAC5C,KAAK,EAAE;MACjB,IAAIA,KAAI,YAAa6C,KAAK,EAAE;QAC1B,IAAI,CAAChD,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACV,IAAG,CACL2D,SAAS,CAAC;UACTX,GAAG,EAAEnC;QACP,CAAC,EACA0C,IAAI,CAAC,MAAM;UACV,OAAO,IAAI,CAACK,MAAM,CAACC,aAAa,EAAE;QACpC,CAAC,EACAN,IAAI,CAAC,MAAM;UACV,IAAI,CAAC7C,SAAQ,GAAI,KAAK;UACtB,IAAI,CAACoD,cAAc,EAAE;QACvB,CAAC,CAAC;MACN;IACF,CAAC;IACD,MAAMA,cAAc,GAAG;MACrB,IAAI,CAAC1B,YAAW,GAAI,EAAE;MACtB,MAAM,IAAI,CAACzB,SAAS,EAAE;IACxB;EACF;AACF,CAAC","names":["computed","ref","usePaginate","navigate","APIService","useSort","AddLanguageModal","DeleteConfirmationDialog","urlFor","defaultFilters","languageName","defaultSortOrder","name","components","setup","filters","sortDefinition","sortOrder","onSort","serializedFilters","value","activeOnly","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","items","data","showAddLanguageModal","headers","slot","title","$t","sortField","style","flex","cellType","cellConfig","import","component","onClick","onClickImport","props","translate","onClickTranslate","export","onClickExport","delete","onClickDelete","checkedItems","methods","onClickAddLanguage","onAddLanguageModalClose","reloadLanguages","onCancel","item","id","url","languageId","open","onClickDeleteSelected","ids","forEach","index","push","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess","resetDataTable"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\languagePackage\\LanguagePackage.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.language_packages') }}\n        </oxd-text>\n        <div>\n          <oxd-button\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAddLanguage\"\n          />\n        </div>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <add-language-modal\n      v-if=\"showAddLanguageModal\"\n      @close=\"onAddLanguageModalClose\"\n    >\n    </add-language-modal>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n<script>\nimport {computed, ref} from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport AddLanguageModal from '@/orangehrmAdminPlugin/components/AddLanguageModal.vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {urlFor} from '@/core/util/helper/url';\n\nconst defaultFilters = {\n  languageName: '',\n};\n\nconst defaultSortOrder = {\n  languageName: 'ASC',\n};\n\nexport default {\n  name: 'LanguagePackageList',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-language-modal': AddLanguageModal,\n  },\n\n  setup() {\n    const filters = ref({...defaultFilters});\n\n    const {sortDefinition, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        sortOrder: sortOrder.value,\n        activeOnly: true,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/i18n/languages',\n    );\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n  data() {\n    return {\n      showAddLanguageModal: false,\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.language_packages'),\n          sortField: 'languageName',\n          style: {flex: '70%'},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          style: {flex: 1},\n          cellConfig: {\n            import: {\n              component: 'oxd-icon-button',\n              onClick: this.onClickImport,\n              props: {\n                name: 'upload',\n              },\n            },\n            translate: {\n              component: 'oxd-icon-button',\n              onClick: this.onClickTranslate,\n              props: {\n                name: 'translate',\n              },\n            },\n            export: {\n              component: 'oxd-icon-button',\n              props: {\n                name: 'download',\n              },\n              onClick: this.onClickExport,\n            },\n            delete: {\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n              onClick: this.onClickDelete,\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n  methods: {\n    onClickAddLanguage() {\n      this.showAddLanguageModal = true;\n    },\n    onAddLanguageModalClose() {\n      this.showAddLanguageModal = false;\n      this.reloadLanguages();\n    },\n    onCancel() {\n      navigate('/admin/languagePackage');\n    },\n    async reloadLanguages() {\n      await this.execQuery();\n    },\n    onClickTranslate(item) {\n      navigate('/admin/languageCustomization/{id}', {id: item.id});\n    },\n    onClickExport(item) {\n      const url = urlFor('/admin/viewLanguagePackage/languageId/{languageId}', {\n        languageId: item.id,\n      });\n      window.open(url, '_blank');\n    },\n    onClickImport(item) {\n      navigate('/admin/languageImport/{languageId}', {languageId: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n<style src=\"./language-package.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}