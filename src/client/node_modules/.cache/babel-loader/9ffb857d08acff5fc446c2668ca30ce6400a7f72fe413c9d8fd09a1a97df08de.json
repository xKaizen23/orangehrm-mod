{"ast":null,"code":"import { computed, ref } from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport CandidateRecords from '@/orangehrmMaintenancePlugin/components/CandidateRecords';\nexport default {\n  name: 'SelectedCandidates',\n  components: {\n    'purge-candidate-records': CandidateRecords\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['purge'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/maintenance/candidates');\n    const vacancy = ref(null);\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const serializedFilters = computed(() => {\n      return {\n        vacancyId: vacancy.value\n      };\n    });\n    const purgeCandidateNormalizer = data => {\n      return data.map(item => {\n        return {\n          name: $tEmpName({\n            firstName: item.firstName,\n            middleName: item.middleName,\n            lastName: item.lastName,\n            terminationId: null\n          }, {\n            includeMiddle: true\n          }),\n          date: formatDate(parseDate(item.dateOfApplication), jsDateFormat, {\n            locale\n          }),\n          status: item.status.label\n        };\n      });\n    };\n    const {\n      total,\n      pages,\n      response,\n      isLoading,\n      currentPage,\n      showPaginator,\n      execQuery\n    } = usePaginate(http, {\n      prefetch: false,\n      query: serializedFilters,\n      normalizer: purgeCandidateNormalizer\n    });\n    return {\n      http,\n      total,\n      pages,\n      vacancy,\n      isLoading,\n      currentPage,\n      showPaginator,\n      items: response,\n      execQuery\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        title: this.$t('recruitment.candidate_name'),\n        style: {\n          flex: '45%'\n        }\n      }, {\n        name: 'date',\n        title: this.$t('recruitment.date_of_application'),\n        style: {\n          flex: '45%'\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        style: {\n          flex: '10%'\n        }\n      }]\n    };\n  },\n  methods: {\n    onClickSearch(vacancy) {\n      this.vacancy = vacancy;\n      this.execQuery();\n    },\n    onClickPurge() {\n      if (this.vacancy) this.$emit('purge', this.vacancy);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","useLocale","APIService","usePaginate","useDateFormat","formatDate","parseDate","useEmployeeNameTranslate","CandidateRecords","name","components","props","loading","type","Boolean","default","emits","setup","http","window","appGlobal","baseUrl","vacancy","locale","jsDateFormat","$tEmpName","serializedFilters","vacancyId","value","purgeCandidateNormalizer","data","map","item","firstName","middleName","lastName","terminationId","includeMiddle","date","dateOfApplication","status","label","total","pages","response","isLoading","currentPage","showPaginator","execQuery","prefetch","query","normalizer","items","headers","title","$t","style","flex","methods","onClickSearch","onClickPurge","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmMaintenancePlugin\\components\\SelectedCandidates.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <purge-candidate-records @search=\"onClickSearch\" />\n  <div v-if=\"vacancy\" class=\"orangehrm-paper-container\">\n    <div v-show=\"total > 0\" class=\"orangehrm-header-container\">\n      <oxd-button\n        :label=\"$t('maintenance.purge_all')\"\n        display-type=\"secondary\"\n        @click=\"onClickPurge\"\n      />\n    </div>\n    <table-header\n      :total=\"total\"\n      :selected=\"0\"\n      :show-divider=\"total > 0\"\n      :loading=\"isLoading || loading\"\n    ></table-header>\n    <div class=\"orangehrm-container\">\n      <oxd-card-table\n        :headers=\"headers\"\n        :clickable=\"false\"\n        :selectable=\"false\"\n        :loading=\"isLoading || loading\"\n        :items=\"items.data\"\n        row-decorator=\"oxd-table-decorator-card\"\n      />\n    </div>\n    <div class=\"orangehrm-bottom-container\">\n      <oxd-pagination\n        v-if=\"showPaginator\"\n        v-model:current=\"currentPage\"\n        :length=\"pages\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport CandidateRecords from '@/orangehrmMaintenancePlugin/components/CandidateRecords';\n\nexport default {\n  name: 'SelectedCandidates',\n\n  components: {\n    'purge-candidate-records': CandidateRecords,\n  },\n\n  props: {\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: ['purge'],\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/maintenance/candidates',\n    );\n    const vacancy = ref(null);\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const serializedFilters = computed(() => {\n      return {\n        vacancyId: vacancy.value,\n      };\n    });\n\n    const purgeCandidateNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          name: $tEmpName(\n            {\n              firstName: item.firstName,\n              middleName: item.middleName,\n              lastName: item.lastName,\n              terminationId: null,\n            },\n            {includeMiddle: true},\n          ),\n          date: formatDate(parseDate(item.dateOfApplication), jsDateFormat, {\n            locale,\n          }),\n          status: item.status.label,\n        };\n      });\n    };\n\n    const {\n      total,\n      pages,\n      response,\n      isLoading,\n      currentPage,\n      showPaginator,\n      execQuery,\n    } = usePaginate(http, {\n      prefetch: false,\n      query: serializedFilters,\n      normalizer: purgeCandidateNormalizer,\n    });\n\n    return {\n      http,\n      total,\n      pages,\n      vacancy,\n      isLoading,\n      currentPage,\n      showPaginator,\n      items: response,\n      execQuery,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          title: this.$t('recruitment.candidate_name'),\n          style: {flex: '45%'},\n        },\n        {\n          name: 'date',\n          title: this.$t('recruitment.date_of_application'),\n          style: {flex: '45%'},\n        },\n        {\n          name: 'status',\n          title: this.$t('general.status'),\n          style: {flex: '10%'},\n        },\n      ],\n    };\n  },\n\n  methods: {\n    onClickSearch(vacancy) {\n      this.vacancy = vacancy;\n      this.execQuery();\n    },\n    onClickPurge() {\n      if (this.vacancy) this.$emit('purge', this.vacancy);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-paper-container {\n  margin-top: 1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}