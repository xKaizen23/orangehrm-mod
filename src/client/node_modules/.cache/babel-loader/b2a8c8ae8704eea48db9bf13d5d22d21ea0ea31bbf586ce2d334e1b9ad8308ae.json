{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { truncate } from '@ohrm/core/util/helper/truncate';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useLeaveActions from '@/orangehrmLeavePlugin/util/composable/useLeaveActions';\nimport LeaveCommentsModal from '@/orangehrmLeavePlugin/components/LeaveCommentsModal';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  name: 'LeaveViewRequest',\n  components: {\n    'leave-comment-modal': LeaveCommentsModal\n  },\n  props: {\n    leaveRequestId: {\n      type: String,\n      required: true\n    },\n    myLeaveRequest: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/leave/leave-requests/${props.leaveRequestId}/leaves`);\n    const {\n      leaveActions,\n      processLeaveAction\n    } = useLeaveActions(http);\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const leaveRequestNormalizer = data => {\n      return data.map(item => {\n        let leaveDatePeriod = '';\n        const duration = item.dates.durationType?.type;\n        if (item.dates.fromDate) {\n          leaveDatePeriod = formatDate(parseDate(item.dates.fromDate), jsDateFormat, {\n            locale\n          });\n        }\n        if (item.dates.startTime && item.dates.endTime) {\n          leaveDatePeriod += ` (${item.dates.startTime} - ${item.dates.endTime})`;\n        }\n        if (duration === 'half_day_morning' || duration === 'half_day_afternoon') {\n          leaveDatePeriod += ` ${$t('leave.half_day')}`;\n        }\n        const leaveTypeName = item.leaveType?.name;\n        if (item.leaveType?.deleted) {\n          leaveTypeName + $t('general.deleted');\n        }\n        return {\n          id: item.id,\n          date: leaveDatePeriod,\n          leaveType: leaveTypeName,\n          leaveBalance: item.leaveBalance?.balance.balance ? parseFloat(item.leaveBalance.balance.balance).toFixed(2) : undefined,\n          duration: parseFloat(item.lengthHours).toFixed(2),\n          status: item.leaveStatus?.name,\n          comment: truncate(item.lastComment?.comment),\n          actions: item.allowedActions,\n          canComment: !(item.leaveStatus?.id === 5 || item.leaveStatus?.id === 4)\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: leaveRequestNormalizer\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      response,\n      leaveActions,\n      processLeaveAction,\n      jsDateFormat,\n      locale,\n      translateEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'date',\n        title: this.$t('general.date'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'leaveType',\n        title: this.$t('leave.leave_type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'leaveBalance',\n        title: this.$t('leave.leave_balance_days'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'duration',\n        title: this.$t('attendance.duration_hours'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'status',\n        title: this.$t('general.status'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'comment',\n        title: this.$t('general.comments'),\n        style: {\n          flex: '10%'\n        }\n      }, {\n        name: 'action',\n        slot: 'footer',\n        title: this.$t('general.actions'),\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer,\n        style: {\n          flex: '20%'\n        }\n      }],\n      showCommentModal: false,\n      commentModalState: null,\n      isLeaveRequest: false\n    };\n  },\n  computed: {\n    employeeName() {\n      const employee = this.response?.meta?.employee;\n      if (employee) {\n        return this.translateEmpName(employee, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        });\n      }\n      return '';\n    },\n    leavePeriod() {\n      const startDate = formatDate(parseDate(this.response?.meta?.startDate), this.jsDateFormat, {\n        locale: this.locale\n      });\n      const endDate = formatDate(parseDate(this.response?.meta?.endDate), this.jsDateFormat, {\n        locale: this.locale\n      });\n      return startDate === endDate ? startDate : `${startDate} - ${endDate}`;\n    }\n  },\n  methods: {\n    cellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      const dropdownActions = [];\n      const {\n        approve,\n        reject,\n        cancel,\n        more\n      } = this.leaveActions;\n      if (row.canComment) {\n        dropdownActions.push({\n          label: 'Add Comment',\n          context: 'add_comment'\n        });\n      }\n      row.actions.map(item => {\n        if (item.action === 'APPROVE') {\n          approve.props.label = this.$t('general.approve');\n          approve.props.onClick = () => this.onLeaveAction(row.id, 'APPROVE');\n          cellConfig.approve = approve;\n        }\n        if (item.action === 'REJECT') {\n          reject.props.label = this.$t('general.reject');\n          reject.props.onClick = () => this.onLeaveAction(row.id, 'REJECT');\n          cellConfig.reject = reject;\n        }\n        if (item.action === 'CANCEL') {\n          if (this.myLeaveRequest) {\n            cancel.props.label = this.$t('general.cancel');\n            cancel.props.onClick = () => this.onLeaveAction(row.id, 'CANCEL');\n            cellConfig.cancel = cancel;\n          } else {\n            dropdownActions.push({\n              label: 'Cancel Leave',\n              context: 'cancel_leave'\n            });\n          }\n        }\n      });\n      if (dropdownActions.length > 0) {\n        more.props.options = dropdownActions;\n        more.props.onClick = $event => this.onLeaveDropdownAction($event, row);\n        cellConfig.more = more;\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    onClickComments() {\n      this.commentModalState = this.leaveRequestId;\n      this.isLeaveRequest = true;\n      this.showCommentModal = true;\n    },\n    onCommentModalClose() {\n      this.commentModalState = null;\n      this.showCommentModal = false;\n      this.resetDataTable();\n    },\n    onLeaveDropdownAction(event, item) {\n      if (event.context === 'cancel_leave') {\n        this.onLeaveAction(item.id, 'CANCEL');\n      } else {\n        this.commentModalState = item.id;\n        this.isLeaveRequest = false;\n        this.showCommentModal = true;\n      }\n    },\n    onLeaveAction(id, actionType) {\n      this.isLoading = true;\n      this.processLeaveAction(id, actionType).then(() => {\n        this.$toast.updateSuccess();\n      }).finally(this.resetDataTable);\n    },\n    onClickBack() {\n      this.myLeaveRequest ? navigate('/leave/viewMyLeaveList') : navigate('/leave/viewLeaveList');\n    },\n    async resetDataTable() {\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","navigate","truncate","usePaginate","useLeaveActions","LeaveCommentsModal","usei18n","useDateFormat","formatDate","parseDate","useLocale","useEmployeeNameTranslate","name","components","props","leaveRequestId","type","String","required","myLeaveRequest","Boolean","default","setup","http","window","appGlobal","baseUrl","leaveActions","processLeaveAction","$t","jsDateFormat","locale","$tEmpName","leaveRequestNormalizer","data","map","item","leaveDatePeriod","duration","dates","durationType","fromDate","startTime","endTime","leaveTypeName","leaveType","deleted","id","date","leaveBalance","balance","parseFloat","toFixed","undefined","lengthHours","status","leaveStatus","comment","lastComment","actions","allowedActions","canComment","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","translateEmpName","headers","title","style","flex","slot","cellType","cellRenderer","showCommentModal","commentModalState","isLeaveRequest","computed","employeeName","employee","meta","includeMiddle","excludePastEmpTag","leavePeriod","startDate","endDate","methods","row","cellConfig","dropdownActions","approve","reject","cancel","more","push","label","context","action","onClick","onLeaveAction","length","options","$event","onLeaveDropdownAction","header","onClickComments","onCommentModalClose","resetDataTable","event","actionType","then","$toast","updateSuccess","finally","onClickBack"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\LeaveRequest.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{\n            myLeaveRequest\n              ? $t('leave.my_leave_request_details')\n              : $t('leave.leave_request_details')\n          }}\n        </oxd-text>\n      </div>\n      <oxd-divider\n        class=\"orangehrm-horizontal-margin orangehrm-clear-margins\"\n      />\n      <br />\n      <div class=\"orangehrm-horizontal-padding\">\n        <oxd-grid :cols=\"3\">\n          <oxd-grid-item>\n            <oxd-input-group :label=\"$t('general.employee_name')\">\n              <oxd-text class=\"orangehrm-request-details-text\" tag=\"p\">\n                {{ employeeName }}\n              </oxd-text>\n            </oxd-input-group>\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-group :label=\"$t('leave.requested_for')\">\n              <oxd-text class=\"orangehrm-request-details-text\" tag=\"p\">\n                {{ leavePeriod }}\n              </oxd-text>\n            </oxd-input-group>\n          </oxd-grid-item>\n        </oxd-grid>\n      </div>\n      <br />\n      <table-header\n        :selected=\"0\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          :headers=\"headers\"\n          :items=\"response && response.data\"\n          :selectable=\"false\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <span>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.back')\"\n            @click=\"onClickBack\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            icon-name=\"chat-right-text-fill\"\n            :label=\"$t('general.comments')\"\n            @click=\"onClickComments\"\n          />\n        </span>\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n  <leave-comment-modal\n    v-if=\"showCommentModal\"\n    :id=\"commentModalState\"\n    :leave-request=\"isLeaveRequest\"\n    @close=\"onCommentModalClose\"\n  >\n  </leave-comment-modal>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {truncate} from '@ohrm/core/util/helper/truncate';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useLeaveActions from '@/orangehrmLeavePlugin/util/composable/useLeaveActions';\nimport LeaveCommentsModal from '@/orangehrmLeavePlugin/components/LeaveCommentsModal';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\n\nexport default {\n  name: 'LeaveViewRequest',\n\n  components: {\n    'leave-comment-modal': LeaveCommentsModal,\n  },\n\n  props: {\n    leaveRequestId: {\n      type: String,\n      required: true,\n    },\n    myLeaveRequest: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/leave/leave-requests/${props.leaveRequestId}/leaves`,\n    );\n\n    const {leaveActions, processLeaveAction} = useLeaveActions(http);\n    const {$t} = usei18n();\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const leaveRequestNormalizer = (data) => {\n      return data.map((item) => {\n        let leaveDatePeriod = '';\n        const duration = item.dates.durationType?.type;\n\n        if (item.dates.fromDate) {\n          leaveDatePeriod = formatDate(\n            parseDate(item.dates.fromDate),\n            jsDateFormat,\n            {locale},\n          );\n        }\n        if (item.dates.startTime && item.dates.endTime) {\n          leaveDatePeriod += ` (${item.dates.startTime} - ${item.dates.endTime})`;\n        }\n        if (\n          duration === 'half_day_morning' ||\n          duration === 'half_day_afternoon'\n        ) {\n          leaveDatePeriod += ` ${$t('leave.half_day')}`;\n        }\n\n        const leaveTypeName = item.leaveType?.name;\n        if (item.leaveType?.deleted) {\n          leaveTypeName + $t('general.deleted');\n        }\n\n        return {\n          id: item.id,\n          date: leaveDatePeriod,\n          leaveType: leaveTypeName,\n          leaveBalance: item.leaveBalance?.balance.balance\n            ? parseFloat(item.leaveBalance.balance.balance).toFixed(2)\n            : undefined,\n          duration: parseFloat(item.lengthHours).toFixed(2),\n          status: item.leaveStatus?.name,\n          comment: truncate(item.lastComment?.comment),\n          actions: item.allowedActions,\n          canComment: !(\n            item.leaveStatus?.id === 5 || item.leaveStatus?.id === 4\n          ),\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {normalizer: leaveRequestNormalizer});\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      response,\n      leaveActions,\n      processLeaveAction,\n      jsDateFormat,\n      locale,\n      translateEmpName: $tEmpName,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {name: 'date', title: this.$t('general.date'), style: {flex: 1}},\n        {\n          name: 'leaveType',\n          title: this.$t('leave.leave_type'),\n          style: {flex: 1},\n        },\n        {\n          name: 'leaveBalance',\n          title: this.$t('leave.leave_balance_days'),\n          style: {flex: 1},\n        },\n        {\n          name: 'duration',\n          title: this.$t('attendance.duration_hours'),\n          style: {flex: 1},\n        },\n        {name: 'status', title: this.$t('general.status'), style: {flex: 1}},\n        {\n          name: 'comment',\n          title: this.$t('general.comments'),\n          style: {flex: '10%'},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n          style: {flex: '20%'},\n        },\n      ],\n      showCommentModal: false,\n      commentModalState: null,\n      isLeaveRequest: false,\n    };\n  },\n\n  computed: {\n    employeeName() {\n      const employee = this.response?.meta?.employee;\n      if (employee) {\n        return this.translateEmpName(employee, {\n          includeMiddle: true,\n          excludePastEmpTag: false,\n        });\n      }\n      return '';\n    },\n    leavePeriod() {\n      const startDate = formatDate(\n        parseDate(this.response?.meta?.startDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      const endDate = formatDate(\n        parseDate(this.response?.meta?.endDate),\n        this.jsDateFormat,\n        {locale: this.locale},\n      );\n      return startDate === endDate ? startDate : `${startDate} - ${endDate}`;\n    },\n  },\n\n  methods: {\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const dropdownActions = [];\n      const {approve, reject, cancel, more} = this.leaveActions;\n\n      if (row.canComment) {\n        dropdownActions.push({\n          label: 'Add Comment',\n          context: 'add_comment',\n        });\n      }\n\n      row.actions.map((item) => {\n        if (item.action === 'APPROVE') {\n          approve.props.label = this.$t('general.approve');\n          approve.props.onClick = () => this.onLeaveAction(row.id, 'APPROVE');\n          cellConfig.approve = approve;\n        }\n        if (item.action === 'REJECT') {\n          reject.props.label = this.$t('general.reject');\n          reject.props.onClick = () => this.onLeaveAction(row.id, 'REJECT');\n          cellConfig.reject = reject;\n        }\n        if (item.action === 'CANCEL') {\n          if (this.myLeaveRequest) {\n            cancel.props.label = this.$t('general.cancel');\n            cancel.props.onClick = () => this.onLeaveAction(row.id, 'CANCEL');\n            cellConfig.cancel = cancel;\n          } else {\n            dropdownActions.push({\n              label: 'Cancel Leave',\n              context: 'cancel_leave',\n            });\n          }\n        }\n      });\n\n      if (dropdownActions.length > 0) {\n        more.props.options = dropdownActions;\n        more.props.onClick = ($event) =>\n          this.onLeaveDropdownAction($event, row);\n        cellConfig.more = more;\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    onClickComments() {\n      this.commentModalState = this.leaveRequestId;\n      this.isLeaveRequest = true;\n      this.showCommentModal = true;\n    },\n    onCommentModalClose() {\n      this.commentModalState = null;\n      this.showCommentModal = false;\n      this.resetDataTable();\n    },\n    onLeaveDropdownAction(event, item) {\n      if (event.context === 'cancel_leave') {\n        this.onLeaveAction(item.id, 'CANCEL');\n      } else {\n        this.commentModalState = item.id;\n        this.isLeaveRequest = false;\n        this.showCommentModal = true;\n      }\n    },\n    onLeaveAction(id, actionType) {\n      this.isLoading = true;\n      this.processLeaveAction(id, actionType)\n        .then(() => {\n          this.$toast.updateSuccess();\n        })\n        .finally(this.resetDataTable);\n    },\n    onClickBack() {\n      this.myLeaveRequest\n        ? navigate('/leave/viewMyLeaveList')\n        : navigate('/leave/viewLeaveList');\n    },\n    async resetDataTable() {\n      await this.execQuery();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-bottom-container {\n  align-items: center;\n  justify-content: space-between;\n}\n.orangehrm-request-details-text {\n  font-size: $oxd-input-control-font-size;\n}\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n  .oxd-table-cell-actions > * {\n    margin: 0 !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}