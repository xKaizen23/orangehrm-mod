{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport { shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nconst taxExemptionModel = {\n  federalStatus: null,\n  federalExemptions: null,\n  taxStateCode: [],\n  stateStatus: null,\n  stateExemptions: null,\n  unemploymentStateCode: [],\n  workStateCode: []\n};\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    provinces: {\n      type: Array,\n      default: () => []\n    },\n    statuses: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/tax-exemption`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      taxExemption: {\n        ...taxExemptionModel\n      },\n      rules: {\n        federalExemptions: [v => {\n          return v.match(/^\\d*\\.?\\d*$/) !== null || this.$t('general.should_be_a_positive_number');\n        }, shouldNotExceedCharLength(2)],\n        stateExemptions: [v => {\n          return v.match(/^\\d*\\.?\\d*$/) !== null || this.$t('general.should_be_a_positive_number');\n        }, shouldNotExceedCharLength(2)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      this.updateModel(response);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          federalStatus: this.taxExemption.federalStatus?.id,\n          federalExemptions: this.taxExemption.federalExemptions,\n          taxStateCode: this.taxExemption.taxState?.id,\n          stateStatus: this.taxExemption.stateStatus?.id,\n          stateExemptions: this.taxExemption.stateExemptions,\n          unemploymentStateCode: this.taxExemption.unemploymentState?.id,\n          workStateCode: this.taxExemption.workState?.id\n        }\n      }).then(response => {\n        this.updateModel(response);\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n      });\n    },\n    updateModel(response) {\n      const {\n        data\n      } = response.data;\n      this.taxExemption.federalExemptions = data.federalExemptions;\n      this.taxExemption.stateExemptions = data.stateExemptions;\n      this.taxExemption.taxState = this.provinces.find(item => item.id === data.taxState.code);\n      this.taxExemption.unemploymentState = this.provinces.find(item => item.id === data.unemploymentState.code);\n      this.taxExemption.workState = this.provinces.find(item => item.id === data.workState.code);\n      this.taxExemption.federalStatus = this.statuses.find(item => item.id === data.federalStatus);\n      this.taxExemption.stateStatus = this.statuses.find(item => item.id === data.stateStatus);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","EditEmployeeLayout","shouldNotExceedCharLength","taxExemptionModel","federalStatus","federalExemptions","taxStateCode","stateStatus","stateExemptions","unemploymentStateCode","workStateCode","components","props","empNumber","type","String","required","provinces","Array","default","statuses","setup","http","window","appGlobal","baseUrl","data","isLoading","taxExemption","rules","v","match","$t","beforeMount","getAll","then","response","updateModel","finally","methods","onSave","request","method","id","taxState","unemploymentState","workState","$toast","updateSuccess","find","item","code"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeTaxExemption.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\" screen=\"tax\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.tax_exemptions') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n          {{ $t('pim.federal_income_tax') }}\n        </oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.federalStatus\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :options=\"statuses\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.federalExemptions\"\n                :label=\"$t('pim.exemptions')\"\n                :rules=\"rules.federalExemptions\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-text class=\"orangehrm-sub-title\" tag=\"h6\">\n          {{ $t('pim.state_income_tax') }}\n        </oxd-text>\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.taxState\"\n                type=\"select\"\n                :label=\"$t('general.state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.stateStatus\"\n                type=\"select\"\n                :label=\"$t('general.status')\"\n                :options=\"statuses\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.stateExemptions\"\n                :label=\"$t('pim.exemptions')\"\n                :rules=\"rules.stateExemptions\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.unemploymentState\"\n                type=\"select\"\n                :label=\"$t('pim.unemployment_state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"taxExemption.workState\"\n                type=\"select\"\n                :label=\"$t('pim.work_state')\"\n                :options=\"provinces\"\n                :disabled=\"!$can.update('tax_exemptions')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <submit-button v-if=\"$can.update('tax_exemptions')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport {shouldNotExceedCharLength} from '@ohrm/core/util/validation/rules';\n\nconst taxExemptionModel = {\n  federalStatus: null,\n  federalExemptions: null,\n  taxStateCode: [],\n  stateStatus: null,\n  stateExemptions: null,\n  unemploymentStateCode: [],\n  workStateCode: [],\n};\n\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    provinces: {\n      type: Array,\n      default: () => [],\n    },\n    statuses: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/tax-exemption`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      taxExemption: {...taxExemptionModel},\n      rules: {\n        federalExemptions: [\n          (v) => {\n            return (\n              v.match(/^\\d*\\.?\\d*$/) !== null ||\n              this.$t('general.should_be_a_positive_number')\n            );\n          },\n          shouldNotExceedCharLength(2),\n        ],\n        stateExemptions: [\n          (v) => {\n            return (\n              v.match(/^\\d*\\.?\\d*$/) !== null ||\n              this.$t('general.should_be_a_positive_number')\n            );\n          },\n          shouldNotExceedCharLength(2),\n        ],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        this.updateModel(response);\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            federalStatus: this.taxExemption.federalStatus?.id,\n            federalExemptions: this.taxExemption.federalExemptions,\n            taxStateCode: this.taxExemption.taxState?.id,\n            stateStatus: this.taxExemption.stateStatus?.id,\n            stateExemptions: this.taxExemption.stateExemptions,\n            unemploymentStateCode: this.taxExemption.unemploymentState?.id,\n            workStateCode: this.taxExemption.workState?.id,\n          },\n        })\n        .then((response) => {\n          this.updateModel(response);\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n\n    updateModel(response) {\n      const {data} = response.data;\n      this.taxExemption.federalExemptions = data.federalExemptions;\n      this.taxExemption.stateExemptions = data.stateExemptions;\n      this.taxExemption.taxState = this.provinces.find(\n        (item) => item.id === data.taxState.code,\n      );\n      this.taxExemption.unemploymentState = this.provinces.find(\n        (item) => item.id === data.unemploymentState.code,\n      );\n      this.taxExemption.workState = this.provinces.find(\n        (item) => item.id === data.workState.code,\n      );\n      this.taxExemption.federalStatus = this.statuses.find(\n        (item) => item.id === data.federalStatus,\n      );\n      this.taxExemption.stateStatus = this.statuses.find(\n        (item) => item.id === data.stateStatus,\n      );\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}