{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { required, digitsOnlyWithTwoDecimalPoints, maxCurrency } from '@ohrm/core/util/validation/rules';\nimport { maxValueShouldBeGreaterThanMinValue, minValueShouldBeLowerThanMaxValue } from '@/core/util/validation/rules';\nconst payCurrencyModel = {\n  currencyId: null,\n  minSalary: '',\n  maxSalary: ''\n};\nexport default {\n  name: 'SavePayCurrency',\n  props: {\n    payGradeId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/pay-grades/${props.payGradeId}/currencies`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      payCurrency: {\n        ...payCurrencyModel\n      },\n      currencies: [],\n      rules: {\n        currencyId: [required],\n        minSalary: [maxCurrency(1000000000), digitsOnlyWithTwoDecimalPoints, minValueShouldBeLowerThanMaxValue(() => this.payCurrency.maxSalary, this.$t('admin.should_be_lower_than_maximum_salary'))],\n        maxSalary: [maxCurrency(1000000000), digitsOnlyWithTwoDecimalPoints, maxValueShouldBeGreaterThanMinValue(() => this.payCurrency.minSalary, this.$t('admin.should_be_higher_than_minimum_salary'))]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET',\n      url: `/api/v2/admin/pay-grades/${this.payGradeId}/currencies/allowed`,\n      params: {\n        limit: 0\n      }\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.currencies = data.map(item => {\n        return {\n          id: item.id,\n          label: item.id + ' - ' + item.name\n        };\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.payCurrency,\n        currencyId: this.payCurrency.currencyId.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":"AA0EA,SAAQA,UAAU,QAAO,kCAAkC;AAC3D,SACEC,QAAQ,EACRC,8BAA8B,EAC9BC,WAAW,QACN,kCAAkC;AACzC,SACEC,mCAAmC,EACnCC,iCAAiC,QAC5B,8BAA8B;AAErC,MAAMC,gBAAe,GAAI;EACvBC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE;AACb,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZb,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDc,KAAK,EAAE,CAAC,OAAO,CAAC;EAChBC,KAAK,CAACL,KAAK,EAAE;IACX,MAAMM,IAAG,GAAI,IAAIjB,UAAU,CACzBkB,MAAM,CAACC,SAAS,CAACC,OAAO,EACvB,4BAA2BT,KAAK,CAACC,UAAW,aAAY,CAC1D;IACD,OAAO;MAACK;IAAI,CAAC;EACf,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE;QAAC,GAAGjB;MAAgB,CAAC;MAClCkB,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;QACLlB,UAAU,EAAE,CAACN,QAAQ,CAAC;QACtBO,SAAS,EAAE,CACTL,WAAW,CAAC,UAAU,CAAC,EACvBD,8BAA8B,EAC9BG,iCAAiC,CAC/B,MAAM,IAAI,CAACkB,WAAW,CAACd,SAAS,EAChC,IAAI,CAACiB,EAAE,CAAC,2CAA2C,CAAC,CACrD,CACF;QACDjB,SAAS,EAAE,CACTN,WAAW,CAAC,UAAU,CAAC,EACvBD,8BAA8B,EAC9BE,mCAAmC,CACjC,MAAM,IAAI,CAACmB,WAAW,CAACf,SAAS,EAChC,IAAI,CAACkB,EAAE,CAAC,4CAA4C,CAAC,CACtD;MAEL;IACF,CAAC;EACH,CAAC;EACDC,WAAW,GAAG;IACZ,IAAI,CAACL,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACL,IAAG,CACLW,OAAO,CAAC;MACPC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,4BAA2B,IAAI,CAAClB,UAAW,qBAAoB;MACrEmB,MAAM,EAAE;QACNC,KAAK,EAAE;MACT;IACF,CAAC,EACAC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACb;MAAI,IAAIa,QAAQ,CAACb,IAAI;MAC5B,IAAI,CAACG,UAAS,GAAIH,IAAI,CAACc,GAAG,CAAEC,IAAI,IAAK;QACnC,OAAO;UACLC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,KAAK,EAAEF,IAAI,CAACC,EAAC,GAAI,KAAI,GAAID,IAAI,CAAC1B;QAChC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,EACA6B,OAAO,CAAC,MAAM;MACb,IAAI,CAACjB,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EACDkB,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACnB,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLyB,MAAM,CAAC;QACN,GAAG,IAAI,CAACnB,WAAW;QACnBhB,UAAU,EAAE,IAAI,CAACgB,WAAW,CAAChB,UAAU,CAAC8B;MAC1C,CAAC,EACAJ,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACU,MAAM,CAACC,WAAW,EAAE;MAClC,CAAC,EACAX,IAAI,CAAC,MAAM;QACV,IAAI,CAACY,QAAQ,EAAE;MACjB,CAAC,CAAC;IACN,CAAC;IACDA,QAAQ,GAAG;MACT,IAAI,CAACC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;IAC3B;EACF;AACF,CAAC","names":["APIService","required","digitsOnlyWithTwoDecimalPoints","maxCurrency","maxValueShouldBeGreaterThanMinValue","minValueShouldBeLowerThanMaxValue","payCurrencyModel","currencyId","minSalary","maxSalary","name","props","payGradeId","type","Number","emits","setup","http","window","appGlobal","baseUrl","data","isLoading","payCurrency","currencies","rules","$t","beforeMount","request","method","url","params","limit","then","response","map","item","id","label","finally","methods","onSave","create","$toast","saveSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\payGrade\\SavePayCurrency.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <div class=\"orangehrm-card-container\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n      {{ $t('admin.add_currency') }}\n    </oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.currencyId\"\n              type=\"select\"\n              :label=\"$t('general.currency')\"\n              :options=\"currencies\"\n              :rules=\"rules.currencyId\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.minSalary\"\n              :label=\"$t('admin.minimum_salary')\"\n              :rules=\"rules.minSalary\"\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"payCurrency.maxSalary\"\n              :label=\"$t('admin.maximum_salary')\"\n              :rules=\"rules.maxSalary\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n      <oxd-divider />\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  digitsOnlyWithTwoDecimalPoints,\n  maxCurrency,\n} from '@ohrm/core/util/validation/rules';\nimport {\n  maxValueShouldBeGreaterThanMinValue,\n  minValueShouldBeLowerThanMaxValue,\n} from '@/core/util/validation/rules';\n\nconst payCurrencyModel = {\n  currencyId: null,\n  minSalary: '',\n  maxSalary: '',\n};\n\nexport default {\n  name: 'SavePayCurrency',\n  props: {\n    payGradeId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/pay-grades/${props.payGradeId}/currencies`,\n    );\n    return {http};\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      payCurrency: {...payCurrencyModel},\n      currencies: [],\n      rules: {\n        currencyId: [required],\n        minSalary: [\n          maxCurrency(1000000000),\n          digitsOnlyWithTwoDecimalPoints,\n          minValueShouldBeLowerThanMaxValue(\n            () => this.payCurrency.maxSalary,\n            this.$t('admin.should_be_lower_than_maximum_salary'),\n          ),\n        ],\n        maxSalary: [\n          maxCurrency(1000000000),\n          digitsOnlyWithTwoDecimalPoints,\n          maxValueShouldBeGreaterThanMinValue(\n            () => this.payCurrency.minSalary,\n            this.$t('admin.should_be_higher_than_minimum_salary'),\n          ),\n        ],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n        url: `/api/v2/admin/pay-grades/${this.payGradeId}/currencies/allowed`,\n        params: {\n          limit: 0,\n        },\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.currencies = data.map((item) => {\n          return {\n            id: item.id,\n            label: item.id + ' - ' + item.name,\n          };\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          ...this.payCurrency,\n          currencyId: this.payCurrency.currencyId.id,\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}