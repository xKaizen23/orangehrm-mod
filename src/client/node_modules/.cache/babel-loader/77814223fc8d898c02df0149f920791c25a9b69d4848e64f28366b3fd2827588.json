{"ast":null,"code":"import { toRef, nextTick, computed } from 'vue';\nimport { OxdColorInput, OxdLabel, useField } from '@ohrm/oxd';\nexport default {\n  name: 'InlineColorInput',\n  components: {\n    'oxd-label': OxdLabel,\n    'oxd-color-input': OxdColorInput\n  },\n  inheritAttrs: false,\n  props: {\n    label: {\n      type: String,\n      default: null,\n      required: false\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n      required: false\n    },\n    required: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    modelValue: {\n      type: String,\n      default: null,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    const disabled = toRef(props, 'disabled');\n    const modelValue = toRef(props, 'modelValue');\n    const initialValue = modelValue.value;\n    const onReset = async () => {\n      context.emit('update:modelValue', initialValue);\n      await nextTick();\n    };\n    const {\n      hasError,\n      message\n    } = useField({\n      fieldLabel: props.label ?? '',\n      rules: props.rules,\n      modelValue,\n      onReset,\n      disabled\n    });\n    const classes = computed(() => ({\n      label: {\n        'oxd-input-field-required': props.required\n      },\n      message: {\n        'oxd-input-field-error-message': hasError\n      },\n      wrapper: {\n        'orangehrm-color-input-wrapper': true\n      }\n    }));\n    return {\n      classes,\n      message,\n      hasError\n    };\n  }\n};","map":{"version":3,"mappings":"AAsCA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,QAAO,KAAK;AAC7C,SAAQC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,QAAO,WAAW;AAE3D,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACV,WAAW,EAAEH,QAAQ;IACrB,iBAAiB,EAAED;EACrB,CAAC;EACDK,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLJ,IAAI,EAAEK,KAAK;MACXH,OAAO,EAAE,MAAM,EAAE;MACjBC,QAAQ,EAAE;IACZ,CAAC;IACDA,QAAQ,EAAE;MACRH,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDI,UAAU,EAAE;MACVP,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDK,QAAQ,EAAE;MACRR,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDM,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAK,CAACZ,KAAK,EAAEa,OAAO,EAAE;IACpB,MAAMH,QAAO,GAAInB,KAAK,CAACS,KAAK,EAAE,UAAU,CAAC;IACzC,MAAMS,UAAS,GAAIlB,KAAK,CAACS,KAAK,EAAE,YAAY,CAAC;IAC7C,MAAMc,YAAW,GAAIL,UAAU,CAACM,KAAK;IAErC,MAAMC,OAAM,GAAI,YAAY;MAC1BH,OAAO,CAACI,IAAI,CAAC,mBAAmB,EAAEH,YAAY,CAAC;MAC/C,MAAMtB,QAAQ,EAAE;IAClB,CAAC;IAED,MAAM;MAAC0B,QAAQ;MAAEC;IAAO,IAAIvB,QAAQ,CAAC;MACnCwB,UAAU,EAAEpB,KAAK,CAACC,KAAI,IAAK,EAAE;MAC7BK,KAAK,EAAEN,KAAK,CAACM,KAAK;MAClBG,UAAU;MACVO,OAAO;MACPN;IACF,CAAC,CAAC;IAEF,MAAMW,OAAM,GAAI5B,QAAQ,CAAC,OAAO;MAC9BQ,KAAK,EAAE;QACL,0BAA0B,EAAED,KAAK,CAACK;MACpC,CAAC;MACDc,OAAO,EAAE;QACP,+BAA+B,EAAED;MACnC,CAAC;MACDI,OAAO,EAAE;QACP,+BAA+B,EAAE;MACnC;IACF,CAAC,CAAC,CAAC;IAEH,OAAO;MACLD,OAAO;MACPF,OAAO;MACPD;IACF,CAAC;EACH;AACF,CAAC","names":["toRef","nextTick","computed","OxdColorInput","OxdLabel","useField","name","components","inheritAttrs","props","label","type","String","default","required","rules","Array","Boolean","modelValue","disabled","emits","setup","context","initialValue","value","onReset","emit","hasError","message","fieldLabel","classes","wrapper"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\components\\InlineColorInput.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-group\n    class=\"oxd-input-field-bottom-space\"\n    :message=\"message\"\n    :classes=\"classes\"\n  >\n    <oxd-label :label=\"label\" :class=\"classes.label\" />\n    <oxd-color-input\n      v-bind=\"$attrs\"\n      :disabled=\"disabled\"\n      :has-error=\"hasError\"\n      :model-value=\"modelValue\"\n      dropdown-position=\"left\"\n      @update:model-value=\"$emit('update:modelValue', $event)\"\n    />\n  </oxd-input-group>\n</template>\n\n<script>\nimport {toRef, nextTick, computed} from 'vue';\nimport {OxdColorInput, OxdLabel, useField} from '@ohrm/oxd';\n\nexport default {\n  name: 'InlineColorInput',\n  components: {\n    'oxd-label': OxdLabel,\n    'oxd-color-input': OxdColorInput,\n  },\n  inheritAttrs: false,\n  props: {\n    label: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n      required: false,\n    },\n    required: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    modelValue: {\n      type: String,\n      default: null,\n      required: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, context) {\n    const disabled = toRef(props, 'disabled');\n    const modelValue = toRef(props, 'modelValue');\n    const initialValue = modelValue.value;\n\n    const onReset = async () => {\n      context.emit('update:modelValue', initialValue);\n      await nextTick();\n    };\n\n    const {hasError, message} = useField({\n      fieldLabel: props.label ?? '',\n      rules: props.rules,\n      modelValue,\n      onReset,\n      disabled,\n    });\n\n    const classes = computed(() => ({\n      label: {\n        'oxd-input-field-required': props.required,\n      },\n      message: {\n        'oxd-input-field-error-message': hasError,\n      },\n      wrapper: {\n        'orangehrm-color-input-wrapper': true,\n      },\n    }));\n\n    return {\n      classes,\n      message,\n      hasError,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.oxd-input-group__label-wrapper) {\n  display: none;\n}\n::v-deep(.orangehrm-color-input-wrapper) {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n::v-deep(.oxd-color-input) {\n  padding: 2px;\n  flex-shrink: 0;\n}\n.oxd-input-field-bottom-space {\n  margin-bottom: 1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}