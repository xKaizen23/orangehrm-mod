{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeaveEntitlementTable',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    prefetch: {\n      type: Boolean,\n      default: true\n    },\n    employee: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    leaveType: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null\n    }\n  },\n  setup(props) {\n    const filters = ref({\n      leaveType: props.leaveType ? props.leaveType : null,\n      leavePeriod: props.leavePeriod ? props.leavePeriod : null,\n      employee: props.employee ? {\n        id: props.employee.empNumber,\n        label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n        isPastEmployee: props.employee.terminationId\n      } : null\n    });\n    const serializedFilters = computed(() => {\n      return {\n        empNumber: filters.value.employee?.id,\n        leaveTypeId: filters.value.leaveType?.id,\n        fromDate: filters.value.leavePeriod?.startDate,\n        toDate: filters.value.leavePeriod?.endDate\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-entitlements');\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const entitlementNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          leaveType: item.leaveType.name + `${item.leaveType.deleted ? $t('general.deleted') : ''}`,\n          entitlementType: item.entitlementType.name,\n          fromDate: formatDate(parseDate(item.fromDate), jsDateFormat, {\n            locale\n          }),\n          toDate: formatDate(parseDate(item.toDate), jsDateFormat, {\n            locale\n          }),\n          days: item.entitlement,\n          isSelectable: item.deletable\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: entitlementNormalizer,\n      prefetch: props.employee || props.prefetch\n    });\n    const totalEntitlements = computed(() => {\n      const sum = response.value.meta?.sum ? response.value.meta.sum : 0;\n      return `Total ${parseFloat(sum).toFixed(2)} Day(s)`;\n    });\n    const showDatatable = computed(() => response.value.data !== undefined);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      totalEntitlements,\n      showDatatable\n    };\n  },\n  data() {\n    return {\n      checkedItems: []\n    };\n  },\n  computed: {\n    headers() {\n      const headers = [{\n        name: 'leaveType',\n        slot: 'title',\n        title: this.$t('leave.leave_type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'entitlementType',\n        title: this.$t('leave.entitlement_type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'fromDate',\n        title: this.$t('leave.valid_from'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'toDate',\n        title: this.$t('leave.valid_to'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'days',\n        title: this.$t('leave.days'),\n        style: {\n          flex: 1\n        }\n      }];\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {}\n      };\n      if (this.$can.delete(`leave_entitlements`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      if (this.$can.update(`leave_entitlements`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0 ? headers.concat([headerActions]) : headers;\n    }\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/leave/addLeaveEntitlement');\n    },\n    onClickEdit(item) {\n      navigate('/leave/editLeaveEntitlement/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      if (!item.isSelectable) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t('leave.entitlements_will_not_be_deleted_since_already_in_use')\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","ref","APIService","navigate","usePaginate","DeleteConfirmationDialog","usei18n","useDateFormat","formatDate","parseDate","useLocale","name","components","props","prefetch","type","Boolean","default","employee","Object","required","leaveType","leavePeriod","setup","filters","id","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId","serializedFilters","value","leaveTypeId","fromDate","startDate","toDate","endDate","http","window","appGlobal","baseUrl","$t","jsDateFormat","locale","entitlementNormalizer","data","map","item","deleted","entitlementType","days","entitlement","isSelectable","deletable","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","query","normalizer","totalEntitlements","sum","meta","parseFloat","toFixed","showDatatable","undefined","items","checkedItems","headers","slot","title","style","flex","headerActions","cellType","cellConfig","$can","delete","onClick","onClickDelete","component","update","edit","onClickEdit","keys","length","concat","methods","onClickAdd","onClickDeleteSelected","ids","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","$toast","error","message","Array","deleteAll","deleteSuccess","resetDataTable","filterItems"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\components\\LeaveEntitlementTable.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <slot :filters=\"filters\" :filter-items=\"filterItems\"></slot>\n    <br />\n    <div v-if=\"showDatatable\" class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <div>\n          <oxd-button\n            v-if=\"$can.create(`leave_entitlements`)\"\n            :label=\"$t('general.add')\"\n            icon-name=\"plus\"\n            display-type=\"secondary\"\n            @click=\"onClickAdd\"\n          />\n        </div>\n        <oxd-text tag=\"span\">\n          {{ totalEntitlements }}\n        </oxd-text>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"$can.delete(`leave_entitlements`)\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  name: 'LeaveEntitlementTable',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  props: {\n    prefetch: {\n      type: Boolean,\n      default: true,\n    },\n    employee: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    leaveType: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n    leavePeriod: {\n      type: Object,\n      required: false,\n      default: () => null,\n    },\n  },\n\n  setup(props) {\n    const filters = ref({\n      leaveType: props.leaveType ? props.leaveType : null,\n      leavePeriod: props.leavePeriod ? props.leavePeriod : null,\n      employee: props.employee\n        ? {\n            id: props.employee.empNumber,\n            label: `${props.employee.firstName} ${props.employee.middleName} ${props.employee.lastName}`,\n            isPastEmployee: props.employee.terminationId,\n          }\n        : null,\n    });\n\n    const serializedFilters = computed(() => {\n      return {\n        empNumber: filters.value.employee?.id,\n        leaveTypeId: filters.value.leaveType?.id,\n        fromDate: filters.value.leavePeriod?.startDate,\n        toDate: filters.value.leavePeriod?.endDate,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-entitlements',\n    );\n    const {$t} = usei18n();\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const entitlementNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          leaveType:\n            item.leaveType.name +\n            `${item.leaveType.deleted ? $t('general.deleted') : ''}`,\n          entitlementType: item.entitlementType.name,\n          fromDate: formatDate(parseDate(item.fromDate), jsDateFormat, {\n            locale,\n          }),\n          toDate: formatDate(parseDate(item.toDate), jsDateFormat, {locale}),\n          days: item.entitlement,\n          isSelectable: item.deletable,\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: entitlementNormalizer,\n      prefetch: props.employee || props.prefetch,\n    });\n\n    const totalEntitlements = computed(() => {\n      const sum = response.value.meta?.sum ? response.value.meta.sum : 0;\n      return `Total ${parseFloat(sum).toFixed(2)} Day(s)`;\n    });\n\n    const showDatatable = computed(() => response.value.data !== undefined);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      totalEntitlements,\n      showDatatable,\n    };\n  },\n\n  data() {\n    return {\n      checkedItems: [],\n    };\n  },\n\n  computed: {\n    headers() {\n      const headers = [\n        {\n          name: 'leaveType',\n          slot: 'title',\n          title: this.$t('leave.leave_type'),\n          style: {flex: 1},\n        },\n        {\n          name: 'entitlementType',\n          title: this.$t('leave.entitlement_type'),\n          style: {flex: 1},\n        },\n        {\n          name: 'fromDate',\n          title: this.$t('leave.valid_from'),\n          style: {flex: 1},\n        },\n        {\n          name: 'toDate',\n          title: this.$t('leave.valid_to'),\n          style: {flex: 1},\n        },\n        {name: 'days', title: this.$t('leave.days'), style: {flex: 1}},\n      ];\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.$can.delete(`leave_entitlements`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n      if (this.$can.update(`leave_entitlements`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0\n        ? headers.concat([headerActions])\n        : headers;\n    },\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/leave/addLeaveEntitlement');\n    },\n    onClickEdit(item) {\n      navigate('/leave/editLeaveEntitlement/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      if (!item.isSelectable) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t(\n            'leave.entitlements_will_not_be_deleted_since_already_in_use',\n          ),\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}