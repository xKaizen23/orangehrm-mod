{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ReportToEmployeeAutocomplete',\n  props: {\n    api: {\n      type: String,\n      required: true\n    },\n    params: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, props.api);\n    return {\n      http\n    };\n  },\n  methods: {\n    async loadEmployees(searchParam) {\n      return new Promise(resolve => {\n        if (searchParam.trim() && searchParam.length < 100) {\n          this.http.getAll({\n            nameOrId: searchParam.trim(),\n            ...this.params\n          }).then(({\n            data\n          }) => {\n            resolve(data.data.map(employee => {\n              return {\n                id: employee.empNumber,\n                label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n                isPastEmployee: !!employee.terminationId\n              };\n            }));\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA,SAAQA,UAAU,QAAO,sCAAsC;AAC/D,eAAe;EACbC,IAAI,EAAE,8BAA8B;EAEpCC,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE,OAAO,CAAC,CAAC;IACpB;EACF,CAAC;EAEDC,KAAK,CAACR,KAAK,EAAE;IACX,MAAMS,IAAG,GAAI,IAAIX,UAAU,CAACY,MAAM,CAACC,SAAS,CAACC,OAAO,EAAEZ,KAAK,CAACC,GAAG,CAAC;IAChE,OAAO;MACLQ;IACF,CAAC;EACH,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,aAAa,CAACC,WAAW,EAAE;MAC/B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9B,IAAIF,WAAW,CAACG,IAAI,EAAC,IAAKH,WAAW,CAACI,MAAK,GAAI,GAAG,EAAE;UAClD,IAAI,CAACV,IAAG,CACLW,MAAM,CAAC;YACNC,QAAQ,EAAEN,WAAW,CAACG,IAAI,EAAE;YAC5B,GAAG,IAAI,CAACb;UACV,CAAC,EACAiB,IAAI,CAAC,CAAC;YAACC;UAAI,CAAC,KAAK;YAChBN,OAAO,CACLM,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEC,QAAQ,IAAK;cAC1B,OAAO;gBACLC,EAAE,EAAED,QAAQ,CAACE,SAAS;gBACtBC,KAAK,EAAG,GAAEH,QAAQ,CAACI,SAAS,IAAIJ,QAAQ,CAACK,UAAU,IAAIL,QAAQ,CAACM,QAAS,EAAC;gBAC1EC,cAAc,EAAE,CAAC,CAACP,QAAQ,CAACQ;cAC7B,CAAC;YACH,CAAC,CAAC,CACH;UACH,CAAC,CAAC;QACN,OAAO;UACLhB,OAAO,CAAC,EAAE,CAAC;QACb;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["APIService","name","props","api","type","String","required","params","Object","default","setup","http","window","appGlobal","baseUrl","methods","loadEmployees","searchParam","Promise","resolve","trim","length","getAll","nameOrId","then","data","map","employee","id","empNumber","label","firstName","middleName","lastName","isPastEmployee","terminationId"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\ReportToEmployeeAutocomplete.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-input-field\n    type=\"autocomplete\"\n    :label=\"$t('general.name')\"\n    :clear=\"false\"\n    :create-options=\"loadEmployees\"\n  >\n    <template #afterSelected=\"{data}\">\n      <template v-if=\"data.isPastEmployee\">\n        {{ $t('general.past_employee') }}\n      </template>\n    </template>\n    <template #option=\"{data}\">\n      <span>{{ data.label }}</span>\n      <div v-if=\"data.isPastEmployee\" class=\"past-employee-tag\">\n        {{ $t('general.past_employee') }}\n      </div>\n    </template>\n  </oxd-input-field>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ReportToEmployeeAutocomplete',\n\n  props: {\n    api: {\n      type: String,\n      required: true,\n    },\n    params: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, props.api);\n    return {\n      http,\n    };\n  },\n  methods: {\n    async loadEmployees(searchParam) {\n      return new Promise((resolve) => {\n        if (searchParam.trim() && searchParam.length < 100) {\n          this.http\n            .getAll({\n              nameOrId: searchParam.trim(),\n              ...this.params,\n            })\n            .then(({data}) => {\n              resolve(\n                data.data.map((employee) => {\n                  return {\n                    id: employee.empNumber,\n                    label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n                    isPastEmployee: !!employee.terminationId,\n                  };\n                }),\n              );\n            });\n        } else {\n          resolve([]);\n        }\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}