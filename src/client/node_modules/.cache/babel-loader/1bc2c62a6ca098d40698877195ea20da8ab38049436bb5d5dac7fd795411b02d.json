{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, validSelection, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { promiseDebounce } from '@ohrm/oxd';\nimport AddCustomerModal from '@/orangehrmTimePlugin/components/AddCustomerModal.vue';\nimport CustomerAutocomplete from '@/orangehrmTimePlugin/components/CustomerAutocomplete.vue';\nimport ProjectAdminAutocomplete from '@/orangehrmTimePlugin/components/ProjectAdminAutocomplete.vue';\nconst defaultProjectModel = {\n  name: null,\n  customer: null,\n  description: null,\n  projectAdminEmpNumbers: []\n};\nexport default {\n  name: 'ProjectSave',\n  components: {\n    'add-customer-modal': AddCustomerModal,\n    'customer-autocomplete': CustomerAutocomplete,\n    'project-admin-autocomplete': ProjectAdminAutocomplete\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/time/projects');\n    http.setIgnorePath('/api/v2/time/validation/project-name');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      showCustomerModal: false,\n      projectAdmins: [{\n        value: null\n      }],\n      project: {\n        ...defaultProjectModel\n      },\n      projectId: null,\n      rules: {\n        name: [required, shouldNotExceedCharLength(50), promiseDebounce(this.validateProjectName, 500)],\n        description: [shouldNotExceedCharLength(255)],\n        customer: [required, validSelection],\n        projectAdmin: [validSelection, value => {\n          return this.projectAdmins.filter(({\n            value: admin\n          }) => admin && admin.id === value?.id).length < 2 ? true : this.$t('general.already_exists');\n        }]\n      }\n    };\n  },\n  methods: {\n    onClickAddCustomer() {\n      this.showCustomerModal = true;\n    },\n    onCustomerModalClose(data) {\n      if (data !== undefined) {\n        const {\n          id,\n          name\n        } = data;\n        this.project.customer = {\n          id,\n          label: name\n        };\n      }\n      this.showCustomerModal = false;\n    },\n    onAddAnother() {\n      if (this.projectAdmins.length < 5) {\n        this.projectAdmins.push({\n          value: null\n        });\n      }\n    },\n    onRemoveAdmin(index) {\n      this.projectAdmins.splice(index, 1);\n    },\n    onCancel() {\n      navigate('/time/viewProjects');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        name: this.project.name,\n        description: this.project.description,\n        customerId: this.project.customer.id,\n        projectAdminsEmpNumbers: this.projectAdmins.map(({\n          value\n        }) => value && value.id).filter(Number)\n      }).then(result => {\n        this.projectId = result.data?.data.id;\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        navigate('/time/saveProject/{id}', {\n          id: this.projectId\n        });\n      });\n    },\n    validateProjectName(project) {\n      return new Promise(resolve => {\n        if (project) {\n          this.http.request({\n            method: 'GET',\n            url: `/api/v2/time/validation/project-name`,\n            params: {\n              projectName: this.project.name.trim(),\n              customerId: this.project.customer?.id\n            }\n          }).then(response => {\n            const {\n              data\n            } = response.data;\n            return data.valid === true ? resolve(true) : resolve(this.$t('general.already_exists'));\n          });\n        } else {\n          resolve(true);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","validSelection","shouldNotExceedCharLength","APIService","navigate","promiseDebounce","AddCustomerModal","CustomerAutocomplete","ProjectAdminAutocomplete","defaultProjectModel","name","customer","description","projectAdminEmpNumbers","components","setup","http","window","appGlobal","baseUrl","setIgnorePath","data","isLoading","showCustomerModal","projectAdmins","value","project","projectId","rules","validateProjectName","projectAdmin","filter","admin","id","length","$t","methods","onClickAddCustomer","onCustomerModalClose","undefined","label","onAddAnother","push","onRemoveAdmin","index","splice","onCancel","onSave","create","customerId","projectAdminsEmpNumbers","map","Number","then","result","$toast","saveSuccess","Promise","resolve","request","method","url","params","projectName","trim","response","valid"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\project\\ProjectSave.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('time.add_project') }}\n      </oxd-text>\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"project.name\"\n              :label=\"$t('general.name')\"\n              :rules=\"rules.name\"\n              required\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <customer-autocomplete\n              :key=\"project.customer\"\n              v-model=\"project.customer\"\n              :rules=\"rules.customer\"\n              :label=\"$t('time.customer_name')\"\n              required\n            />\n            <oxd-button\n              icon-name=\"plus\"\n              display-type=\"text\"\n              class=\"orangehrm-input-field-bottom-space\"\n              :label=\"$t('time.add_customer')\"\n              @click=\"onClickAddCustomer\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"project.description\"\n                type=\"textarea\"\n                :label=\"$t('general.description')\"\n                :rules=\"rules.description\"\n                :placeholder=\"$t('general.type_description_here')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <project-admin-autocomplete\n                v-for=\"(projectAdmin, index) in projectAdmins\"\n                :key=\"index\"\n                v-model=\"projectAdmin.value\"\n                :show-delete=\"index > 0\"\n                :rules=\"rules.projectAdmin\"\n                include-employees=\"onlyCurrent\"\n                @remove=\"onRemoveAdmin(index)\"\n              />\n              <oxd-button\n                v-if=\"projectAdmins.length < 5\"\n                icon-name=\"plus\"\n                display-type=\"text\"\n                :label=\"$t('general.add_another')\"\n                @click=\"onAddAnother\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <br />\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n    <add-customer-modal\n      v-if=\"showCustomerModal\"\n      @close=\"onCustomerModalClose\"\n    ></add-customer-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  validSelection,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport AddCustomerModal from '@/orangehrmTimePlugin/components/AddCustomerModal.vue';\nimport CustomerAutocomplete from '@/orangehrmTimePlugin/components/CustomerAutocomplete.vue';\nimport ProjectAdminAutocomplete from '@/orangehrmTimePlugin/components/ProjectAdminAutocomplete.vue';\n\nconst defaultProjectModel = {\n  name: null,\n  customer: null,\n  description: null,\n  projectAdminEmpNumbers: [],\n};\n\nexport default {\n  name: 'ProjectSave',\n  components: {\n    'add-customer-modal': AddCustomerModal,\n    'customer-autocomplete': CustomerAutocomplete,\n    'project-admin-autocomplete': ProjectAdminAutocomplete,\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/time/projects',\n    );\n    http.setIgnorePath('/api/v2/time/validation/project-name');\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      showCustomerModal: false,\n      projectAdmins: [{value: null}],\n      project: {...defaultProjectModel},\n      projectId: null,\n      rules: {\n        name: [\n          required,\n          shouldNotExceedCharLength(50),\n          promiseDebounce(this.validateProjectName, 500),\n        ],\n        description: [shouldNotExceedCharLength(255)],\n        customer: [required, validSelection],\n        projectAdmin: [\n          validSelection,\n          (value) => {\n            return this.projectAdmins.filter(\n              ({value: admin}) => admin && admin.id === value?.id,\n            ).length < 2\n              ? true\n              : this.$t('general.already_exists');\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    onClickAddCustomer() {\n      this.showCustomerModal = true;\n    },\n    onCustomerModalClose(data) {\n      if (data !== undefined) {\n        const {id, name} = data;\n        this.project.customer = {\n          id,\n          label: name,\n        };\n      }\n      this.showCustomerModal = false;\n    },\n    onAddAnother() {\n      if (this.projectAdmins.length < 5) {\n        this.projectAdmins.push({value: null});\n      }\n    },\n    onRemoveAdmin(index) {\n      this.projectAdmins.splice(index, 1);\n    },\n    onCancel() {\n      navigate('/time/viewProjects');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          name: this.project.name,\n          description: this.project.description,\n          customerId: this.project.customer.id,\n          projectAdminsEmpNumbers: this.projectAdmins\n            .map(({value}) => value && value.id)\n            .filter(Number),\n        })\n        .then((result) => {\n          this.projectId = result.data?.data.id;\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          navigate('/time/saveProject/{id}', {id: this.projectId});\n        });\n    },\n    validateProjectName(project) {\n      return new Promise((resolve) => {\n        if (project) {\n          this.http\n            .request({\n              method: 'GET',\n              url: `/api/v2/time/validation/project-name`,\n              params: {\n                projectName: this.project.name.trim(),\n                customerId: this.project.customer?.id,\n              },\n            })\n            .then((response) => {\n              const {data} = response.data;\n              return data.valid === true\n                ? resolve(true)\n                : resolve(this.$t('general.already_exists'));\n            });\n        } else {\n          resolve(true);\n        }\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}