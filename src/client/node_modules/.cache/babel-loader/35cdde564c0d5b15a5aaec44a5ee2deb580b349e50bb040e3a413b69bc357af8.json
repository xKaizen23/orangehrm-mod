{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport JobSpecDownload from '@/orangehrmPimPlugin/components/JobSpecDownload';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport TerminateModal from '@/orangehrmPimPlugin/components/TerminateModal';\nimport { required, maxFileSize, validFileTypes, validDateFormat, endDateShouldBeAfterStartDate } from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst jobDetailsModel = {\n  joinedDate: '',\n  jobTitleId: [],\n  empStatusId: [],\n  jobCategoryId: [],\n  subunitId: [],\n  locationId: []\n};\nconst contractDetailsModel = {\n  startDate: '',\n  endDate: '',\n  oldAttachment: null,\n  newAttachment: null,\n  method: 'keepCurrent'\n};\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n    'oxd-switch-input': OxdSwitchInput,\n    'job-spec-download': JobSpecDownload,\n    'file-upload-input': FileUploadInput,\n    'profile-action-header': ProfileActionHeader,\n    'terminate-modal': TerminateModal\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    locations: {\n      type: Array,\n      default: () => []\n    },\n    jobTitles: {\n      type: Array,\n      default: () => []\n    },\n    jobCategories: {\n      type: Array,\n      default: () => []\n    },\n    subunits: {\n      type: Array,\n      default: () => []\n    },\n    employmentStatuses: {\n      type: Array,\n      default: () => []\n    },\n    terminationReasons: {\n      type: Array,\n      default: () => []\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/job-details`);\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    return {\n      http,\n      locale,\n      jsDateFormat,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      showContractDetails: false,\n      job: {\n        ...jobDetailsModel\n      },\n      contract: {\n        ...contractDetailsModel\n      },\n      termination: null,\n      showTerminateModal: false,\n      rules: {\n        joinedDate: [validDateFormat(this.userDateFormat)],\n        startDate: [validDateFormat(this.userDateFormat)],\n        endDate: [validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.contract.startDate)],\n        contractAttachment: [v => {\n          if (this.contract.method == 'replaceCurrent') {\n            return required(v);\n          } else {\n            return true;\n          }\n        }, validFileTypes(this.allowedFileTypes), maxFileSize(this.maxFileSize)]\n      }\n    };\n  },\n  computed: {\n    selectedJobTitleId() {\n      const jobTitleId = this.job.jobTitleId?.id;\n      return jobTitleId || 0;\n    },\n    terminationActionLabel() {\n      return this.termination?.id ? this.$t('pim.activate_employment') : this.$t('pim.terminate_employment');\n    },\n    terminationActionType() {\n      return this.termination?.id ? 'ghost-success' : 'label-danger';\n    },\n    hasUpdatePermissions() {\n      return this.$can.update(`job_details`);\n    },\n    normalizedJobTitles() {\n      return this.jobTitles.map(jobTitle => {\n        return {\n          id: jobTitle.id,\n          label: jobTitle?.deleted ? jobTitle.label + this.$t('general.deleted') : jobTitle.label\n        };\n      });\n    },\n    terminationDate() {\n      return this.termination?.date ? formatDate(parseDate(this.termination.date), this.jsDateFormat, {\n        locale: this.locale\n      }) : null;\n    },\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      this.updateJobModel(response);\n    }).then(() => {\n      return this.http.request({\n        method: 'GET',\n        url: `/api/v2/pim/employees/${this.empNumber}/employment-contract`\n      });\n    }).then(response => {\n      this.updateContractModel(response);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          ...this.job,\n          jobTitleId: this.job.jobTitleId?.id,\n          jobCategoryId: this.job.jobCategoryId?.id,\n          subunitId: this.job.subunitId?.id,\n          empStatusId: this.job.empStatusId?.id,\n          locationId: this.job.locationId?.id\n        }\n      }).then(response => {\n        this.updateJobModel(response);\n        return this.http.request({\n          method: 'PUT',\n          url: `/api/v2/pim/employees/${this.empNumber}/employment-contract`,\n          data: {\n            startDate: this.contract.startDate,\n            endDate: this.contract.endDate,\n            currentContractAttachment: this.contract.oldAttachment ? this.contract.method : undefined,\n            contractAttachment: this.contract.newAttachment ? this.contract.newAttachment : undefined\n          }\n        });\n      }).then(response => {\n        if (response) {\n          this.updateContractModel(response);\n        }\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n      });\n    },\n    onClickTerminate() {\n      if (this.termination?.id) {\n        this.isLoading = true;\n        this.http.request({\n          method: 'DELETE',\n          url: `/api/v2/pim/employees/${this.empNumber}/terminations`\n        }).then(() => {\n          return this.$toast.updateSuccess();\n        }).then(() => {\n          location.reload();\n        });\n      } else {\n        this.openTerminateModal();\n      }\n    },\n    openTerminateModal() {\n      this.showTerminateModal = true;\n    },\n    closeTerminateModal(reload) {\n      this.showTerminateModal = false;\n      if (reload) {\n        location.reload();\n      }\n    },\n    updateContractModel(response) {\n      const {\n        data\n      } = response.data;\n      this.contract.startDate = data.startDate;\n      this.contract.endDate = data.endDate;\n      this.contract.oldAttachment = data.contractAttachment?.id ? data.contractAttachment : null;\n      this.contract.newAttachment = null;\n      this.contract.method = 'keepCurrent';\n      if (data.startDate || data.endDate || data.contractAttachment?.id) {\n        this.showContractDetails = true;\n      } else {\n        this.showContractDetails = false;\n      }\n    },\n    updateJobModel(response) {\n      const {\n        data\n      } = response.data;\n      this.job.joinedDate = data.joinedDate;\n      this.job.jobTitleId = this.normalizedJobTitles.find(item => item.id === data.jobTitle?.id);\n      this.job.jobCategoryId = this.jobCategories.find(item => item.id === data.jobCategory?.id);\n      this.job.subunitId = this.subunits.find(item => item.id === data.subunit?.id);\n      this.job.empStatusId = this.employmentStatuses.find(item => item.id === data.empStatus?.id);\n      this.job.locationId = this.locations.find(item => item.id === data.location?.id);\n      this.termination = data.employeeTerminationRecord;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","FileUploadInput","EditEmployeeLayout","JobSpecDownload","ProfileActionHeader","TerminateModal","required","maxFileSize","validFileTypes","validDateFormat","endDateShouldBeAfterStartDate","useDateFormat","formatDate","parseDate","useLocale","OxdSwitchInput","jobDetailsModel","joinedDate","jobTitleId","empStatusId","jobCategoryId","subunitId","locationId","contractDetailsModel","startDate","endDate","oldAttachment","newAttachment","method","components","props","empNumber","type","String","locations","Array","default","jobTitles","jobCategories","subunits","employmentStatuses","terminationReasons","allowedFileTypes","Number","setup","http","window","appGlobal","baseUrl","jsDateFormat","userDateFormat","locale","data","isLoading","showContractDetails","job","contract","termination","showTerminateModal","rules","contractAttachment","v","computed","selectedJobTitleId","id","terminationActionLabel","$t","terminationActionType","hasUpdatePermissions","$can","update","normalizedJobTitles","map","jobTitle","label","deleted","terminationDate","date","formattedFileSize","Math","round","beforeMount","getAll","then","response","updateJobModel","request","url","updateContractModel","finally","methods","onSave","currentContractAttachment","undefined","$toast","updateSuccess","onClickTerminate","location","reload","openTerminateModal","closeTerminateModal","find","item","jobCategory","subunit","empStatus","employeeTerminationRecord"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeeJob.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout\n    screen=\"job\"\n    :employee-id=\"empNumber\"\n    :max-file-size=\"maxFileSize\"\n    :allowed-file-types=\"allowedFileTypes\"\n  >\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.job_details') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"job.joinedDate\"\n                :label=\"$t('general.joined_date')\"\n                :rules=\"rules.joinedDate\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"job.jobTitleId\"\n                type=\"select\"\n                :label=\"$t('general.job_title')\"\n                :options=\"normalizedJobTitles\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <job-spec-download\n                :key=\"`jobspec-${selectedJobTitleId}`\"\n                :resource-id=\"selectedJobTitleId\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"job.jobCategoryId\"\n                type=\"select\"\n                :label=\"$t('general.job_category')\"\n                :options=\"jobCategories\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"job.subunitId\"\n                type=\"select\"\n                :label=\"$t('general.sub_unit')\"\n                :options=\"subunits\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"job.locationId\"\n                type=\"select\"\n                :label=\"$t('general.location')\"\n                :options=\"locations\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"job.empStatusId\"\n                type=\"select\"\n                :label=\"$t('general.employment_status')\"\n                :options=\"employmentStatuses\"\n                :disabled=\"!hasUpdatePermissions\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n\n        <oxd-form-row class=\"user-form-header\">\n          <oxd-text class=\"user-form-header-text\" tag=\"p\">\n            {{ $t('pim.include_employment_contract_details') }}\n          </oxd-text>\n          <oxd-switch-input v-model=\"showContractDetails\" />\n        </oxd-form-row>\n\n        <template v-if=\"showContractDetails\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"contract.startDate\"\n                  :label=\"$t('pim.contract_start_date')\"\n                  :rules=\"rules.startDate\"\n                  :disabled=\"!hasUpdatePermissions\"\n                />\n              </oxd-grid-item>\n\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"contract.endDate\"\n                  :label=\"$t('pim.contract_end_date')\"\n                  :rules=\"rules.endDate\"\n                  :disabled=\"!hasUpdatePermissions\"\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n          <oxd-form-row>\n            <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <file-upload-input\n                  v-model:newFile=\"contract.newAttachment\"\n                  v-model:method=\"contract.method\"\n                  :label=\"$t('pim.contract_details')\"\n                  :button-label=\"$t('general.browse')\"\n                  :file=\"contract.oldAttachment\"\n                  :rules=\"rules.contractAttachment\"\n                  :url=\"`pim/viewAttachment/empNumber/${empNumber}/attachId`\"\n                  :hint=\"\n                    $t('general.accepts_up_to_n_mb', {count: formattedFileSize})\n                  \"\n                  :disabled=\"!hasUpdatePermissions\"\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n        </template>\n\n        <template v-if=\"hasUpdatePermissions\">\n          <oxd-divider />\n          <oxd-form-actions>\n            <submit-button />\n          </oxd-form-actions>\n        </template>\n      </oxd-form>\n    </div>\n\n    <oxd-divider v-if=\"hasUpdatePermissions && !isLoading\" />\n\n    <div\n      v-if=\"hasUpdatePermissions && !isLoading\"\n      class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n    >\n      <profile-action-header\n        icon-name=\"\"\n        :display-type=\"terminationActionType\"\n        :label=\"terminationActionLabel\"\n        :title=\"terminationActionLabel\"\n        class=\"--termination-button\"\n        @click=\"onClickTerminate\"\n      >\n        {{ $t('pim.employee_termination_activation') }}\n        <oxd-text\n          v-if=\"termination && termination.id\"\n          tag=\"p\"\n          class=\"orangehrm-terminate-date\"\n          @click=\"openTerminateModal\"\n        >\n          {{ $t('pim.terminated_on') }}: {{ terminationDate }}\n        </oxd-text>\n      </profile-action-header>\n    </div>\n    <terminate-modal\n      v-if=\"showTerminateModal\"\n      :employee-id=\"empNumber\"\n      :termination-reasons=\"terminationReasons\"\n      :termination-id=\"termination.id\"\n      @close=\"closeTerminateModal\"\n    ></terminate-modal>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport JobSpecDownload from '@/orangehrmPimPlugin/components/JobSpecDownload';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport TerminateModal from '@/orangehrmPimPlugin/components/TerminateModal';\nimport {\n  required,\n  maxFileSize,\n  validFileTypes,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n} from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst jobDetailsModel = {\n  joinedDate: '',\n  jobTitleId: [],\n  empStatusId: [],\n  jobCategoryId: [],\n  subunitId: [],\n  locationId: [],\n};\n\nconst contractDetailsModel = {\n  startDate: '',\n  endDate: '',\n  oldAttachment: null,\n  newAttachment: null,\n  method: 'keepCurrent',\n};\n\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n    'oxd-switch-input': OxdSwitchInput,\n    'job-spec-download': JobSpecDownload,\n    'file-upload-input': FileUploadInput,\n    'profile-action-header': ProfileActionHeader,\n    'terminate-modal': TerminateModal,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    locations: {\n      type: Array,\n      default: () => [],\n    },\n    jobTitles: {\n      type: Array,\n      default: () => [],\n    },\n    jobCategories: {\n      type: Array,\n      default: () => [],\n    },\n    subunits: {\n      type: Array,\n      default: () => [],\n    },\n    employmentStatuses: {\n      type: Array,\n      default: () => [],\n    },\n    terminationReasons: {\n      type: Array,\n      default: () => [],\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/job-details`,\n    );\n    const {jsDateFormat, userDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    return {\n      http,\n      locale,\n      jsDateFormat,\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      showContractDetails: false,\n      job: {...jobDetailsModel},\n      contract: {...contractDetailsModel},\n      termination: null,\n      showTerminateModal: false,\n      rules: {\n        joinedDate: [validDateFormat(this.userDateFormat)],\n        startDate: [validDateFormat(this.userDateFormat)],\n        endDate: [\n          validDateFormat(this.userDateFormat),\n          endDateShouldBeAfterStartDate(() => this.contract.startDate),\n        ],\n        contractAttachment: [\n          (v) => {\n            if (this.contract.method == 'replaceCurrent') {\n              return required(v);\n            } else {\n              return true;\n            }\n          },\n          validFileTypes(this.allowedFileTypes),\n          maxFileSize(this.maxFileSize),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    selectedJobTitleId() {\n      const jobTitleId = this.job.jobTitleId?.id;\n      return jobTitleId || 0;\n    },\n    terminationActionLabel() {\n      return this.termination?.id\n        ? this.$t('pim.activate_employment')\n        : this.$t('pim.terminate_employment');\n    },\n    terminationActionType() {\n      return this.termination?.id ? 'ghost-success' : 'label-danger';\n    },\n    hasUpdatePermissions() {\n      return this.$can.update(`job_details`);\n    },\n    normalizedJobTitles() {\n      return this.jobTitles.map((jobTitle) => {\n        return {\n          id: jobTitle.id,\n          label: jobTitle?.deleted\n            ? jobTitle.label + this.$t('general.deleted')\n            : jobTitle.label,\n        };\n      });\n    },\n    terminationDate() {\n      return this.termination?.date\n        ? formatDate(parseDate(this.termination.date), this.jsDateFormat, {\n            locale: this.locale,\n          })\n        : null;\n    },\n    formattedFileSize() {\n      return Math.round((this.maxFileSize / (1024 * 1024)) * 100) / 100;\n    },\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        this.updateJobModel(response);\n      })\n      .then(() => {\n        return this.http.request({\n          method: 'GET',\n          url: `/api/v2/pim/employees/${this.empNumber}/employment-contract`,\n        });\n      })\n      .then((response) => {\n        this.updateContractModel(response);\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            ...this.job,\n            jobTitleId: this.job.jobTitleId?.id,\n            jobCategoryId: this.job.jobCategoryId?.id,\n            subunitId: this.job.subunitId?.id,\n            empStatusId: this.job.empStatusId?.id,\n            locationId: this.job.locationId?.id,\n          },\n        })\n        .then((response) => {\n          this.updateJobModel(response);\n          return this.http.request({\n            method: 'PUT',\n            url: `/api/v2/pim/employees/${this.empNumber}/employment-contract`,\n            data: {\n              startDate: this.contract.startDate,\n              endDate: this.contract.endDate,\n              currentContractAttachment: this.contract.oldAttachment\n                ? this.contract.method\n                : undefined,\n              contractAttachment: this.contract.newAttachment\n                ? this.contract.newAttachment\n                : undefined,\n            },\n          });\n        })\n        .then((response) => {\n          if (response) {\n            this.updateContractModel(response);\n          }\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n\n    onClickTerminate() {\n      if (this.termination?.id) {\n        this.isLoading = true;\n        this.http\n          .request({\n            method: 'DELETE',\n            url: `/api/v2/pim/employees/${this.empNumber}/terminations`,\n          })\n          .then(() => {\n            return this.$toast.updateSuccess();\n          })\n          .then(() => {\n            location.reload();\n          });\n      } else {\n        this.openTerminateModal();\n      }\n    },\n\n    openTerminateModal() {\n      this.showTerminateModal = true;\n    },\n\n    closeTerminateModal(reload) {\n      this.showTerminateModal = false;\n      if (reload) {\n        location.reload();\n      }\n    },\n\n    updateContractModel(response) {\n      const {data} = response.data;\n      this.contract.startDate = data.startDate;\n      this.contract.endDate = data.endDate;\n      this.contract.oldAttachment = data.contractAttachment?.id\n        ? data.contractAttachment\n        : null;\n      this.contract.newAttachment = null;\n      this.contract.method = 'keepCurrent';\n      if (data.startDate || data.endDate || data.contractAttachment?.id) {\n        this.showContractDetails = true;\n      } else {\n        this.showContractDetails = false;\n      }\n    },\n\n    updateJobModel(response) {\n      const {data} = response.data;\n      this.job.joinedDate = data.joinedDate;\n      this.job.jobTitleId = this.normalizedJobTitles.find(\n        (item) => item.id === data.jobTitle?.id,\n      );\n      this.job.jobCategoryId = this.jobCategories.find(\n        (item) => item.id === data.jobCategory?.id,\n      );\n      this.job.subunitId = this.subunits.find(\n        (item) => item.id === data.subunit?.id,\n      );\n      this.job.empStatusId = this.employmentStatuses.find(\n        (item) => item.id === data.empStatus?.id,\n      );\n      this.job.locationId = this.locations.find(\n        (item) => item.id === data.location?.id,\n      );\n      this.termination = data.employeeTerminationRecord;\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}