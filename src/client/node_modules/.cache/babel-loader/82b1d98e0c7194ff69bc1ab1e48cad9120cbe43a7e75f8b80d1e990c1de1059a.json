{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"orangehrm-custom-fields\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return $data.fields.length !== 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.custom_fields')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fields, field => {\n          return _openBlock(), _createBlock(_component_oxd_grid_item, {\n            key: field.id\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $data.customFieldsModel[field.model],\n              \"onUpdate:modelValue\": $event => $data.customFieldsModel[field.model] = $event,\n              type: field.type,\n              label: field.label,\n              options: field.extraData,\n              rules: $data.rules.default,\n              disabled: !_ctx.$can.update(`${$props.screen}_custom_fields`)\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"type\", \"label\", \"options\", \"rules\", \"disabled\"])]),\n            _: 2\n          }, 1024);\n        }), 128))]),\n        _: 1\n      })]),\n      _: 1\n    }), _ctx.$can.update(`${$props.screen}_custom_fields`) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_submit_button)]),\n      _: 1\n    })], 64)) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"mappings":";;;EAoBkCA,KAAK,EAAC;;;EAE/BA,KAAK,EAAC;AAA0B;;;;;;;;;;;SAF5BC,YAAM,CAACC,MAAM,wBAAxBC,oBA8BM,OA9BNC,UA8BM,GA7BJC,aAAeC,yBACfC,oBA2BM,OA3BNC,UA2BM,GA1BJH,aAEaI;IAFHC,GAAG,EAAC,IAAI;IAACV,KAAK,EAAC;;sBAAuB,MAE9C,mCADAW,OAAE;;MAEJN,aAAeC,yBACfD,aAqBWO;IArBAC,OAAO,EAAEZ,eAAS;IAAGa,aAAY,EAAEC;;sBAC5C,MAae,CAbfV,aAaeW;wBAZb,MAWW,CAXXX,aAWWY;QAXAC,IAAI,EAAE,CAAC;QAAElB,KAAK,EAAC;;0BACT,MAAuB,oBAAtCG,oBASgBgB,6BATelB,YAAM,EAAfmB,KAAK;+BAA3BC,aASgBC;YATwBC,GAAG,EAAEH,KAAK,CAACI;;8BACjD,MAOE,CAPFnB,aAOEoB;0BANSxB,uBAAiB,CAACmB,KAAK,CAACM,KAAK;+CAA7BzB,uBAAiB,CAACmB,KAAK,CAACM,KAAK;cACrCC,IAAI,EAAEP,KAAK,CAACO,IAAI;cAChBC,KAAK,EAAER,KAAK,CAACQ,KAAK;cAClBC,OAAO,EAAET,KAAK,CAACU,SAAS;cACxBC,KAAK,EAAE9B,WAAK,CAAC+B,OAAO;cACpBC,QAAQ,GAAGtB,SAAI,CAACuB,MAAM,IAAIC,aAAM;;;;;;;;QAKzBxB,SAAI,CAACuB,MAAM,IAAIC,aAAM,mCAArChC,oBAKWgB;MAAAI;IAAA,IAJTlB,aAAeC,yBACfD,aAEmB+B;wBADjB,MAAiB,CAAjB/B,aAAiBgC","names":["class","$data","length","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_divider","_createElementVNode","_hoisted_2","_component_oxd_text","tag","_ctx","_component_oxd_form","loading","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_Fragment","field","_createBlock","_component_oxd_grid_item","key","id","_component_oxd_input_field","model","type","label","options","extraData","rules","default","disabled","update","$props","_component_oxd_form_actions","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\ProfileCustomFields.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div v-if=\"fields.length !== 0\" class=\"orangehrm-custom-fields\">\n    <oxd-divider />\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n        $t('pim.custom_fields')\n      }}</oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item v-for=\"field in fields\" :key=\"field.id\">\n              <oxd-input-field\n                v-model=\"customFieldsModel[field.model]\"\n                :type=\"field.type\"\n                :label=\"field.label\"\n                :options=\"field.extraData\"\n                :rules=\"rules.default\"\n                :disabled=\"!$can.update(`${screen}_custom_fields`)\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <template v-if=\"$can.update(`${screen}_custom_fields`)\">\n          <oxd-divider />\n          <oxd-form-actions>\n            <submit-button />\n          </oxd-form-actions>\n        </template>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport {shouldNotExceedCharLength} from '@ohrm/core/util/validation/rules';\n\nconst formatExtraData = (data) => {\n  return typeof data === 'string'\n    ? data\n        .split(',')\n        .map((item, i) => {\n          return {id: i, label: item};\n        })\n        .filter((item) => item.label.trim() != '')\n    : [];\n};\n\nexport default {\n  name: 'ProfileCustomFields',\n  props: {\n    employeeId: {\n      type: String,\n      required: true,\n    },\n    screen: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.employeeId}/custom-fields?screen=${props.screen}`,\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      fields: [],\n      customFieldsModel: {},\n      rules: {\n        default: [shouldNotExceedCharLength(250)],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        const {data, meta} = response.data;\n        this.customFieldsModel = {...data};\n        if (meta.fields && meta.fields.length > 0) {\n          this.fields = meta.fields.map((field) => {\n            const extraData = formatExtraData(field.extraData);\n            const model = `custom${field.id}`;\n            if (field.fieldType == 1 && data[model]) {\n              const selected = extraData.find((i) => i.label == data[model]);\n              this.customFieldsModel[model] = selected || null;\n            }\n            return {\n              id: field.id,\n              label: field.fieldName,\n              type: field.fieldType == 1 ? 'select' : 'input',\n              model,\n              extraData,\n            };\n          });\n        }\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: `/api/v2/pim/employees/${this.employeeId}/custom-fields`,\n          data: {...this.customFieldsModel},\n          transformRequest: [\n            (data) => {\n              for (const key in data) {\n                if (data[key]?.label) data[key] = data[key].label;\n              }\n              return JSON.stringify(data);\n            },\n          ],\n        })\n        .then(() => {\n          this.isLoading = false;\n          this.$toast.saveSuccess();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}