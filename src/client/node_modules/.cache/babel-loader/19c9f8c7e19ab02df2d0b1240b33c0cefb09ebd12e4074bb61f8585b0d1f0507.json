{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport { computed } from 'vue';\nimport AddExpenseModal from './AddExpenseModal.vue';\nimport EditExpenseModal from './EditExpenseModal.vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nexport default {\n  name: 'ClaimExpenses',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-expense-modal': AddExpenseModal,\n    'edit-expense-modal': EditExpenseModal\n  },\n  props: {\n    requestId: {\n      type: Number,\n      required: true\n    },\n    currency: {\n      type: Object,\n      required: true\n    },\n    canEdit: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/claim/requests/${props.requestId}/expenses`);\n    const expenseDataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          date: item.date ? formatDate(parseDate(item.date), jsDateFormat, {\n            locale\n          }) : '',\n          amount: item.amount ? item.amount.toFixed(2) : '0.00',\n          note: item.note ? item.note : '',\n          expenseType: item.expenseType ? item.expenseType.name : ''\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: expenseDataNormalizer,\n      toastNoRecords: false\n    });\n    const totalAmount = computed(() => {\n      const meta = response.value?.meta;\n      return meta ? meta.totalAmount.toFixed(2) : 0.0.toFixed(2);\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      totalAmount\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'expenseType',\n        slot: 'title',\n        title: this.$t('claim.expense_type'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'date',\n        title: this.$t('general.date'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'note',\n        title: this.$t('general.note'),\n        cellType: 'oxd-table-cell-truncate',\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'amount',\n        style: {\n          flex: 1\n        },\n        title: this.$t('general.amount')\n      }],\n      checkedItems: [],\n      showAddExpenseModal: false,\n      showEditExpenseModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    tableHeaders() {\n      let computedHeaders = this.headers;\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {}\n      };\n      if (this.canEdit) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        };\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      computedHeaders[3] = {\n        name: 'amount',\n        title: `${this.$t('general.amount')} (${this.currency.name})`,\n        style: {\n          flex: 1\n        }\n      };\n      if (Object.keys(headerActions.cellConfig).length > 0) {\n        computedHeaders.push(headerActions);\n      }\n      return computedHeaders;\n    },\n    formatedAmount() {\n      const amount = Number(this.totalAmount);\n      return amount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n    }\n  },\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showAddExpenseModal = true;\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onCloseAddExpenseModal() {\n      this.showAddExpenseModal = false;\n      this.resetDataTable();\n    },\n    onCloseEditExpenseModal() {\n      this.showEditExpenseModal = false;\n      this.resetDataTable();\n    },\n    onClickEdit(item) {\n      this.showEditExpenseModal = true;\n      this.editModalState = item;\n      this.showAddExpenseModal = false;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","DeleteConfirmationDialog","computed","AddExpenseModal","EditExpenseModal","useLocale","formatDate","parseDate","useDateFormat","name","components","props","requestId","type","Number","required","currency","Object","canEdit","Boolean","setup","locale","jsDateFormat","http","window","appGlobal","baseUrl","expenseDataNormalizer","data","map","item","id","date","amount","toFixed","note","expenseType","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","totalAmount","meta","value","items","headers","slot","title","$t","style","flex","cellType","checkedItems","showAddExpenseModal","showEditExpenseModal","editModalState","tableHeaders","computedHeaders","headerActions","cellConfig","edit","onClick","onClickEdit","delete","onClickDelete","component","keys","length","push","formatedAmount","toLocaleString","minimumFractionDigits","maximumFractionDigits","methods","resetDataTable","onClickAdd","onClickDeleteSelected","ids","forEach","index","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","Array","deleteAll","$toast","deleteSuccess","onCloseAddExpenseModal","onCloseEditExpenseModal"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\ClaimExpenses.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-divider class=\"orangehrm-horizontal-margin\" />\n  <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n    <div class=\"orangehrm-action-header\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('claim.expenses') }}\n      </oxd-text>\n      <oxd-button\n        v-if=\"canEdit\"\n        :label=\"$t('general.add')\"\n        icon-name=\"plus\"\n        display-type=\"text\"\n        @click=\"onClickAdd\"\n      />\n    </div>\n  </div>\n  <table-header\n    :total=\"total\"\n    :loading=\"isLoading\"\n    :selected=\"checkedItems.length\"\n    @delete=\"onClickDeleteSelected\"\n  />\n  <div class=\"orangehrm-container\">\n    <oxd-card-table\n      v-model:selected=\"checkedItems\"\n      :items=\"items.data\"\n      :headers=\"tableHeaders\"\n      :selectable=\"canEdit\"\n      :clickable=\"false\"\n      :loading=\"isLoading\"\n      row-decorator=\"oxd-table-decorator-card\"\n    />\n  </div>\n  <div class=\"orangehrm-bottom-container\">\n    <oxd-text>{{\n      $t('claim.total_amount', {\n        currencyName: currency.name,\n        totalAmount: formatedAmount,\n      })\n    }}</oxd-text>\n  </div>\n  <add-expense-modal\n    v-if=\"showAddExpenseModal\"\n    :request-id=\"requestId\"\n    @close=\"onCloseAddExpenseModal\"\n  ></add-expense-modal>\n  <edit-expense-modal\n    v-if=\"showEditExpenseModal\"\n    :request-id=\"requestId\"\n    :data=\"editModalState\"\n    @close=\"onCloseEditExpenseModal\"\n  ></edit-expense-modal>\n  <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {computed} from 'vue';\nimport AddExpenseModal from './AddExpenseModal.vue';\nimport EditExpenseModal from './EditExpenseModal.vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nexport default {\n  name: 'ClaimExpenses',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-expense-modal': AddExpenseModal,\n    'edit-expense-modal': EditExpenseModal,\n  },\n  props: {\n    requestId: {\n      type: Number,\n      required: true,\n    },\n    currency: {\n      type: Object,\n      required: true,\n    },\n    canEdit: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/expenses`,\n    );\n\n    const expenseDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          date: item.date\n            ? formatDate(parseDate(item.date), jsDateFormat, {locale})\n            : '',\n          amount: item.amount ? item.amount.toFixed(2) : '0.00',\n          note: item.note ? item.note : '',\n          expenseType: item.expenseType ? item.expenseType.name : '',\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: expenseDataNormalizer,\n      toastNoRecords: false,\n    });\n\n    const totalAmount = computed(() => {\n      const meta = response.value?.meta;\n      return meta ? meta.totalAmount.toFixed(2) : (0.0).toFixed(2);\n    });\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      totalAmount,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'expenseType',\n          slot: 'title',\n          title: this.$t('claim.expense_type'),\n          style: {flex: 2},\n        },\n        {\n          name: 'date',\n          title: this.$t('general.date'),\n          style: {flex: 1},\n        },\n        {\n          name: 'note',\n          title: this.$t('general.note'),\n          cellType: 'oxd-table-cell-truncate',\n          style: {flex: 2},\n        },\n        {\n          name: 'amount',\n          style: {flex: 1},\n          title: this.$t('general.amount'),\n        },\n      ],\n      checkedItems: [],\n      showAddExpenseModal: false,\n      showEditExpenseModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    tableHeaders() {\n      let computedHeaders = this.headers;\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.canEdit) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n\n      computedHeaders[3] = {\n        name: 'amount',\n        title: `${this.$t('general.amount')} (${this.currency.name})`,\n        style: {flex: 1},\n      };\n      if (Object.keys(headerActions.cellConfig).length > 0) {\n        computedHeaders.push(headerActions);\n      }\n\n      return computedHeaders;\n    },\n    formatedAmount() {\n      const amount = Number(this.totalAmount);\n      return amount.toLocaleString('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n    },\n  },\n\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showAddExpenseModal = true;\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onCloseAddExpenseModal() {\n      this.showAddExpenseModal = false;\n      this.resetDataTable();\n    },\n    onCloseEditExpenseModal() {\n      this.showEditExpenseModal = false;\n      this.resetDataTable();\n    },\n    onClickEdit(item) {\n      this.showEditExpenseModal = true;\n      this.editModalState = item;\n      this.showAddExpenseModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.oxd-divider {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.orangehrm-attachment {\n  border-bottom-right-radius: 1.2rem;\n  overflow: hidden;\n}\n.orangehrm-action {\n  &-header {\n    display: flex;\n    overflow-wrap: break-word;\n    align-items: center;\n    button {\n      margin-left: 1rem;\n      white-space: nowrap;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}