{"ast":null,"code":"import InlineActionButton from '@/orangehrmAdminPlugin/components/InlineActionButton.vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport SavePayCurrency from '@/orangehrmAdminPlugin/pages/payGrade/SavePayCurrency.vue';\nimport EditPayCurrency from '@/orangehrmAdminPlugin/pages/payGrade/EditPayCurrency.vue';\nimport DeleteConfirmationDialog from '@/core/components/dialogs/DeleteConfirmationDialog';\nconst PayGradeCurrencyNormalizer = data => {\n  return data.map(item => {\n    let maxSalary = item.maxSalary ? Number(item.maxSalary) : 0;\n    let minSalary = item.minSalary ? Number(item.minSalary) : 0;\n    maxSalary = maxSalary.toLocaleString('en-US', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2\n    });\n    minSalary = minSalary.toLocaleString('en-US', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2\n    });\n    return {\n      id: item.currencyType.id,\n      name: item.currencyType.name,\n      maxSalary: maxSalary,\n      minSalary: minSalary\n    };\n  });\n};\nexport default {\n  name: 'PayGradeCurrency',\n  components: {\n    'inline-action-button': InlineActionButton,\n    'save-pay-currency': SavePayCurrency,\n    'edit-pay-currency': EditPayCurrency,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    payGradeId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/pay-grades/${props.payGradeId}/currencies`);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: PayGradeCurrencyNormalizer\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'name',\n        slot: 'title',\n        title: this.$t('general.currency'),\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'minSalary',\n        title: this.$t('admin.minimum_salary'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'maxSalary',\n        title: this.$t('admin.maximum_salary'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    selectable() {\n      return !(this.showSaveModal || this.showEditModal);\n    }\n  },\n  methods: {\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n      this.checkedItems = [];\n    },\n    onClickDelete(item) {\n      if (!this.selectable) return;\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      if (!this.selectable) return;\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n      this.checkedItems = [];\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["InlineActionButton","APIService","usePaginate","SavePayCurrency","EditPayCurrency","DeleteConfirmationDialog","PayGradeCurrencyNormalizer","data","map","item","maxSalary","Number","minSalary","toLocaleString","maximumFractionDigits","minimumFractionDigits","id","currencyType","name","components","props","payGradeId","type","String","required","setup","http","window","appGlobal","baseUrl","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","items","headers","slot","title","$t","style","flex","cellType","cellConfig","delete","onClick","onClickDelete","component","edit","onClickEdit","checkedItems","showSaveModal","showEditModal","editModalState","computed","selectable","methods","onClickAdd","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","onClickDeleteSelected","ids","index","Array","deleteAll","$toast","deleteSuccess","resetDataTable","onSaveModalClose","onEditModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\payGrade\\PayGradeCurrency.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n<template>\n  <save-pay-currency\n    v-if=\"showSaveModal\"\n    :pay-grade-id=\"payGradeId\"\n    @close=\"onSaveModalClose\"\n  ></save-pay-currency>\n  <edit-pay-currency\n    v-if=\"showEditModal\"\n    :data=\"editModalState\"\n    :pay-grade-id=\"payGradeId\"\n    @close=\"onEditModalClose\"\n  ></edit-pay-currency>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <inline-action-button display-type=\"secondary\" @click=\"onClickAdd\">\n          {{ $t('general.currencies') }}\n        </inline-action-button>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"selectable\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n      <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n    </div>\n  </div>\n</template>\n<script>\nimport InlineActionButton from '@/orangehrmAdminPlugin/components/InlineActionButton.vue';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport SavePayCurrency from '@/orangehrmAdminPlugin/pages/payGrade/SavePayCurrency.vue';\nimport EditPayCurrency from '@/orangehrmAdminPlugin/pages/payGrade/EditPayCurrency.vue';\nimport DeleteConfirmationDialog from '@/core/components/dialogs/DeleteConfirmationDialog';\n\nconst PayGradeCurrencyNormalizer = (data) => {\n  return data.map((item) => {\n    let maxSalary = item.maxSalary ? Number(item.maxSalary) : 0;\n    let minSalary = item.minSalary ? Number(item.minSalary) : 0;\n    maxSalary = maxSalary.toLocaleString('en-US', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n    minSalary = minSalary.toLocaleString('en-US', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n\n    return {\n      id: item.currencyType.id,\n      name: item.currencyType.name,\n      maxSalary: maxSalary,\n      minSalary: minSalary,\n    };\n  });\n};\n\nexport default {\n  name: 'PayGradeCurrency',\n  components: {\n    'inline-action-button': InlineActionButton,\n    'save-pay-currency': SavePayCurrency,\n    'edit-pay-currency': EditPayCurrency,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    payGradeId: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/admin/pay-grades/${props.payGradeId}/currencies`,\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: PayGradeCurrencyNormalizer,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'name',\n          slot: 'title',\n          title: this.$t('general.currency'),\n          style: {flex: 2},\n        },\n        {\n          name: 'minSalary',\n          title: this.$t('admin.minimum_salary'),\n          style: {flex: 1},\n        },\n        {\n          name: 'maxSalary',\n          title: this.$t('admin.maximum_salary'),\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    selectable() {\n      return !(this.showSaveModal || this.showEditModal);\n    },\n  },\n\n  methods: {\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n      this.checkedItems = [];\n    },\n    onClickDelete(item) {\n      if (!this.selectable) return;\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onClickDeleteSelected() {\n      if (!this.selectable) return;\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n      this.checkedItems = [];\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}