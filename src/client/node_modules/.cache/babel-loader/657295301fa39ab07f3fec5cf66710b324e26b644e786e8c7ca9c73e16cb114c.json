{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-216eab2c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-action-header\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_add_attachment_modal = _resolveComponent(\"add-attachment-modal\");\n  const _component_edit_attachment_modal = _resolveComponent(\"edit-attachment-modal\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_divider, {\n    class: \"orangehrm-horizontal-margin\"\n  }), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.attachments')), 1)]),\n    _: 1\n  }), $props.canEdit ? (_openBlock(), _createBlock(_component_oxd_button, {\n    key: 0,\n    label: _ctx.$t('general.add'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"text\",\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_table_header, {\n    total: $setup.total,\n    loading: $setup.isLoading,\n    selected: $data.checkedItems.length,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"total\", \"loading\", \"selected\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_card_table, {\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[0] || (_cache[0] = $event => $data.checkedItems = $event),\n    class: \"orangehrm-card-table\",\n    items: $setup.items.data,\n    headers: $options.tableHeaders,\n    selectable: $props.canEdit,\n    clickable: false,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"selected\", \"items\", \"headers\", \"selectable\", \"loading\"])]), $data.showAddAttachmentModal ? (_openBlock(), _createBlock(_component_add_attachment_modal, {\n    key: 0,\n    \"request-id\": $props.requestId,\n    \"allowed-file-types\": $props.allowedFileTypes,\n    \"max-file-size\": $props.maxFileSize,\n    onClose: $options.onCloseAddAttachmentModal\n  }, null, 8, [\"request-id\", \"allowed-file-types\", \"max-file-size\", \"onClose\"])) : _createCommentVNode(\"\", true), $data.showEditAttachmentModal ? (_openBlock(), _createBlock(_component_edit_attachment_modal, {\n    key: 1,\n    \"request-id\": $props.requestId,\n    \"allowed-file-types\": $props.allowedFileTypes,\n    \"max-file-size\": $props.maxFileSize,\n    data: $data.editModalState,\n    onClose: $options.onCloseEditAttachmentModal\n  }, null, 8, [\"request-id\", \"allowed-file-types\", \"max-file-size\", \"data\", \"onClose\"])) : _createCommentVNode(\"\", true), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)], 64);\n}","map":{"version":3,"mappings":";;;EAqBOA,KAAK,EAAC;AAAyD;;EAC7DA,KAAK,EAAC;AAAyB;;EAmBjCA,KAAK,EAAC;AAAqB;;;;;;;;;;6DArBhCC,aAAmDC;IAAtCF,KAAK,EAAC;EAA6B,IAChDG,oBAaM,OAbNC,UAaM,GAZJD,oBAWM,OAXNE,UAWM,GAVJJ,aAEWK;IAFDC,GAAG,EAAC,IAAI;IAACP,KAAK,EAAC;;sBACvB,MAA+B,mCAA5BQ,OAAE;;MAGCC,cAAO,kBADfC,aAMEC;;IAJCC,KAAK,EAAEJ,OAAE;IACV,WAAS,EAAC,MAAM;IAChB,cAAY,EAAC,MAAM;IAClBK,OAAK,EAAEC;0EAIdb,aAKEc;IAJCC,KAAK,EAAEC,YAAK;IACZC,OAAO,EAAED,gBAAS;IAClBE,QAAQ,EAAEC,kBAAY,CAACC,MAAM;IAC7BC,QAAM,EAAER;6DAEXX,oBAWM,OAXNoB,UAWM,GAVJtB,aASEuB;IARQL,QAAQ,EAAEC,kBAAY;6DAAZA,kBAAY;IAC9BpB,KAAK,EAAC,sBAAsB;IAC3ByB,KAAK,EAAER,YAAK,CAACS,IAAI;IACjBC,OAAO,EAAEb,qBAAY;IACrBc,UAAU,EAAEnB,cAAO;IACnBoB,SAAS,EAAE,KAAK;IAChBX,OAAO,EAAED,gBAAS;IACnB,eAAa,EAAC;4EAIVG,4BAAsB,kBAD9BV,aAMwBoB;;IAJrB,YAAU,EAAErB,gBAAS;IACrB,oBAAkB,EAAEA,uBAAgB;IACpC,eAAa,EAAEA,kBAAW;IAC1BsB,OAAK,EAAEjB;kHAGFM,6BAAuB,kBAD/BV,aAOyBsB;;IALtB,YAAU,EAAEvB,gBAAS;IACrB,oBAAkB,EAAEA,uBAAgB;IACpC,eAAa,EAAEA,kBAAW;IAC1BiB,IAAI,EAAEN,oBAAc;IACpBW,OAAK,EAAEjB;0HAEVb,aAA8DgC;IAAzCC,GAAG,EAAC;EAAc","names":["class","_createVNode","_component_oxd_divider","_createElementVNode","_hoisted_1","_hoisted_2","_component_oxd_text","tag","_ctx","$props","_createBlock","_component_oxd_button","label","onClick","$options","_component_table_header","total","$setup","loading","selected","$data","length","onDelete","_hoisted_3","_component_oxd_card_table","items","data","headers","selectable","clickable","_component_add_attachment_modal","onClose","_component_edit_attachment_modal","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmClaimPlugin\\components\\ClaimAttachment.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-divider class=\"orangehrm-horizontal-margin\" />\n  <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n    <div class=\"orangehrm-action-header\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.attachments') }}\n      </oxd-text>\n      <oxd-button\n        v-if=\"canEdit\"\n        :label=\"$t('general.add')\"\n        icon-name=\"plus\"\n        display-type=\"text\"\n        @click=\"onClickAdd\"\n      />\n    </div>\n  </div>\n  <table-header\n    :total=\"total\"\n    :loading=\"isLoading\"\n    :selected=\"checkedItems.length\"\n    @delete=\"onClickDeleteSelected\"\n  />\n  <div class=\"orangehrm-container\">\n    <oxd-card-table\n      v-model:selected=\"checkedItems\"\n      class=\"orangehrm-card-table\"\n      :items=\"items.data\"\n      :headers=\"tableHeaders\"\n      :selectable=\"canEdit\"\n      :clickable=\"false\"\n      :loading=\"isLoading\"\n      row-decorator=\"oxd-table-decorator-card\"\n    />\n  </div>\n  <add-attachment-modal\n    v-if=\"showAddAttachmentModal\"\n    :request-id=\"requestId\"\n    :allowed-file-types=\"allowedFileTypes\"\n    :max-file-size=\"maxFileSize\"\n    @close=\"onCloseAddAttachmentModal\"\n  ></add-attachment-modal>\n  <edit-attachment-modal\n    v-if=\"showEditAttachmentModal\"\n    :request-id=\"requestId\"\n    :allowed-file-types=\"allowedFileTypes\"\n    :max-file-size=\"maxFileSize\"\n    :data=\"editModalState\"\n    @close=\"onCloseEditAttachmentModal\"\n  ></edit-attachment-modal>\n  <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport {convertFilesizeToString} from '@ohrm/core/util/helper/filesize';\nimport AddAttachmentModal from './AddAttachmentModal.vue';\nimport EditAttachmentModal from './EditAttachmentModal.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nexport default {\n  name: 'ClaimAttachment',\n\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'add-attachment-modal': AddAttachmentModal,\n    'edit-attachment-modal': EditAttachmentModal,\n  },\n  props: {\n    requestId: {\n      type: Number,\n      required: true,\n    },\n    canEdit: {\n      type: Boolean,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const {locale} = useLocale();\n    const {jsDateFormat} = useDateFormat();\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/claim/requests/${props.requestId}/attachments`,\n    );\n    const {$tEmpName} = useEmployeeNameTranslate();\n\n    const attachmentDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          attachedDate: item.date\n            ? formatDate(parseDate(item.date), jsDateFormat, {locale})\n            : '',\n          filename: item.attachment.fileName ?? '',\n          size: item.attachment.size\n            ? convertFilesizeToString(item.attachment.size, 2)\n            : '',\n          fileType: item.attachment.fileType ? item.attachment.fileType : '',\n          description: item.attachment.description\n            ? item.attachment.description\n            : '',\n          attachedByName: $tEmpName(item.attachedBy, {\n            excludePastEmpTag: false,\n          }),\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'filename',\n          slot: 'title',\n          cellType: 'oxd-table-cell-truncate',\n          title: this.$t('general.file_name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'description',\n          title: this.$t('general.description'),\n          cellType: 'oxd-table-cell-truncate',\n          style: {flex: 1},\n        },\n        {name: 'size', title: this.$t('general.size'), style: {flex: 1}},\n        {name: 'fileType', title: this.$t('general.type'), style: {flex: 1}},\n        {\n          name: 'attachedDate',\n          title: this.$t('pim.date_added'),\n          style: {flex: 1},\n        },\n        {\n          name: 'attachedByName',\n          title: this.$t('pim.added_by'),\n          style: {flex: 1},\n        },\n      ],\n      checkedItems: [],\n      editModalState: null,\n      showAddAttachmentModal: false,\n      showEditAttachmentModal: false,\n    };\n  },\n\n  computed: {\n    tableHeaders() {\n      let computedHeaders = this.headers;\n      if (computedHeaders.length > 6) {\n        computedHeaders.pop();\n      }\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.canEdit) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n      }\n      headerActions.cellConfig.download = {\n        onClick: this.onClickDownload,\n        props: {\n          name: 'download',\n        },\n      };\n      computedHeaders.push(headerActions);\n\n      return computedHeaders;\n    },\n  },\n\n  methods: {\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showAddAttachmentModal = true;\n      this.showEditAttachmentModal = false;\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach((index) => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    onClickEdit(item) {\n      this.showAddAttachmentModal = false;\n      this.editModalState = item;\n      this.showEditAttachmentModal = true;\n    },\n    onCloseAddAttachmentModal() {\n      this.showAddAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    onCloseEditAttachmentModal() {\n      this.showEditAttachmentModal = false;\n      this.reloadAttachments();\n    },\n    async reloadAttachments() {\n      await this.execQuery();\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/claim/requests/${this.requestId}/attachId/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.oxd-divider {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.orangehrm-attachment {\n  border-bottom-right-radius: 1.2rem;\n  overflow: hidden;\n}\n.orangehrm-action {\n  &-header {\n    display: flex;\n    overflow-wrap: break-word;\n    align-items: center;\n    button {\n      margin-left: 1rem;\n      white-space: nowrap;\n    }\n  }\n}\n.orangehrm-button-margin {\n  margin: 0.25rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}