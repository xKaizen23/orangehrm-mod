{"ast":null,"code":"import useToast from '@/core/util/composable/useToast';\nimport { onBeforeMount, reactive, ref, toRefs } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport PostComment from '@/orangehrmBuzzPlugin/components/PostComment';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nexport default {\n  name: 'PostCommentContainer',\n  components: {\n    'post-comment': PostComment,\n    'profile-image': ProfileImage,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  directives: {\n    ...useAutoFocus()\n  },\n  props: {\n    postId: {\n      type: Number,\n      required: true\n    },\n    employee: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['create', 'delete'],\n  setup(props, context) {\n    const deleteDialog = ref();\n    const state = reactive({\n      text: null,\n      total: 0,\n      comments: [],\n      showAllComments: false\n    });\n    const {\n      saveSuccess,\n      updateSuccess,\n      deleteSuccess\n    } = useToast();\n    const {\n      fetchPostComments,\n      savePostComment,\n      deletePostComment\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const loadComments = () => {\n      fetchPostComments(props.postId, state.showAllComments ? 0 : 4, true).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        state.total = meta.total;\n        state.comments = [...data];\n      });\n    };\n    const onSubmit = () => {\n      if (!state.text) return;\n      savePostComment(props.postId, state.text).then(() => {\n        state.text = null;\n        loadComments();\n        saveSuccess();\n        context.emit('create');\n      });\n    };\n    const onClickShowMore = () => {\n      state.showAllComments = !state.showAllComments;\n      loadComments();\n    };\n    const onEditComment = () => {\n      loadComments();\n      updateSuccess();\n    };\n    const onDeleteComment = commentId => {\n      deleteDialog.value.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          deletePostComment(props.postId, commentId).then(() => {\n            loadComments();\n            deleteSuccess();\n            context.emit('delete');\n          });\n        }\n      });\n    };\n    const onLikeComment = () => {\n      loadComments();\n    };\n    onBeforeMount(() => loadComments());\n    return {\n      onSubmit,\n      deleteDialog,\n      onLikeComment,\n      onEditComment,\n      onClickShowMore,\n      onDeleteComment,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["useToast","onBeforeMount","reactive","ref","toRefs","APIService","useAutoFocus","PostComment","ProfileImage","useBuzzAPIs","DeleteConfirmationDialog","name","components","directives","props","postId","type","Number","required","employee","Object","emits","setup","context","deleteDialog","state","text","total","comments","showAllComments","saveSuccess","updateSuccess","deleteSuccess","fetchPostComments","savePostComment","deletePostComment","window","appGlobal","baseUrl","loadComments","then","response","data","meta","onSubmit","emit","onClickShowMore","onEditComment","onDeleteComment","commentId","value","showDialog","confirmation","onLikeComment"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\PostCommentContainer.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-buzz-comment\">\n    <div class=\"orangehrm-buzz-comment-add\">\n      <profile-image :employee=\"employee\"></profile-image>\n      <oxd-form @submit-valid=\"onSubmit\">\n        <oxd-input-field\n          v-model=\"text\"\n          v-autofocus\n          :placeholder=\"$t('buzz.write_your_comment')\"\n        />\n      </oxd-form>\n    </div>\n    <br v-if=\"total > 0\" />\n    <post-comment\n      v-for=\"comment in comments\"\n      :key=\"comment\"\n      :data=\"comment\"\n      :post-id=\"postId\"\n      @edit=\"onEditComment\"\n      @like=\"onLikeComment\"\n      @delete=\"onDeleteComment\"\n    ></post-comment>\n    <oxd-text\n      v-if=\"total > 4\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-comment-readmore\"\n      @click=\"onClickShowMore\"\n    >\n      {{ showAllComments ? $t('general.show_less') : $t('general.show_more') }}\n    </oxd-text>\n    <delete-confirmation\n      ref=\"deleteDialog\"\n      :message=\"$t('buzz.post_delete_confirmation_message')\"\n    ></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport useToast from '@/core/util/composable/useToast';\nimport {onBeforeMount, reactive, ref, toRefs} from 'vue';\nimport {APIService} from '@/core/util/services/api.service';\nimport useAutoFocus from '@/core/util/composable/useAutoFocus';\nimport PostComment from '@/orangehrmBuzzPlugin/components/PostComment';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\n\nexport default {\n  name: 'PostCommentContainer',\n\n  components: {\n    'post-comment': PostComment,\n    'profile-image': ProfileImage,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n\n  directives: {...useAutoFocus()},\n\n  props: {\n    postId: {\n      type: Number,\n      required: true,\n    },\n    employee: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['create', 'delete'],\n\n  setup(props, context) {\n    const deleteDialog = ref();\n    const state = reactive({\n      text: null,\n      total: 0,\n      comments: [],\n      showAllComments: false,\n    });\n    const {saveSuccess, updateSuccess, deleteSuccess} = useToast();\n    const {fetchPostComments, savePostComment, deletePostComment} = useBuzzAPIs(\n      new APIService(window.appGlobal.baseUrl, ''),\n    );\n\n    const loadComments = () => {\n      fetchPostComments(props.postId, state.showAllComments ? 0 : 4, true).then(\n        (response) => {\n          const {data, meta} = response.data;\n          state.total = meta.total;\n          state.comments = [...data];\n        },\n      );\n    };\n\n    const onSubmit = () => {\n      if (!state.text) return;\n      savePostComment(props.postId, state.text).then(() => {\n        state.text = null;\n        loadComments();\n        saveSuccess();\n        context.emit('create');\n      });\n    };\n\n    const onClickShowMore = () => {\n      state.showAllComments = !state.showAllComments;\n      loadComments();\n    };\n\n    const onEditComment = () => {\n      loadComments();\n      updateSuccess();\n    };\n\n    const onDeleteComment = (commentId) => {\n      deleteDialog.value.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          deletePostComment(props.postId, commentId).then(() => {\n            loadComments();\n            deleteSuccess();\n            context.emit('delete');\n          });\n        }\n      });\n    };\n\n    const onLikeComment = () => {\n      loadComments();\n    };\n\n    onBeforeMount(() => loadComments());\n\n    return {\n      onSubmit,\n      deleteDialog,\n      onLikeComment,\n      onEditComment,\n      onClickShowMore,\n      onDeleteComment,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-comment {\n  &-add {\n    gap: 10px;\n    display: flex;\n    form {\n      width: 100%;\n    }\n  }\n  &-readmore {\n    margin: 0 auto;\n    cursor: pointer;\n    font-size: 0.9rem;\n    text-align: center;\n    color: $oxd-primary-one-color;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n  ::v-deep(.oxd-input-group__label-wrapper) {\n    display: none;\n  }\n  ::v-deep(.oxd-input-field-bottom-space) {\n    margin-bottom: unset;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}