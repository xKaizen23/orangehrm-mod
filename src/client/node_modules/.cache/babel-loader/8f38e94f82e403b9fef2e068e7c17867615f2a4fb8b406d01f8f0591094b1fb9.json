{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-849d62a0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-forgot-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-forgot-password-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  class: \"orangehrm-forgot-password-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_card_note = _resolveComponent(\"card-note\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_password_strength_indicator = _resolveComponent(\"password-strength-indicator\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_form, {\n    ref: \"resetForm\",\n    method: \"post\",\n    action: $options.submitUrl,\n    onSubmitValid: $options.onSubmit\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_text, {\n      tag: \"h6\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('auth.reset_password')), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_card_note, {\n      \"note-text\": _ctx.$t('auth.set_new_password'),\n      class: \"orangehrm-forgot-password-card-note\"\n    }, null, 8, [\"note-text\"]), _createElementVNode(\"input\", {\n      name: \"_token\",\n      value: $props.token,\n      type: \"hidden\"\n    }, null, 8, _hoisted_4), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        value: $props.username,\n        label: _ctx.$t('auth.username'),\n        readonly: \"\",\n        name: \"username\",\n        \"label-icon\": \"person\"\n      }, null, 8, [\"value\", \"label\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, {\n      class: \"orangehrm-forgot-password-row\"\n    }, {\n      default: _withCtx(() => [$data.user.newPassword ? (_openBlock(), _createBlock(_component_password_strength_indicator, {\n        key: 0,\n        \"password-strength\": $setup.passwordStrength\n      }, null, 8, [\"password-strength\"])) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.newPassword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.newPassword = $event),\n        rules: $data.rules.newPassword,\n        label: _ctx.$t('auth.new_password'),\n        placeholder: _ctx.$t('auth.password'),\n        name: \"password\",\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\"\n      }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.confirmPassword,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.confirmPassword = $event),\n        rules: $data.rules.confirmPassword,\n        placeholder: _ctx.$t('auth.password'),\n        label: _ctx.$t('general.confirm_password'),\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\",\n        name: \"confirmPassword\"\n      }, null, 8, [\"modelValue\", \"rules\", \"placeholder\", \"label\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_button, {\n      label: _ctx.$t('general.save'),\n      size: \"large\",\n      type: \"submit\",\n      \"display-type\": \"secondary\",\n      class: \"orangehrm-forgot-password-button\"\n    }, null, 8, [\"label\"])])]),\n    _: 1\n  }, 8, [\"action\", \"onSubmitValid\"])])]), _renderSlot(_ctx.$slots, \"footer\", {}, undefined, true)]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAqC;;EACzCA,KAAK,EAAC;AAAmC;;EACvCA,KAAK,EAAC;AAA0B;;;EAsD5BA,KAAK,EAAC;AAAmC;;;;;;;;;;uBAxDtDC,oBAqEM,OArENC,UAqEM,GApEJC,oBAkEM,OAlENC,UAkEM,GAjEJD,oBAgEM,OAhENE,UAgEM,GA/DJC,aA8DWC;IA7DTC,GAAG,EAAC,WAAW;IACfC,MAAM,EAAC,MAAM;IACZC,MAAM,EAAEC,kBAAS;IACjBC,aAAY,EAAED;;sBAEf,MAEW,CAFXL,aAEWO;MAFDC,GAAG,EAAC;IAAI;wBAChB,MAA+B,mCAA5BC,OAAE;;QAEPT,aAAeU,yBACfV,aAGEW;MAFC,WAAS,EAAEF,OAAE;MACdf,KAAK,EAAC;gCAERG,oBAAoD;MAA7Ce,IAAI,EAAC,QAAQ;MAAEC,KAAK,EAAEC,YAAK;MAAEC,IAAI,EAAC;6BACzCf,aAQegB;wBAPb,MAME,CANFhB,aAMEiB;QALCJ,KAAK,EAAEC,eAAQ;QACfI,KAAK,EAAET,OAAE;QACVU,QAAQ,EAAR,EAAQ;QACRP,IAAI,EAAC,UAAU;QACf,YAAU,EAAC;;;QAGfZ,aAeegB;MAfDtB,KAAK,EAAC;IAA+B;wBACjD,MAG+B,CAFvB0B,UAAI,CAACC,WAAW,kBADxBC,aAG+BC;;QAD5B,mBAAiB,EAAEC;2EAEtBxB,aASEiB;oBARSG,UAAI,CAACC,WAAW;mEAAhBD,UAAI,CAACC,WAAW;QACxBI,KAAK,EAAEL,WAAK,CAACC,WAAW;QACxBH,KAAK,EAAET,OAAE;QACTiB,WAAW,EAAEjB,OAAE;QAChBG,IAAI,EAAC,UAAU;QACfG,IAAI,EAAC,UAAU;QACf,YAAU,EAAC,KAAK;QAChBY,YAAY,EAAC;;;QAGjB3B,aAWegB;wBAVb,MASE,CATFhB,aASEiB;oBARSG,UAAI,CAACQ,eAAe;mEAApBR,UAAI,CAACQ,eAAe;QAC5BH,KAAK,EAAEL,WAAK,CAACQ,eAAe;QAC5BF,WAAW,EAAEjB,OAAE;QACfS,KAAK,EAAET,OAAE;QACVM,IAAI,EAAC,UAAU;QACf,YAAU,EAAC,KAAK;QAChBY,YAAY,EAAC,KAAK;QAClBf,IAAI,EAAC;;;QAGTZ,aAAeU,yBACfb,oBAQM,OARNgC,UAQM,GAPJ7B,aAME8B;MALCZ,KAAK,EAAET,OAAE;MACVsB,IAAI,EAAC,OAAO;MACZhB,IAAI,EAAC,QAAQ;MACb,cAAY,EAAC,WAAW;MACxBrB,KAAK,EAAC;;;0CAMhBsC,YAA2BvB","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_form","ref","method","action","$options","onSubmitValid","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_card_note","name","value","$props","type","_component_oxd_form_row","_component_oxd_input_field","label","readonly","$data","newPassword","_createBlock","_component_password_strength_indicator","$setup","rules","placeholder","autocomplete","confirmPassword","_hoisted_5","_component_oxd_button","size","_renderSlot"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAuthenticationPlugin\\pages\\ResetPassword.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-forgot-password-container\">\n    <div class=\"orangehrm-forgot-password-wrapper\">\n      <div class=\"orangehrm-card-container\">\n        <oxd-form\n          ref=\"resetForm\"\n          method=\"post\"\n          :action=\"submitUrl\"\n          @submit-valid=\"onSubmit\"\n        >\n          <oxd-text tag=\"h6\">\n            {{ $t('auth.reset_password') }}\n          </oxd-text>\n          <oxd-divider />\n          <card-note\n            :note-text=\"$t('auth.set_new_password')\"\n            class=\"orangehrm-forgot-password-card-note\"\n          />\n          <input name=\"_token\" :value=\"token\" type=\"hidden\" />\n          <oxd-form-row>\n            <oxd-input-field\n              :value=\"username\"\n              :label=\"$t('auth.username')\"\n              readonly\n              name=\"username\"\n              label-icon=\"person\"\n            />\n          </oxd-form-row>\n          <oxd-form-row class=\"orangehrm-forgot-password-row\">\n            <password-strength-indicator\n              v-if=\"user.newPassword\"\n              :password-strength=\"passwordStrength\"\n            ></password-strength-indicator>\n            <oxd-input-field\n              v-model=\"user.newPassword\"\n              :rules=\"rules.newPassword\"\n              :label=\"$t('auth.new_password')\"\n              :placeholder=\"$t('auth.password')\"\n              name=\"password\"\n              type=\"password\"\n              label-icon=\"key\"\n              autocomplete=\"off\"\n            />\n          </oxd-form-row>\n          <oxd-form-row>\n            <oxd-input-field\n              v-model=\"user.confirmPassword\"\n              :rules=\"rules.confirmPassword\"\n              :placeholder=\"$t('auth.password')\"\n              :label=\"$t('general.confirm_password')\"\n              type=\"password\"\n              label-icon=\"key\"\n              autocomplete=\"off\"\n              name=\"confirmPassword\"\n            />\n          </oxd-form-row>\n          <oxd-divider />\n          <div class=\"orangehrm-forgot-password-buttons\">\n            <oxd-button\n              :label=\"$t('general.save')\"\n              size=\"large\"\n              type=\"submit\"\n              display-type=\"secondary\"\n              class=\"orangehrm-forgot-password-button\"\n            />\n          </div>\n        </oxd-form>\n      </div>\n    </div>\n    <slot name=\"footer\"></slot>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport CardNote from '../components/CardNote';\nimport {urlFor} from '@/core/util/helper/url';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePasswordPolicy from '@/core/util/composable/usePasswordPolicy';\nimport PasswordStrengthIndicator from '@/core/components/labels/PasswordStrengthIndicator';\n\nexport default {\n  name: 'ResetPassword',\n\n  components: {\n    'card-note': CardNote,\n    'password-strength-indicator': PasswordStrengthIndicator,\n  },\n\n  props: {\n    username: {\n      type: String,\n      required: true,\n    },\n    token: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    const {passwordStrength, validatePassword} = usePasswordPolicy(http);\n\n    return {\n      http,\n      passwordStrength,\n      validatePassword,\n    };\n  },\n\n  data() {\n    return {\n      user: {\n        username: '',\n        newPassword: '',\n        confirmPassword: '',\n      },\n      rules: {\n        newPassword: [\n          required,\n          shouldNotExceedCharLength(64),\n          promiseDebounce(this.validatePassword, 500),\n        ],\n        confirmPassword: [\n          required,\n          shouldNotExceedCharLength(64),\n          (v) =>\n            (!!v && v === this.user.newPassword) ||\n            this.$t('general.passwords_do_not_match'),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    submitUrl() {\n      return urlFor('/auth/resetPassword');\n    },\n  },\n\n  methods: {\n    onSubmit() {\n      this.$refs.resetForm.$el.submit();\n    },\n  },\n};\n</script>\n\n<style src=\"./reset-password.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}