{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { convertFilesizeToString } from '@ohrm/core/util/helper/filesize';\nimport SaveAttachment from '@/orangehrmPimPlugin/components/SaveAttachment';\nimport EditAttachment from '@/orangehrmPimPlugin/components/EditAttachment';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { parseDate, formatDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'ProfileAttachments',\n  components: {\n    'save-attachment': SaveAttachment,\n    'edit-attachment': EditAttachment,\n    'profile-action-header': ProfileActionHeader,\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  props: {\n    employeeId: {\n      type: String,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    screen: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.employeeId}/screen/${props.screen}/attachments`);\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const attachmentDataNormalizer = data => {\n      return data.map(item => {\n        return {\n          ...item,\n          attachedDate: formatDate(parseDate(item.attachedDate), jsDateFormat, {\n            locale\n          }),\n          size: convertFilesizeToString(item.size, 2)\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'filename',\n        slot: 'title',\n        title: this.$t('general.file_name'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'description',\n        title: this.$t('general.description'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'size',\n        title: this.$t('general.size'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'fileType',\n        title: this.$t('general.type'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'attachedDate',\n        title: this.$t('pim.date_added'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'attachedByName',\n        title: this.$t('pim.added_by'),\n        style: {\n          flex: 1\n        }\n      }],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null\n    };\n  },\n  computed: {\n    tableHeaders() {\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {}\n      };\n      if (this.$can.update(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill'\n          }\n        };\n      }\n      if (this.$can.delete(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      if (this.$can.read(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.download = {\n          onClick: this.onClickDownload,\n          props: {\n            name: 'download'\n          }\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0 ? this.headers.concat([headerActions]) : this.headers;\n    }\n  },\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map(index => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/pim/viewAttachment/empNumber/${this.employeeId}/attachId/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","convertFilesizeToString","SaveAttachment","EditAttachment","ProfileActionHeader","DeleteConfirmationDialog","useDateFormat","parseDate","formatDate","useLocale","name","components","props","employeeId","type","String","required","allowedFileTypes","Array","maxFileSize","Number","screen","setup","http","window","appGlobal","baseUrl","jsDateFormat","locale","attachmentDataNormalizer","data","map","item","attachedDate","size","showPaginator","currentPage","total","pages","pageSize","response","isLoading","execQuery","normalizer","toastNoRecords","items","headers","slot","title","$t","style","flex","checkedItems","showSaveModal","showEditModal","editModalState","computed","tableHeaders","headerActions","cellType","cellConfig","$can","update","edit","onClick","onClickEdit","delete","onClickDelete","component","read","download","onClickDownload","Object","keys","length","concat","methods","onClickDeleteSelected","ids","index","id","$refs","deleteDialog","showDialog","then","confirmation","deleteItems","deleteAll","$toast","deleteSuccess","resetDataTable","onClickAdd","downUrl","open","onSaveModalClose","onEditModalClose"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\ProfileAttachments.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-attachment\">\n    <oxd-divider />\n    <save-attachment\n      v-if=\"showSaveModal\"\n      :http=\"http\"\n      :allowed-file-types=\"allowedFileTypes\"\n      :max-file-size=\"maxFileSize\"\n      @close=\"onSaveModalClose\"\n    ></save-attachment>\n    <edit-attachment\n      v-else-if=\"showEditModal\"\n      :data=\"editModalState\"\n      :http=\"http\"\n      :allowed-file-types=\"allowedFileTypes\"\n      :max-file-size=\"maxFileSize\"\n      @close=\"onEditModalClose\"\n    ></edit-attachment>\n    <template v-else>\n      <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n        <profile-action-header\n          :action-button-shown=\"$can.create(`${screen}_attachment`)\"\n          @click=\"onClickAdd\"\n        >\n          {{ $t('general.attachments') }}\n        </profile-action-header>\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :headers=\"tableHeaders\"\n          :items=\"items?.data\"\n          :selectable=\"$can.delete(`${screen}_attachment`)\"\n          :clickable=\"false\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div v-if=\"showPaginator\" class=\"orangehrm-bottom-container\">\n        <oxd-pagination v-model:current=\"currentPage\" :length=\"pages\" />\n      </div>\n    </template>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {convertFilesizeToString} from '@ohrm/core/util/helper/filesize';\nimport SaveAttachment from '@/orangehrmPimPlugin/components/SaveAttachment';\nimport EditAttachment from '@/orangehrmPimPlugin/components/EditAttachment';\nimport ProfileActionHeader from '@/orangehrmPimPlugin/components/ProfileActionHeader';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {parseDate, formatDate} from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\n\nexport default {\n  name: 'ProfileAttachments',\n  components: {\n    'save-attachment': SaveAttachment,\n    'edit-attachment': EditAttachment,\n    'profile-action-header': ProfileActionHeader,\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    employeeId: {\n      type: String,\n      required: true,\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true,\n    },\n    maxFileSize: {\n      type: Number,\n      required: true,\n    },\n    screen: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.employeeId}/screen/${props.screen}/attachments`,\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const attachmentDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          ...item,\n          attachedDate: formatDate(parseDate(item.attachedDate), jsDateFormat, {\n            locale,\n          }),\n          size: convertFilesizeToString(item.size, 2),\n        };\n      });\n    };\n\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      normalizer: attachmentDataNormalizer,\n      toastNoRecords: false,\n    });\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n  data() {\n    return {\n      headers: [\n        {\n          name: 'filename',\n          slot: 'title',\n          title: this.$t('general.file_name'),\n          style: {flex: 1},\n        },\n        {\n          name: 'description',\n          title: this.$t('general.description'),\n          style: {flex: 1},\n        },\n        {name: 'size', title: this.$t('general.size'), style: {flex: 1}},\n        {name: 'fileType', title: this.$t('general.type'), style: {flex: 1}},\n        {\n          name: 'attachedDate',\n          title: this.$t('pim.date_added'),\n          style: {flex: 1},\n        },\n        {\n          name: 'attachedByName',\n          title: this.$t('pim.added_by'),\n          style: {flex: 1},\n        },\n      ],\n      checkedItems: [],\n      showSaveModal: false,\n      showEditModal: false,\n      editModalState: null,\n    };\n  },\n\n  computed: {\n    tableHeaders() {\n      const headerActions = {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {flex: 1},\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {},\n      };\n      if (this.$can.update(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.edit = {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        };\n      }\n      if (this.$can.delete(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n      if (this.$can.read(`${this.screen}_attachment`)) {\n        headerActions.cellConfig.download = {\n          onClick: this.onClickDownload,\n          props: {\n            name: 'download',\n          },\n        };\n      }\n      return Object.keys(headerActions.cellConfig).length > 0\n        ? this.headers.concat([headerActions])\n        : this.headers;\n    },\n  },\n\n  methods: {\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    onClickAdd() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.showSaveModal = true;\n    },\n    onClickEdit(item) {\n      this.showSaveModal = false;\n      this.editModalState = item;\n      this.showEditModal = true;\n    },\n    onClickDownload(item) {\n      const downUrl = `${window.appGlobal.baseUrl}/pim/viewAttachment/empNumber/${this.employeeId}/attachId/${item.id}`;\n      window.open(downUrl, '_blank');\n    },\n    onSaveModalClose() {\n      this.showSaveModal = false;\n      this.resetDataTable();\n    },\n    onEditModalClose() {\n      this.showEditModal = false;\n      this.editModalState = null;\n      this.resetDataTable();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.oxd-divider {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.orangehrm-attachment {\n  border-bottom-right-radius: 1.2rem;\n  overflow: hidden;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}