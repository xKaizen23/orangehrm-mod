{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-15a86f04\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-custom-field-title\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_6 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.custom_fields')), 1)]),\n    _: 1\n  }), !$setup.isLoading ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$options.remainingFields > 0 ? (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 0,\n    class: \"--infotext\",\n    tag: \"p\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.remaining_no_of_custom_fields')) + \" \" + _toDisplayString($options.remainingFields), 1)]),\n    _: 1\n  })) : (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    class: \"--infotext\",\n    tag: \"p\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('pim.all_custom_fields_in_use')), 1)]),\n    _: 1\n  }))], 64)) : _createCommentVNode(\"\", true)]), $options.remainingFields > 0 ? (_openBlock(), _createBlock(_component_oxd_button, {\n    key: 0,\n    label: _ctx.$t('general.add'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])) : _createCommentVNode(\"\", true)]), _createVNode(_component_table_header, {\n    selected: $data.checkedItems.length,\n    total: $setup.total,\n    loading: $setup.isLoading,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"selected\", \"total\", \"loading\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_card_table, {\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[0] || (_cache[0] = $event => $data.checkedItems = $event),\n    loading: $setup.isLoading,\n    headers: $data.headers,\n    items: $setup.items?.data,\n    selectable: true,\n    clickable: false,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"selected\", \"loading\", \"headers\", \"items\"])]), _createElementVNode(\"div\", _hoisted_6, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[1] || (_cache[1] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA8B;;EA4BtCA,KAAK,EAAC;AAAqB;;EAW3BA,KAAK,EAAC;AAA4B;;;;;;;;uBA1C3CC,oBAoDM,OApDNC,UAoDM,GAnDJC,oBAgDM,OAhDNC,UAgDM,GA/CJD,oBAsBM,OAtBNE,UAsBM,GArBJF,oBAaM,OAbNG,UAaM,GAZJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACT,KAAK,EAAC;;sBACvB,MAA6B,mCAA1BU,OAAE;;OAEUC,gBAAS,kBAA1BV,oBAQWW;IAAAC;EAAA,IAPOC,wBAAe,sBAA/BC,aAGWP;;IAH0BR,KAAK,EAAC,YAAY;IAACS,GAAG,EAAC;;sBAC1D,MAA6C,mCAA1CC,OAAE,yCAAwC,GAC7C,oBAAGI,wBAAe;;uBAEpBC,aAEWP;;IAFMR,KAAK,EAAC,YAAY;IAACS,GAAG,EAAC;;sBACtC,MAAwC,mCAArCC,OAAE;;gDAKHI,wBAAe,sBADvBC,aAMEC;;IAJCC,KAAK,EAAEP,OAAE;IACV,WAAS,EAAC,MAAM;IAChB,cAAY,EAAC,WAAW;IACvBQ,OAAK,EAAEJ;wEAGZP,aAKgBY;IAJbC,QAAQ,EAAEC,kBAAY,CAACC,MAAM;IAC7BC,KAAK,EAAEZ,YAAK;IACZa,OAAO,EAAEb,gBAAS;IAClBc,QAAM,EAAEX;6DAEXX,oBAUM,OAVNuB,UAUM,GATJnB,aAQEoB;IAPQP,QAAQ,EAAEC,kBAAY;6DAAZA,kBAAY;IAC7BG,OAAO,EAAEb,gBAAS;IAClBiB,OAAO,EAAEP,aAAO;IAChBQ,KAAK,EAAElB,YAAK,EAAEmB,IAAI;IAClBC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE,KAAK;IACjB,eAAa,EAAC;8DAGlB7B,oBAMM,OANN8B,UAMM,GAJItB,oBAAa,kBADrBI,aAIEmB;;IAFQC,OAAO,EAAExB,kBAAW;4DAAXA,kBAAW;IAC3BW,MAAM,EAAEX;2EAKfJ,aAA8D6B;IAAzCC,GAAG,EAAC;EAAc","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_oxd_text","tag","_ctx","$setup","_Fragment","key","$options","_createBlock","_component_oxd_button","label","onClick","_component_table_header","selected","$data","length","total","loading","onDelete","_hoisted_5","_component_oxd_card_table","headers","items","data","selectable","clickable","_hoisted_6","_component_oxd_pagination","current","_component_delete_confirmation","ref"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\customField\\CustomField.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <div class=\"orangehrm-custom-field-title\">\n          <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n            {{ $t('pim.custom_fields') }}\n          </oxd-text>\n          <template v-if=\"!isLoading\">\n            <oxd-text v-if=\"remainingFields > 0\" class=\"--infotext\" tag=\"p\">\n              {{ $t('pim.remaining_no_of_custom_fields') }}\n              {{ remainingFields }}\n            </oxd-text>\n            <oxd-text v-else class=\"--infotext\" tag=\"p\">\n              {{ $t('pim.all_custom_fields_in_use') }}\n            </oxd-text>\n          </template>\n        </div>\n        <oxd-button\n          v-if=\"remainingFields > 0\"\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:selected=\"checkedItems\"\n          :loading=\"isLoading\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"true\"\n          :clickable=\"false\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n  },\n  props: {\n    customFieldLimit: {\n      type: Number,\n      required: true,\n    },\n    screenList: {\n      type: Array,\n      required: true,\n    },\n    fieldTypeList: {\n      type: Array,\n      required: true,\n    },\n    unselectableIds: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/custom-fields',\n    );\n    const dataNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableIds.findIndex(\n          (id) => id == item.id,\n        );\n        return {\n          id: item.id,\n          fieldName: item.fieldName,\n          screen: props.screenList.filter((screen) => {\n            return item.screen === screen.id;\n          })[0].label,\n          fieldType: props.fieldTypeList.filter((fieldType) => {\n            return item.fieldType === fieldType.id;\n          })[0].label,\n          extraData: item.extraData,\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {normalizer: dataNormalizer});\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total: total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n    };\n  },\n\n  data() {\n    return {\n      screenWidth: screen.width,\n      headers: [\n        {\n          name: 'fieldName',\n          slot: 'title',\n          title: this.$t('pim.custom_field_name'),\n          style: {flex: 2},\n        },\n        {name: 'screen', title: this.$t('pim.screen'), style: {flex: 2}},\n        {name: 'fieldType', title: this.$t('pim.field_type'), style: {flex: 2}},\n        {\n          name: 'actions',\n          title: this.$t('general.actions'),\n          slot: 'action',\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellConfig: {\n            delete: {\n              onClick: this.onClickDelete,\n              component: 'oxd-icon-button',\n              props: {\n                name: 'trash',\n              },\n            },\n            edit: {\n              onClick: this.onClickEdit,\n              props: {\n                name: 'pencil-fill',\n              },\n            },\n          },\n        },\n      ],\n      checkedItems: [],\n    };\n  },\n\n  computed: {\n    isLoaded() {\n      return !this.isLoading;\n    },\n    remainingFields() {\n      return this.customFieldLimit - this.items?.data?.length;\n    },\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/pim/saveCustomFields');\n    },\n    onClickEdit(item) {\n      navigate('/pim/saveCustomFields/{id}', {id: item.id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      const isSelectable = this.unselectableIds.findIndex(\n        (id) => id == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.error({\n          title: this.$t('general.error'),\n          message: this.$t('pim.custom_fields_in_use'),\n        });\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n  },\n};\n</script>\n\n<style src=\"./customField.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}