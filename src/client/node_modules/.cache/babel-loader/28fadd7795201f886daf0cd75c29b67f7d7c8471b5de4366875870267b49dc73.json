{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nconst customFieldModel = {\n  id: null,\n  fieldName: '',\n  screen: '',\n  fieldType: '',\n  extraData: ''\n};\nexport default {\n  props: {\n    customFieldId: {\n      type: Number,\n      required: true\n    },\n    screenList: {\n      type: Array,\n      required: true\n    },\n    fieldTypeList: {\n      type: Array,\n      required: true\n    },\n    fieldInUse: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/custom-fields');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      customField: {\n        ...customFieldModel\n      },\n      rules: {\n        fieldName: [required, shouldNotExceedCharLength(250)],\n        screen: [required, shouldNotExceedCharLength(100)],\n        fieldType: [required, shouldNotExceedCharLength(15)],\n        extraData: [required, shouldNotExceedCharLength(250)]\n      }\n    };\n  },\n  computed: {\n    isDropDownField() {\n      return this.customField.fieldType?.id === 1;\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.customFieldId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.customField.fieldName = data.fieldName;\n      if (data.screen !== '' && data.screen !== null) {\n        this.customField.screen = this.screenList.find(c => {\n          return c.id === data.screen;\n        });\n      }\n      if (data.fieldType !== '' && data.fieldType !== null) {\n        this.customField.fieldType = this.fieldTypeList.find(c => {\n          return c.id === data.fieldType;\n        });\n      }\n      this.customField.extraData = data.extraData;\n\n      // Fetch list data for unique test\n      return this.http.getAll();\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.fieldName.push(v => {\n        const index = data.findIndex(item => item.fieldName === v);\n        if (index > -1) {\n          const id = data[index].id;\n          return id != this.customFieldId ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.customFieldId, {\n        fieldName: this.customField.fieldName,\n        screen: this.customField.screen.id,\n        fieldType: this.customField.fieldType.id,\n        extraData: this.customField.extraData\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/pim/listCustomFields');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["navigate","APIService","required","shouldNotExceedCharLength","customFieldModel","id","fieldName","screen","fieldType","extraData","props","customFieldId","type","Number","screenList","Array","fieldTypeList","fieldInUse","Boolean","setup","http","window","appGlobal","baseUrl","data","isLoading","customField","rules","computed","isDropDownField","created","get","then","response","find","c","getAll","push","v","index","findIndex","item","$t","finally","methods","onSave","update","$toast","updateSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\customField\\EditCustomField.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('pim.edit_custom_field') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <oxd-input-field\n                v-model=\"customField.fieldName\"\n                :label=\"$t('pim.field_name')\"\n                :rules=\"rules.fieldName\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"customField.screen\"\n                type=\"select\"\n                :label=\"$t('pim.screen')\"\n                :rules=\"rules.screen\"\n                :options=\"screenList\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item class=\"organization-name-container\">\n              <oxd-input-field\n                v-model=\"customField.fieldType\"\n                type=\"select\"\n                :label=\"$t('general.type')\"\n                :rules=\"rules.fieldType\"\n                :options=\"fieldTypeList\"\n                required\n                :disabled=\"fieldInUse\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item v-if=\"isDropDownField\">\n              <oxd-input-field\n                v-model=\"customField.extraData\"\n                :label=\"$t('pim.select_options')\"\n                :rules=\"rules.extraData\"\n                :required=\"isDropDownField\"\n              />\n              <oxd-text tag=\"p\" class=\"select-options-hint\">\n                {{ $t('pim.enter_allowed_options_separated_by_commas') }}\n              </oxd-text>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\n\nconst customFieldModel = {\n  id: null,\n  fieldName: '',\n  screen: '',\n  fieldType: '',\n  extraData: '',\n};\n\nexport default {\n  props: {\n    customFieldId: {\n      type: Number,\n      required: true,\n    },\n    screenList: {\n      type: Array,\n      required: true,\n    },\n    fieldTypeList: {\n      type: Array,\n      required: true,\n    },\n    fieldInUse: {\n      type: Boolean,\n      required: true,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/custom-fields',\n    );\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      customField: {...customFieldModel},\n      rules: {\n        fieldName: [required, shouldNotExceedCharLength(250)],\n        screen: [required, shouldNotExceedCharLength(100)],\n        fieldType: [required, shouldNotExceedCharLength(15)],\n        extraData: [required, shouldNotExceedCharLength(250)],\n      },\n    };\n  },\n\n  computed: {\n    isDropDownField() {\n      return this.customField.fieldType?.id === 1;\n    },\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.customFieldId)\n      .then((response) => {\n        const {data} = response.data;\n        this.customField.fieldName = data.fieldName;\n        if (data.screen !== '' && data.screen !== null) {\n          this.customField.screen = this.screenList.find((c) => {\n            return c.id === data.screen;\n          });\n        }\n        if (data.fieldType !== '' && data.fieldType !== null) {\n          this.customField.fieldType = this.fieldTypeList.find((c) => {\n            return c.id === data.fieldType;\n          });\n        }\n        this.customField.extraData = data.extraData;\n\n        // Fetch list data for unique test\n        return this.http.getAll();\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.fieldName.push((v) => {\n          const index = data.findIndex((item) => item.fieldName === v);\n          if (index > -1) {\n            const id = data[index].id;\n            return id != this.customFieldId\n              ? this.$t('general.already_exists')\n              : true;\n          } else {\n            return true;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.customFieldId, {\n          fieldName: this.customField.fieldName,\n          screen: this.customField.screen.id,\n          fieldType: this.customField.fieldType.id,\n          extraData: this.customField.extraData,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      navigate('/pim/listCustomFields');\n    },\n  },\n};\n</script>\n\n<style src=\"./customField.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}