{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport { required, shouldNotExceedCharLength, validDateFormat } from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst employeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  employeeId: '',\n  otherId: '',\n  drivingLicenseNo: '',\n  drivingLicenseExpiredDate: '',\n  ssnNumber: '',\n  sinNumber: '',\n  nationality: [],\n  maritalStatus: [],\n  birthday: '',\n  gender: '',\n  nickname: '',\n  smoker: '',\n  militaryService: ''\n};\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n    'full-name-input': FullNameInput\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    nationalities: {\n      type: Array,\n      default: () => []\n    },\n    showDeprecatedFields: {\n      type: Boolean,\n      default: false\n    },\n    showSsnField: {\n      type: Boolean,\n      default: false\n    },\n    showSinField: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/personal-details`);\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      employee: {\n        ...employeeModel\n      },\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        employeeId: [shouldNotExceedCharLength(10)],\n        otherId: [shouldNotExceedCharLength(30)],\n        drivingLicenseNo: [shouldNotExceedCharLength(30)],\n        ssnNumber: [shouldNotExceedCharLength(30)],\n        sinNumber: [shouldNotExceedCharLength(30)],\n        nickname: [shouldNotExceedCharLength(30)],\n        militaryService: [shouldNotExceedCharLength(30)],\n        birthday: [validDateFormat(this.userDateFormat)],\n        drivingLicenseExpiredDate: [validDateFormat(this.userDateFormat)]\n      },\n      maritalStatuses: [{\n        id: 'Single',\n        label: this.$t('pim.single')\n      }, {\n        id: 'Married',\n        label: this.$t('pim.married')\n      }, {\n        id: 'Other',\n        label: this.$t('pim.other')\n      }]\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      this.updateModel(response);\n      return this.http.request({\n        method: 'GET',\n        url: '/api/v2/pim/employees'\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.employeeId.push(v => {\n        const index = data.findIndex(item => item.employeeId?.trim() && String(item.employeeId).toLowerCase() == String(v).toLowerCase());\n        if (index > -1) {\n          const {\n            empNumber\n          } = data[index];\n          return empNumber != this.empNumber ? this.$t('pim.employee_id_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          lastName: this.employee.lastName,\n          firstName: this.employee.firstName,\n          middleName: this.employee.middleName,\n          employeeId: this.employee.employeeId,\n          otherId: this.employee.otherId,\n          drivingLicenseNo: this.employee.drivingLicenseNo,\n          drivingLicenseExpiredDate: this.employee.drivingLicenseExpiredDate,\n          gender: this.employee.gender,\n          maritalStatus: this.employee.maritalStatus?.id,\n          birthday: this.employee.birthday,\n          nationalityId: this.employee.nationality?.id,\n          ssnNumber: this.showSsnField ? this.employee.ssnNumber : undefined,\n          sinNumber: this.showSinField ? this.employee.sinNumber : undefined,\n          nickname: this.showDeprecatedFields ? this.employee.nickname : undefined,\n          smoker: this.showDeprecatedFields ? this.employee.smoker : undefined,\n          militaryService: this.showDeprecatedFields ? this.employee.militaryService : undefined\n        }\n      }).then(response => {\n        this.updateModel(response);\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n      });\n    },\n    updateModel(response) {\n      const {\n        data\n      } = response.data;\n      this.employee = {\n        ...employeeModel,\n        ...data\n      };\n      this.employee.maritalStatus = this.maritalStatuses.find(item => item.id === data.maritalStatus);\n      this.employee.nationality = this.nationalities.find(item => item.id === data.nationality?.id);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","EditEmployeeLayout","FullNameInput","required","shouldNotExceedCharLength","validDateFormat","useDateFormat","employeeModel","firstName","middleName","lastName","employeeId","otherId","drivingLicenseNo","drivingLicenseExpiredDate","ssnNumber","sinNumber","nationality","maritalStatus","birthday","gender","nickname","smoker","militaryService","components","props","empNumber","type","String","nationalities","Array","default","showDeprecatedFields","Boolean","showSsnField","showSinField","setup","http","window","appGlobal","baseUrl","userDateFormat","data","isLoading","employee","rules","maritalStatuses","id","label","$t","beforeMount","getAll","then","response","updateModel","request","method","url","push","v","index","findIndex","item","trim","toLowerCase","finally","methods","onSave","nationalityId","undefined","$toast","updateSuccess","find"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\EmployeePersonalDetails.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <edit-employee-layout :employee-id=\"empNumber\" screen=\"personal\">\n    <div class=\"orangehrm-horizontal-padding orangehrm-vertical-padding\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('general.personal_details') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"1\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <full-name-input\n                v-model:firstName=\"employee.firstName\"\n                v-model:middleName=\"employee.middleName\"\n                v-model:lastName=\"employee.lastName\"\n                :rules=\"rules\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n          <oxd-grid\n            v-if=\"showDeprecatedFields\"\n            :cols=\"3\"\n            class=\"orangehrm-full-width-grid\"\n          >\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.nickname\"\n                :label=\"$t('pim.nickname')\"\n                :rules=\"rules.nickname\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.employeeId\"\n                :label=\"$t('general.employee_id')\"\n                :rules=\"rules.employeeId\"\n                :disabled=\"!$can.update(`personal_sensitive_information`)\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.otherId\"\n                :label=\"$t('pim.other_id')\"\n                :rules=\"rules.otherId\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.drivingLicenseNo\"\n                :label=\"$t('pim.driver_license_number')\"\n                :rules=\"rules.drivingLicenseNo\"\n                :disabled=\"!$can.update(`personal_sensitive_information`)\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <date-input\n                v-model=\"employee.drivingLicenseExpiredDate\"\n                :rules=\"rules.drivingLicenseExpiredDate\"\n                :label=\"$t('pim.license_expiry_date')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item v-if=\"showSsnField\">\n              <oxd-input-field\n                v-model=\"employee.ssnNumber\"\n                :label=\"$t('pim.ssn_number')\"\n                :rules=\"rules.ssnNumber\"\n                :disabled=\"!$can.update(`personal_sensitive_information`)\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item v-if=\"showSinField\">\n              <oxd-input-field\n                v-model=\"employee.sinNumber\"\n                :label=\"$t('pim.sin_number')\"\n                :rules=\"rules.sinNumber\"\n                :disabled=\"!$can.update(`personal_sensitive_information`)\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.nationality\"\n                type=\"select\"\n                :label=\"$t('general.nationality')\"\n                :clear=\"false\"\n                :options=\"nationalities\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.maritalStatus\"\n                type=\"select\"\n                :label=\"$t('pim.marital_status')\"\n                :clear=\"false\"\n                :options=\"maritalStatuses\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <date-input\n                v-model=\"employee.birthday\"\n                :label=\"$t('pim.date_of_birth')\"\n                :rules=\"rules.birthday\"\n                :disabled=\"!$can.update(`personal_sensitive_information`)\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-group\n                :label=\"$t('pim.gender')\"\n                :classes=\"{wrapper: '--gender-grouped-field'}\"\n              >\n                <oxd-input-field\n                  v-model=\"employee.gender\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.male')\"\n                  value=\"1\"\n                />\n                <oxd-input-field\n                  v-model=\"employee.gender\"\n                  type=\"radio\"\n                  :option-label=\"$t('general.female')\"\n                  value=\"2\"\n                />\n              </oxd-input-group>\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider v-if=\"showDeprecatedFields\" />\n        <oxd-form-row v-if=\"showDeprecatedFields\">\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.militaryService\"\n                :label=\"$t('pim.military_service')\"\n                :rules=\"rules.militaryService\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"employee.smoker\"\n                type=\"checkbox\"\n                :label=\"$t('pim.smoker')\"\n                :option-label=\"$t('general.yes')\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </edit-employee-layout>\n</template>\n\n<script>\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport {\n  required,\n  shouldNotExceedCharLength,\n  validDateFormat,\n} from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\n\nconst employeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  employeeId: '',\n  otherId: '',\n  drivingLicenseNo: '',\n  drivingLicenseExpiredDate: '',\n  ssnNumber: '',\n  sinNumber: '',\n  nationality: [],\n  maritalStatus: [],\n  birthday: '',\n  gender: '',\n  nickname: '',\n  smoker: '',\n  militaryService: '',\n};\n\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n    'full-name-input': FullNameInput,\n  },\n\n  props: {\n    empNumber: {\n      type: String,\n      required: true,\n    },\n    nationalities: {\n      type: Array,\n      default: () => [],\n    },\n    showDeprecatedFields: {\n      type: Boolean,\n      default: false,\n    },\n    showSsnField: {\n      type: Boolean,\n      default: false,\n    },\n    showSinField: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/pim/employees/${props.empNumber}/personal-details`,\n    );\n    const {userDateFormat} = useDateFormat();\n\n    return {\n      http,\n      userDateFormat,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      employee: {...employeeModel},\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        employeeId: [shouldNotExceedCharLength(10)],\n        otherId: [shouldNotExceedCharLength(30)],\n        drivingLicenseNo: [shouldNotExceedCharLength(30)],\n        ssnNumber: [shouldNotExceedCharLength(30)],\n        sinNumber: [shouldNotExceedCharLength(30)],\n        nickname: [shouldNotExceedCharLength(30)],\n        militaryService: [shouldNotExceedCharLength(30)],\n        birthday: [validDateFormat(this.userDateFormat)],\n        drivingLicenseExpiredDate: [validDateFormat(this.userDateFormat)],\n      },\n      maritalStatuses: [\n        {id: 'Single', label: this.$t('pim.single')},\n        {id: 'Married', label: this.$t('pim.married')},\n        {id: 'Other', label: this.$t('pim.other')},\n      ],\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .getAll()\n      .then((response) => {\n        this.updateModel(response);\n        return this.http.request({\n          method: 'GET',\n          url: '/api/v2/pim/employees',\n        });\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.rules.employeeId.push((v) => {\n          const index = data.findIndex(\n            (item) =>\n              item.employeeId?.trim() &&\n              String(item.employeeId).toLowerCase() == String(v).toLowerCase(),\n          );\n          if (index > -1) {\n            const {empNumber} = data[index];\n            return empNumber != this.empNumber\n              ? this.$t('pim.employee_id_exists')\n              : true;\n          } else {\n            return true;\n          }\n        });\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          data: {\n            lastName: this.employee.lastName,\n            firstName: this.employee.firstName,\n            middleName: this.employee.middleName,\n            employeeId: this.employee.employeeId,\n            otherId: this.employee.otherId,\n            drivingLicenseNo: this.employee.drivingLicenseNo,\n            drivingLicenseExpiredDate: this.employee.drivingLicenseExpiredDate,\n            gender: this.employee.gender,\n            maritalStatus: this.employee.maritalStatus?.id,\n            birthday: this.employee.birthday,\n            nationalityId: this.employee.nationality?.id,\n            ssnNumber: this.showSsnField ? this.employee.ssnNumber : undefined,\n            sinNumber: this.showSinField ? this.employee.sinNumber : undefined,\n            nickname: this.showDeprecatedFields\n              ? this.employee.nickname\n              : undefined,\n            smoker: this.showDeprecatedFields\n              ? this.employee.smoker\n              : undefined,\n            militaryService: this.showDeprecatedFields\n              ? this.employee.militaryService\n              : undefined,\n          },\n        })\n        .then((response) => {\n          this.updateModel(response);\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.isLoading = false;\n        });\n    },\n\n    updateModel(response) {\n      const {data} = response.data;\n      this.employee = {...employeeModel, ...data};\n      this.employee.maritalStatus = this.maritalStatuses.find(\n        (item) => item.id === data.maritalStatus,\n      );\n      this.employee.nationality = this.nationalities.find(\n        (item) => item.id === data.nationality?.id,\n      );\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}