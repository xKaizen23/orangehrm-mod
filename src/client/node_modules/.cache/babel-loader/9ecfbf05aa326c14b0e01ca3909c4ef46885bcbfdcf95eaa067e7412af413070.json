{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_reviewer_autocomplete = _resolveComponent(\"reviewer-autocomplete\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\",\n    tag: \"h6\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.add_performance_tracker')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.tracker.name,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.tracker.name = $event),\n            rules: $data.rules.tracker,\n            label: _ctx.$t('performance.tracker_name'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $data.tracker.employee,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.tracker.employee = $event),\n            rules: $data.rules.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_reviewer_autocomplete, {\n            modelValue: $data.tracker.reviewers,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.tracker.reviewers = $event),\n            rules: $data.rules.reviewers,\n            \"exclude-employee\": $data.tracker.employee,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"exclude-employee\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        type: \"button\",\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;;uBADvCC,oBAmDM,OAnDNC,UAmDM,GAlDJC,oBAiDM,OAjDNC,UAiDM,GAhDJC,aAEWC;IAFDN,KAAK,EAAC,sBAAsB;IAACO,GAAG,EAAC;;sBACzC,MAA+C,mCAA5CC,OAAE;;MAEPH,aAAeI,yBACfJ,aA2CWK;IA3CAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAWe,CAXfT,aAWeU;wBAVb,MASW,CATXV,aASWW;QATAC,IAAI,EAAE,CAAC;QAAEjB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBa;4BANd,MAKE,CALFb,aAKEc;wBAJSP,aAAO,CAACQ,IAAI;uEAAZR,aAAO,CAACQ,IAAI;YACpBC,KAAK,EAAET,WAAK,CAACU,OAAO;YACpBC,KAAK,EAAEf,OAAE;YACVgB,QAAQ,EAAR;;;;;;;QAKRnB,aAkBeU;wBAjBb,MAgBW,CAhBXV,aAgBWW;QAhBAC,IAAI,EAAE,CAAC;QAAEjB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBa;4BALd,MAIE,CAJFb,aAIEoB;wBAHSb,aAAO,CAACc,QAAQ;uEAAhBd,aAAO,CAACc,QAAQ;YACxBL,KAAK,EAAET,WAAK,CAACc,QAAQ;YACtBF,QAAQ,EAAR;;;YAGJnB,aAOgBa;4BANd,MAKE,CALFb,aAKEsB;wBAJSf,aAAO,CAACgB,SAAS;uEAAjBhB,aAAO,CAACgB,SAAS;YACzBP,KAAK,EAAET,WAAK,CAACgB,SAAS;YACtB,kBAAgB,EAAEhB,aAAO,CAACc,QAAQ;YACnCF,QAAQ,EAAR;;;;;;;QAKRnB,aAAeI,yBACfJ,aASmBwB;wBARjB,MAAiB,CAAjBxB,aAAiByB,2BACjBzB,aAKE0B;QAJA,cAAY,EAAC,OAAO;QACnBR,KAAK,EAAEf,OAAE;QACVwB,IAAI,EAAC,QAAQ;QACZC,OAAK,EAAEnB;yCAEVT,aAAiB6B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","tag","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_oxd_input_field","name","rules","tracker","label","required","_component_employee_autocomplete","employee","_component_reviewer_autocomplete","reviewers","_component_oxd_form_actions","_component_required_text","_component_oxd_button","type","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\SavePerformanceTracker.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\" tag=\"h6\">\n        {{ $t('performance.add_performance_tracker') }}\n      </oxd-text>\n      <oxd-divider />\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"tracker.name\"\n                :rules=\"rules.tracker\"\n                :label=\"$t('performance.tracker_name')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"tracker.employee\"\n                :rules=\"rules.employee\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <reviewer-autocomplete\n                v-model=\"tracker.reviewers\"\n                :rules=\"rules.reviewers\"\n                :exclude-employee=\"tracker.employee\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n        <oxd-divider />\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            type=\"button\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport ReviewerAutoComplete from '@/orangehrmPerformancePlugin/components/ReviewerAutoComplete';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  required,\n  validSelection,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\n\nconst trackerModel = {\n  name: null,\n  employee: null,\n  reviewers: [],\n};\n\nexport default {\n  components: {\n    'reviewer-autocomplete': ReviewerAutoComplete,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/config/trackers',\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      tracker: {...trackerModel},\n      rules: {\n        tracker: [required, shouldNotExceedCharLength(200)],\n        employee: [\n          required,\n          validSelection,\n          (value) => {\n            if (value === null) {\n              return true;\n            }\n            const valid = this.tracker.reviewers.findIndex((reviewer) => {\n              return reviewer.id === value.id;\n            });\n            if (valid == -1) {\n              return true;\n            }\n            return this.$t(\n              'performance.employee_cannot_be_assigned_as_his_own_reviewer',\n            );\n          },\n        ],\n        reviewers: [required, validSelection],\n      },\n    };\n  },\n  methods: {\n    onCancel() {\n      navigate('/performance/viewPerformanceTracker');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .create({\n          trackerName: this.tracker.name.trim(),\n          empNumber: this.tracker.employee.id,\n          reviewerEmpNumbers: this.tracker.reviewers.map(\n            (employee) => employee.id,\n          ),\n        })\n        .then(() => {\n          return this.$toast.saveSuccess();\n        })\n        .then(() => {\n          // go back\n          this.onCancel();\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}