{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6efd92f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-modal-header\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-add-tracker-log-ratings-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_tracker_log_rating_button = _resolveComponent(\"tracker-log-rating-button\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_dialog = _resolveComponent(\"oxd-dialog\");\n  return _openBlock(), _createBlock(_component_oxd_dialog, {\n    style: {\n      width: '90%',\n      maxWidth: '650px'\n    },\n    \"onUpdate:show\": $options.onCancel\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_text, {\n      type: \"card-title\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('performance.edit_tracker_log')), 1)]),\n      _: 1\n    })]), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n      loading: $data.isLoading,\n      onSubmitValid: $options.onSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.trackerLog.log,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.trackerLog.log = $event),\n          label: _ctx.$t('performance.log'),\n          placeholder: _ctx.$t('general.type_here'),\n          rules: $data.rules.log,\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_tracker_log_rating_button, {\n          label: _ctx.$t('performance.positive'),\n          selected: $data.rating,\n          type: \"positive\",\n          onClick: $options.onClickPositive\n        }, null, 8, [\"label\", \"selected\", \"onClick\"]), _createVNode(_component_tracker_log_rating_button, {\n          label: _ctx.$t('performance.negative'),\n          selected: !$data.rating,\n          type: \"negative\",\n          onClick: $options.onClickNegative\n        }, null, 8, [\"label\", \"selected\", \"onClick\"])])]),\n        _: 1\n      }), _createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.trackerLog.comment,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.trackerLog.comment = $event),\n          type: \"textarea\",\n          label: _ctx.$t('general.comment'),\n          placeholder: _ctx.$t('general.type_here'),\n          rules: $data.rules.comment,\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"placeholder\", \"rules\"])]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, {\n        class: \"orangehrm-form-action\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.cancel'),\n          onClick: $options.onCancel\n        }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_oxd_button, {\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.save'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"loading\", \"onSubmitValid\"])]),\n    _: 1\n  }, 8, [\"onUpdate:show\"]);\n}","map":{"version":3,"mappings":";;;EAwBSA,KAAK,EAAC;AAAwB;;EAiB1BA,KAAK,EAAC;AAA6C;;;;;;;;;;;;uBArB9DC,aA6DaC;IA5DVC,KAAK,EAAE;MAAAC;MAAAC;IAAA,CAAiC;IACxC,eAAW,EAAEC;;sBAEd,MAIM,CAJNC,oBAIM,OAJNC,UAIM,GAHJC,aAEWC;MAFDC,IAAI,EAAC;IAAY;wBACzB,MAAwC,mCAArCC,OAAE;;UAGTH,aAAeI,yBACfJ,aAkDWK;MAlDAC,OAAO,EAAEC,eAAS;MAAGC,aAAY,EAAEX;;wBAC5C,MAQe,CARfG,aAQeS;0BAPb,MAME,CANFT,aAMEU;sBALSH,gBAAU,CAACI,GAAG;qEAAdJ,gBAAU,CAACI,GAAG;UACtBC,KAAK,EAAET,OAAE;UACTU,WAAW,EAAEV,OAAE;UACfW,KAAK,EAAEP,WAAK,CAACI,GAAG;UACjBI,QAAQ,EAAR;;;UAGJf,aAeeS;0BAdb,MAaM,CAbNX,oBAaM,OAbNkB,UAaM,GAZJhB,aAKEiB;UAJCL,KAAK,EAAET,OAAE;UACTe,QAAQ,EAAEX,YAAM;UACjBL,IAAI,EAAC,UAAU;UACdiB,OAAK,EAAEtB;uDAEVG,aAKEiB;UAJCL,KAAK,EAAET,OAAE;UACTe,QAAQ,GAAGX,YAAM;UAClBL,IAAI,EAAC,UAAU;UACdiB,OAAK,EAAEtB;;;UAIdG,aASeS;0BARb,MAOE,CAPFT,aAOEU;sBANSH,gBAAU,CAACa,OAAO;qEAAlBb,gBAAU,CAACa,OAAO;UAC3BlB,IAAI,EAAC,UAAU;UACdU,KAAK,EAAET,OAAE;UACTU,WAAW,EAAEV,OAAE;UACfW,KAAK,EAAEP,WAAK,CAACa,OAAO;UACrBL,QAAQ,EAAR;;;UAGJf,aAAeI,yBACfJ,aAYmBqB;QAZD9B,KAAK,EAAC;MAAuB;0BAC7C,MAAiB,CAAjBS,aAAiBsB,2BACjBtB,aAIEuB;UAHA,cAAY,EAAC,OAAO;UACnBX,KAAK,EAAET,OAAE;UACTgB,OAAK,EAAEtB;2CAEVG,aAIEuB;UAHA,cAAY,EAAC,WAAW;UACvBX,KAAK,EAAET,OAAE;UACVD,IAAI,EAAC","names":["class","_createBlock","_component_oxd_dialog","style","width","maxWidth","$options","_createElementVNode","_hoisted_1","_createVNode","_component_oxd_text","type","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","_component_oxd_form_row","_component_oxd_input_field","log","label","placeholder","rules","required","_hoisted_2","_component_tracker_log_rating_button","selected","onClick","comment","_component_oxd_form_actions","_component_required_text","_component_oxd_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\components\\EditTrackerLogModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <oxd-dialog\n    :style=\"{width: '90%', maxWidth: '650px'}\"\n    @update:show=\"onCancel\"\n  >\n    <div class=\"orangehrm-modal-header\">\n      <oxd-text type=\"card-title\">\n        {{ $t('performance.edit_tracker_log') }}\n      </oxd-text>\n    </div>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"trackerLog.log\"\n          :label=\"$t('performance.log')\"\n          :placeholder=\"$t('general.type_here')\"\n          :rules=\"rules.log\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-form-row>\n        <div class=\"orangehrm-add-tracker-log-ratings-container\">\n          <tracker-log-rating-button\n            :label=\"$t('performance.positive')\"\n            :selected=\"rating\"\n            type=\"positive\"\n            @click=\"onClickPositive\"\n          />\n          <tracker-log-rating-button\n            :label=\"$t('performance.negative')\"\n            :selected=\"!rating\"\n            type=\"negative\"\n            @click=\"onClickNegative\"\n          />\n        </div>\n      </oxd-form-row>\n      <oxd-form-row>\n        <oxd-input-field\n          v-model=\"trackerLog.comment\"\n          type=\"textarea\"\n          :label=\"$t('general.comment')\"\n          :placeholder=\"$t('general.type_here')\"\n          :rules=\"rules.comment\"\n          required\n        />\n      </oxd-form-row>\n      <oxd-divider />\n      <oxd-form-actions class=\"orangehrm-form-action\">\n        <required-text />\n        <oxd-button\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <oxd-button\n          display-type=\"secondary\"\n          :label=\"$t('general.save')\"\n          type=\"submit\"\n        />\n      </oxd-form-actions>\n    </oxd-form>\n  </oxd-dialog>\n</template>\n\n<script>\nimport {OxdDialog} from '@ohrm/oxd';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@/core/util/validation/rules';\nimport {APIService} from '@/core/util/services/api.service';\nimport TrackerLogRatingButton from '@/orangehrmPerformancePlugin/components/TrackerLogRatingButton';\n\nconst trackerLogModel = {\n  log: '',\n  comment: '',\n};\n\nexport default {\n  name: 'EditTrackerLogModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'tracker-log-rating-button': TrackerLogRatingButton,\n  },\n  props: {\n    trackerId: {\n      type: Number,\n      required: true,\n    },\n    trackerLogId: {\n      type: Number,\n      required: true,\n    },\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      `/api/v2/performance/trackers/${props.trackerId}/logs`,\n    );\n    return {\n      http,\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rating: true,\n      trackerLog: {...trackerLogModel},\n      rules: {\n        log: [required, shouldNotExceedCharLength(150)],\n        comment: [required, shouldNotExceedCharLength(3000)],\n      },\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .get(this.trackerLogId)\n      .then((response) => {\n        const {data} = response.data;\n        this.trackerLog.log = data.log;\n        this.trackerLog.comment = data.comment;\n        this.rating = data.achievement === '1';\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n  methods: {\n    onClickPositive() {\n      this.rating = true;\n    },\n    onClickNegative() {\n      this.rating = false;\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.trackerLogId, {\n          log: this.trackerLog.log,\n          comment: this.trackerLog.comment,\n          achievement: this.rating ? 1 : 2,\n        })\n        .then(() => {\n          this.$toast.updateSuccess();\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close');\n    },\n  },\n};\n</script>\n\n<style src=\"./tracker-log-modal.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}