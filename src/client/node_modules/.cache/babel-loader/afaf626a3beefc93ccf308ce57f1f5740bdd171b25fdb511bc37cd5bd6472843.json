{"ast":null,"code":"import { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nconst languageModel = {\n  name: '',\n  fluency: '',\n  competencyId: null,\n  comment: ''\n};\nexport default {\n  name: 'EditLanguage',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    employeeId: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    competencies: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['close'],\n  data() {\n    return {\n      isLoading: false,\n      language: {\n        ...languageModel\n      },\n      rules: {\n        competencyId: [required],\n        comment: [shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET',\n      url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.language.name = data.language.name;\n      this.language.fluency = data.fluency.name;\n      this.language.comment = data.comment ? data.comment : '';\n      this.language.competencyId = this.competencies.find(item => item.id === data.competency?.id);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,\n        data: {\n          competencyId: this.language.competencyId.id,\n          comment: this.language.comment\n        }\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","shouldNotExceedCharLength","languageModel","name","fluency","competencyId","comment","props","http","type","Object","employeeId","String","data","competencies","Array","emits","isLoading","language","rules","beforeMount","request","method","url","languageId","fluencyId","then","response","find","item","id","competency","finally","methods","onSave","$toast","updateSuccess","onCancel","$emit"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\components\\EditLanguage.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-horizontal-padding orangehrm-top-padding\">\n    <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">{{\n      $t('general.edit_language')\n    }}</oxd-text>\n    <oxd-divider />\n    <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.name\"\n              :label=\"$t('general.language')\"\n              required\n              readonly\n              disabled\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.fluency\"\n              :label=\"$t('pim.fluency')\"\n              required\n              readonly\n              disabled\n            />\n          </oxd-grid-item>\n          <oxd-grid-item>\n            <oxd-input-field\n              v-model=\"language.competencyId\"\n              type=\"select\"\n              :label=\"$t('pim.competency')\"\n              :options=\"competencies\"\n              :rules=\"rules.competencyId\"\n              :clear=\"false\"\n              required\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-row>\n        <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n          <oxd-grid-item class=\"--span-column-2\">\n            <oxd-input-field\n              v-model=\"language.comment\"\n              type=\"textarea\"\n              :label=\"$t('general.comments')\"\n              :rules=\"rules.comment\"\n            />\n          </oxd-grid-item>\n        </oxd-grid>\n      </oxd-form-row>\n\n      <oxd-form-actions>\n        <required-text />\n        <oxd-button\n          type=\"button\"\n          display-type=\"ghost\"\n          :label=\"$t('general.cancel')\"\n          @click=\"onCancel\"\n        />\n        <submit-button />\n      </oxd-form-actions>\n    </oxd-form>\n    <oxd-divider />\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\n\nconst languageModel = {\n  name: '',\n  fluency: '',\n  competencyId: null,\n  comment: '',\n};\n\nexport default {\n  name: 'EditLanguage',\n\n  props: {\n    http: {\n      type: Object,\n      required: true,\n    },\n    employeeId: {\n      type: String,\n      required: true,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n    competencies: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  data() {\n    return {\n      isLoading: false,\n      language: {...languageModel},\n      rules: {\n        competencyId: [required],\n        comment: [shouldNotExceedCharLength(100)],\n      },\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({\n        method: 'GET',\n        url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.language.name = data.language.name;\n        this.language.fluency = data.fluency.name;\n        this.language.comment = data.comment ? data.comment : '';\n        this.language.competencyId = this.competencies.find(\n          (item) => item.id === data.competency?.id,\n        );\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .request({\n          method: 'PUT',\n          url: `/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,\n          data: {\n            competencyId: this.language.competencyId.id,\n            comment: this.language.comment,\n          },\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          this.onCancel();\n        });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}