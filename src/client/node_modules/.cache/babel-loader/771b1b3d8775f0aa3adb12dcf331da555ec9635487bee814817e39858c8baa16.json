{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderSlot as _renderSlot, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-93988042\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-forgot-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-forgot-password-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-login-error\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"orangehrm-forgot-password-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_alert = _resolveComponent(\"oxd-alert\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_password_strength_indicator = _resolveComponent(\"password-strength-indicator\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_form, {\n    ref: \"resetForm\",\n    method: \"post\",\n    action: $options.submitUrl,\n    onSubmitValid: $options.onSubmit\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_text, {\n      tag: \"h6\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('auth.change_weak_password')), 1)]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_alert, {\n      show: true,\n      message: $props.invalidCode ? _ctx.$t('auth.invalid_password_reset_code') : $props.error?.message || _ctx.$t('auth.password_not_strong'),\n      type: \"error\"\n    }, null, 8, [\"message\"])]), !$props.invalidCode ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"input\", {\n      name: \"resetCode\",\n      value: $props.code,\n      type: \"hidden\"\n    }, null, 8, _hoisted_5), _createElementVNode(\"input\", {\n      name: \"_token\",\n      value: $props.token,\n      type: \"hidden\"\n    }, null, 8, _hoisted_6), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        value: $props.username,\n        label: _ctx.$t('auth.username'),\n        readonly: \"\",\n        name: \"username\",\n        \"label-icon\": \"person\"\n      }, null, 8, [\"value\", \"label\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.currentPassword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.currentPassword = $event),\n        rules: $data.rules.currentPassword,\n        label: _ctx.$t('pim.current_password'),\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\",\n        name: \"currentPassword\"\n      }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, {\n      class: \"orangehrm-forgot-password-row\"\n    }, {\n      default: _withCtx(() => [$data.user.newPassword ? (_openBlock(), _createBlock(_component_password_strength_indicator, {\n        key: 0,\n        \"password-strength\": $setup.passwordStrength\n      }, null, 8, [\"password-strength\"])) : _createCommentVNode(\"\", true), _createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.newPassword,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.newPassword = $event),\n        rules: $data.rules.newPassword,\n        label: _ctx.$t('auth.new_password'),\n        placeholder: _ctx.$t('auth.password'),\n        name: \"password\",\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\"\n      }, null, 8, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.confirmPassword,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.confirmPassword = $event),\n        rules: $data.rules.confirmPassword,\n        placeholder: _ctx.$t('auth.password'),\n        label: _ctx.$t('general.confirm_password'),\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\",\n        name: \"confirmPassword\"\n      }, null, 8, [\"modelValue\", \"rules\", \"placeholder\", \"label\"])]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_oxd_button, {\n      label: _ctx.$t('general.save'),\n      size: \"large\",\n      type: \"submit\",\n      \"display-type\": \"secondary\",\n      class: \"orangehrm-forgot-password-button\"\n    }, null, 8, [\"label\"])])], 64)) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"action\", \"onSubmitValid\"])])]), _renderSlot(_ctx.$slots, \"footer\", {}, undefined, true)]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAqC;;EACzCA,KAAK,EAAC;AAAmC;;EACvCA,KAAK,EAAC;AAA0B;;EAW5BA,KAAK,EAAC;AAAuB;;;;EAgE3BA,KAAK,EAAC;AAAmC;;;;;;;;;;uBA7ExDC,oBA2FM,OA3FNC,UA2FM,GA1FJC,oBAwFM,OAxFNC,UAwFM,GAvFJD,oBAsFM,OAtFNE,UAsFM,GArFJC,aAoFWC;IAnFTC,GAAG,EAAC,WAAW;IACfC,MAAM,EAAC,MAAM;IACZC,MAAM,EAAEC,kBAAS;IACjBC,aAAY,EAAED;;sBAEf,MAEW,CAFXL,aAEWO;MAFDC,GAAG,EAAC;IAAI;wBAChB,MAAqC,mCAAlCC,OAAE;;QAEPT,aAAeU,yBACfb,oBAUM,OAVNc,UAUM,GATJX,aAQaY;MAPVC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAmBC,kBAAW,GAAqBN,OAAE,uCAAyDM,YAAK,EAAED,OAAO,IAAIL,OAAE;MAK1IO,IAAI,EAAC;iCAGQD,kBAAW,kBAA5BpB,oBA8DWsB;MAAAC;IAAA,IA7DTrB,oBAAsD;MAA/CsB,IAAI,EAAC,WAAW;MAAEC,KAAK,EAAEL,WAAI;MAAEC,IAAI,EAAC;6BAC3CnB,oBAAoD;MAA7CsB,IAAI,EAAC,QAAQ;MAAEC,KAAK,EAAEL,YAAK;MAAEC,IAAI,EAAC;6BACzChB,aAQeqB;wBAPb,MAME,CANFrB,aAMEsB;QALCF,KAAK,EAAEL,eAAQ;QACfQ,KAAK,EAAEd,OAAE;QACVe,QAAQ,EAAR,EAAQ;QACRL,IAAI,EAAC,UAAU;QACf,YAAU,EAAC;;;QAGfnB,aAUeqB;wBATb,MAQE,CARFrB,aAQEsB;oBAPSG,UAAI,CAACC,eAAe;mEAApBD,UAAI,CAACC,eAAe;QAC5BC,KAAK,EAAEF,WAAK,CAACC,eAAe;QAC5BH,KAAK,EAAEd,OAAE;QACVO,IAAI,EAAC,UAAU;QACf,YAAU,EAAC,KAAK;QAChBY,YAAY,EAAC,KAAK;QAClBT,IAAI,EAAC;;;QAGTnB,aAgBeqB;MAhBD3B,KAAK,EAAC;IAA+B;wBACjD,MAI8B,CAHtB+B,UAAI,CAACI,WAAW,kBADxBC,aAI8BC;;QAF3B,mBAAiB,EAAEC;2EAGtBhC,aASEsB;oBARSG,UAAI,CAACI,WAAW;mEAAhBJ,UAAI,CAACI,WAAW;QACxBF,KAAK,EAAEF,WAAK,CAACI,WAAW;QACxBN,KAAK,EAAEd,OAAE;QACTwB,WAAW,EAAExB,OAAE;QAChBU,IAAI,EAAC,UAAU;QACfH,IAAI,EAAC,UAAU;QACf,YAAU,EAAC,KAAK;QAChBY,YAAY,EAAC;;;QAGjB5B,aAWeqB;wBAVb,MASE,CATFrB,aASEsB;oBARSG,UAAI,CAACS,eAAe;mEAApBT,UAAI,CAACS,eAAe;QAC5BP,KAAK,EAAEF,WAAK,CAACS,eAAe;QAC5BD,WAAW,EAAExB,OAAE;QACfc,KAAK,EAAEd,OAAE;QACVO,IAAI,EAAC,UAAU;QACf,YAAU,EAAC,KAAK;QAChBY,YAAY,EAAC,KAAK;QAClBT,IAAI,EAAC;;;QAGTnB,aAAeU,yBACfb,oBAQM,OARNsC,UAQM,GAPJnC,aAMEoC;MALCb,KAAK,EAAEd,OAAE;MACV4B,IAAI,EAAC,OAAO;MACZrB,IAAI,EAAC,QAAQ;MACb,cAAY,EAAC,WAAW;MACxBtB,KAAK,EAAC;;;0CAOlB4C,YAA2B7B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_form","ref","method","action","$options","onSubmitValid","_component_oxd_text","tag","_ctx","_component_oxd_divider","_hoisted_4","_component_oxd_alert","show","message","$props","type","_Fragment","key","name","value","_component_oxd_form_row","_component_oxd_input_field","label","readonly","$data","currentPassword","rules","autocomplete","newPassword","_createBlock","_component_password_strength_indicator","$setup","placeholder","confirmPassword","_hoisted_7","_component_oxd_button","size","_renderSlot"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAuthenticationPlugin\\pages\\ResetWeakPassword.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-forgot-password-container\">\n    <div class=\"orangehrm-forgot-password-wrapper\">\n      <div class=\"orangehrm-card-container\">\n        <oxd-form\n          ref=\"resetForm\"\n          method=\"post\"\n          :action=\"submitUrl\"\n          @submit-valid=\"onSubmit\"\n        >\n          <oxd-text tag=\"h6\">\n            {{ $t('auth.change_weak_password') }}\n          </oxd-text>\n          <oxd-divider />\n          <div class=\"orangehrm-login-error\">\n            <oxd-alert\n              :show=\"true\"\n              :message=\"\n                invalidCode\n                  ? $t('auth.invalid_password_reset_code')\n                  : error?.message || $t('auth.password_not_strong')\n              \"\n              type=\"error\"\n            ></oxd-alert>\n          </div>\n          <template v-if=\"!invalidCode\">\n            <input name=\"resetCode\" :value=\"code\" type=\"hidden\" />\n            <input name=\"_token\" :value=\"token\" type=\"hidden\" />\n            <oxd-form-row>\n              <oxd-input-field\n                :value=\"username\"\n                :label=\"$t('auth.username')\"\n                readonly\n                name=\"username\"\n                label-icon=\"person\"\n              />\n            </oxd-form-row>\n            <oxd-form-row>\n              <oxd-input-field\n                v-model=\"user.currentPassword\"\n                :rules=\"rules.currentPassword\"\n                :label=\"$t('pim.current_password')\"\n                type=\"password\"\n                label-icon=\"key\"\n                autocomplete=\"off\"\n                name=\"currentPassword\"\n              />\n            </oxd-form-row>\n            <oxd-form-row class=\"orangehrm-forgot-password-row\">\n              <password-strength-indicator\n                v-if=\"user.newPassword\"\n                :password-strength=\"passwordStrength\"\n              >\n              </password-strength-indicator>\n              <oxd-input-field\n                v-model=\"user.newPassword\"\n                :rules=\"rules.newPassword\"\n                :label=\"$t('auth.new_password')\"\n                :placeholder=\"$t('auth.password')\"\n                name=\"password\"\n                type=\"password\"\n                label-icon=\"key\"\n                autocomplete=\"off\"\n              />\n            </oxd-form-row>\n            <oxd-form-row>\n              <oxd-input-field\n                v-model=\"user.confirmPassword\"\n                :rules=\"rules.confirmPassword\"\n                :placeholder=\"$t('auth.password')\"\n                :label=\"$t('general.confirm_password')\"\n                type=\"password\"\n                label-icon=\"key\"\n                autocomplete=\"off\"\n                name=\"confirmPassword\"\n              />\n            </oxd-form-row>\n            <oxd-divider />\n            <div class=\"orangehrm-forgot-password-buttons\">\n              <oxd-button\n                :label=\"$t('general.save')\"\n                size=\"large\"\n                type=\"submit\"\n                display-type=\"secondary\"\n                class=\"orangehrm-forgot-password-button\"\n              />\n            </div>\n          </template>\n        </oxd-form>\n      </div>\n    </div>\n    <slot name=\"footer\"></slot>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport {promiseDebounce, OxdAlert} from '@ohrm/oxd';\nimport {urlFor} from '@/core/util/helper/url';\nimport {APIService} from '@/core/util/services/api.service';\nimport usePasswordPolicy from '@/core/util/composable/usePasswordPolicy';\nimport PasswordStrengthIndicator from '@/core/components/labels/PasswordStrengthIndicator';\n\nexport default {\n  name: 'ResetWeakPassword',\n\n  components: {\n    'password-strength-indicator': PasswordStrengthIndicator,\n    'oxd-alert': OxdAlert,\n  },\n\n  props: {\n    username: {\n      type: String,\n      required: true,\n    },\n    code: {\n      type: String,\n      required: true,\n    },\n    token: {\n      type: String,\n      required: true,\n    },\n    error: {\n      type: Object,\n      default: () => null,\n    },\n    invalidCode: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    const {passwordStrength, validatePassword} = usePasswordPolicy(http);\n\n    return {\n      http,\n      passwordStrength,\n      validatePassword,\n    };\n  },\n\n  data() {\n    return {\n      user: {\n        username: '',\n        currentPassword: '',\n        confirmPassword: '',\n      },\n      rules: {\n        currentPassword: [required, shouldNotExceedCharLength(64)],\n        newPassword: [\n          required,\n          shouldNotExceedCharLength(64),\n          promiseDebounce(this.validatePassword, 500),\n        ],\n        confirmPassword: [\n          required,\n          shouldNotExceedCharLength(64),\n          (v) =>\n            (!!v && v === this.user.newPassword) ||\n            this.$t('general.passwords_do_not_match'),\n        ],\n      },\n    };\n  },\n\n  computed: {\n    submitUrl() {\n      return urlFor('/auth/resetWeakPassword');\n    },\n  },\n\n  methods: {\n    onSubmit() {\n      this.$refs.resetForm.$el.submit();\n    },\n  },\n};\n</script>\n\n<style src=\"./reset-password.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}