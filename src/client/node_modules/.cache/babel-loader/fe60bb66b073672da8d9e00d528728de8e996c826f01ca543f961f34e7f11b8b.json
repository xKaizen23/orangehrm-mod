{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b55102c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_project_autocomplete = _resolveComponent(\"project-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_activity_dropdown = _resolveComponent(\"activity-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_reports_table = _resolveComponent(\"reports-table\");\n  return _openBlock(), _createBlock(_component_reports_table, {\n    module: \"time\",\n    name: \"activity_detailed\",\n    prefetch: true,\n    filters: $setup.serializedFilters,\n    \"column-count\": 2\n  }, {\n    default: _withCtx(({\n      generateReport\n    }) => [_createVNode(_component_oxd_table_filter, {\n      \"filter-title\": _ctx.$t('time.project_report')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form, {\n        onSubmitValid: generateReport\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n            cols: 2,\n            class: \"orangehrm-full-width-grid\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_project_autocomplete, {\n                modelValue: $setup.filters.project,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.project = $event),\n                rules: $setup.rules.project,\n                label: _ctx.$t('time.project_name'),\n                required: \"\",\n                disabled: \"\"\n              }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n              _: 1\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_activity_dropdown, {\n                modelValue: $setup.filters.activity,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.activity = $event),\n                rules: $setup.rules.activity,\n                label: _ctx.$t('time.activity_name'),\n                \"project-id\": $setup.filters.project && $setup.filters.project.id,\n                required: \"\"\n              }, null, 8, [\"modelValue\", \"rules\", \"label\", \"project-id\"])]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_oxd_form_row, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n            cols: 4,\n            class: \"orangehrm-full-width-grid\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_date_input, {\n                modelValue: $setup.filters.fromDate,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.fromDate = $event),\n                placeholder: _ctx.$t('general.from'),\n                rules: $setup.rules.fromDate,\n                label: _ctx.$t('time.project_date_range'),\n                disabled: \"\"\n              }, null, 8, [\"modelValue\", \"placeholder\", \"rules\", \"label\"])]),\n              _: 1\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_date_input, {\n                modelValue: $setup.filters.toDate,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.toDate = $event),\n                label: \"Â \",\n                placeholder: _ctx.$t('general.to'),\n                rules: $setup.rules.toDate,\n                disabled: \"\"\n              }, null, 8, [\"modelValue\", \"placeholder\", \"rules\"])]),\n              _: 1\n            }), _createVNode(_component_oxd_grid_item, {\n              class: \"orangehrm-switch-filter --span-column-2\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_oxd_text, {\n                class: \"orangehrm-switch-filter-text\",\n                tag: \"p\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.only_include_approved_timesheets')), 1)]),\n                _: 1\n              }), _createVNode(_component_oxd_switch_input, {\n                modelValue: $setup.filters.includeTimesheet,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.includeTimesheet = $event),\n                disabled: \"\"\n              }, null, 8, [\"modelValue\"])]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n            \"display-type\": \"ghost\",\n            label: _ctx.$t('general.back'),\n            onClick: $setup.onClickBack\n          }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button, {\n            label: _ctx.$t('general.view')\n          }, null, 8, [\"label\"])]),\n          _: 1\n        })]),\n        _: 2\n      }, 1032, [\"onSubmitValid\"])]),\n      _: 2\n    }, 1032, [\"filter-title\"]), _hoisted_1]),\n    footer: _withCtx(({\n      data\n    }) => [_createTextVNode(_toDisplayString(_ctx.$t('time.total_duration')) + \": \" + _toDisplayString(data.meta ? data.meta.sum.label : '0.00'), 1)]),\n    _: 1\n  }, 8, [\"filters\"]);\n}","map":{"version":3,"mappings":";;gEA+FMA,oBAAM;;;;;;;;;;;;;;;;;;uBA3EVC,aAkFgBC;IAjFdC,MAAM,EAAC,MAAM;IACbC,IAAI,EAAC,mBAAmB;IACvBC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAEC,wBAAiB;IAC1B,cAAY,EAAE;;IAEJC,OAAO,WAChB,CAkEmB;MAnEAC;IAAc,OACjCC,aAkEmBC;MAlEA,cAAY,EAAEC,OAAE;;wBACjC,MAgEW,CAhEXF,aAgEWG;QAhEAC,aAAY,EAAEL;MAAc;0BACrC,MAqBe,CArBfC,aAqBeK;4BApBb,MAmBW,CAnBXL,aAmBWM;YAnBAC,IAAI,EAAE,CAAC;YAAEC,KAAK,EAAC;;8BACxB,MAQgB,CARhBR,aAQgBS;gCAPd,MAME,CANFT,aAMEU;4BALSb,cAAO,CAACc,OAAO;2EAAfd,cAAO,CAACc,OAAO;gBACvBC,KAAK,EAAEf,YAAK,CAACc,OAAO;gBACpBE,KAAK,EAAEX,OAAE;gBACVY,QAAQ,EAAR,EAAQ;gBACRC,QAAQ,EAAR;;;gBAGJf,aAQgBS;gCAPd,MAME,CANFT,aAMEgB;4BALSnB,cAAO,CAACoB,QAAQ;2EAAhBpB,cAAO,CAACoB,QAAQ;gBACxBL,KAAK,EAAEf,YAAK,CAACoB,QAAQ;gBACrBJ,KAAK,EAAEX,OAAE;gBACT,YAAU,EAAEL,cAAO,CAACc,OAAO,IAAId,cAAO,CAACc,OAAO,CAACO,EAAE;gBAClDJ,QAAQ,EAAR;;;;;;;YAMRd,aA2BeK;4BA1Bb,MAyBW,CAzBXL,aAyBWM;YAzBAC,IAAI,EAAE,CAAC;YAAEC,KAAK,EAAC;;8BACxB,MAQgB,CARhBR,aAQgBS;gCAPd,MAME,CANFT,aAMEmB;4BALStB,cAAO,CAACuB,QAAQ;2EAAhBvB,cAAO,CAACuB,QAAQ;gBACxBC,WAAW,EAAEnB,OAAE;gBACfU,KAAK,EAAEf,YAAK,CAACuB,QAAQ;gBACrBP,KAAK,EAAEX,OAAE;gBACVa,QAAQ,EAAR;;;gBAGJf,aAQgBS;gCAPd,MAME,CANFT,aAMEmB;4BALStB,cAAO,CAACyB,MAAM;2EAAdzB,cAAO,CAACyB,MAAM;gBACvBT,KAAK,EAAC,GAAO;gBACZQ,WAAW,EAAEnB,OAAE;gBACfU,KAAK,EAAEf,YAAK,CAACyB,MAAM;gBACpBP,QAAQ,EAAR;;;gBAGJf,aAKgBS;cALDD,KAAK,EAAC;YAAyC;gCAC5D,MAEW,CAFXR,aAEWuB;gBAFDf,KAAK,EAAC,8BAA8B;gBAACgB,GAAG,EAAC;;kCACjD,MAAiD,mCAA9CtB,OAAE;;kBAEPF,aAAgEyB;4BAArC5B,cAAO,CAAC6B,gBAAgB;2EAAxB7B,cAAO,CAAC6B,gBAAgB;gBAAEX,QAAQ,EAAR;;;;;;;YAK3Df,aAAe2B,yBAEf3B,aAQmB4B;4BAPjB,MAAiB,CAAjB5B,aAAiB6B,2BACjB7B,aAIE8B;YAHA,cAAY,EAAC,OAAO;YACnBjB,KAAK,EAAEX,OAAE;YACT6B,OAAK,EAAElC;6CAEVG,aAA6CgC;YAA7BnB,KAAK,EAAEX,OAAE;;;;;;;gCAI/B+B,UAAM;IAGGC,MAAM,WACf,CAA+B;MADbC;IAAI,yCACnBjC,OAAE,2BAA0B,IAC/B,oBAAGiC,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACC,GAAG,CAACxB,KAAK","names":["_createElementVNode","_createBlock","_component_reports_table","module","name","prefetch","filters","$setup","default","generateReport","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","_component_oxd_form_row","_component_oxd_grid","cols","class","_component_oxd_grid_item","_component_project_autocomplete","project","rules","label","required","disabled","_component_activity_dropdown","activity","id","_component_date_input","fromDate","placeholder","toDate","_component_oxd_text","tag","_component_oxd_switch_input","includeTimesheet","_component_oxd_divider","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button","_hoisted_1","footer","data","meta","sum"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmTimePlugin\\pages\\reports\\ActivityDetailsReport.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <reports-table\n    module=\"time\"\n    name=\"activity_detailed\"\n    :prefetch=\"true\"\n    :filters=\"serializedFilters\"\n    :column-count=\"2\"\n  >\n    <template #default=\"{generateReport}\">\n      <oxd-table-filter :filter-title=\"$t('time.project_report')\">\n        <oxd-form @submit-valid=\"generateReport\">\n          <oxd-form-row>\n            <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <project-autocomplete\n                  v-model=\"filters.project\"\n                  :rules=\"rules.project\"\n                  :label=\"$t('time.project_name')\"\n                  required\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <activity-dropdown\n                  v-model=\"filters.activity\"\n                  :rules=\"rules.activity\"\n                  :label=\"$t('time.activity_name')\"\n                  :project-id=\"filters.project && filters.project.id\"\n                  required\n                />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-form-row>\n            <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.fromDate\"\n                  :placeholder=\"$t('general.from')\"\n                  :rules=\"rules.fromDate\"\n                  :label=\"$t('time.project_date_range')\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item>\n                <date-input\n                  v-model=\"filters.toDate\"\n                  label=\"&nbsp\"\n                  :placeholder=\"$t('general.to')\"\n                  :rules=\"rules.toDate\"\n                  disabled\n                />\n              </oxd-grid-item>\n              <oxd-grid-item class=\"orangehrm-switch-filter --span-column-2\">\n                <oxd-text class=\"orangehrm-switch-filter-text\" tag=\"p\">\n                  {{ $t('time.only_include_approved_timesheets') }}\n                </oxd-text>\n                <oxd-switch-input v-model=\"filters.includeTimesheet\" disabled />\n              </oxd-grid-item>\n            </oxd-grid>\n          </oxd-form-row>\n\n          <oxd-divider />\n\n          <oxd-form-actions>\n            <required-text />\n            <oxd-button\n              display-type=\"ghost\"\n              :label=\"$t('general.back')\"\n              @click=\"onClickBack\"\n            />\n            <submit-button :label=\"$t('general.view')\" />\n          </oxd-form-actions>\n        </oxd-form>\n      </oxd-table-filter>\n      <br />\n    </template>\n\n    <template #footer=\"{data}\">\n      {{ $t('time.total_duration') }}:\n      {{ data.meta ? data.meta.sum.label : '0.00' }}\n    </template>\n  </reports-table>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport {\n  required,\n  validSelection,\n  validDateFormat,\n  endDateShouldBeAfterStartDate,\n  startDateShouldBeBeforeEndDate,\n} from '@/core/util/validation/rules';\nimport {navigate} from '@/core/util/helper/navigation';\nimport ReportsTable from '@/core/components/table/ReportsTable';\nimport ActivityDropdown from '@/orangehrmTimePlugin/components/ActivityDropdown.vue';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {OxdSwitchInput} from '@ohrm/oxd';\n\nconst defaultFilters = {\n  project: null,\n  activity: null,\n  fromDate: null,\n  toDate: null,\n  includeTimesheet: false,\n};\n\nexport default {\n  components: {\n    'reports-table': ReportsTable,\n    'oxd-switch-input': OxdSwitchInput,\n    'activity-dropdown': ActivityDropdown,\n    'project-autocomplete': ProjectAutocomplete,\n  },\n\n  props: {\n    project: {\n      type: Object,\n      required: true,\n    },\n    activity: {\n      type: Object,\n      required: true,\n    },\n    fromDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    toDate: {\n      type: String,\n      required: false,\n      default: null,\n    },\n    includeTimesheet: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const filters = ref({\n      ...defaultFilters,\n      fromDate: props.fromDate,\n      toDate: props.toDate,\n      includeTimesheet: props.includeTimesheet,\n      ...(props.project && {project: props.project}),\n      ...(props.activity && {activity: props.activity}),\n    });\n    const {userDateFormat} = useDateFormat();\n\n    const rules = {\n      project: [required],\n      activity: [required, validSelection],\n      fromDate: [\n        validDateFormat(userDateFormat),\n        startDateShouldBeBeforeEndDate(\n          () => filters.value.toDate,\n          $t('attendance.from_date_should_be_before_to_date'),\n          {allowSameDate: true},\n        ),\n      ],\n      toDate: [\n        validDateFormat(userDateFormat),\n        endDateShouldBeAfterStartDate(\n          () => filters.value.fromDate,\n          $t('attendance.to_date_should_be_after_from_date'),\n          {allowSameDate: true},\n        ),\n      ],\n    };\n\n    const serializedFilters = computed(() => {\n      return {\n        projectId: filters.value.project?.id,\n        activityId: filters.value.activity?.id,\n        fromDate: filters.value.fromDate,\n        toDate: filters.value.toDate,\n        includeTimesheet: filters.value.includeTimesheet\n          ? 'onlyApproved'\n          : 'all',\n      };\n    });\n\n    const onClickBack = () => {\n      navigate('/time/displayProjectReportCriteria', undefined, {\n        projectId: props.project.id,\n        fromDate: props.fromDate,\n        toDate: props.fromDate,\n        includeTimesheet: props.includeTimesheet ? 'onlyApproved' : 'all',\n      });\n    };\n\n    return {\n      rules,\n      filters,\n      onClickBack,\n      serializedFilters,\n    };\n  },\n};\n</script>\n\n<style src=\"./time-reports.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}