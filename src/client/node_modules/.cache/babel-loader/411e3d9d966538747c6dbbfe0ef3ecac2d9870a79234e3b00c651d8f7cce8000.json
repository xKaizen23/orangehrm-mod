{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_leave_type_dropdown = _resolveComponent(\"leave-type-dropdown\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.edit_leave_entitlement')), 1)]),\n    _: 1\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n            modelValue: $data.leaveEntitlement.employee,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.leaveEntitlement.employee = $event),\n            disabled: \"\",\n            required: \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 3,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_leave_type_dropdown, {\n            modelValue: $data.leaveEntitlement.leaveType,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.leaveEntitlement.leaveType = $event),\n            \"eligible-only\": false,\n            required: \"\",\n            disabled: \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leaveEntitlement.leavePeriod,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.leaveEntitlement.leavePeriod = $event),\n            type: \"select\",\n            label: _ctx.$t('leave.leave_period'),\n            options: $data.leavePeriods,\n            rules: $data.rules.leavePeriod,\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"label\", \"options\", \"rules\"])]),\n          _: 1\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.leaveEntitlement.entitlement,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.leaveEntitlement.entitlement = $event),\n            rules: $data.rules.entitlement,\n            label: _ctx.$t('leave.entitlement'),\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"loading\", \"onSubmitValid\"])])]);\n}","map":{"version":3,"mappings":";;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA0B;;;;;;;;;;;;;;;uBADvCC,oBAiEM,OAjENC,UAiEM,GAhEJC,oBA+DM,OA/DNC,UA+DM,GA9DJC,aAEWC;IAFDN,KAAK,EAAC;EAAsB;sBACpC,MAAwC,mCAArCO,OAAE;;MAGPF,aAAeG,yBAEfH,aAuDWI;IAvDAC,OAAO,EAAEC,eAAS;IAAGC,aAAY,EAAEC;;sBAC5C,MAUe,CAVfR,aAUeS;wBATb,MAQW,CARXT,aAQWU;QARAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAMgB,CANhBK,aAMgBY;4BALd,MAIE,CAJFZ,aAIEa;wBAHSP,sBAAgB,CAACQ,QAAQ;uEAAzBR,sBAAgB,CAACQ,QAAQ;YAClCC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR;;;;;;;QAMRhB,aA6BeS;wBA5Bb,MA2BW,CA3BXT,aA2BWU;QA3BAC,IAAI,EAAE,CAAC;QAAEhB,KAAK,EAAC;;0BACxB,MAOgB,CAPhBK,aAOgBY;4BANd,MAKE,CALFZ,aAKEiB;wBAJSX,sBAAgB,CAACY,SAAS;uEAA1BZ,sBAAgB,CAACY,SAAS;YAClC,eAAa,EAAE,KAAK;YACrBF,QAAQ,EAAR,EAAQ;YACRD,QAAQ,EAAR;;;YAGJf,aASgBY;4BARd,MAOE,CAPFZ,aAOEmB;wBANSb,sBAAgB,CAACc,WAAW;uEAA5Bd,sBAAgB,CAACc,WAAW;YACrCC,IAAI,EAAC,QAAQ;YACZC,KAAK,EAAEpB,OAAE;YACTqB,OAAO,EAAEjB,kBAAY;YACrBkB,KAAK,EAAElB,WAAK,CAACc,WAAW;YACzBJ,QAAQ,EAAR;;;YAGJhB,aAOgBY;4BANd,MAKE,CALFZ,aAKEmB;wBAJSb,sBAAgB,CAACmB,WAAW;uEAA5BnB,sBAAgB,CAACmB,WAAW;YACpCD,KAAK,EAAElB,WAAK,CAACmB,WAAW;YACxBH,KAAK,EAAEpB,OAAE;YACVc,QAAQ,EAAR;;;;;;;QAMRhB,aAAeG,yBAEfH,aAQmB0B;wBAPjB,MAAiB,CAAjB1B,aAAiB2B,2BACjB3B,aAIE4B;QAHA,cAAY,EAAC,OAAO;QACnBN,KAAK,EAAEpB,OAAE;QACT2B,OAAK,EAAErB;yCAEVR,aAAiB8B","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_oxd_text","_ctx","_component_oxd_divider","_component_oxd_form","loading","$data","onSubmitValid","$options","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","employee","disabled","required","_component_leave_type_dropdown","leaveType","_component_oxd_input_field","leavePeriod","type","label","options","rules","entitlement","_component_oxd_form_actions","_component_required_text","_component_oxd_button","onClick","_component_submit_button"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmLeavePlugin\\pages\\entitlements\\EditEntitlement.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text class=\"orangehrm-main-title\">\n        {{ $t('leave.edit_leave_entitlement') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"leaveEntitlement.employee\"\n                disabled\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <leave-type-dropdown\n                v-model=\"leaveEntitlement.leaveType\"\n                :eligible-only=\"false\"\n                required\n                disabled\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.leavePeriod\"\n                type=\"select\"\n                :label=\"$t('leave.leave_period')\"\n                :options=\"leavePeriods\"\n                :rules=\"rules.leavePeriod\"\n                required\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"leaveEntitlement.entitlement\"\n                :rules=\"rules.entitlement\"\n                :label=\"$t('leave.entitlement')\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport useLocale from '@/core/util/composable/useLocale';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {promiseDebounce} from '@ohrm/oxd';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport {required, max, validSelection} from '@/core/util/validation/rules';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport LeaveTypeDropdown from '@/orangehrmLeavePlugin/components/LeaveTypeDropdown';\n\nconst leaveEntitlementModel = {\n  employee: null,\n  leaveType: null,\n  leavePeriod: null,\n  entitlement: '',\n};\n\nexport default {\n  components: {\n    'leave-type-dropdown': LeaveTypeDropdown,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n\n  props: {\n    entitlementId: {\n      type: String,\n      required: true,\n    },\n    employee: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/leave/leave-entitlements',\n    );\n    http.setIgnorePath(\n      '/api/v2/leave/leave-entitlements/[0-9]+/validation/entitlements',\n    );\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n    return {\n      http,\n      jsDateFormat,\n      locale,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      leaveEntitlement: {...leaveEntitlementModel},\n      rules: {\n        employee: [required, validSelection],\n        leaveType: [required],\n        leavePeriod: [required],\n        entitlement: [\n          required,\n          (v) => {\n            return (\n              /^\\d+(\\.\\d{1,2})?$/.test(v) ||\n              this.$t('leave.should_be_a_number_with_2_decimal_places')\n            );\n          },\n          max(10000),\n          promiseDebounce(this.validateEntitlement, 500),\n        ],\n      },\n      leavePeriods: [],\n    };\n  },\n\n  beforeMount() {\n    this.isLoading = true;\n    this.http\n      .request({method: 'GET', url: '/api/v2/leave/leave-periods'})\n      .then(({data}) => {\n        this.leavePeriods = data.data.map((item) => {\n          const startDate = formatDate(\n            parseDate(item.startDate),\n            this.jsDateFormat,\n            {locale: this.locale},\n          );\n          const endDate = formatDate(\n            parseDate(item.endDate),\n            this.jsDateFormat,\n            {locale: this.locale},\n          );\n          return {\n            id: `${item.startDate}_${item.endDate}`,\n            label: `${startDate} - ${endDate}`,\n            startDate: item.startDate,\n            endDate: item.endDate,\n          };\n        });\n        return this.http.get(this.entitlementId);\n      })\n      .then((response) => {\n        const {data} = response.data;\n        this.leaveEntitlement.employee = {\n          id: data.employee.empNumber,\n          label: `${data.employee.firstName} ${data.employee.lastName}`,\n          isPastEmployee: data.employee.terminationId,\n        };\n        this.leaveEntitlement.leaveType = {\n          id: data.leaveType.id,\n          label: data.leaveType.name,\n        };\n        this.leaveEntitlement.leavePeriod = this.leavePeriods.find((item) => {\n          return item.id === `${data.fromDate}_${data.toDate}`;\n        });\n        this.leaveEntitlement.entitlement = data.entitlement;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onCancel() {\n      navigate('/leave/viewLeaveEntitlements', undefined, {\n        empNumber: this.leaveEntitlement.employee?.id,\n        leaveTypeId: this.leaveEntitlement.leaveType?.id,\n        startDate: this.leaveEntitlement.leavePeriod?.startDate,\n        endDate: this.leaveEntitlement.leavePeriod?.endDate,\n      });\n    },\n    onSave() {\n      this.isLoading = true;\n\n      const payload = {\n        fromDate: this.leaveEntitlement.leavePeriod?.startDate,\n        toDate: this.leaveEntitlement.leavePeriod?.endDate,\n        entitlement: this.leaveEntitlement.entitlement,\n      };\n\n      this.http.update(this.entitlementId, payload).then(() => {\n        this.$toast.updateSuccess();\n        this.onCancel();\n      });\n    },\n\n    validateEntitlement(value) {\n      const entitlement = parseFloat(value);\n      return new Promise((resolve) => {\n        if (!isNaN(entitlement)) {\n          this.http\n            .request({\n              method: 'GET',\n              url: `/api/v2/leave/leave-entitlements/${this.entitlementId}/validation/entitlements`,\n              params: {\n                entitlement,\n              },\n            })\n            .then((response) => {\n              const {data} = response.data;\n              return data.valid === true\n                ? resolve(true)\n                : resolve(\n                    this.$t('leave.used_amount_exceeds_the_current_amount'),\n                  );\n            });\n        } else {\n          resolve(true);\n        }\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}