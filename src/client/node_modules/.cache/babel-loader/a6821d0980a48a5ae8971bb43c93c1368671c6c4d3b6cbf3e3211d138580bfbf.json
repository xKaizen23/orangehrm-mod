{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7044e35a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_3 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_6 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_employment_status_dropdown = _resolveComponent(\"employment-status-dropdown\");\n  const _component_include_employee_dropdown = _resolveComponent(\"include-employee-dropdown\");\n  const _component_jobtitle_dropdown = _resolveComponent(\"jobtitle-dropdown\");\n  const _component_subunit_dropdown = _resolveComponent(\"subunit-dropdown\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  const _component_delete_confirmation = _resolveComponent(\"delete-confirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_oxd_table_filter, {\n    \"filter-title\": _ctx.$t('pim.employee_information')\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form, {\n      onSubmitValid: $options.filterItems,\n      onReset: $options.filterItems\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n          cols: 4,\n          class: \"orangehrm-full-width-grid\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.employee,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n              rules: $data.rules.employee,\n              params: {\n                includeEmployees: $setup.filters.includeEmployees?.param\n              }\n            }, null, 8, [\"modelValue\", \"rules\", \"params\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n              modelValue: $setup.filters.employeeId,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.employeeId = $event),\n              label: _ctx.$t('general.employee_id')\n            }, null, 8, [\"modelValue\", \"label\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employment_status_dropdown, {\n              modelValue: $setup.filters.empStatusId,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.empStatusId = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_include_employee_dropdown, {\n              modelValue: $setup.filters.includeEmployees,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.includeEmployees = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n              modelValue: $setup.filters.supervisor,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.supervisor = $event),\n              rules: $data.rules.supervisor,\n              label: _ctx.$t('pim.supervisor_name')\n            }, null, 8, [\"modelValue\", \"rules\", \"label\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_jobtitle_dropdown, {\n              modelValue: $setup.filters.jobTitleId,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.filters.jobTitleId = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_oxd_grid_item, null, {\n            default: _withCtx(() => [_createVNode(_component_subunit_dropdown, {\n              modelValue: $setup.filters.subunitId,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.filters.subunitId = $event)\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_button, {\n          \"display-type\": \"ghost\",\n          label: _ctx.$t('general.reset'),\n          type: \"reset\"\n        }, null, 8, [\"label\"]), _createVNode(_component_oxd_button, {\n          class: \"orangehrm-left-space\",\n          \"display-type\": \"secondary\",\n          label: _ctx.$t('general.search'),\n          type: \"submit\"\n        }, null, 8, [\"label\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmitValid\", \"onReset\"])]),\n    _: 1\n  }, 8, [\"filter-title\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_ctx.$can.create('employee_list') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_oxd_button, {\n    label: _ctx.$t('general.add'),\n    \"icon-name\": \"plus\",\n    \"display-type\": \"secondary\",\n    onClick: $options.onClickAdd\n  }, null, 8, [\"label\", \"onClick\"])])) : _createCommentVNode(\"\", true), _createVNode(_component_table_header, {\n    selected: $data.checkedItems.length,\n    total: $setup.total,\n    loading: $setup.isLoading,\n    onDelete: $options.onClickDeleteSelected\n  }, null, 8, [\"selected\", \"total\", \"loading\", \"onDelete\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_oxd_card_table, {\n    ref: \"cardTable\",\n    selected: $data.checkedItems,\n    \"onUpdate:selected\": _cache[7] || (_cache[7] = $event => $data.checkedItems = $event),\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[8] || (_cache[8] = $event => $setup.sortDefinition = $event),\n    headers: $options.headers,\n    items: $setup.items?.data,\n    selectable: _ctx.$can.delete('employee_list'),\n    clickable: true,\n    loading: $setup.isLoading,\n    class: \"orangehrm-employee-list\",\n    \"row-decorator\": \"oxd-table-decorator-card\",\n    onClick: $options.onClickEdit\n  }, null, 8, [\"selected\", \"order\", \"headers\", \"items\", \"selectable\", \"loading\", \"onClick\"])]), _createElementVNode(\"div\", _hoisted_6, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[9] || (_cache[9] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_delete_confirmation, {\n    ref: \"deleteDialog\"\n  }, null, 512)]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_oxd_table_filter","_ctx","_component_oxd_form","onSubmitValid","$options","onReset","_component_oxd_form_row","_component_oxd_grid","cols","_component_oxd_grid_item","_component_employee_autocomplete","$setup","employee","rules","$data","params","includeEmployees","param","_component_oxd_input_field","employeeId","label","_component_employment_status_dropdown","empStatusId","_component_include_employee_dropdown","supervisor","_component_jobtitle_dropdown","jobTitleId","_component_subunit_dropdown","subunitId","_component_oxd_divider","_component_oxd_form_actions","_component_oxd_button","type","_hoisted_2","_hoisted_3","create","_hoisted_4","onClick","_component_table_header","selected","length","total","loading","onDelete","_hoisted_5","_component_oxd_card_table","ref","order","headers","items","data","selectable","delete","clickable","_hoisted_6","_createBlock","_component_oxd_pagination","current","_component_delete_confirmation"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPimPlugin\\pages\\employee\\Employee.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('pim.employee_information')\">\n      <oxd-form @submit-valid=\"filterItems\" @reset=\"filterItems\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"4\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.employee\"\n                :rules=\"rules.employee\"\n                :params=\"{includeEmployees: filters.includeEmployees?.param}\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.employeeId\"\n                :label=\"$t('general.employee_id')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <employment-status-dropdown v-model=\"filters.empStatusId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <include-employee-dropdown\n                v-model=\"filters.includeEmployees\"\n              ></include-employee-dropdown>\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.supervisor\"\n                :rules=\"rules.supervisor\"\n                :label=\"$t('pim.supervisor_name')\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <jobtitle-dropdown v-model=\"filters.jobTitleId\" />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <subunit-dropdown v-model=\"filters.subunitId\" />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            display-type=\"ghost\"\n            :label=\"$t('general.reset')\"\n            type=\"reset\"\n          />\n          <oxd-button\n            class=\"orangehrm-left-space\"\n            display-type=\"secondary\"\n            :label=\"$t('general.search')\"\n            type=\"submit\"\n          />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n    <br />\n    <div class=\"orangehrm-paper-container\">\n      <div\n        v-if=\"$can.create('employee_list')\"\n        class=\"orangehrm-header-container\"\n      >\n        <oxd-button\n          :label=\"$t('general.add')\"\n          icon-name=\"plus\"\n          display-type=\"secondary\"\n          @click=\"onClickAdd\"\n        />\n      </div>\n      <table-header\n        :selected=\"checkedItems.length\"\n        :total=\"total\"\n        :loading=\"isLoading\"\n        @delete=\"onClickDeleteSelected\"\n      ></table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          ref=\"cardTable\"\n          v-model:selected=\"checkedItems\"\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :selectable=\"$can.delete('employee_list')\"\n          :clickable=\"true\"\n          :loading=\"isLoading\"\n          class=\"orangehrm-employee-list\"\n          row-decorator=\"oxd-table-decorator-card\"\n          @click=\"onClickEdit\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n    <delete-confirmation ref=\"deleteDialog\"></delete-confirmation>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport {navigate} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown';\nimport SubunitDropdown from '@/orangehrmPimPlugin/components/SubunitDropdown';\nimport EmploymentStatusDropdown from '@/orangehrmPimPlugin/components/EmploymentStatusDropdown';\nimport IncludeEmployeeDropdown from '@/core/components/dropdown/IncludeEmployeeDropdown';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\n\nconst defaultSortOrder = {\n  'employee.employeeId': 'DEFAULT',\n  'employee.firstName': 'ASC',\n  'employee.lastName': 'DEFAULT',\n  'jobTitle.jobTitleName': 'DEFAULT',\n  'empStatus.name': 'DEFAULT',\n  'subunit.name': 'DEFAULT',\n  'supervisor.firstName': 'DEFAULT',\n};\n\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'employee-autocomplete': EmployeeAutocomplete,\n    'jobtitle-dropdown': JobtitleDropdown,\n    'subunit-dropdown': SubunitDropdown,\n    'employment-status-dropdown': EmploymentStatusDropdown,\n    'include-employee-dropdown': IncludeEmployeeDropdown,\n  },\n\n  props: {\n    unselectableEmpNumbers: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup(props) {\n    const {$t} = usei18n();\n    const dataNormalizer = (data) => {\n      return data.map((item) => {\n        const selectable = props.unselectableEmpNumbers.findIndex(\n          (empNumber) => empNumber == item.empNumber,\n        );\n        return {\n          id: item.empNumber,\n          employeeId: item.employeeId,\n          firstAndMiddleName: `${item.firstName} ${item.middleName}`,\n          lastName:\n            item.lastName +\n            (item.terminationId ? ` ${$t('general.past_employee')}` : ''),\n          jobTitle: item.jobTitle?.isDeleted\n            ? item.jobTitle.title + $t('general.deleted')\n            : item.jobTitle?.title,\n          empStatus: item.empStatus?.name,\n          subunit: item.subunit?.name,\n          supervisor: item.supervisors\n            ? item.supervisors\n                .map(\n                  (supervisor) =>\n                    `${supervisor.firstName} ${supervisor.lastName}`,\n                )\n                .join(',')\n            : '',\n          isSelectable: selectable === -1,\n        };\n      });\n    };\n\n    const filters = ref({\n      employee: null,\n      employeeId: '',\n      empStatusId: null,\n      supervisor: null,\n      jobTitleId: null,\n      subunitId: null,\n      includeEmployees: {\n        id: 1,\n        param: 'onlyCurrent',\n        label: $t('general.current_employees_only'),\n      },\n    });\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n    const serializedFilters = computed(() => {\n      return {\n        model: 'detailed',\n        nameOrId:\n          typeof filters.value.employee === 'string'\n            ? filters.value.employee\n            : undefined,\n        empNumber: filters.value.employee?.id,\n        employeeId: filters.value.employeeId,\n        empStatusId: filters.value.empStatusId?.id,\n        includeEmployees: filters.value.includeEmployees?.param,\n        supervisorEmpNumbers: filters.value.supervisor\n          ? [filters.value.supervisor.id]\n          : undefined,\n        jobTitleId: filters.value.jobTitleId?.id,\n        subunitId: filters.value.subunitId?.id,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/pim/employees',\n    );\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery,\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: dataNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition,\n    };\n  },\n  data() {\n    return {\n      checkedItems: [],\n      rules: {\n        employee: [shouldNotExceedCharLength(100)],\n        supervisor: [shouldNotExceedCharLength(100), validSelection],\n      },\n    };\n  },\n  computed: {\n    headers() {\n      return [\n        {\n          name: 'employeeId',\n          slot: 'title',\n          title: this.$t('general.id'),\n          sortField: 'employee.employeeId',\n          style: {flex: 1},\n        },\n        {\n          name: 'firstAndMiddleName',\n          title: this.$t('pim.first_middle_name'),\n          sortField: 'employee.firstName',\n          style: {flex: 1},\n        },\n        {\n          name: 'lastName',\n          title: this.$t('general.last_name'),\n          sortField: 'employee.lastName',\n          style: {flex: 1},\n        },\n        {\n          name: 'jobTitle',\n          title: this.$t('general.job_title'),\n          sortField: 'jobTitle.jobTitleName',\n          style: {flex: 1},\n        },\n        {\n          name: 'empStatus',\n          title: this.$t('general.employment_status'),\n          sortField: 'empStatus.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'subunit',\n          title: this.$t('general.sub_unit'),\n          sortField: 'subunit.name',\n          style: {flex: 1},\n        },\n        {\n          name: 'supervisor',\n          title: this.$t('pim.supervisor'),\n          sortField: 'supervisor.firstName',\n          style: {flex: 1},\n        },\n        {\n          name: 'actions',\n          slot: 'action',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.cellRenderer,\n        },\n      ];\n    },\n  },\n\n  methods: {\n    onClickAdd() {\n      navigate('/pim/addEmployee');\n    },\n    onClickEdit($event) {\n      const id = $event.id ? $event.id : $event.item?.id;\n      navigate('/pim/viewPersonalDetails/empNumber/{id}', {id});\n    },\n    onClickDeleteSelected() {\n      const ids = this.checkedItems.map((index) => {\n        return this.items?.data[index].id;\n      });\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item, $event) {\n      $event.stopImmediatePropagation();\n      const isSelectable = this.unselectableEmpNumbers.findIndex(\n        (empNumber) => empNumber == item.id,\n      );\n      if (isSelectable > -1) {\n        return this.$toast.cannotDelete();\n      }\n      this.$refs.deleteDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http\n          .deleteAll({\n            ids: items,\n          })\n          .then(() => {\n            return this.$toast.deleteSuccess();\n          })\n          .then(() => {\n            this.isLoading = false;\n            this.resetDataTable();\n          });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    cellRenderer(...[, , , row]) {\n      const cellConfig = {\n        edit: {\n          onClick: this.onClickEdit,\n          props: {\n            name: 'pencil-fill',\n          },\n        },\n      };\n\n      if (\n        this.$can.delete('employee_list') &&\n        !this.unselectableEmpNumbers.includes(row.id)\n      ) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash',\n          },\n        };\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n  },\n};\n</script>\n\n<style src=\"./employee.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}