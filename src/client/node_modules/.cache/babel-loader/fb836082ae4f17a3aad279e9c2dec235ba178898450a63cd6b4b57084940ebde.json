{"ast":null,"code":"import { computed, reactive, toRefs } from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { OxdBuzzPostInput } from '@ohrm/oxd';\nexport default {\n  name: 'SharePostModal',\n  components: {\n    'post-modal': PostModal,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n    'oxd-buzz-post-input': OxdBuzzPostInput\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props, context) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      saveSuccess\n    } = useToast();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)]\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/shares');\n    const state = reactive({\n      post: {\n        text: null\n      },\n      isLoading: false\n    });\n    const onSubmit = () => {\n      state.isLoading = true;\n      http.create({\n        text: state.post.text,\n        shareId: props.data.id\n      }).then(() => {\n        saveSuccess();\n        context.emit('close', true);\n      });\n    };\n    const originalPost = computed(() => {\n      const originalText = props.data.originalPost?.text || props.data.text;\n      const originalEmployee = props.data.originalPost?.employee || props.data.employee;\n      const {\n        createdDate,\n        createdTime\n      } = props.data.originalPost || props.data;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return {\n        text: originalText,\n        employee: $tEmpName(originalEmployee, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale\n        })\n      };\n    });\n    return {\n      rules,\n      onSubmit,\n      originalPost,\n      ...toRefs(state)\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["computed","reactive","toRefs","useToast","useLocale","APIService","formatDate","parseDate","useDateFormat","PostModal","PhotoFrame","VideoFrame","shouldNotExceedCharLength","useEmployeeNameTranslate","OxdBuzzPostInput","name","components","props","data","type","Object","required","emits","setup","context","locale","saveSuccess","jsDateFormat","jsTimeFormat","$tEmpName","rules","text","http","window","appGlobal","baseUrl","state","post","isLoading","onSubmit","create","shareId","id","then","emit","originalPost","originalText","originalEmployee","employee","createdDate","createdTime","utcDate","includeMiddle","excludePastEmpTag","dateTime"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmBuzzPlugin\\components\\SharePostModal.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <post-modal\n    :loading=\"isLoading\"\n    :title=\"$t('buzz.share_post')\"\n    @submit=\"onSubmit\"\n    @close=\"$emit('close', false)\"\n  >\n    <template #header>\n      <oxd-buzz-post-input\n        v-model=\"post.text\"\n        :rules=\"rules.text\"\n        :placeholder=\"$t('buzz.post_placeholder')\"\n      >\n      </oxd-buzz-post-input>\n    </template>\n    <video-frame v-if=\"data.type === 'video'\" :video-src=\"data.video.link\">\n    </video-frame>\n    <photo-frame v-if=\"data.type === 'photo'\" :media=\"data.photoIds\">\n    </photo-frame>\n    <br v-if=\"data.type === 'video' || data.type === 'photo'\" />\n\n    <oxd-text tag=\"p\" class=\"orangehrm-buzz-share-employee\">\n      {{ originalPost.employee }}\n    </oxd-text>\n    <oxd-text tag=\"p\" class=\"orangehrm-buzz-share-date\">\n      {{ originalPost.dateTime }}\n    </oxd-text>\n    <oxd-text\n      v-if=\"originalPost.text\"\n      tag=\"p\"\n      class=\"orangehrm-buzz-share-text\"\n    >\n      {{ originalPost.text }}\n    </oxd-text>\n  </post-modal>\n</template>\n\n<script>\nimport {computed, reactive, toRefs} from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {APIService} from '@/core/util/services/api.service';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport {shouldNotExceedCharLength} from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport {OxdBuzzPostInput} from '@ohrm/oxd';\n\nexport default {\n  name: 'SharePostModal',\n\n  components: {\n    'post-modal': PostModal,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n    'oxd-buzz-post-input': OxdBuzzPostInput,\n  },\n\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  emits: ['close'],\n\n  setup(props, context) {\n    const {locale} = useLocale();\n    const {saveSuccess} = useToast();\n    const {jsDateFormat, jsTimeFormat} = useDateFormat();\n    const {$tEmpName} = useEmployeeNameTranslate();\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)],\n    };\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/buzz/shares',\n    );\n\n    const state = reactive({\n      post: {\n        text: null,\n      },\n      isLoading: false,\n    });\n\n    const onSubmit = () => {\n      state.isLoading = true;\n      http\n        .create({\n          text: state.post.text,\n          shareId: props.data.id,\n        })\n        .then(() => {\n          saveSuccess();\n          context.emit('close', true);\n        });\n    };\n\n    const originalPost = computed(() => {\n      const originalText = props.data.originalPost?.text || props.data.text;\n      const originalEmployee =\n        props.data.originalPost?.employee || props.data.employee;\n      const {createdDate, createdTime} = props.data.originalPost || props.data;\n      const utcDate = parseDate(\n        `${createdDate} ${createdTime} +00:00`,\n        'yyyy-MM-dd HH:mm xxx',\n      );\n\n      return {\n        text: originalText,\n        employee: $tEmpName(originalEmployee, {\n          includeMiddle: true,\n          excludePastEmpTag: false,\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale,\n        }),\n      };\n    });\n\n    return {\n      rules,\n      onSubmit,\n      originalPost,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.orangehrm-buzz-share {\n  &-employee {\n    font-size: 0.9rem;\n  }\n  &-date {\n    font-size: 0.6rem;\n    color: $oxd-interface-gray-color;\n  }\n  &-text {\n    font-weight: 300;\n    margin-top: 0.5rem;\n    @include truncate(6, 1.5, #fff);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}