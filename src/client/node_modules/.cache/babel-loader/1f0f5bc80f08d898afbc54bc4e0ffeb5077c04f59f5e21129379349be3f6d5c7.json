{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0dabe21f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-paper-container\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-header-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-container\"\n};\nconst _hoisted_5 = {\n  class: \"orangehrm-bottom-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_table_header = _resolveComponent(\"table-header\");\n  const _component_oxd_card_table = _resolveComponent(\"oxd-card-table\");\n  const _component_oxd_pagination = _resolveComponent(\"oxd-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.my_reviews')), 1)]),\n    _: 1\n  })]), _createVNode(_component_table_header, {\n    selected: 0,\n    total: $setup.total,\n    loading: $setup.isLoading\n  }, null, 8, [\"total\", \"loading\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_card_table, {\n    order: $setup.sortDefinition,\n    \"onUpdate:order\": _cache[0] || (_cache[0] = $event => $setup.sortDefinition = $event),\n    headers: $data.headers,\n    items: $setup.items?.data,\n    loading: $setup.isLoading,\n    \"row-decorator\": \"oxd-table-decorator-card\"\n  }, null, 8, [\"order\", \"headers\", \"items\", \"loading\"])]), _createElementVNode(\"div\", _hoisted_5, [$setup.showPaginator ? (_openBlock(), _createBlock(_component_oxd_pagination, {\n    key: 0,\n    current: $setup.currentPage,\n    \"onUpdate:current\": _cache[1] || (_cache[1] = $event => $setup.currentPage = $event),\n    length: $setup.pages\n  }, null, 8, [\"current\", \"length\"])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"mappings":";;;EAoBOA,KAAK,EAAC;AAAgC;;EACpCA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAA4B;;EAOlCA,KAAK,EAAC;AAAqB;;EAS3BA,KAAK,EAAC;AAA4B;;;;;;uBAlB3CC,oBA0BM,OA1BNC,UA0BM,GAzBJC,oBAwBM,OAxBNC,UAwBM,GAvBJD,oBAIM,OAJNE,UAIM,GAHJC,aAEWC;IAFDC,GAAG,EAAC,IAAI;IAACR,KAAK,EAAC;;sBACvB,MAA8B,mCAA3BS,OAAE;;QAGTH,aACeI;IADAC,QAAQ,EAAE,CAAC;IAAGC,KAAK,EAAEC,YAAK;IAAGC,OAAO,EAAED;qCAErDV,oBAQM,OARNY,UAQM,GAPJT,aAMEU;IALQC,KAAK,EAAEJ,qBAAc;0DAAdA,qBAAc;IAC5BK,OAAO,EAAEC,aAAO;IAChBC,KAAK,EAAEP,YAAK,EAAEQ,IAAI;IAClBP,OAAO,EAAED,gBAAS;IACnB,eAAa,EAAC;2DAGlBV,oBAMM,OANNmB,UAMM,GAJIT,oBAAa,kBADrBU,aAIEC;;IAFQC,OAAO,EAAEZ,kBAAW;4DAAXA,kBAAW;IAC3Ba,MAAM,EAAEb","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_oxd_text","tag","_ctx","_component_table_header","selected","total","$setup","loading","_hoisted_4","_component_oxd_card_table","order","headers","$data","items","data","_hoisted_5","_createBlock","_component_oxd_pagination","current","length"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\MyReviews.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.my_reviews') }}\n        </oxd-text>\n      </div>\n      <table-header :selected=\"0\" :total=\"total\" :loading=\"isLoading\">\n      </table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {computed, inject} from 'vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {\n  viewIcon,\n  evaluateIcon,\n  viewLabel,\n  evaluateLabel,\n} from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport {tableScreenStateKey} from '@ohrm/oxd';\n\nconst defaultSortOrder = {\n  'performanceReview.statusId': 'ASC',\n  'performanceReview.dueDate': 'ASC',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'reviewer.status': 'DEFAULT',\n};\n\nexport default {\n  setup() {\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilter = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/reviews',\n    );\n\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const trackerNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          jobTitle: item.jobTitle.name,\n          department: item.subunit.name,\n          reviewPeriod: {\n            reviewPeriodStart: formatDate(\n              parseDate(item.reviewPeriodStart),\n              jsDateFormat,\n              {\n                locale,\n              },\n            ),\n            reviewPeriodEnd: formatDate(\n              parseDate(item.reviewPeriodEnd),\n              jsDateFormat,\n              {\n                locale,\n              },\n            ),\n          },\n          dueDate: formatDate(parseDate(item.dueDate), jsDateFormat, {locale}),\n          overallStatus: item.overallStatus.statusName,\n          selfEvaluationStatus: item.selfReviewStatus,\n          statusId: item.overallStatus.statusId,\n        };\n      });\n    };\n\n    const {\n      currentPage,\n      total,\n      showPaginator,\n      pages,\n      pageSize,\n      response,\n      execQuery,\n      isLoading,\n    } = usePaginate(http, {\n      query: serializedFilter,\n      normalizer: trackerNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      total,\n      isLoading,\n      items: response,\n      execQuery,\n      sortDefinition,\n      showPaginator,\n      pages,\n      pageSize,\n      currentPage,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'jobTitle',\n          slot: 'title',\n          title: this.$t('general.job_title'),\n          style: {flex: 1},\n        },\n        {\n          name: 'department',\n          title: this.$t('general.sub_unit'),\n          style: {flex: 1},\n        },\n        {\n          name: 'reviewPeriod',\n          title: this.$t('performance.review_period'),\n          sortField: 'performanceReview.reviewPeriodStart',\n          style: {flex: 2},\n          cellRenderer: this.reviewPeriodCellRenderer,\n        },\n        {\n          name: 'dueDate',\n          title: this.$t('performance.due_date'),\n          sortField: 'performanceReview.dueDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'selfEvaluationStatus',\n          title: this.$t('performance.self_evaluation_status'),\n          sortField: 'reviewer.status',\n          style: {flex: 1},\n        },\n        {\n          name: 'overallStatus',\n          title: this.$t('performance.review_status'),\n          sortField: 'performanceReview.statusId',\n          style: {flex: 1},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.actionButtonCellRenderer,\n        },\n      ],\n    };\n  },\n  methods: {\n    actionButtonCellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd,\n        },\n      };\n    },\n    onClickView() {\n      navigate('/performance/searchKpi');\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluate/id/{id}', {id: item.id});\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n  .oxd-table-cell-actions > * {\n    margin: 0 !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}