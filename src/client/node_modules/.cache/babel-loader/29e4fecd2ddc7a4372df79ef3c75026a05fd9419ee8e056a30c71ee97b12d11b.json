{"ast":null,"code":"import { reactive, toRefs } from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport { shouldNotExceedCharLength, validSelection } from '@/core/util/validation/rules';\nimport useInfiniteScroll from '@ohrm/core/util/composable/useInfiniteScroll';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport SummaryCard from '@/orangehrmCorporateDirectoryPlugin/components/SummaryCard';\nimport EmployeeDetails from '@/orangehrmCorporateDirectoryPlugin/components/EmployeeDetails';\nimport SummaryCardDetails from '@/orangehrmCorporateDirectoryPlugin/components/SummaryCardDetails';\nimport { OxdSpinner, useResponsive } from '@ohrm/oxd';\nconst defaultFilters = {\n  employeeNumber: null,\n  jobTitleId: null,\n  locationId: null\n};\nexport default {\n  name: 'CorporateDirectory',\n  components: {\n    'summary-card': SummaryCard,\n    'oxd-loading-spinner': OxdSpinner,\n    'employee-details': EmployeeDetails,\n    'summary-card-details': SummaryCardDetails,\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    jobTitles: {\n      type: Array,\n      default: () => []\n    },\n    locations: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup() {\n    const {\n      $t\n    } = usei18n();\n    const {\n      noRecordsFound\n    } = useToast();\n    const responsiveState = useResponsive();\n    const rules = {\n      employee: [shouldNotExceedCharLength(100), validSelection]\n    };\n    const employeeDataNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.empNumber,\n          employeeName: `${item.firstName} ${item.middleName} ${item.lastName} ` + (item.terminationId ? $t('general.past_employee') : ''),\n          employeeJobTitle: item.jobTitle?.isDeleted ? `${item.jobTitle?.title} ` + $t('general.deleted') : item.jobTitle?.title,\n          employeeSubUnit: item.subunit?.name,\n          employeeLocation: item.location?.name\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/directory/employees');\n    const limit = 14;\n    const state = reactive({\n      total: 0,\n      offset: 0,\n      employees: [],\n      currentIndex: -1,\n      isLoading: false,\n      filters: {\n        ...defaultFilters\n      }\n    });\n    const fetchData = () => {\n      state.isLoading = true;\n      http.getAll({\n        limit: limit,\n        offset: state.offset,\n        locationId: state.filters.locationId?.id,\n        empNumber: state.filters.employeeNumber?.id,\n        jobTitleId: state.filters.jobTitleId?.id\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        state.total = meta?.total || 0;\n        if (Array.isArray(data)) {\n          state.employees = [...state.employees, ...employeeDataNormalizer(data)];\n        }\n        if (state.total === 0) {\n          noRecordsFound();\n        }\n      }).finally(() => state.isLoading = false);\n    };\n    const {\n      scrollerRef\n    } = useInfiniteScroll(() => {\n      if (state.employees.length >= state.total) return;\n      state.offset += limit;\n      fetchData();\n    });\n    return {\n      rules,\n      fetchData,\n      scrollerRef,\n      ...toRefs(state),\n      ...toRefs(responsiveState)\n    };\n  },\n  computed: {\n    isMobile() {\n      return this.windowWidth < 800;\n    },\n    isEmployeeSelected() {\n      return this.currentIndex >= 0;\n    },\n    oxdGridClasses() {\n      return {\n        'orangehrm-container': true,\n        'orangehrm-container-min-display': this.isEmployeeSelected\n      };\n    },\n    colSize() {\n      if (this.windowWidth >= 1920) {\n        return this.isEmployeeSelected ? 5 : 7;\n      }\n      return this.isEmployeeSelected ? 3 : 4;\n    }\n  },\n  beforeMount() {\n    this.fetchData();\n  },\n  methods: {\n    hideEmployeeDetails() {\n      this.currentIndex = -1;\n    },\n    showEmployeeDetails(index) {\n      if (this.currentIndex != index) {\n        this.currentIndex = index;\n      } else {\n        this.hideEmployeeDetails();\n      }\n    },\n    onSearch() {\n      this.hideEmployeeDetails();\n      this.employees = [];\n      this.offset = 0;\n      this.fetchData();\n    },\n    onReset() {\n      this.hideEmployeeDetails();\n      this.employees = [];\n      this.offset = 0;\n      this.filters = {\n        ...defaultFilters\n      };\n      this.fetchData();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","toRefs","usei18n","useToast","APIService","shouldNotExceedCharLength","validSelection","useInfiniteScroll","EmployeeAutocomplete","SummaryCard","EmployeeDetails","SummaryCardDetails","OxdSpinner","useResponsive","defaultFilters","employeeNumber","jobTitleId","locationId","name","components","props","jobTitles","type","Array","default","locations","setup","$t","noRecordsFound","responsiveState","rules","employee","employeeDataNormalizer","data","map","item","id","empNumber","employeeName","firstName","middleName","lastName","terminationId","employeeJobTitle","jobTitle","isDeleted","title","employeeSubUnit","subunit","employeeLocation","location","http","window","appGlobal","baseUrl","limit","state","total","offset","employees","currentIndex","isLoading","filters","fetchData","getAll","then","response","meta","isArray","finally","scrollerRef","length","computed","isMobile","windowWidth","isEmployeeSelected","oxdGridClasses","colSize","beforeMount","methods","hideEmployeeDetails","showEmployeeDetails","index","onSearch","onReset"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmCorporateDirectoryPlugin\\pages\\CorporateDirectory.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <oxd-table-filter :filter-title=\"$t('general.directory')\">\n      <oxd-form @submit-valid=\"onSearch\" @reset=\"onReset\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"3\">\n            <oxd-grid-item>\n              <employee-autocomplete\n                v-model=\"filters.employeeNumber\"\n                :rules=\"rules.employee\"\n                api-path=\"/api/v2/directory/employees\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.jobTitleId\"\n                type=\"select\"\n                :label=\"$t('general.job_title')\"\n                :options=\"jobTitles\"\n              />\n            </oxd-grid-item>\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"filters.locationId\"\n                type=\"select\"\n                :label=\"$t('general.location')\"\n                :options=\"locations\"\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <oxd-button\n            :label=\"$t('general.reset')\"\n            display-type=\"ghost\"\n            type=\"reset\"\n          />\n          <submit-button :label=\"$t('general.search')\" />\n        </oxd-form-actions>\n      </oxd-form>\n    </oxd-table-filter>\n\n    <br />\n\n    <div class=\"orangehrm-corporate-directory\">\n      <div class=\"orangehrm-paper-container\">\n        <table-header\n          :selected=\"0\"\n          :total=\"total\"\n          :loading=\"false\"\n          :show-divider=\"false\"\n        ></table-header>\n        <div ref=\"scrollerRef\" class=\"orangehrm-container\">\n          <oxd-grid :cols=\"colSize\">\n            <oxd-grid-item\n              v-for=\"(employee, index) in employees\"\n              :key=\"employee\"\n            >\n              <summary-card\n                v-if=\"isMobile && currentIndex === index\"\n                :employee-id=\"employee.id\"\n                :employee-name=\"employee.employeeName\"\n                :employee-sub-unit=\"employee.employeeSubUnit\"\n                :employee-location=\"employee.employeeLocation\"\n                :employee-designation=\"employee.employeeJobTitle\"\n                @click=\"showEmployeeDetails(index)\"\n              >\n                <employee-details\n                  :employee-id=\"employee.id\"\n                  :is-mobile=\"isMobile\"\n                >\n                </employee-details>\n              </summary-card>\n              <summary-card\n                v-else\n                :employee-id=\"employee.id\"\n                :employee-name=\"employee.employeeName\"\n                :employee-sub-unit=\"employee.employeeSubUnit\"\n                :employee-location=\"employee.employeeLocation\"\n                :employee-designation=\"employee.employeeJobTitle\"\n                @click=\"showEmployeeDetails(index)\"\n              >\n              </summary-card>\n            </oxd-grid-item>\n          </oxd-grid>\n          <oxd-loading-spinner\n            v-if=\"isLoading\"\n            class=\"orangehrm-container-loader\"\n          />\n        </div>\n        <div class=\"orangehrm-bottom-container\"></div>\n      </div>\n\n      <div\n        v-if=\"isEmployeeSelected && isMobile === false\"\n        class=\"orangehrm-corporate-directory-sidebar\"\n      >\n        <oxd-grid-item>\n          <summary-card-details\n            :employee-designation=\"employees[currentIndex].employeeJobTitle\"\n            :employee-id=\"employees[currentIndex].id\"\n            :employee-location=\"employees[currentIndex].employeeLocation\"\n            :employee-name=\"employees[currentIndex].employeeName\"\n            :employee-sub-unit=\"employees[currentIndex].employeeSubUnit\"\n            @hide-details=\"hideEmployeeDetails()\"\n          ></summary-card-details>\n        </oxd-grid-item>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {reactive, toRefs} from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useToast from '@/core/util/composable/useToast';\nimport {APIService} from '@/core/util/services/api.service';\nimport {\n  shouldNotExceedCharLength,\n  validSelection,\n} from '@/core/util/validation/rules';\nimport useInfiniteScroll from '@ohrm/core/util/composable/useInfiniteScroll';\nimport EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport SummaryCard from '@/orangehrmCorporateDirectoryPlugin/components/SummaryCard';\nimport EmployeeDetails from '@/orangehrmCorporateDirectoryPlugin/components/EmployeeDetails';\nimport SummaryCardDetails from '@/orangehrmCorporateDirectoryPlugin/components/SummaryCardDetails';\nimport {OxdSpinner, useResponsive} from '@ohrm/oxd';\n\nconst defaultFilters = {\n  employeeNumber: null,\n  jobTitleId: null,\n  locationId: null,\n};\n\nexport default {\n  name: 'CorporateDirectory',\n\n  components: {\n    'summary-card': SummaryCard,\n    'oxd-loading-spinner': OxdSpinner,\n    'employee-details': EmployeeDetails,\n    'summary-card-details': SummaryCardDetails,\n    'employee-autocomplete': EmployeeAutocomplete,\n  },\n\n  props: {\n    jobTitles: {\n      type: Array,\n      default: () => [],\n    },\n    locations: {\n      type: Array,\n      default: () => [],\n    },\n  },\n\n  setup() {\n    const {$t} = usei18n();\n    const {noRecordsFound} = useToast();\n    const responsiveState = useResponsive();\n\n    const rules = {\n      employee: [shouldNotExceedCharLength(100), validSelection],\n    };\n\n    const employeeDataNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.empNumber,\n          employeeName:\n            `${item.firstName} ${item.middleName} ${item.lastName} ` +\n            (item.terminationId ? $t('general.past_employee') : ''),\n          employeeJobTitle: item.jobTitle?.isDeleted\n            ? `${item.jobTitle?.title} ` + $t('general.deleted')\n            : item.jobTitle?.title,\n          employeeSubUnit: item.subunit?.name,\n          employeeLocation: item.location?.name,\n        };\n      });\n    };\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/directory/employees',\n    );\n\n    const limit = 14;\n\n    const state = reactive({\n      total: 0,\n      offset: 0,\n      employees: [],\n      currentIndex: -1,\n      isLoading: false,\n      filters: {\n        ...defaultFilters,\n      },\n    });\n\n    const fetchData = () => {\n      state.isLoading = true;\n      http\n        .getAll({\n          limit: limit,\n          offset: state.offset,\n          locationId: state.filters.locationId?.id,\n          empNumber: state.filters.employeeNumber?.id,\n          jobTitleId: state.filters.jobTitleId?.id,\n        })\n        .then((response) => {\n          const {data, meta} = response.data;\n          state.total = meta?.total || 0;\n          if (Array.isArray(data)) {\n            state.employees = [\n              ...state.employees,\n              ...employeeDataNormalizer(data),\n            ];\n          }\n          if (state.total === 0) {\n            noRecordsFound();\n          }\n        })\n        .finally(() => (state.isLoading = false));\n    };\n\n    const {scrollerRef} = useInfiniteScroll(() => {\n      if (state.employees.length >= state.total) return;\n      state.offset += limit;\n      fetchData();\n    });\n\n    return {\n      rules,\n      fetchData,\n      scrollerRef,\n      ...toRefs(state),\n      ...toRefs(responsiveState),\n    };\n  },\n\n  computed: {\n    isMobile() {\n      return this.windowWidth < 800;\n    },\n    isEmployeeSelected() {\n      return this.currentIndex >= 0;\n    },\n    oxdGridClasses() {\n      return {\n        'orangehrm-container': true,\n        'orangehrm-container-min-display': this.isEmployeeSelected,\n      };\n    },\n    colSize() {\n      if (this.windowWidth >= 1920) {\n        return this.isEmployeeSelected ? 5 : 7;\n      }\n      return this.isEmployeeSelected ? 3 : 4;\n    },\n  },\n\n  beforeMount() {\n    this.fetchData();\n  },\n\n  methods: {\n    hideEmployeeDetails() {\n      this.currentIndex = -1;\n    },\n    showEmployeeDetails(index) {\n      if (this.currentIndex != index) {\n        this.currentIndex = index;\n      } else {\n        this.hideEmployeeDetails();\n      }\n    },\n    onSearch() {\n      this.hideEmployeeDetails();\n      this.employees = [];\n      this.offset = 0;\n      this.fetchData();\n    },\n    onReset() {\n      this.hideEmployeeDetails();\n      this.employees = [];\n      this.offset = 0;\n      this.filters = {...defaultFilters};\n      this.fetchData();\n    },\n  },\n};\n</script>\n\n<style src=\"./corporate-directory.scss\" lang=\"scss\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}