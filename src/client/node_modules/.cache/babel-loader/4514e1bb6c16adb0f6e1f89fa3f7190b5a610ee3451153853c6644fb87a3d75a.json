{"ast":null,"code":"import { navigate, reloadPage } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nimport PayGradeCurrency from '@/orangehrmAdminPlugin/pages/payGrade/PayGradeCurrency.vue';\nexport default {\n  components: {\n    'pay-grade-currency': PayGradeCurrency\n  },\n  props: {\n    payGradeId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/pay-grades');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const payGradeUniqueValidation = createUniqueValidator('PayGrade', 'name', {\n      entityId: props.payGradeId\n    });\n    return {\n      http,\n      payGradeUniqueValidation\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      grade: {\n        id: '',\n        name: ''\n      },\n      rules: {\n        name: [required, this.payGradeUniqueValidation, shouldNotExceedCharLength(50)]\n      },\n      errors: []\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.payGradeId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.grade.id = data.id;\n      this.grade.name = data.name;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.payGradeId, {\n        name: this.grade.name\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        reloadPage();\n      });\n    },\n    onCancel() {\n      navigate('/admin/viewPayGrades');\n    }\n  }\n};","map":{"version":3,"mappings":"AA6DA,SAAQA,QAAQ,EAAEC,UAAU,QAAO,mCAAmC;AACtE,SAAQC,UAAU,QAAO,sCAAsC;AAC/D,SACEC,QAAQ,EACRC,yBAAyB,QACpB,kCAAkC;AACzC,OAAOC,mBAAkB,MAAO,4CAA4C;AAC5E,OAAOC,gBAAe,MAAO,4DAA4D;AAEzF,eAAe;EACbC,UAAU,EAAE;IACV,oBAAoB,EAAED;EACxB,CAAC;EAEDE,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZR,QAAQ,EAAE;IACZ;EACF,CAAC;EAEDS,KAAK,CAACJ,KAAK,EAAE;IACX,MAAMK,IAAG,GAAI,IAAIX,UAAU,CACzBY,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,0BAA0B,CAC3B;IACD,MAAM;MAACC;IAAqB,IAAIZ,mBAAmB,CAACQ,IAAI,CAAC;IACzD,MAAMK,wBAAuB,GAAID,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE;MACzEE,QAAQ,EAAEX,KAAK,CAACC;IAClB,CAAC,CAAC;IACF,OAAO;MACLI,IAAI;MACJK;IACF,CAAC;EACH,CAAC;EAEDE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;QACLC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLD,IAAI,EAAE,CACJrB,QAAQ,EACR,IAAI,CAACe,wBAAwB,EAC7Bd,yBAAyB,CAAC,EAAE,CAAC;MAEjC,CAAC;MACDsB,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACN,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACR,IAAG,CACLe,GAAG,CAAC,IAAI,CAACnB,UAAU,EACnBoB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACV;MAAI,IAAIU,QAAQ,CAACV,IAAI;MAC5B,IAAI,CAACE,KAAK,CAACC,EAAC,GAAIH,IAAI,CAACG,EAAE;MACvB,IAAI,CAACD,KAAK,CAACE,IAAG,GAAIJ,IAAI,CAACI,IAAI;IAC7B,CAAC,EACAO,OAAO,CAAC,MAAM;MACb,IAAI,CAACV,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;EACN,CAAC;EAEDW,OAAO,EAAE;IACPC,MAAM,GAAG;MACP,IAAI,CAACZ,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACR,IAAG,CACLqB,MAAM,CAAC,IAAI,CAACzB,UAAU,EAAE;QACvBe,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE;MACnB,CAAC,EACAK,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACM,MAAM,CAACC,aAAa,EAAE;MACpC,CAAC,EACAP,IAAI,CAAC,MAAM;QACV5B,UAAU,EAAE;MACd,CAAC,CAAC;IACN,CAAC;IACDoC,QAAQ,GAAG;MACTrC,QAAQ,CAAC,sBAAsB,CAAC;IAClC;EACF;AACF,CAAC","names":["navigate","reloadPage","APIService","required","shouldNotExceedCharLength","useServerValidation","PayGradeCurrency","components","props","payGradeId","type","String","setup","http","window","appGlobal","baseUrl","createUniqueValidator","payGradeUniqueValidation","entityId","data","isLoading","grade","id","name","rules","errors","created","get","then","response","finally","methods","onSave","update","$toast","updateSuccess","onCancel"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmAdminPlugin\\pages\\payGrade\\EditPayGrade.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-card-container\">\n      <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n        {{ $t('admin.edit_pay_grade') }}\n      </oxd-text>\n\n      <oxd-divider />\n\n      <oxd-form :loading=\"isLoading\" @submit-valid=\"onSave\">\n        <oxd-form-row>\n          <oxd-grid :cols=\"2\" class=\"orangehrm-full-width-grid\">\n            <oxd-grid-item>\n              <oxd-input-field\n                v-model=\"grade.name\"\n                :label=\"$t('general.name')\"\n                :rules=\"rules.name\"\n                required\n              />\n            </oxd-grid-item>\n          </oxd-grid>\n        </oxd-form-row>\n\n        <oxd-divider />\n\n        <oxd-form-actions>\n          <required-text />\n          <oxd-button\n            type=\"button\"\n            display-type=\"ghost\"\n            :label=\"$t('general.cancel')\"\n            @click=\"onCancel\"\n          />\n          <submit-button />\n        </oxd-form-actions>\n      </oxd-form>\n    </div>\n  </div>\n  <pay-grade-currency :pay-grade-id=\"payGradeId\"></pay-grade-currency>\n</template>\n\n<script>\nimport {navigate, reloadPage} from '@ohrm/core/util/helper/navigation';\nimport {APIService} from '@ohrm/core/util/services/api.service';\nimport {\n  required,\n  shouldNotExceedCharLength,\n} from '@ohrm/core/util/validation/rules';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nimport PayGradeCurrency from '@/orangehrmAdminPlugin/pages/payGrade/PayGradeCurrency.vue';\n\nexport default {\n  components: {\n    'pay-grade-currency': PayGradeCurrency,\n  },\n\n  props: {\n    payGradeId: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/admin/pay-grades',\n    );\n    const {createUniqueValidator} = useServerValidation(http);\n    const payGradeUniqueValidation = createUniqueValidator('PayGrade', 'name', {\n      entityId: props.payGradeId,\n    });\n    return {\n      http,\n      payGradeUniqueValidation,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      grade: {\n        id: '',\n        name: '',\n      },\n      rules: {\n        name: [\n          required,\n          this.payGradeUniqueValidation,\n          shouldNotExceedCharLength(50),\n        ],\n      },\n      errors: [],\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http\n      .get(this.payGradeId)\n      .then((response) => {\n        const {data} = response.data;\n        this.grade.id = data.id;\n        this.grade.name = data.name;\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  },\n\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http\n        .update(this.payGradeId, {\n          name: this.grade.name,\n        })\n        .then(() => {\n          return this.$toast.updateSuccess();\n        })\n        .then(() => {\n          reloadPage();\n        });\n    },\n    onCancel() {\n      navigate('/admin/viewPayGrades');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}