{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport { computed, inject } from 'vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { viewIcon, evaluateIcon, viewLabel, evaluateLabel } from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport { tableScreenStateKey } from '@ohrm/oxd';\nconst defaultSortOrder = {\n  'performanceReview.statusId': 'ASC',\n  'performanceReview.dueDate': 'ASC',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'reviewer.status': 'DEFAULT'\n};\nexport default {\n  setup() {\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilter = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/reviews');\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const trackerNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          jobTitle: item.jobTitle.name,\n          department: item.subunit.name,\n          reviewPeriod: {\n            reviewPeriodStart: formatDate(parseDate(item.reviewPeriodStart), jsDateFormat, {\n              locale\n            }),\n            reviewPeriodEnd: formatDate(parseDate(item.reviewPeriodEnd), jsDateFormat, {\n              locale\n            })\n          },\n          dueDate: formatDate(parseDate(item.dueDate), jsDateFormat, {\n            locale\n          }),\n          overallStatus: item.overallStatus.statusName,\n          selfEvaluationStatus: item.selfReviewStatus,\n          statusId: item.overallStatus.statusId\n        };\n      });\n    };\n    const {\n      currentPage,\n      total,\n      showPaginator,\n      pages,\n      pageSize,\n      response,\n      execQuery,\n      isLoading\n    } = usePaginate(http, {\n      query: serializedFilter,\n      normalizer: trackerNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      total,\n      isLoading,\n      items: response,\n      execQuery,\n      sortDefinition,\n      showPaginator,\n      pages,\n      pageSize,\n      currentPage\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'jobTitle',\n        slot: 'title',\n        title: this.$t('general.job_title'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'department',\n        title: this.$t('general.sub_unit'),\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'reviewPeriod',\n        title: this.$t('performance.review_period'),\n        sortField: 'performanceReview.reviewPeriodStart',\n        style: {\n          flex: 2\n        },\n        cellRenderer: this.reviewPeriodCellRenderer\n      }, {\n        name: 'dueDate',\n        title: this.$t('performance.due_date'),\n        sortField: 'performanceReview.dueDate',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'selfEvaluationStatus',\n        title: this.$t('performance.self_evaluation_status'),\n        sortField: 'reviewer.status',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'overallStatus',\n        title: this.$t('performance.review_status'),\n        sortField: 'performanceReview.statusId',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'action',\n        slot: 'footer',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.actionButtonCellRenderer\n      }]\n    };\n  },\n  methods: {\n    actionButtonCellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd\n        }\n      };\n    },\n    onClickView() {\n      navigate('/performance/searchKpi');\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluate/id/{id}', {\n        id: item.id\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["APIService","usePaginate","useSort","computed","inject","useDateFormat","useLocale","formatDate","parseDate","navigate","viewIcon","evaluateIcon","viewLabel","evaluateLabel","ReviewPeriodCell","tableScreenStateKey","defaultSortOrder","setup","sortDefinition","sortField","sortOrder","onSort","serializedFilter","value","http","window","appGlobal","baseUrl","jsDateFormat","locale","trackerNormalizer","data","map","item","id","jobTitle","name","department","subunit","reviewPeriod","reviewPeriodStart","reviewPeriodEnd","dueDate","overallStatus","statusName","selfEvaluationStatus","selfReviewStatus","statusId","currentPage","total","showPaginator","pages","pageSize","response","execQuery","isLoading","query","normalizer","items","headers","slot","title","$t","style","flex","cellRenderer","reviewPeriodCellRenderer","cellType","actionButtonCellRenderer","methods","row","cellConfig","screenState","screenType","view","props","onClick","onClickEvaluate","evaluate","label","header","args","cellData","component","onClickView"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmPerformancePlugin\\pages\\MyReviews.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <div class=\"orangehrm-paper-container\">\n      <div class=\"orangehrm-header-container\">\n        <oxd-text tag=\"h6\" class=\"orangehrm-main-title\">\n          {{ $t('general.my_reviews') }}\n        </oxd-text>\n      </div>\n      <table-header :selected=\"0\" :total=\"total\" :loading=\"isLoading\">\n      </table-header>\n      <div class=\"orangehrm-container\">\n        <oxd-card-table\n          v-model:order=\"sortDefinition\"\n          :headers=\"headers\"\n          :items=\"items?.data\"\n          :loading=\"isLoading\"\n          row-decorator=\"oxd-table-decorator-card\"\n        />\n      </div>\n      <div class=\"orangehrm-bottom-container\">\n        <oxd-pagination\n          v-if=\"showPaginator\"\n          v-model:current=\"currentPage\"\n          :length=\"pages\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport {APIService} from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport {computed, inject} from 'vue';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nimport {formatDate, parseDate} from '@/core/util/helper/datefns';\nimport {navigate} from '@/core/util/helper/navigation';\nimport {\n  viewIcon,\n  evaluateIcon,\n  viewLabel,\n  evaluateLabel,\n} from '@/orangehrmPerformancePlugin/util/composable/useReviewActions';\nimport ReviewPeriodCell from '@/orangehrmPerformancePlugin/components/ReviewPeriodCell';\nimport {tableScreenStateKey} from '@ohrm/oxd';\n\nconst defaultSortOrder = {\n  'performanceReview.statusId': 'ASC',\n  'performanceReview.dueDate': 'ASC',\n  'performanceReview.reviewPeriodStart': 'DEFAULT',\n  'reviewer.status': 'DEFAULT',\n};\n\nexport default {\n  setup() {\n    const {sortDefinition, sortField, sortOrder, onSort} = useSort({\n      sortDefinition: defaultSortOrder,\n    });\n\n    const serializedFilter = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n      };\n    });\n\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/performance/reviews',\n    );\n\n    const {jsDateFormat} = useDateFormat();\n    const {locale} = useLocale();\n\n    const trackerNormalizer = (data) => {\n      return data.map((item) => {\n        return {\n          id: item.id,\n          jobTitle: item.jobTitle.name,\n          department: item.subunit.name,\n          reviewPeriod: {\n            reviewPeriodStart: formatDate(\n              parseDate(item.reviewPeriodStart),\n              jsDateFormat,\n              {\n                locale,\n              },\n            ),\n            reviewPeriodEnd: formatDate(\n              parseDate(item.reviewPeriodEnd),\n              jsDateFormat,\n              {\n                locale,\n              },\n            ),\n          },\n          dueDate: formatDate(parseDate(item.dueDate), jsDateFormat, {locale}),\n          overallStatus: item.overallStatus.statusName,\n          selfEvaluationStatus: item.selfReviewStatus,\n          statusId: item.overallStatus.statusId,\n        };\n      });\n    };\n\n    const {\n      currentPage,\n      total,\n      showPaginator,\n      pages,\n      pageSize,\n      response,\n      execQuery,\n      isLoading,\n    } = usePaginate(http, {\n      query: serializedFilter,\n      normalizer: trackerNormalizer,\n    });\n\n    onSort(execQuery);\n\n    return {\n      http,\n      total,\n      isLoading,\n      items: response,\n      execQuery,\n      sortDefinition,\n      showPaginator,\n      pages,\n      pageSize,\n      currentPage,\n    };\n  },\n\n  data() {\n    return {\n      headers: [\n        {\n          name: 'jobTitle',\n          slot: 'title',\n          title: this.$t('general.job_title'),\n          style: {flex: 1},\n        },\n        {\n          name: 'department',\n          title: this.$t('general.sub_unit'),\n          style: {flex: 1},\n        },\n        {\n          name: 'reviewPeriod',\n          title: this.$t('performance.review_period'),\n          sortField: 'performanceReview.reviewPeriodStart',\n          style: {flex: 2},\n          cellRenderer: this.reviewPeriodCellRenderer,\n        },\n        {\n          name: 'dueDate',\n          title: this.$t('performance.due_date'),\n          sortField: 'performanceReview.dueDate',\n          style: {flex: 1},\n        },\n        {\n          name: 'selfEvaluationStatus',\n          title: this.$t('performance.self_evaluation_status'),\n          sortField: 'reviewer.status',\n          style: {flex: 1},\n        },\n        {\n          name: 'overallStatus',\n          title: this.$t('performance.review_status'),\n          sortField: 'performanceReview.statusId',\n          style: {flex: 1},\n        },\n        {\n          name: 'action',\n          slot: 'footer',\n          title: this.$t('general.actions'),\n          style: {flex: 1},\n          cellType: 'oxd-table-cell-actions',\n          cellRenderer: this.actionButtonCellRenderer,\n        },\n      ],\n    };\n  },\n  methods: {\n    actionButtonCellRenderer(...[, , , row]) {\n      const cellConfig = {};\n      const screenState = inject(tableScreenStateKey);\n      if (screenState.screenType === 'lg' || screenState.screenType === 'xl') {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewIcon;\n          cellConfig.view.props.title = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateIcon;\n          cellConfig.evaluate.props.title = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      } else {\n        if (row.selfEvaluationStatus === 'Completed') {\n          cellConfig.view = viewLabel;\n          cellConfig.view.props.label = this.$t('general.view');\n          cellConfig.view.onClick = this.onClickEvaluate;\n        } else {\n          cellConfig.evaluate = evaluateLabel;\n          cellConfig.evaluate.props.label = this.$t('performance.evaluate');\n          cellConfig.evaluate.onClick = this.onClickEvaluate;\n        }\n      }\n\n      return {\n        props: {\n          header: {\n            cellConfig,\n          },\n        },\n      };\n    },\n    reviewPeriodCellRenderer(...args) {\n      const cellData = args[1];\n      return {\n        component: ReviewPeriodCell,\n        props: {\n          reviewPeriodStart: cellData.reviewPeriodStart,\n          reviewPeriodEnd: cellData.reviewPeriodEnd,\n        },\n      };\n    },\n    onClickView() {\n      navigate('/performance/searchKpi');\n    },\n    onClickEvaluate(item) {\n      navigate('/performance/reviewEvaluate/id/{id}', {id: item.id});\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep(.card-footer-slot) {\n  .oxd-table-cell-actions {\n    justify-content: flex-end;\n  }\n  .oxd-table-cell-actions > * {\n    margin: 0 !important;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}