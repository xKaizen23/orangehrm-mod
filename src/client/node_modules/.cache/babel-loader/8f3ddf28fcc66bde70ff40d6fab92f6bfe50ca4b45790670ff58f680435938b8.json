{"ast":null,"code":"import { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport SelectedEmployee from '@/orangehrmMaintenancePlugin/components/SelectedEmployee';\nimport EmployeeRecords from '@/orangehrmMaintenancePlugin/components/EmployeeRecords';\nimport ConfirmationDialog from '@/core/components/dialogs/ConfirmationDialog';\nimport MaintenanceNote from '@/orangehrmMaintenancePlugin/components/MaintenanceNote';\nconst selectedEmployeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  employeeId: '',\n  empNumber: ''\n};\nexport default {\n  name: 'PurgeEmployee',\n  components: {\n    'purge-confirmation': ConfirmationDialog,\n    'purge-employee-records': EmployeeRecords,\n    'selected-employee': SelectedEmployee,\n    'maintenance-note': MaintenanceNote\n  },\n  props: {\n    instanceIdentifier: {\n      type: String,\n      default: null\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/maintenance/purge');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      showPurgeableEmployee: false,\n      selectedEmployee: {\n        ...selectedEmployeeModel\n      }\n    };\n  },\n  methods: {\n    onClickSearch(employee) {\n      this.selectedEmployee = {\n        ...selectedEmployeeModel\n      };\n      if (employee) {\n        this.selectedEmployee = {\n          ...employee\n        };\n        this.showPurgeableEmployee = true;\n      } else {\n        this.showPurgeableEmployee = false;\n      }\n    },\n    onClickPurge(empNumber) {\n      this.$refs.purgeDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.purgeEmployee(empNumber);\n        }\n      });\n    },\n    purgeEmployee(empNumber) {\n      this.isLoading = true;\n      this.http.deleteAll({\n        empNumber: empNumber\n      }).then(() => {\n        return this.$toast.success({\n          title: this.$t('general.success'),\n          message: this.$t('maintenance.purge_success')\n        });\n      }).then(() => {\n        this.showPurgeableEmployee = false;\n        this.selectedEmployee = {\n          ...selectedEmployeeModel\n        };\n        this.isLoading = false;\n        navigate('/maintenance/purgeEmployee');\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAkDA,SAAQA,QAAQ,QAAO,+BAA+B;AACtD,SAAQC,UAAU,QAAO,kCAAkC;AAC3D,OAAOC,gBAAe,MAAO,0DAA0D;AACvF,OAAOC,eAAc,MAAO,yDAAyD;AACrF,OAAOC,kBAAiB,MAAO,8CAA8C;AAC7E,OAAOC,eAAc,MAAO,yDAAyD;AAErF,MAAMC,qBAAoB,GAAI;EAC5BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACV,oBAAoB,EAAET,kBAAkB;IACxC,wBAAwB,EAAED,eAAe;IACzC,mBAAmB,EAAED,gBAAgB;IACrC,kBAAkB,EAAEG;EACtB,CAAC;EAEDS,KAAK,EAAE;IACLC,kBAAkB,EAAE;MAClBC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI,IAAInB,UAAU,CACzBoB,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,2BAA2B,CAC5B;IAED,OAAO;MACLH;IACF,CAAC;EACH,CAAC;EAEDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,qBAAqB,EAAE,KAAK;MAC5BC,gBAAgB,EAAE;QAAC,GAAGrB;MAAqB;IAC7C,CAAC;EACH,CAAC;EAEDsB,OAAO,EAAE;IACPC,aAAa,CAACC,QAAQ,EAAE;MACtB,IAAI,CAACH,gBAAe,GAAI;QAAC,GAAGrB;MAAqB,CAAC;MAClD,IAAIwB,QAAQ,EAAE;QACZ,IAAI,CAACH,gBAAe,GAAI;UAAC,GAAGG;QAAQ,CAAC;QACrC,IAAI,CAACJ,qBAAoB,GAAI,IAAI;MACnC,OAAO;QACL,IAAI,CAACA,qBAAoB,GAAI,KAAK;MACpC;IACF,CAAC;IACDK,YAAY,CAACpB,SAAS,EAAE;MACtB,IAAI,CAACqB,KAAK,CAACC,WAAW,CAACC,UAAU,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;QACzD,IAAIA,YAAW,KAAM,IAAI,EAAE;UACzB,IAAI,CAACC,aAAa,CAAC1B,SAAS,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC;IACD0B,aAAa,CAAC1B,SAAS,EAAE;MACvB,IAAI,CAACc,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACL,IAAG,CACLkB,SAAS,CAAC;QACT3B,SAAS,EAAEA;MACb,CAAC,EACAwB,IAAI,CAAC,MAAM;QACV,OAAO,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC;UACzBC,KAAK,EAAE,IAAI,CAACC,EAAE,CAAC,iBAAiB,CAAC;UACjCC,OAAO,EAAE,IAAI,CAACD,EAAE,CAAC,2BAA2B;QAC9C,CAAC,CAAC;MACJ,CAAC,EACAP,IAAI,CAAC,MAAM;QACV,IAAI,CAACT,qBAAoB,GAAI,KAAK;QAClC,IAAI,CAACC,gBAAe,GAAI;UAAC,GAAGrB;QAAqB,CAAC;QAClD,IAAI,CAACmB,SAAQ,GAAI,KAAK;QACtBzB,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,CAAC;IACN;EACF;AACF,CAAC","names":["navigate","APIService","SelectedEmployee","EmployeeRecords","ConfirmationDialog","MaintenanceNote","selectedEmployeeModel","firstName","middleName","lastName","employeeId","empNumber","name","components","props","instanceIdentifier","type","String","default","setup","http","window","appGlobal","baseUrl","data","isLoading","showPurgeableEmployee","selectedEmployee","methods","onClickSearch","employee","onClickPurge","$refs","purgeDialog","showDialog","then","confirmation","purgeEmployee","deleteAll","$toast","success","title","$t","message"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\orangehrm-5.7\\src\\client\\src\\orangehrmMaintenancePlugin\\pages\\PurgeEmployee.vue"],"sourcesContent":["<!--\n/**\n * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures\n * all the essential functionalities required for any enterprise.\n * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com\n *\n * OrangeHRM is free software: you can redistribute it and/or modify it under the terms of\n * the GNU General Public License as published by the Free Software Foundation, either\n * version 3 of the License, or (at your option) any later version.\n *\n * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with OrangeHRM.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n -->\n\n<template>\n  <div class=\"orangehrm-background-container\">\n    <purge-employee-records\n      include-employees-param=\"onlyPast\"\n      :title-label=\"$t('maintenance.purge_employee_records')\"\n      :autocomplete-label=\"$t('maintenance.past_employee')\"\n      @search=\"onClickSearch\"\n    />\n    <br />\n    <selected-employee\n      v-if=\"showPurgeableEmployee\"\n      :loading=\"isLoading\"\n      :selected-employee=\"selectedEmployee\"\n      :button-label=\"$t('maintenance.purge')\"\n      @submit=\"onClickPurge\"\n    />\n\n    <br v-if=\"showPurgeableEmployee\" />\n    <maintenance-note :instance-identifier=\"instanceIdentifier\" />\n\n    <purge-confirmation\n      ref=\"purgeDialog\"\n      :title=\"$t('maintenance.purge_employee')\"\n      :subtitle=\"$t('maintenance.purge_employee_warning')\"\n      :cancel-label=\"$t('general.no_cancel')\"\n      :confirm-label=\"$t('maintenance.yes_purge')\"\n    ></purge-confirmation>\n  </div>\n</template>\n\n<script>\nimport {navigate} from '@/core/util/helper/navigation';\nimport {APIService} from '@/core/util/services/api.service';\nimport SelectedEmployee from '@/orangehrmMaintenancePlugin/components/SelectedEmployee';\nimport EmployeeRecords from '@/orangehrmMaintenancePlugin/components/EmployeeRecords';\nimport ConfirmationDialog from '@/core/components/dialogs/ConfirmationDialog';\nimport MaintenanceNote from '@/orangehrmMaintenancePlugin/components/MaintenanceNote';\n\nconst selectedEmployeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  employeeId: '',\n  empNumber: '',\n};\n\nexport default {\n  name: 'PurgeEmployee',\n  components: {\n    'purge-confirmation': ConfirmationDialog,\n    'purge-employee-records': EmployeeRecords,\n    'selected-employee': SelectedEmployee,\n    'maintenance-note': MaintenanceNote,\n  },\n\n  props: {\n    instanceIdentifier: {\n      type: String,\n      default: null,\n    },\n  },\n\n  setup() {\n    const http = new APIService(\n      window.appGlobal.baseUrl,\n      '/api/v2/maintenance/purge',\n    );\n\n    return {\n      http,\n    };\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      showPurgeableEmployee: false,\n      selectedEmployee: {...selectedEmployeeModel},\n    };\n  },\n\n  methods: {\n    onClickSearch(employee) {\n      this.selectedEmployee = {...selectedEmployeeModel};\n      if (employee) {\n        this.selectedEmployee = {...employee};\n        this.showPurgeableEmployee = true;\n      } else {\n        this.showPurgeableEmployee = false;\n      }\n    },\n    onClickPurge(empNumber) {\n      this.$refs.purgeDialog.showDialog().then((confirmation) => {\n        if (confirmation === 'ok') {\n          this.purgeEmployee(empNumber);\n        }\n      });\n    },\n    purgeEmployee(empNumber) {\n      this.isLoading = true;\n      this.http\n        .deleteAll({\n          empNumber: empNumber,\n        })\n        .then(() => {\n          return this.$toast.success({\n            title: this.$t('general.success'),\n            message: this.$t('maintenance.purge_success'),\n          });\n        })\n        .then(() => {\n          this.showPurgeableEmployee = false;\n          this.selectedEmployee = {...selectedEmployeeModel};\n          this.isLoading = false;\n          navigate('/maintenance/purgeEmployee');\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}